;Basic operators/primitives/intrinsics;==================MATHS;------------------Subtractioncode sub M16 +ve low 1  var x:=1  var y#:=2  x:=x-yendcodevarvalue x -1code sub M16 +ve low 2  var x:=1  var y#:=32766  x:=x-yendcodevarvalue x -32765code sub M16 +ve high 1  var x:=1  var y#:=32768  x:=x-yendcodevarvalue x -32767code sub M16 +ve high 2  var x:=1  var y#:=65535  x:=x-yendcoderuntime overflowcode sub M16 -ve low 1  var x:=-1  var y#:=32767  x:=x-yendcodevarvalue x -32768code sub M16 -ve low 2  var x:=-1000  var y#:=300  x:=x-yendcodevarvalue x -1300code sub M16 -ve high 1  var x:=-1  var y#:=300  x:=x-yendcodevarvalue x -301code sub M16 -ve high 2  var x:=-1  var y#:=32768  x:=x-yendcoderuntime overflowcode sub M16 -ve high 3  var x:=-1  var y#:=65535  x:=x-yendcoderuntime overflowcode sub M16 swap +ve low 1  var x:=1  var y#:=2  x:=y-xendcodevarvalue x 1code sub M16 swap +ve low 2  var x:=1  var y#:=32766  x:=y-xendcodevarvalue x 32765code sub M16 swap +ve high 1  var x:=1  var y#:=32768  x:=y-xendcodevarvalue x 32767code sub M16 swap +ve high 2  var x:=1  var y#:=65535  x:=y-xendcoderuntime overflowcode sub M16 swap -ve low 1  var x:=-1  var y#:=32767  x:=y-xendcodevarvalue -32768code sub M16 swap -ve low 2  var x:=-1000  var y#:=300  x:=y-xendcodevarvalue x 1300code sub M16 swap -ve high 1  var x:=-1  var y#:=300  x:=y-xendcodevarvalue x 301code sub M16 swap -ve high 2  var x:=-1  var y#:=32768  x:=y-xendcoderuntime overflowcode sub M16 swap -ve high 3  var x:=-1  var y#:=65535  x:=y-xendcoderuntime overflowcode Subtract Int16  var ii%:=1  var i8%%:=10  var ww#:=100  var bb##:=50  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=ii-ii  b:=ii-i8  c:=i8-ii  d:=ii-bb  e:=bb-ii  f:=ii-ww  g:=ww-ii  h:=ii-100  i:=100-ii  j:=ii-1000  k:=1000-iiendcodevarvalue a 0varvalue b -9varvalue c 9varvalue d -49varvalue e 49varvalue f -99varvalue g 99varvalue h -99varvalue i 99varvalue j -999varvalue k 999code Subtract Int8  var i8%%:=10  var bb##:=50  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=i8-i8  b:=i8-bb  c:=bb-i8  d:=i8-20  e:=20-i8endcodevarvalue a 0varvalue b -40varvalue c 40varvalue d -10varvalue e 10code Subtract Word  var ii%:=1  var iii%:=1000  var i8%%:=10  var ii8%%:=127  var ww#:=100  var www#:=5000  var bb##:=50  var bbb##:=120  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=ww-ww  b:=ww-ii  c:=iii-ww  d:=ww-i8  e:=ii8-ww  f:=ww-bb  g:=bbb-ww  h:=ww-100  i:=120-ww  j:=www-1000  k:=1000-wwendcodevarvalue a 0varvalue b 99varvalue c 900varvalue d 90varvalue e 27varvalue f 50varvalue g 20varvalue h 0varvalue i 20varvalue j 4000varvalue k 900code Subtract Byte  var i8%%:=10  var ii8%%:=100  var bb##:=50  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=bb-bb  b:=bb-i8  c:=ii8-bb  d:=bb-20  e:=70-bbendcodevarvalue a 0varvalue b 40varvalue c 50varvalue d 30varvalue e 20;==================================NEGATEcode Negate S16  var ia%:=-1  var ib%:=-32768  var ic%:=1234  var id%:=-(-(-32767))    var a:=-ia  var c:=-ic  var d:=--ibendcodevarvalue ia -1varvalue ib -32768varvalue id -32768varvalue a 1varvalue c -1234varvalue d -32768code negate U16  var x#:=1000  var y%:=-x  var z%;  var a#:=0  var b%:=-a  z:=-xendcodevarvalue y -1000varvalue z -1000varvalue b 0code negate U16 overflow  var x#:=32769  var y%;  y:=-xendcoderuntime overflowcode negate U8  var x##:=100  var y%:=-x  var z%;  var a##:=0  var b%:=-a  z:=-xendcodevarvalue y -100varvalue z -100varvalue b 0code Negate Overflow  var ia%:=-32768  var a:=-iaendcoderuntime overflow;------------------Multiplicationcode Multiply M16 +ve low 1  var x:=1  var y#:=2  x:=x*yendcodevarvalue x 2code Multiply M16 +ve low 2  var x:=1  var y#:=32766  x:=x*yendcodevarvalue x 32766code Multiply M16 +ve high 1  var x:=1  var y#:=32768  x:=x*yendcoderuntime overflowcode Multiply M16 +ve high 2  var x:=1  var y#:=65535  x:=x*yendcoderuntime overflowcode Multiply M16 -ve low 1  var x:=-1  var y#:=32767  x:=x*yendcodevarvalue x -32767code Multiply M16 -ve low 2  var x:=-1000  var y#:=30  x:=x*yendcodevarvalue x -30000code Multiply M16 -ve high 1  var x:=-1  var y#:=32768  x:=x*yendcodevarvalue x -32768code Multiply M16 -ve high 2  var x:=-1  var y#:=32769  x:=x*yendcoderuntime overflowcode Multiply M16 -ve high 3  var x:=-1  var y#:=65535  x:=x*yendcoderuntime overflowcode Multiply Int16  var iia%:=1  var iib%:=-300  var i8%%:=-10  var ww#:=100  var a%:=iia*iia  var b%:=iia*i8  var c%:=i8*iia  var d%:=iia*iib  var e%:=ww*iia  var f%:=ww*i8endcodevarvalue a 1varvalue b -10varvalue c -10varvalue d -300varvalue e 100varvalue f -1000code Multiply Int8  var i8a%%:=10  var i8b%%:=-128  var bb##:=50  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=i8a*i8a  b:=i8a*i8b  c:=bb*i8b  d:=i8b*-1  e:=128*i8bendcodevarvalue a 100varvalue b -1280varvalue c -6400varvalue d 128varvalue e -16384code Multiply Word  var wwa#:=1  var wwb#:=10  var wwc#:=250  var wwd#:=1000  var bb##:=5  var a#:=wwa*wwa  var b#:=wwa*wwb  var c#:=wwb*wwa  var d#:=wwa*wwd  var e#:=wwc*wwc  var f#:=wwc*bbendcodevarvalue a 1varvalue b 10varvalue c 10varvalue d 1000varvalue e 62500varvalue f 1250code Multiply Byte  var ba##:=10  var bb##:=25  var a%  var b%  var c%  var d%  var e%  var f%  var g%  var h%  var i%  var j%  var k%  a:=ba*ba  b:=ba*bb  c:=bb*ba  d:=bb*7  e:=7*bbendcodevarvalue a 100varvalue b 250varvalue c 250varvalue d 175varvalue e 175