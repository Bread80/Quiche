;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 or[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 0

code auto:3 or[Byte] 0[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 0

code auto:4 or[Byte] 0[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 0

code auto:5 or[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:6 or[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:7 or[Byte] 0[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 1

code auto:8 or[Byte] 0[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 1

code auto:9 or[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 1;
endcode
varvalue r 1

$overflow on
code auto:10 or[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:11 or[Byte] 0[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 127

code auto:12 or[Byte] 0[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:13 or[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 127;
endcode
varvalue r 127

$overflow on
code auto:14 or[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:15 or[Byte] 0[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 128

code auto:16 or[Byte] 0[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 128

code auto:17 or[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 128;
endcode
varvalue r 128

$overflow on
code auto:18 or[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:19 or[Byte] 0[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 255

code auto:20 or[Byte] 0[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:21 or[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:22 or[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:23 or[Byte] 1[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 1

code auto:24 or[Byte] 1[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 1

code auto:25 or[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 0;
endcode
varvalue r 1

$overflow on
code auto:26 or[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:27 or[Byte] 1[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 1

code auto:28 or[Byte] 1[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 1

code auto:29 or[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 1;
endcode
varvalue r 1

$overflow on
code auto:30 or[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:31 or[Byte] 1[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 127

code auto:32 or[Byte] 1[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:33 or[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 127;
endcode
varvalue r 127

$overflow on
code auto:34 or[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 129

code auto:35 or[Byte] 1[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 129

code auto:36 or[Byte] 1[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 129

code auto:37 or[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 128;
endcode
varvalue r 129

$overflow on
code auto:38 or[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:39 or[Byte] 1[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 255

code auto:40 or[Byte] 1[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:41 or[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 255;
endcode
varvalue r 255

$overflow on
code auto:42 or[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:43 or[Byte] 127[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:44 or[Byte] 127[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 127

code auto:45 or[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 0;
endcode
varvalue r 127

$overflow on
code auto:46 or[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:47 or[Byte] 127[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:48 or[Byte] 127[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 127

code auto:49 or[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 1;
endcode
varvalue r 127

$overflow on
code auto:50 or[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:51 or[Byte] 127[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:52 or[Byte] 127[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:53 or[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 127;
endcode
varvalue r 127

$overflow on
code auto:54 or[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:55 or[Byte] 127[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 255

code auto:56 or[Byte] 127[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 255

code auto:57 or[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 128;
endcode
varvalue r 255

$overflow on
code auto:58 or[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:59 or[Byte] 127[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 255

code auto:60 or[Byte] 127[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:61 or[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 255;
endcode
varvalue r 255

$overflow on
code auto:62 or[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:63 or[Byte] 128[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 128

code auto:64 or[Byte] 128[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 128

code auto:65 or[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 0;
endcode
varvalue r 128

$overflow on
code auto:66 or[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 129

code auto:67 or[Byte] 128[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 129

code auto:68 or[Byte] 128[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 129

code auto:69 or[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 1;
endcode
varvalue r 129

$overflow on
code auto:70 or[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:71 or[Byte] 128[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 255

code auto:72 or[Byte] 128[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 255

code auto:73 or[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 127;
endcode
varvalue r 255

$overflow on
code auto:74 or[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:75 or[Byte] 128[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 128

code auto:76 or[Byte] 128[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 128

code auto:77 or[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 128;
endcode
varvalue r 128

$overflow on
code auto:78 or[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:79 or[Byte] 128[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 255

code auto:80 or[Byte] 128[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:81 or[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 255;
endcode
varvalue r 255

$overflow on
code auto:82 or[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:83 or[Byte] 255[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:84 or[Byte] 255[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 255

code auto:85 or[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:86 or[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:87 or[Byte] 255[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:88 or[Byte] 255[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 255

code auto:89 or[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 1;
endcode
varvalue r 255

$overflow on
code auto:90 or[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:91 or[Byte] 255[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:92 or[Byte] 255[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 255

code auto:93 or[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 127;
endcode
varvalue r 255

$overflow on
code auto:94 or[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:95 or[Byte] 255[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:96 or[Byte] 255[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 255

code auto:97 or[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 128;
endcode
varvalue r 255

$overflow on
code auto:98 or[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:99 or[Byte] 255[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:100 or[Byte] 255[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:101 or[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 255;
endcode
varvalue r 255

$overflow on
code auto:102 or[Word] 0[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 0

code auto:103 or[Word] 0[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 0

code auto:104 or[Word] 0[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 0

code auto:105 or[compile-time] 0[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:106 or[Word] 0[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:107 or[Word] 0[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 255

code auto:108 or[Word] 0[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:109 or[compile-time] 0[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:110 or[Word] 0[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:111 or[Word] 0[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32767

code auto:112 or[Word] 0[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:113 or[compile-time] 0[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:114 or[Word] 0[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:115 or[Word] 0[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32768

code auto:116 or[Word] 0[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32768

code auto:117 or[compile-time] 0[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32768;
endcode
varvalue r 32768

$overflow on
code auto:118 or[Word] 0[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:119 or[Word] 0[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 65535

code auto:120 or[Word] 0[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:121 or[compile-time] 0[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:122 or[Word] 1[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 1

code auto:123 or[Word] 1[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 1

code auto:124 or[Word] 1[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 1

code auto:125 or[compile-time] 1[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 0;
endcode
varvalue r 1

$overflow on
code auto:126 or[Word] 1[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:127 or[Word] 1[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 255

code auto:128 or[Word] 1[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:129 or[compile-time] 1[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 255;
endcode
varvalue r 255

$overflow on
code auto:130 or[Word] 1[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:131 or[Word] 1[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 32767

code auto:132 or[Word] 1[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:133 or[compile-time] 1[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:134 or[Word] 1[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32769

code auto:135 or[Word] 1[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 32769

code auto:136 or[Word] 1[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32769

code auto:137 or[compile-time] 1[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 32768;
endcode
varvalue r 32769

$overflow on
code auto:138 or[Word] 1[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:139 or[Word] 1[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 65535

code auto:140 or[Word] 1[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:141 or[compile-time] 1[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:142 or[Word] 127[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:143 or[Word] 127[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 127

code auto:144 or[Word] 127[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 127

code auto:145 or[compile-time] 127[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 0;
endcode
varvalue r 127

$overflow on
code auto:146 or[Word] 127[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:147 or[Word] 127[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 255

code auto:148 or[Word] 127[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:149 or[compile-time] 127[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 255;
endcode
varvalue r 255

$overflow on
code auto:150 or[Word] 127[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:151 or[Word] 127[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 32767

code auto:152 or[Word] 127[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:153 or[compile-time] 127[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:154 or[Word] 127[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32895

code auto:155 or[Word] 127[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 32895

code auto:156 or[Word] 127[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32895

code auto:157 or[compile-time] 127[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 32768;
endcode
varvalue r 32895

$overflow on
code auto:158 or[Word] 127[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:159 or[Word] 127[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 65535

code auto:160 or[Word] 127[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:161 or[compile-time] 127[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:162 or[Word] 128[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 128

code auto:163 or[Word] 128[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 128

code auto:164 or[Word] 128[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 128

code auto:165 or[compile-time] 128[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 0;
endcode
varvalue r 128

$overflow on
code auto:166 or[Word] 128[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:167 or[Word] 128[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 255

code auto:168 or[Word] 128[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:169 or[compile-time] 128[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 255;
endcode
varvalue r 255

$overflow on
code auto:170 or[Word] 128[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:171 or[Word] 128[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 32767

code auto:172 or[Word] 128[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:173 or[compile-time] 128[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:174 or[Word] 128[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32896

code auto:175 or[Word] 128[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 32896

code auto:176 or[Word] 128[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32896

code auto:177 or[compile-time] 128[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 32768;
endcode
varvalue r 32896

$overflow on
code auto:178 or[Word] 128[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:179 or[Word] 128[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 65535

code auto:180 or[Word] 128[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:181 or[compile-time] 128[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:182 or[Word] 255[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:183 or[Word] 255[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:184 or[Word] 255[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 255

code auto:185 or[compile-time] 255[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:186 or[Word] 255[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:187 or[Word] 255[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:188 or[Word] 255[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:189 or[compile-time] 255[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 255;
endcode
varvalue r 255

$overflow on
code auto:190 or[Word] 255[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:191 or[Word] 255[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 32767

code auto:192 or[Word] 255[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:193 or[compile-time] 255[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:194 or[Word] 255[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:195 or[Word] 255[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 33023

code auto:196 or[Word] 255[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 33023

code auto:197 or[compile-time] 255[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32768;
endcode
varvalue r 33023

$overflow on
code auto:198 or[Word] 255[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:199 or[Word] 255[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 65535

code auto:200 or[Word] 255[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:201 or[compile-time] 255[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:202 or[Word] 0[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 0

code auto:203 or[Word] 0[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 0

code auto:204 or[Word] 0[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 0

code auto:205 or[compile-time] 0[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:206 or[Word] 0[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 1

code auto:207 or[Word] 0[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 1

code auto:208 or[Word] 0[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 1

code auto:209 or[compile-time] 0[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 1;
endcode
varvalue r 1

$overflow on
code auto:210 or[Word] 0[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:211 or[Word] 0[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 127

code auto:212 or[Word] 0[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 127

code auto:213 or[compile-time] 0[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 127;
endcode
varvalue r 127

$overflow on
code auto:214 or[Word] 0[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 128

code auto:215 or[Word] 0[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 128

code auto:216 or[Word] 0[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 128

code auto:217 or[compile-time] 0[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 128;
endcode
varvalue r 128

$overflow on
code auto:218 or[Word] 0[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:219 or[Word] 0[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 255

code auto:220 or[Word] 0[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:221 or[compile-time] 0[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:222 or[Word] 255[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:223 or[Word] 255[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:224 or[Word] 255[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 255

code auto:225 or[compile-time] 255[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:226 or[Word] 255[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:227 or[Word] 255[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:228 or[Word] 255[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 255

code auto:229 or[compile-time] 255[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 1;
endcode
varvalue r 255

$overflow on
code auto:230 or[Word] 255[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:231 or[Word] 255[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:232 or[Word] 255[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 255

code auto:233 or[compile-time] 255[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 127;
endcode
varvalue r 255

$overflow on
code auto:234 or[Word] 255[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:235 or[Word] 255[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:236 or[Word] 255[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 255

code auto:237 or[compile-time] 255[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 128;
endcode
varvalue r 255

$overflow on
code auto:238 or[Word] 255[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:239 or[Word] 255[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:240 or[Word] 255[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:241 or[compile-time] 255[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 255;
endcode
varvalue r 255

$overflow on
code auto:242 or[Word] 32767[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:243 or[Word] 32767[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:244 or[Word] 32767[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32767

code auto:245 or[compile-time] 32767[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 0;
endcode
varvalue r 32767

$overflow on
code auto:246 or[Word] 32767[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:247 or[Word] 32767[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:248 or[Word] 32767[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 32767

code auto:249 or[compile-time] 32767[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 1;
endcode
varvalue r 32767

$overflow on
code auto:250 or[Word] 32767[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:251 or[Word] 32767[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:252 or[Word] 32767[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 32767

code auto:253 or[compile-time] 32767[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 127;
endcode
varvalue r 32767

$overflow on
code auto:254 or[Word] 32767[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:255 or[Word] 32767[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:256 or[Word] 32767[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 32767

code auto:257 or[compile-time] 32767[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 128;
endcode
varvalue r 32767

$overflow on
code auto:258 or[Word] 32767[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:259 or[Word] 32767[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:260 or[Word] 32767[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 32767

code auto:261 or[compile-time] 32767[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 255;
endcode
varvalue r 32767

$overflow on
code auto:262 or[Word] 32768[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:263 or[Word] 32768[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32768

code auto:264 or[Word] 32768[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32768

code auto:265 or[compile-time] 32768[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 0;
endcode
varvalue r 32768

$overflow on
code auto:266 or[Word] 32768[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32769

code auto:267 or[Word] 32768[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32769

code auto:268 or[Word] 32768[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 32769

code auto:269 or[compile-time] 32768[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 1;
endcode
varvalue r 32769

$overflow on
code auto:270 or[Word] 32768[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32895

code auto:271 or[Word] 32768[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32895

code auto:272 or[Word] 32768[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 32895

code auto:273 or[compile-time] 32768[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 127;
endcode
varvalue r 32895

$overflow on
code auto:274 or[Word] 32768[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32896

code auto:275 or[Word] 32768[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32896

code auto:276 or[Word] 32768[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 32896

code auto:277 or[compile-time] 32768[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 128;
endcode
varvalue r 32896

$overflow on
code auto:278 or[Word] 32768[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:279 or[Word] 32768[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 33023

code auto:280 or[Word] 32768[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 33023

code auto:281 or[compile-time] 32768[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 255;
endcode
varvalue r 33023

$overflow on
code auto:282 or[Word] 65535[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:283 or[Word] 65535[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:284 or[Word] 65535[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 65535

code auto:285 or[compile-time] 65535[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 0;
endcode
varvalue r 65535

$overflow on
code auto:286 or[Word] 65535[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:287 or[Word] 65535[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:288 or[Word] 65535[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 65535

code auto:289 or[compile-time] 65535[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 1;
endcode
varvalue r 65535

$overflow on
code auto:290 or[Word] 65535[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:291 or[Word] 65535[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:292 or[Word] 65535[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 65535

code auto:293 or[compile-time] 65535[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 127;
endcode
varvalue r 65535

$overflow on
code auto:294 or[Word] 65535[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:295 or[Word] 65535[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:296 or[Word] 65535[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 65535

code auto:297 or[compile-time] 65535[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 128;
endcode
varvalue r 65535

$overflow on
code auto:298 or[Word] 65535[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:299 or[Word] 65535[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:300 or[Word] 65535[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 65535

code auto:301 or[compile-time] 65535[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 255;
endcode
varvalue r 65535

$overflow on
code auto:302 or[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 0

code auto:303 or[Word] 0[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 0

code auto:304 or[Word] 0[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 0

code auto:305 or[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:306 or[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:307 or[Word] 0[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 255

code auto:308 or[Word] 0[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:309 or[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:310 or[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:311 or[Word] 0[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32767

code auto:312 or[Word] 0[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:313 or[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:314 or[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:315 or[Word] 0[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32768

code auto:316 or[Word] 0[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32768

code auto:317 or[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32768;
endcode
varvalue r 32768

$overflow on
code auto:318 or[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:319 or[Word] 0[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 65535

code auto:320 or[Word] 0[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:321 or[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:322 or[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:323 or[Word] 255[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:324 or[Word] 255[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 255

code auto:325 or[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:326 or[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:327 or[Word] 255[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:328 or[Word] 255[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:329 or[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 255;
endcode
varvalue r 255

$overflow on
code auto:330 or[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:331 or[Word] 255[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 32767

code auto:332 or[Word] 255[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:333 or[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:334 or[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:335 or[Word] 255[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 33023

code auto:336 or[Word] 255[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 33023

code auto:337 or[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32768;
endcode
varvalue r 33023

$overflow on
code auto:338 or[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:339 or[Word] 255[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 65535

code auto:340 or[Word] 255[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:341 or[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:342 or[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:343 or[Word] 32767[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:344 or[Word] 32767[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32767

code auto:345 or[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 0;
endcode
varvalue r 32767

$overflow on
code auto:346 or[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:347 or[Word] 32767[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:348 or[Word] 32767[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 32767

code auto:349 or[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 255;
endcode
varvalue r 32767

$overflow on
code auto:350 or[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:351 or[Word] 32767[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:352 or[Word] 32767[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:353 or[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:354 or[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:355 or[Word] 32767[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 65535

code auto:356 or[Word] 32767[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 65535

code auto:357 or[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 32768;
endcode
varvalue r 65535

$overflow on
code auto:358 or[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:359 or[Word] 32767[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 65535

code auto:360 or[Word] 32767[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:361 or[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:362 or[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:363 or[Word] 32768[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32768

code auto:364 or[Word] 32768[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32768

code auto:365 or[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 0;
endcode
varvalue r 32768

$overflow on
code auto:366 or[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:367 or[Word] 32768[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 33023

code auto:368 or[Word] 32768[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 33023

code auto:369 or[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 255;
endcode
varvalue r 33023

$overflow on
code auto:370 or[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:371 or[Word] 32768[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 65535

code auto:372 or[Word] 32768[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 65535

code auto:373 or[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 32767;
endcode
varvalue r 65535

$overflow on
code auto:374 or[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:375 or[Word] 32768[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32768

code auto:376 or[Word] 32768[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32768

code auto:377 or[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 32768;
endcode
varvalue r 32768

$overflow on
code auto:378 or[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:379 or[Word] 32768[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 65535

code auto:380 or[Word] 32768[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:381 or[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:382 or[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:383 or[Word] 65535[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:384 or[Word] 65535[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 65535

code auto:385 or[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 0;
endcode
varvalue r 65535

$overflow on
code auto:386 or[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:387 or[Word] 65535[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:388 or[Word] 65535[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 65535

code auto:389 or[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 255;
endcode
varvalue r 65535

$overflow on
code auto:390 or[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:391 or[Word] 65535[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:392 or[Word] 65535[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 65535

code auto:393 or[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 32767;
endcode
varvalue r 65535

$overflow on
code auto:394 or[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:395 or[Word] 65535[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:396 or[Word] 65535[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 65535

code auto:397 or[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 32768;
endcode
varvalue r 65535

$overflow on
code auto:398 or[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:399 or[Word] 65535[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:400 or[Word] 65535[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:401 or[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:402 or[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 0

code auto:403 or[Byte] 0[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 0

code auto:404 or[Byte] 0[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 0

code auto:405 or[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:406 or[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:407 or[Byte] 0[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 1

code auto:408 or[Byte] 0[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 1

code auto:409 or[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 1;
endcode
varvalue r 1

$overflow on
code auto:410 or[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:411 or[Byte] 0[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 127

code auto:412 or[Byte] 0[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:413 or[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 127;
endcode
varvalue r 127

$overflow on
code auto:414 or[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:415 or[Byte] 0[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 128

code auto:416 or[Byte] 0[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 128

code auto:417 or[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 128;
endcode
varvalue r 128

$overflow on
code auto:418 or[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:419 or[Byte] 0[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 255

code auto:420 or[Byte] 0[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:421 or[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:422 or[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:423 or[Byte] 1[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 1

code auto:424 or[Byte] 1[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 1

code auto:425 or[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 0;
endcode
varvalue r 1

$overflow on
code auto:426 or[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 1

code auto:427 or[Byte] 1[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 1

code auto:428 or[Byte] 1[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 1

code auto:429 or[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 1;
endcode
varvalue r 1

$overflow on
code auto:430 or[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:431 or[Byte] 1[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 127

code auto:432 or[Byte] 1[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:433 or[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 127;
endcode
varvalue r 127

$overflow on
code auto:434 or[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 129

code auto:435 or[Byte] 1[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 129

code auto:436 or[Byte] 1[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 129

code auto:437 or[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 128;
endcode
varvalue r 129

$overflow on
code auto:438 or[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:439 or[Byte] 1[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 1 or b;
endcode
varvalue r 255

code auto:440 or[Byte] 1[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:441 or[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 or 255;
endcode
varvalue r 255

$overflow on
code auto:442 or[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:443 or[Byte] 127[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:444 or[Byte] 127[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 127

code auto:445 or[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 0;
endcode
varvalue r 127

$overflow on
code auto:446 or[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:447 or[Byte] 127[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:448 or[Byte] 127[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 127

code auto:449 or[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 1;
endcode
varvalue r 127

$overflow on
code auto:450 or[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 127

code auto:451 or[Byte] 127[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 127

code auto:452 or[Byte] 127[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 127

code auto:453 or[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 127;
endcode
varvalue r 127

$overflow on
code auto:454 or[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:455 or[Byte] 127[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 255

code auto:456 or[Byte] 127[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 255

code auto:457 or[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 128;
endcode
varvalue r 255

$overflow on
code auto:458 or[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:459 or[Byte] 127[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 127 or b;
endcode
varvalue r 255

code auto:460 or[Byte] 127[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:461 or[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 or 255;
endcode
varvalue r 255

$overflow on
code auto:462 or[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:463 or[Byte] 128[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 128

code auto:464 or[Byte] 128[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 128

code auto:465 or[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 0;
endcode
varvalue r 128

$overflow on
code auto:466 or[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 129

code auto:467 or[Byte] 128[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 129

code auto:468 or[Byte] 128[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 129

code auto:469 or[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 1;
endcode
varvalue r 129

$overflow on
code auto:470 or[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:471 or[Byte] 128[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 255

code auto:472 or[Byte] 128[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 255

code auto:473 or[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 127;
endcode
varvalue r 255

$overflow on
code auto:474 or[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 128

code auto:475 or[Byte] 128[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 128

code auto:476 or[Byte] 128[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 128

code auto:477 or[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 128;
endcode
varvalue r 128

$overflow on
code auto:478 or[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:479 or[Byte] 128[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 128 or b;
endcode
varvalue r 255

code auto:480 or[Byte] 128[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:481 or[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 or 255;
endcode
varvalue r 255

$overflow on
code auto:482 or[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:483 or[Byte] 255[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:484 or[Byte] 255[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 255

code auto:485 or[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:486 or[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:487 or[Byte] 255[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:488 or[Byte] 255[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 1;
endcode
varvalue r 255

code auto:489 or[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 1;
endcode
varvalue r 255

$overflow on
code auto:490 or[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:491 or[Byte] 255[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:492 or[Byte] 255[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 127;
endcode
varvalue r 255

code auto:493 or[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 127;
endcode
varvalue r 255

$overflow on
code auto:494 or[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:495 or[Byte] 255[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:496 or[Byte] 255[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 128;
endcode
varvalue r 255

code auto:497 or[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 128;
endcode
varvalue r 255

$overflow on
code auto:498 or[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:499 or[Byte] 255[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:500 or[Byte] 255[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:501 or[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 255;
endcode
varvalue r 255

$overflow off
code auto:502 or[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:503 or[Byte] 0[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 0 or b;
endcode
runtime noerror

code auto:504 or[Byte] 0[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a or 0;
endcode
runtime noerror

code auto:505 or[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 or 0;
endcode
runtime noerror

$overflow on
code auto:506 or[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 0

code auto:507 or[Byte] 0[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 0

code auto:508 or[Byte] 0[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 0

code auto:509 or[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 0;
endcode
varvalue r 0

$overflow off
code auto:510 or[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:511 or[Byte] 0[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 0 or b;
endcode
runtime noerror

code auto:512 or[Byte] 0[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a or 1;
endcode
runtime noerror

code auto:513 or[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 or 1;
endcode
runtime noerror

$overflow on
code auto:514 or[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 1

code auto:515 or[Byte] 0[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 1

code auto:516 or[Byte] 0[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 1

code auto:517 or[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 1;
endcode
varvalue r 1

$overflow off
code auto:518 or[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:519 or[Byte] 0[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 0 or b;
endcode
runtime noerror

code auto:520 or[Byte] 0[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a or 127;
endcode
runtime noerror

code auto:521 or[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 or 127;
endcode
runtime noerror

$overflow on
code auto:522 or[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:523 or[Byte] 0[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 127

code auto:524 or[Byte] 0[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 127

code auto:525 or[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 127;
endcode
varvalue r 127

$overflow off
code auto:526 or[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:527 or[Byte] 0[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 0 or b;
endcode
runtime noerror

code auto:528 or[Byte] 0[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a or 128;
endcode
runtime noerror

code auto:529 or[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 or 128;
endcode
runtime noerror

$overflow on
code auto:530 or[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 128

code auto:531 or[Byte] 0[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 128

code auto:532 or[Byte] 0[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 128

code auto:533 or[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 128;
endcode
varvalue r 128

$overflow off
code auto:534 or[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:535 or[Byte] 0[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 0 or b;
endcode
runtime noerror

code auto:536 or[Byte] 0[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a or 255;
endcode
runtime noerror

code auto:537 or[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 or 255;
endcode
runtime noerror

$overflow on
code auto:538 or[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:539 or[Byte] 0[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 255

code auto:540 or[Byte] 0[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:541 or[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 255;
endcode
varvalue r 255

$overflow off
code auto:542 or[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:543 or[Byte] 1[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 1 or b;
endcode
runtime noerror

code auto:544 or[Byte] 1[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a or 0;
endcode
runtime noerror

code auto:545 or[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 or 0;
endcode
runtime noerror

$overflow on
code auto:546 or[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 1

code auto:547 or[Byte] 1[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 1

code auto:548 or[Byte] 1[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 1

code auto:549 or[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 0;
endcode
varvalue r 1

$overflow off
code auto:550 or[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:551 or[Byte] 1[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 1 or b;
endcode
runtime noerror

code auto:552 or[Byte] 1[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a or 1;
endcode
runtime noerror

code auto:553 or[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 or 1;
endcode
runtime noerror

$overflow on
code auto:554 or[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 1

code auto:555 or[Byte] 1[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 1

code auto:556 or[Byte] 1[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 1

code auto:557 or[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 1;
endcode
varvalue r 1

$overflow off
code auto:558 or[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:559 or[Byte] 1[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 1 or b;
endcode
runtime noerror

code auto:560 or[Byte] 1[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a or 127;
endcode
runtime noerror

code auto:561 or[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 or 127;
endcode
runtime noerror

$overflow on
code auto:562 or[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:563 or[Byte] 1[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 127

code auto:564 or[Byte] 1[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 127

code auto:565 or[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 127;
endcode
varvalue r 127

$overflow off
code auto:566 or[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:567 or[Byte] 1[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 1 or b;
endcode
runtime noerror

code auto:568 or[Byte] 1[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a or 128;
endcode
runtime noerror

code auto:569 or[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 or 128;
endcode
runtime noerror

$overflow on
code auto:570 or[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 129

code auto:571 or[Byte] 1[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 129

code auto:572 or[Byte] 1[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 129

code auto:573 or[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 128;
endcode
varvalue r 129

$overflow off
code auto:574 or[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:575 or[Byte] 1[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 1 or b;
endcode
runtime noerror

code auto:576 or[Byte] 1[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a or 255;
endcode
runtime noerror

code auto:577 or[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 or 255;
endcode
runtime noerror

$overflow on
code auto:578 or[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:579 or[Byte] 1[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 1 or b;
endcode
varvalue r 255

code auto:580 or[Byte] 1[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:581 or[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 or 255;
endcode
varvalue r 255

$overflow off
code auto:582 or[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:583 or[Byte] 127[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 127 or b;
endcode
runtime noerror

code auto:584 or[Byte] 127[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a or 0;
endcode
runtime noerror

code auto:585 or[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 or 0;
endcode
runtime noerror

$overflow on
code auto:586 or[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:587 or[Byte] 127[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 127

code auto:588 or[Byte] 127[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 127

code auto:589 or[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 0;
endcode
varvalue r 127

$overflow off
code auto:590 or[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:591 or[Byte] 127[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 127 or b;
endcode
runtime noerror

code auto:592 or[Byte] 127[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a or 1;
endcode
runtime noerror

code auto:593 or[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 or 1;
endcode
runtime noerror

$overflow on
code auto:594 or[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:595 or[Byte] 127[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 127

code auto:596 or[Byte] 127[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 127

code auto:597 or[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 1;
endcode
varvalue r 127

$overflow off
code auto:598 or[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:599 or[Byte] 127[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 127 or b;
endcode
runtime noerror

code auto:600 or[Byte] 127[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a or 127;
endcode
runtime noerror

code auto:601 or[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 or 127;
endcode
runtime noerror

$overflow on
code auto:602 or[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 127

code auto:603 or[Byte] 127[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 127

code auto:604 or[Byte] 127[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 127

code auto:605 or[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 127;
endcode
varvalue r 127

$overflow off
code auto:606 or[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:607 or[Byte] 127[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 127 or b;
endcode
runtime noerror

code auto:608 or[Byte] 127[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a or 128;
endcode
runtime noerror

code auto:609 or[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 or 128;
endcode
runtime noerror

$overflow on
code auto:610 or[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:611 or[Byte] 127[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 255

code auto:612 or[Byte] 127[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 255

code auto:613 or[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 128;
endcode
varvalue r 255

$overflow off
code auto:614 or[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:615 or[Byte] 127[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 127 or b;
endcode
runtime noerror

code auto:616 or[Byte] 127[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a or 255;
endcode
runtime noerror

code auto:617 or[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 or 255;
endcode
runtime noerror

$overflow on
code auto:618 or[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:619 or[Byte] 127[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 127 or b;
endcode
varvalue r 255

code auto:620 or[Byte] 127[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:621 or[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 or 255;
endcode
varvalue r 255

$overflow off
code auto:622 or[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:623 or[Byte] 128[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 128 or b;
endcode
runtime noerror

code auto:624 or[Byte] 128[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a or 0;
endcode
runtime noerror

code auto:625 or[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 or 0;
endcode
runtime noerror

$overflow on
code auto:626 or[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 128

code auto:627 or[Byte] 128[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 128

code auto:628 or[Byte] 128[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 128

code auto:629 or[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 0;
endcode
varvalue r 128

$overflow off
code auto:630 or[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:631 or[Byte] 128[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 128 or b;
endcode
runtime noerror

code auto:632 or[Byte] 128[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a or 1;
endcode
runtime noerror

code auto:633 or[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 or 1;
endcode
runtime noerror

$overflow on
code auto:634 or[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 129

code auto:635 or[Byte] 128[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 129

code auto:636 or[Byte] 128[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 129

code auto:637 or[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 1;
endcode
varvalue r 129

$overflow off
code auto:638 or[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:639 or[Byte] 128[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 128 or b;
endcode
runtime noerror

code auto:640 or[Byte] 128[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a or 127;
endcode
runtime noerror

code auto:641 or[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 or 127;
endcode
runtime noerror

$overflow on
code auto:642 or[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:643 or[Byte] 128[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 255

code auto:644 or[Byte] 128[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 255

code auto:645 or[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 127;
endcode
varvalue r 255

$overflow off
code auto:646 or[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:647 or[Byte] 128[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 128 or b;
endcode
runtime noerror

code auto:648 or[Byte] 128[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a or 128;
endcode
runtime noerror

code auto:649 or[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 or 128;
endcode
runtime noerror

$overflow on
code auto:650 or[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 128

code auto:651 or[Byte] 128[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 128

code auto:652 or[Byte] 128[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 128

code auto:653 or[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 128;
endcode
varvalue r 128

$overflow off
code auto:654 or[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:655 or[Byte] 128[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 128 or b;
endcode
runtime noerror

code auto:656 or[Byte] 128[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a or 255;
endcode
runtime noerror

code auto:657 or[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 or 255;
endcode
runtime noerror

$overflow on
code auto:658 or[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:659 or[Byte] 128[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 128 or b;
endcode
varvalue r 255

code auto:660 or[Byte] 128[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:661 or[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 or 255;
endcode
varvalue r 255

$overflow off
code auto:662 or[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:663 or[Byte] 255[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 255 or b;
endcode
runtime noerror

code auto:664 or[Byte] 255[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a or 0;
endcode
runtime noerror

code auto:665 or[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 or 0;
endcode
runtime noerror

$overflow on
code auto:666 or[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:667 or[Byte] 255[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:668 or[Byte] 255[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 255

code auto:669 or[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 0;
endcode
varvalue r 255

$overflow off
code auto:670 or[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:671 or[Byte] 255[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 255 or b;
endcode
runtime noerror

code auto:672 or[Byte] 255[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a or 1;
endcode
runtime noerror

code auto:673 or[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 or 1;
endcode
runtime noerror

$overflow on
code auto:674 or[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:675 or[Byte] 255[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:676 or[Byte] 255[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 1;
endcode
varvalue r 255

code auto:677 or[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 1;
endcode
varvalue r 255

$overflow off
code auto:678 or[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:679 or[Byte] 255[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 255 or b;
endcode
runtime noerror

code auto:680 or[Byte] 255[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a or 127;
endcode
runtime noerror

code auto:681 or[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 or 127;
endcode
runtime noerror

$overflow on
code auto:682 or[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:683 or[Byte] 255[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:684 or[Byte] 255[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 127;
endcode
varvalue r 255

code auto:685 or[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 127;
endcode
varvalue r 255

$overflow off
code auto:686 or[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:687 or[Byte] 255[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 255 or b;
endcode
runtime noerror

code auto:688 or[Byte] 255[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a or 128;
endcode
runtime noerror

code auto:689 or[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 or 128;
endcode
runtime noerror

$overflow on
code auto:690 or[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:691 or[Byte] 255[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:692 or[Byte] 255[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 128;
endcode
varvalue r 255

code auto:693 or[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 128;
endcode
varvalue r 255

$overflow off
code auto:694 or[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
runtime noerror

code auto:695 or[Byte] 255[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 255 or b;
endcode
runtime noerror

code auto:696 or[Byte] 255[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a or 255;
endcode
runtime noerror

code auto:697 or[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 or 255;
endcode
runtime noerror

$overflow on
code auto:698 or[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:699 or[Byte] 255[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:700 or[Byte] 255[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:701 or[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 255;
endcode
varvalue r 255

$overflow off
code auto:702 or[Word] 0[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:703 or[Word] 0[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 0 or b;
endcode
runtime noerror

code auto:704 or[Word] 0[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a or 0;
endcode
runtime noerror

code auto:705 or[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 or 0;
endcode
runtime noerror

$overflow on
code auto:706 or[Word] 0[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 0

code auto:707 or[Word] 0[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 0

code auto:708 or[Word] 0[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 0

code auto:709 or[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 0;
endcode
varvalue r 0

$overflow off
code auto:710 or[Word] 0[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:711 or[Word] 0[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 0 or b;
endcode
runtime noerror

code auto:712 or[Word] 0[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a or 255;
endcode
runtime noerror

code auto:713 or[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 or 255;
endcode
runtime noerror

$overflow on
code auto:714 or[Word] 0[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:715 or[Word] 0[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 0 or b;
endcode
varvalue r 255

code auto:716 or[Word] 0[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:717 or[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 255;
endcode
varvalue r 255

$overflow off
code auto:718 or[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:719 or[Word] 0[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 0 or b;
endcode
runtime noerror

code auto:720 or[Word] 0[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a or 32767;
endcode
runtime noerror

code auto:721 or[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 or 32767;
endcode
compile error

$overflow on
code auto:722 or[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:723 or[Word] 0[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 0 or b;
endcode
runtime overflow

code auto:724 or[Word] 0[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a or 32767;
endcode
runtime overflow

code auto:725 or[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 32767;
endcode
compile error

$overflow off
code auto:726 or[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:727 or[Word] 0[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 0 or b;
endcode
runtime noerror

code auto:728 or[Word] 0[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a or 32768;
endcode
runtime noerror

code auto:729 or[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 or 32768;
endcode
compile error

$overflow on
code auto:730 or[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:731 or[Word] 0[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 0 or b;
endcode
runtime overflow

code auto:732 or[Word] 0[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a or 32768;
endcode
runtime overflow

code auto:733 or[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 32768;
endcode
compile error

$overflow off
code auto:734 or[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:735 or[Word] 0[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 0 or b;
endcode
runtime noerror

code auto:736 or[Word] 0[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a or 65535;
endcode
runtime noerror

code auto:737 or[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 or 65535;
endcode
compile error

$overflow on
code auto:738 or[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:739 or[Word] 0[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 0 or b;
endcode
runtime overflow

code auto:740 or[Word] 0[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a or 65535;
endcode
runtime overflow

code auto:741 or[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 or 65535;
endcode
compile error

$overflow off
code auto:742 or[Word] 255[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:743 or[Word] 255[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 255 or b;
endcode
runtime noerror

code auto:744 or[Word] 255[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a or 0;
endcode
runtime noerror

code auto:745 or[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 or 0;
endcode
runtime noerror

$overflow on
code auto:746 or[Word] 255[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:747 or[Word] 255[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:748 or[Word] 255[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a or 0;
endcode
varvalue r 255

code auto:749 or[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 0;
endcode
varvalue r 255

$overflow off
code auto:750 or[Word] 255[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:751 or[Word] 255[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 255 or b;
endcode
runtime noerror

code auto:752 or[Word] 255[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a or 255;
endcode
runtime noerror

code auto:753 or[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 or 255;
endcode
runtime noerror

$overflow on
code auto:754 or[Word] 255[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
varvalue r 255

code auto:755 or[Word] 255[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 255 or b;
endcode
varvalue r 255

code auto:756 or[Word] 255[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a or 255;
endcode
varvalue r 255

code auto:757 or[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 255;
endcode
varvalue r 255

$overflow off
code auto:758 or[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:759 or[Word] 255[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 255 or b;
endcode
runtime noerror

code auto:760 or[Word] 255[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a or 32767;
endcode
runtime noerror

code auto:761 or[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 or 32767;
endcode
compile error

$overflow on
code auto:762 or[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:763 or[Word] 255[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 255 or b;
endcode
runtime overflow

code auto:764 or[Word] 255[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a or 32767;
endcode
runtime overflow

code auto:765 or[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 32767;
endcode
compile error

$overflow off
code auto:766 or[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:767 or[Word] 255[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 255 or b;
endcode
runtime noerror

code auto:768 or[Word] 255[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a or 32768;
endcode
runtime noerror

code auto:769 or[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 or 32768;
endcode
compile error

$overflow on
code auto:770 or[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:771 or[Word] 255[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 255 or b;
endcode
runtime overflow

code auto:772 or[Word] 255[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a or 32768;
endcode
runtime overflow

code auto:773 or[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 32768;
endcode
compile error

$overflow off
code auto:774 or[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:775 or[Word] 255[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 255 or b;
endcode
runtime noerror

code auto:776 or[Word] 255[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a or 65535;
endcode
runtime noerror

code auto:777 or[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 or 65535;
endcode
compile error

$overflow on
code auto:778 or[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:779 or[Word] 255[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 255 or b;
endcode
runtime overflow

code auto:780 or[Word] 255[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a or 65535;
endcode
runtime overflow

code auto:781 or[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 or 65535;
endcode
compile error

$overflow off
code auto:782 or[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:783 or[Word] 32767[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime noerror

code auto:784 or[Word] 32767[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 0;
endcode
runtime noerror

code auto:785 or[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 or 0;
endcode
compile error

$overflow on
code auto:786 or[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:787 or[Word] 32767[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime overflow

code auto:788 or[Word] 32767[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 0;
endcode
runtime overflow

code auto:789 or[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 or 0;
endcode
compile error

$overflow off
code auto:790 or[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:791 or[Word] 32767[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime noerror

code auto:792 or[Word] 32767[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 255;
endcode
runtime noerror

code auto:793 or[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 or 255;
endcode
compile error

$overflow on
code auto:794 or[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:795 or[Word] 32767[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime overflow

code auto:796 or[Word] 32767[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 255;
endcode
runtime overflow

code auto:797 or[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 or 255;
endcode
compile error

$overflow off
code auto:798 or[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:799 or[Word] 32767[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime noerror

code auto:800 or[Word] 32767[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 32767;
endcode
runtime noerror

code auto:801 or[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 or 32767;
endcode
compile error

$overflow on
code auto:802 or[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:803 or[Word] 32767[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime overflow

code auto:804 or[Word] 32767[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 32767;
endcode
runtime overflow

code auto:805 or[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 or 32767;
endcode
compile error

$overflow off
code auto:806 or[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:807 or[Word] 32767[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime noerror

code auto:808 or[Word] 32767[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 32768;
endcode
runtime noerror

code auto:809 or[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 or 32768;
endcode
compile error

$overflow on
code auto:810 or[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:811 or[Word] 32767[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime overflow

code auto:812 or[Word] 32767[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 32768;
endcode
runtime overflow

code auto:813 or[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 or 32768;
endcode
compile error

$overflow off
code auto:814 or[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:815 or[Word] 32767[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime noerror

code auto:816 or[Word] 32767[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 65535;
endcode
runtime noerror

code auto:817 or[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 or 65535;
endcode
compile error

$overflow on
code auto:818 or[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:819 or[Word] 32767[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 32767 or b;
endcode
runtime overflow

code auto:820 or[Word] 32767[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a or 65535;
endcode
runtime overflow

code auto:821 or[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 or 65535;
endcode
compile error

$overflow off
code auto:822 or[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:823 or[Word] 32768[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime noerror

code auto:824 or[Word] 32768[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 0;
endcode
runtime noerror

code auto:825 or[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 or 0;
endcode
compile error

$overflow on
code auto:826 or[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:827 or[Word] 32768[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime overflow

code auto:828 or[Word] 32768[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 0;
endcode
runtime overflow

code auto:829 or[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 or 0;
endcode
compile error

$overflow off
code auto:830 or[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:831 or[Word] 32768[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime noerror

code auto:832 or[Word] 32768[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 255;
endcode
runtime noerror

code auto:833 or[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 or 255;
endcode
compile error

$overflow on
code auto:834 or[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:835 or[Word] 32768[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime overflow

code auto:836 or[Word] 32768[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 255;
endcode
runtime overflow

code auto:837 or[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 or 255;
endcode
compile error

$overflow off
code auto:838 or[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:839 or[Word] 32768[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime noerror

code auto:840 or[Word] 32768[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 32767;
endcode
runtime noerror

code auto:841 or[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 or 32767;
endcode
compile error

$overflow on
code auto:842 or[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:843 or[Word] 32768[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime overflow

code auto:844 or[Word] 32768[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 32767;
endcode
runtime overflow

code auto:845 or[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 or 32767;
endcode
compile error

$overflow off
code auto:846 or[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:847 or[Word] 32768[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime noerror

code auto:848 or[Word] 32768[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 32768;
endcode
runtime noerror

code auto:849 or[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 or 32768;
endcode
compile error

$overflow on
code auto:850 or[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:851 or[Word] 32768[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime overflow

code auto:852 or[Word] 32768[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 32768;
endcode
runtime overflow

code auto:853 or[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 or 32768;
endcode
compile error

$overflow off
code auto:854 or[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:855 or[Word] 32768[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime noerror

code auto:856 or[Word] 32768[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 65535;
endcode
runtime noerror

code auto:857 or[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 or 65535;
endcode
compile error

$overflow on
code auto:858 or[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:859 or[Word] 32768[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 32768 or b;
endcode
runtime overflow

code auto:860 or[Word] 32768[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a or 65535;
endcode
runtime overflow

code auto:861 or[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 or 65535;
endcode
compile error

$overflow off
code auto:862 or[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:863 or[Word] 65535[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime noerror

code auto:864 or[Word] 65535[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 0;
endcode
runtime noerror

code auto:865 or[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 or 0;
endcode
compile error

$overflow on
code auto:866 or[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:867 or[Word] 65535[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime overflow

code auto:868 or[Word] 65535[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 0;
endcode
runtime overflow

code auto:869 or[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 or 0;
endcode
compile error

$overflow off
code auto:870 or[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:871 or[Word] 65535[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime noerror

code auto:872 or[Word] 65535[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 255;
endcode
runtime noerror

code auto:873 or[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 or 255;
endcode
compile error

$overflow on
code auto:874 or[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:875 or[Word] 65535[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime overflow

code auto:876 or[Word] 65535[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 255;
endcode
runtime overflow

code auto:877 or[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 or 255;
endcode
compile error

$overflow off
code auto:878 or[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:879 or[Word] 65535[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime noerror

code auto:880 or[Word] 65535[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 32767;
endcode
runtime noerror

code auto:881 or[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 or 32767;
endcode
compile error

$overflow on
code auto:882 or[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:883 or[Word] 65535[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime overflow

code auto:884 or[Word] 65535[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 32767;
endcode
runtime overflow

code auto:885 or[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 or 32767;
endcode
compile error

$overflow off
code auto:886 or[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:887 or[Word] 65535[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime noerror

code auto:888 or[Word] 65535[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 32768;
endcode
runtime noerror

code auto:889 or[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 or 32768;
endcode
compile error

$overflow on
code auto:890 or[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:891 or[Word] 65535[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime overflow

code auto:892 or[Word] 65535[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 32768;
endcode
runtime overflow

code auto:893 or[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 or 32768;
endcode
compile error

$overflow off
code auto:894 or[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime noerror

code auto:895 or[Word] 65535[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime noerror

code auto:896 or[Word] 65535[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 65535;
endcode
runtime noerror

code auto:897 or[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 or 65535;
endcode
compile error

$overflow on
code auto:898 or[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a or b;
endcode
runtime overflow

code auto:899 or[Word] 65535[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 65535 or b;
endcode
runtime overflow

code auto:900 or[Word] 65535[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a or 65535;
endcode
runtime overflow

code auto:901 or[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 or 65535;
endcode
compile error

$overflow on
code auto:902 or[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 0

code auto:903 or[Word] 0[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 0

code auto:904 or[Word] 0[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 0

code auto:905 or[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 0;
endcode
varvalue r 0

$overflow on
code auto:906 or[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:907 or[Word] 0[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 255

code auto:908 or[Word] 0[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:909 or[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 255;
endcode
varvalue r 255

$overflow on
code auto:910 or[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:911 or[Word] 0[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32767

code auto:912 or[Word] 0[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:913 or[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:914 or[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:915 or[Word] 0[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 32768

code auto:916 or[Word] 0[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32768

code auto:917 or[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 32768;
endcode
varvalue r 32768

$overflow on
code auto:918 or[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:919 or[Word] 0[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 or b;
endcode
varvalue r 65535

code auto:920 or[Word] 0[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:921 or[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:922 or[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:923 or[Word] 255[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:924 or[Word] 255[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 255

code auto:925 or[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 0;
endcode
varvalue r 255

$overflow on
code auto:926 or[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 255

code auto:927 or[Word] 255[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 255

code auto:928 or[Word] 255[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 255

code auto:929 or[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 255;
endcode
varvalue r 255

$overflow on
code auto:930 or[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:931 or[Word] 255[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 32767

code auto:932 or[Word] 255[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:933 or[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:934 or[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:935 or[Word] 255[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 33023

code auto:936 or[Word] 255[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 33023

code auto:937 or[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 32768;
endcode
varvalue r 33023

$overflow on
code auto:938 or[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:939 or[Word] 255[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 or b;
endcode
varvalue r 65535

code auto:940 or[Word] 255[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:941 or[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:942 or[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:943 or[Word] 32767[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:944 or[Word] 32767[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32767

code auto:945 or[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 0;
endcode
varvalue r 32767

$overflow on
code auto:946 or[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:947 or[Word] 32767[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:948 or[Word] 32767[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 32767

code auto:949 or[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 255;
endcode
varvalue r 32767

$overflow on
code auto:950 or[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32767

code auto:951 or[Word] 32767[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 32767

code auto:952 or[Word] 32767[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 32767

code auto:953 or[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 32767;
endcode
varvalue r 32767

$overflow on
code auto:954 or[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:955 or[Word] 32767[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 65535

code auto:956 or[Word] 32767[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 65535

code auto:957 or[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 32768;
endcode
varvalue r 65535

$overflow on
code auto:958 or[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:959 or[Word] 32767[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32767 or b;
endcode
varvalue r 65535

code auto:960 or[Word] 32767[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:961 or[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:962 or[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:963 or[Word] 32768[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32768

code auto:964 or[Word] 32768[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 32768

code auto:965 or[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 0;
endcode
varvalue r 32768

$overflow on
code auto:966 or[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 33023

code auto:967 or[Word] 32768[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 33023

code auto:968 or[Word] 32768[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 33023

code auto:969 or[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 255;
endcode
varvalue r 33023

$overflow on
code auto:970 or[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:971 or[Word] 32768[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 65535

code auto:972 or[Word] 32768[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 65535

code auto:973 or[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 32767;
endcode
varvalue r 65535

$overflow on
code auto:974 or[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 32768

code auto:975 or[Word] 32768[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 32768

code auto:976 or[Word] 32768[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 32768

code auto:977 or[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 32768;
endcode
varvalue r 32768

$overflow on
code auto:978 or[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:979 or[Word] 32768[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32768 or b;
endcode
varvalue r 65535

code auto:980 or[Word] 32768[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:981 or[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:982 or[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:983 or[Word] 65535[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:984 or[Word] 65535[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 0;
endcode
varvalue r 65535

code auto:985 or[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 0;
endcode
varvalue r 65535

$overflow on
code auto:986 or[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:987 or[Word] 65535[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:988 or[Word] 65535[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 255;
endcode
varvalue r 65535

code auto:989 or[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 255;
endcode
varvalue r 65535

$overflow on
code auto:990 or[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:991 or[Word] 65535[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:992 or[Word] 65535[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 32767;
endcode
varvalue r 65535

code auto:993 or[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 32767;
endcode
varvalue r 65535

$overflow on
code auto:994 or[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:995 or[Word] 65535[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:996 or[Word] 65535[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 32768;
endcode
varvalue r 65535

code auto:997 or[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 32768;
endcode
varvalue r 65535

$overflow on
code auto:998 or[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a or b;
endcode
varvalue r 65535

code auto:999 or[Word] 65535[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 65535 or b;
endcode
varvalue r 65535

code auto:1000 or[Word] 65535[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a or 65535;
endcode
varvalue r 65535

code auto:1001 or[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 or 65535;
endcode
varvalue r 65535

$overflow on
code auto:1002 or[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a or b;
endcode
varvalue r False

code auto:1003 or[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := False or b;
endcode
varvalue r False

code auto:1004 or[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a or False;
endcode
varvalue r False

code auto:1005 or[compile-time] 0[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False or False;
endcode
varvalue r False

$overflow on
code auto:1006 or[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a or b;
endcode
varvalue r True

code auto:1007 or[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := False or b;
endcode
varvalue r True

code auto:1008 or[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a or True;
endcode
varvalue r True

code auto:1009 or[compile-time] 0[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False or True;
endcode
varvalue r True

$overflow on
code auto:1010 or[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a or b;
endcode
varvalue r True

code auto:1011 or[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := True or b;
endcode
varvalue r True

code auto:1012 or[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a or False;
endcode
varvalue r True

code auto:1013 or[compile-time] 255[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True or False;
endcode
varvalue r True

$overflow on
code auto:1014 or[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a or b;
endcode
varvalue r True

code auto:1015 or[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := True or b;
endcode
varvalue r True

code auto:1016 or[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a or True;
endcode
varvalue r True

code auto:1017 or[compile-time] 255[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True or True;
endcode
varvalue r True

