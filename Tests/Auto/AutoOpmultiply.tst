;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 multiply[Int16] -128[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:3 multiply[compile-time] -128[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow on
code auto:4 multiply[Int16] -128[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:5 multiply[compile-time] -128[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -127;
endcode
varvalue r 16256

$overflow on
code auto:6 multiply[Int16] -128[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:7 multiply[compile-time] -128[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow on
code auto:8 multiply[Int16] -128[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:9 multiply[compile-time] -128[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:10 multiply[Int16] -128[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:11 multiply[compile-time] -128[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:12 multiply[Int16] -128[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:13 multiply[compile-time] -128[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:14 multiply[Int16] -127[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:15 multiply[compile-time] -127[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -128;
endcode
varvalue r 16256

$overflow on
code auto:16 multiply[Int16] -127[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:17 multiply[compile-time] -127[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -127;
endcode
varvalue r 16129

$overflow on
code auto:18 multiply[Int16] -127[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:19 multiply[compile-time] -127[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -1;
endcode
varvalue r 127

$overflow on
code auto:20 multiply[Int16] -127[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:21 multiply[compile-time] -127[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:22 multiply[Int16] -127[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:23 multiply[compile-time] -127[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 1;
endcode
varvalue r -127

$overflow on
code auto:24 multiply[Int16] -127[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:25 multiply[compile-time] -127[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 127;
endcode
varvalue r -16129

$overflow on
code auto:26 multiply[Int16] -1[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:27 multiply[compile-time] -1[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow on
code auto:28 multiply[Int16] -1[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:29 multiply[compile-time] -1[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -127;
endcode
varvalue r 127

$overflow on
code auto:30 multiply[Int16] -1[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:31 multiply[compile-time] -1[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:32 multiply[Int16] -1[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:33 multiply[compile-time] -1[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:34 multiply[Int16] -1[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:35 multiply[compile-time] -1[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:36 multiply[Int16] -1[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:37 multiply[compile-time] -1[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:38 multiply[Int16] 0[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:39 multiply[compile-time] 0[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:40 multiply[Int16] 0[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:41 multiply[compile-time] 0[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:42 multiply[Int16] 0[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:43 multiply[compile-time] 0[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:44 multiply[Int16] 0[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:45 multiply[compile-time] 0[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:46 multiply[Int16] 0[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:47 multiply[compile-time] 0[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:48 multiply[Int16] 0[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:49 multiply[compile-time] 0[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:50 multiply[Int16] 1[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:51 multiply[compile-time] 1[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:52 multiply[Int16] 1[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:53 multiply[compile-time] 1[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -127;
endcode
varvalue r -127

$overflow on
code auto:54 multiply[Int16] 1[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:55 multiply[compile-time] 1[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:56 multiply[Int16] 1[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:57 multiply[compile-time] 1[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:58 multiply[Int16] 1[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:59 multiply[compile-time] 1[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:60 multiply[Int16] 1[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:61 multiply[compile-time] 1[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:62 multiply[Int16] 127[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:63 multiply[compile-time] 127[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:64 multiply[Int16] 127[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:65 multiply[compile-time] 127[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -127;
endcode
varvalue r -16129

$overflow on
code auto:66 multiply[Int16] 127[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:67 multiply[compile-time] 127[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:68 multiply[Int16] 127[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:69 multiply[compile-time] 127[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:70 multiply[Int16] 127[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:71 multiply[compile-time] 127[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:72 multiply[Int16] 127[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:73 multiply[compile-time] 127[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:74 multiply[Int16] -128[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:75 multiply[compile-time] -128[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:76 multiply[Int16] -128[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:77 multiply[compile-time] -128[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:78 multiply[Int16] -128[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:79 multiply[compile-time] -128[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -129;
endcode
varvalue r 16512

$overflow on
code auto:80 multiply[Int16] -128[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:81 multiply[compile-time] -128[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow on
code auto:82 multiply[Int16] -128[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:83 multiply[compile-time] -128[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow on
code auto:84 multiply[Int16] -128[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:85 multiply[compile-time] -128[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:86 multiply[Int16] -128[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:87 multiply[compile-time] -128[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:88 multiply[Int16] -128[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:89 multiply[compile-time] -128[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:90 multiply[Int16] -128[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:91 multiply[compile-time] -128[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 128;
endcode
varvalue r -16384

$overflow on
code auto:92 multiply[Int16] -128[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:93 multiply[compile-time] -128[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:94 multiply[Int16] -127[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:95 multiply[compile-time] -127[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -32768;
endcode
compile error

$overflow on
code auto:96 multiply[Int16] -127[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:97 multiply[compile-time] -127[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -32767;
endcode
compile error

$overflow on
code auto:98 multiply[Int16] -127[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16383

code auto:99 multiply[compile-time] -127[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -129;
endcode
varvalue r 16383

$overflow on
code auto:100 multiply[Int16] -127[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:101 multiply[compile-time] -127[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -128;
endcode
varvalue r 16256

$overflow on
code auto:102 multiply[Int16] -127[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:103 multiply[compile-time] -127[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -1;
endcode
varvalue r 127

$overflow on
code auto:104 multiply[Int16] -127[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:105 multiply[compile-time] -127[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:106 multiply[Int16] -127[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:107 multiply[compile-time] -127[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 1;
endcode
varvalue r -127

$overflow on
code auto:108 multiply[Int16] -127[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:109 multiply[compile-time] -127[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 127;
endcode
varvalue r -16129

$overflow on
code auto:110 multiply[Int16] -127[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:111 multiply[compile-time] -127[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 128;
endcode
varvalue r -16256

$overflow on
code auto:112 multiply[Int16] -127[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:113 multiply[compile-time] -127[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 32767;
endcode
compile error

$overflow on
code auto:114 multiply[Int16] -1[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:115 multiply[compile-time] -1[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32768;
endcode
compile error

$overflow on
code auto:116 multiply[Int16] -1[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:117 multiply[compile-time] -1[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32767;
endcode
varvalue r 32767

$overflow on
code auto:118 multiply[Int16] -1[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:119 multiply[compile-time] -1[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -129;
endcode
varvalue r 129

$overflow on
code auto:120 multiply[Int16] -1[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:121 multiply[compile-time] -1[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow on
code auto:122 multiply[Int16] -1[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:123 multiply[compile-time] -1[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:124 multiply[Int16] -1[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:125 multiply[compile-time] -1[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:126 multiply[Int16] -1[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:127 multiply[compile-time] -1[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:128 multiply[Int16] -1[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:129 multiply[compile-time] -1[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:130 multiply[Int16] -1[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:131 multiply[compile-time] -1[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 128;
endcode
varvalue r -128

$overflow on
code auto:132 multiply[Int16] -1[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:133 multiply[compile-time] -1[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32767;
endcode
varvalue r -32767

$overflow on
code auto:134 multiply[Int16] 0[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:135 multiply[compile-time] 0[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:136 multiply[Int16] 0[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:137 multiply[compile-time] 0[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:138 multiply[Int16] 0[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:139 multiply[compile-time] 0[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:140 multiply[Int16] 0[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:141 multiply[compile-time] 0[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:142 multiply[Int16] 0[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:143 multiply[compile-time] 0[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:144 multiply[Int16] 0[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:145 multiply[compile-time] 0[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:146 multiply[Int16] 0[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:147 multiply[compile-time] 0[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:148 multiply[Int16] 0[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:149 multiply[compile-time] 0[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:150 multiply[Int16] 0[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:151 multiply[compile-time] 0[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:152 multiply[Int16] 0[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:153 multiply[compile-time] 0[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:154 multiply[Int16] 1[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:155 multiply[compile-time] 1[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32768;
endcode
varvalue r -32768

$overflow on
code auto:156 multiply[Int16] 1[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:157 multiply[compile-time] 1[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32767;
endcode
varvalue r -32767

$overflow on
code auto:158 multiply[Int16] 1[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:159 multiply[compile-time] 1[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -129;
endcode
varvalue r -129

$overflow on
code auto:160 multiply[Int16] 1[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:161 multiply[compile-time] 1[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:162 multiply[Int16] 1[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:163 multiply[compile-time] 1[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:164 multiply[Int16] 1[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:165 multiply[compile-time] 1[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:166 multiply[Int16] 1[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:167 multiply[compile-time] 1[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:168 multiply[Int16] 1[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:169 multiply[compile-time] 1[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:170 multiply[Int16] 1[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:171 multiply[compile-time] 1[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:172 multiply[Int16] 1[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:173 multiply[compile-time] 1[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:174 multiply[Int16] 127[Int8], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:175 multiply[compile-time] 127[Int8], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:176 multiply[Int16] 127[Int8], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:177 multiply[compile-time] 127[Int8], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:178 multiply[Int16] 127[Int8], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:179 multiply[compile-time] 127[Int8], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -129;
endcode
varvalue r -16383

$overflow on
code auto:180 multiply[Int16] 127[Int8], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:181 multiply[compile-time] 127[Int8], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:182 multiply[Int16] 127[Int8], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:183 multiply[compile-time] 127[Int8], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:184 multiply[Int16] 127[Int8], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:185 multiply[compile-time] 127[Int8], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:186 multiply[Int16] 127[Int8], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:187 multiply[compile-time] 127[Int8], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:188 multiply[Int16] 127[Int8], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:189 multiply[compile-time] 127[Int8], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:190 multiply[Int16] 127[Int8], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:191 multiply[compile-time] 127[Int8], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:192 multiply[Int16] 127[Int8], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:193 multiply[compile-time] 127[Int8], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:194 multiply[Int16] -128[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:195 multiply[compile-time] -128[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:196 multiply[Int16] -128[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:197 multiply[compile-time] -128[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:198 multiply[Int16] -128[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:199 multiply[compile-time] -128[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:200 multiply[Int16] -128[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:201 multiply[compile-time] -128[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 128;
endcode
varvalue r -16384

$overflow on
code auto:202 multiply[Int16] -128[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:203 multiply[compile-time] -128[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 255;
endcode
varvalue r -32640

$overflow on
code auto:204 multiply[Int16] -127[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:205 multiply[compile-time] -127[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:206 multiply[Int16] -127[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:207 multiply[compile-time] -127[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 1;
endcode
varvalue r -127

$overflow on
code auto:208 multiply[Int16] -127[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:209 multiply[compile-time] -127[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 127;
endcode
varvalue r -16129

$overflow on
code auto:210 multiply[Int16] -127[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:211 multiply[compile-time] -127[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 128;
endcode
varvalue r -16256

$overflow on
code auto:212 multiply[Int16] -127[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32385

code auto:213 multiply[compile-time] -127[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 255;
endcode
varvalue r -32385

$overflow on
code auto:214 multiply[Int16] -1[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:215 multiply[compile-time] -1[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:216 multiply[Int16] -1[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:217 multiply[compile-time] -1[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:218 multiply[Int16] -1[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:219 multiply[compile-time] -1[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:220 multiply[Int16] -1[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:221 multiply[compile-time] -1[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 128;
endcode
varvalue r -128

$overflow on
code auto:222 multiply[Int16] -1[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:223 multiply[compile-time] -1[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 255;
endcode
varvalue r -255

$overflow on
code auto:224 multiply[Int16] 0[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:225 multiply[compile-time] 0[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:226 multiply[Int16] 0[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:227 multiply[compile-time] 0[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:228 multiply[Int16] 0[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:229 multiply[compile-time] 0[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:230 multiply[Int16] 0[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:231 multiply[compile-time] 0[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:232 multiply[Int16] 0[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:233 multiply[compile-time] 0[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:234 multiply[Int16] 1[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:235 multiply[compile-time] 1[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:236 multiply[Int16] 1[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:237 multiply[compile-time] 1[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:238 multiply[Int16] 1[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:239 multiply[compile-time] 1[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:240 multiply[Int16] 1[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:241 multiply[compile-time] 1[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:242 multiply[Int16] 1[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:243 multiply[compile-time] 1[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:244 multiply[Int16] 127[Int8], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:245 multiply[compile-time] 127[Int8], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:246 multiply[Int16] 127[Int8], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:247 multiply[compile-time] 127[Int8], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:248 multiply[Int16] 127[Int8], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:249 multiply[compile-time] 127[Int8], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:250 multiply[Int16] 127[Int8], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:251 multiply[compile-time] 127[Int8], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:252 multiply[Int16] 127[Int8], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:253 multiply[compile-time] 127[Int8], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:254 multiply[Int16] -128[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:255 multiply[compile-time] -128[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:256 multiply[Int16] -128[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:257 multiply[compile-time] -128[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 255;
endcode
varvalue r -32640

$overflow on
code auto:258 multiply[Int16] -128[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:259 multiply[compile-time] -128[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:260 multiply[Int16] -128[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:261 multiply[compile-time] -128[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32768;
endcode
compile error

$overflow on
code auto:262 multiply[Int16] -128[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:263 multiply[compile-time] -128[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 65535;
endcode
compile error

$overflow on
code auto:264 multiply[Int16] -127[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:265 multiply[compile-time] -127[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:266 multiply[Int16] -127[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32385

code auto:267 multiply[compile-time] -127[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 255;
endcode
varvalue r -32385

$overflow on
code auto:268 multiply[Int16] -127[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:269 multiply[compile-time] -127[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 32767;
endcode
compile error

$overflow on
code auto:270 multiply[Int16] -127[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:271 multiply[compile-time] -127[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 32768;
endcode
compile error

$overflow on
code auto:272 multiply[Int16] -127[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:273 multiply[compile-time] -127[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 65535;
endcode
compile error

$overflow on
code auto:274 multiply[Int16] -1[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:275 multiply[compile-time] -1[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:276 multiply[Int16] -1[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:277 multiply[compile-time] -1[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 255;
endcode
varvalue r -255

$overflow on
code auto:278 multiply[Int16] -1[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:279 multiply[compile-time] -1[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32767;
endcode
varvalue r -32767

$overflow on
code auto:280 multiply[Int16] -1[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:281 multiply[compile-time] -1[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32768;
endcode
varvalue r -32768

$overflow on
code auto:282 multiply[Int16] -1[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:283 multiply[compile-time] -1[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 65535;
endcode
compile error

$overflow on
code auto:284 multiply[Int16] 0[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:285 multiply[compile-time] 0[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:286 multiply[Int16] 0[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:287 multiply[compile-time] 0[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:288 multiply[Int16] 0[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:289 multiply[compile-time] 0[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:290 multiply[Int16] 0[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:291 multiply[compile-time] 0[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:292 multiply[Int16] 0[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:293 multiply[compile-time] 0[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:294 multiply[Int16] 1[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:295 multiply[compile-time] 1[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:296 multiply[Int16] 1[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:297 multiply[compile-time] 1[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:298 multiply[Int16] 1[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:299 multiply[compile-time] 1[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:300 multiply[Int16] 1[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:301 multiply[compile-time] 1[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32768;
endcode
compile error

$overflow on
code auto:302 multiply[Int16] 1[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:303 multiply[compile-time] 1[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 65535;
endcode
compile error

$overflow on
code auto:304 multiply[Int16] 127[Int8], 0[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:305 multiply[compile-time] 127[Int8], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:306 multiply[Int16] 127[Int8], 255[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:307 multiply[compile-time] 127[Int8], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:308 multiply[Int16] 127[Int8], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:309 multiply[compile-time] 127[Int8], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:310 multiply[Int16] 127[Int8], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:311 multiply[compile-time] 127[Int8], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:312 multiply[Int16] 127[Int8], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:313 multiply[compile-time] 127[Int8], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:314 multiply[Pointer] -128[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:315 multiply[compile-time] -128[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:316 multiply[Pointer] -128[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:317 multiply[compile-time] -128[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 255;
endcode
compile error

$overflow on
code auto:318 multiply[Pointer] -128[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:319 multiply[compile-time] -128[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:320 multiply[Pointer] -128[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:321 multiply[compile-time] -128[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 32768;
endcode
compile error

$overflow on
code auto:322 multiply[Pointer] -128[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:323 multiply[compile-time] -128[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 65535;
endcode
compile error

$overflow on
code auto:324 multiply[Pointer] -127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:325 multiply[compile-time] -127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:326 multiply[Pointer] -127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:327 multiply[compile-time] -127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 * 255;
endcode
compile error

$overflow on
code auto:328 multiply[Pointer] -127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:329 multiply[compile-time] -127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 * 32767;
endcode
compile error

$overflow on
code auto:330 multiply[Pointer] -127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:331 multiply[compile-time] -127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 * 32768;
endcode
compile error

$overflow on
code auto:332 multiply[Pointer] -127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:333 multiply[compile-time] -127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 * 65535;
endcode
compile error

$overflow on
code auto:334 multiply[Pointer] -1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:335 multiply[compile-time] -1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:336 multiply[Pointer] -1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:337 multiply[compile-time] -1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 255;
endcode
compile error

$overflow on
code auto:338 multiply[Pointer] -1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:339 multiply[compile-time] -1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 32767;
endcode
compile error

$overflow on
code auto:340 multiply[Pointer] -1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:341 multiply[compile-time] -1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 32768;
endcode
compile error

$overflow on
code auto:342 multiply[Pointer] -1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:343 multiply[compile-time] -1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 65535;
endcode
compile error

$overflow on
code auto:344 multiply[Pointer] 0[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:345 multiply[compile-time] 0[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:346 multiply[Pointer] 0[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:347 multiply[compile-time] 0[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:348 multiply[Pointer] 0[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:349 multiply[compile-time] 0[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:350 multiply[Pointer] 0[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:351 multiply[compile-time] 0[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:352 multiply[Pointer] 0[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:353 multiply[compile-time] 0[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:354 multiply[Pointer] 1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:355 multiply[compile-time] 1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:356 multiply[Pointer] 1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:357 multiply[compile-time] 1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:358 multiply[Pointer] 1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:359 multiply[compile-time] 1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:360 multiply[Pointer] 1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:361 multiply[compile-time] 1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32768;
endcode
varvalue r 32768

$overflow on
code auto:362 multiply[Pointer] 1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:363 multiply[compile-time] 1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 65535;
endcode
varvalue r 65535

$overflow on
code auto:364 multiply[Pointer] 127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:365 multiply[compile-time] 127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:366 multiply[Pointer] 127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:367 multiply[compile-time] 127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:368 multiply[Pointer] 127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:369 multiply[compile-time] 127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:370 multiply[Pointer] 127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:371 multiply[compile-time] 127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:372 multiply[Pointer] 127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:373 multiply[compile-time] 127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:374 multiply[Int16] -32768[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:375 multiply[compile-time] -32768[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:376 multiply[Int16] -32768[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:377 multiply[compile-time] -32768[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -127;
endcode
compile error

$overflow on
code auto:378 multiply[Int16] -32768[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:379 multiply[compile-time] -32768[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -1;
endcode
compile error

$overflow on
code auto:380 multiply[Int16] -32768[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:381 multiply[compile-time] -32768[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:382 multiply[Int16] -32768[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:383 multiply[compile-time] -32768[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 1;
endcode
varvalue r -32768

$overflow on
code auto:384 multiply[Int16] -32768[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:385 multiply[compile-time] -32768[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:386 multiply[Int16] -32767[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:387 multiply[compile-time] -32767[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:388 multiply[Int16] -32767[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:389 multiply[compile-time] -32767[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -127;
endcode
compile error

$overflow on
code auto:390 multiply[Int16] -32767[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:391 multiply[compile-time] -32767[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -1;
endcode
varvalue r 32767

$overflow on
code auto:392 multiply[Int16] -32767[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:393 multiply[compile-time] -32767[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:394 multiply[Int16] -32767[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:395 multiply[compile-time] -32767[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 1;
endcode
varvalue r -32767

$overflow on
code auto:396 multiply[Int16] -32767[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:397 multiply[compile-time] -32767[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:398 multiply[Int16] -129[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:399 multiply[compile-time] -129[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -128;
endcode
varvalue r 16512

$overflow on
code auto:400 multiply[Int16] -129[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16383

code auto:401 multiply[compile-time] -129[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -127;
endcode
varvalue r 16383

$overflow on
code auto:402 multiply[Int16] -129[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:403 multiply[compile-time] -129[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -1;
endcode
varvalue r 129

$overflow on
code auto:404 multiply[Int16] -129[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:405 multiply[compile-time] -129[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:406 multiply[Int16] -129[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:407 multiply[compile-time] -129[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 1;
endcode
varvalue r -129

$overflow on
code auto:408 multiply[Int16] -129[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:409 multiply[compile-time] -129[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 127;
endcode
varvalue r -16383

$overflow on
code auto:410 multiply[Int16] -128[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:411 multiply[compile-time] -128[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow on
code auto:412 multiply[Int16] -128[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:413 multiply[compile-time] -128[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -127;
endcode
varvalue r 16256

$overflow on
code auto:414 multiply[Int16] -128[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:415 multiply[compile-time] -128[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow on
code auto:416 multiply[Int16] -128[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:417 multiply[compile-time] -128[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:418 multiply[Int16] -128[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:419 multiply[compile-time] -128[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:420 multiply[Int16] -128[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:421 multiply[compile-time] -128[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:422 multiply[Int16] -1[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:423 multiply[compile-time] -1[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow on
code auto:424 multiply[Int16] -1[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:425 multiply[compile-time] -1[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -127;
endcode
varvalue r 127

$overflow on
code auto:426 multiply[Int16] -1[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:427 multiply[compile-time] -1[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:428 multiply[Int16] -1[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:429 multiply[compile-time] -1[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:430 multiply[Int16] -1[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:431 multiply[compile-time] -1[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:432 multiply[Int16] -1[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:433 multiply[compile-time] -1[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:434 multiply[Int16] 0[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:435 multiply[compile-time] 0[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:436 multiply[Int16] 0[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:437 multiply[compile-time] 0[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:438 multiply[Int16] 0[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:439 multiply[compile-time] 0[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:440 multiply[Int16] 0[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:441 multiply[compile-time] 0[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:442 multiply[Int16] 0[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:443 multiply[compile-time] 0[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:444 multiply[Int16] 0[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:445 multiply[compile-time] 0[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:446 multiply[Int16] 1[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:447 multiply[compile-time] 1[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:448 multiply[Int16] 1[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:449 multiply[compile-time] 1[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -127;
endcode
varvalue r -127

$overflow on
code auto:450 multiply[Int16] 1[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:451 multiply[compile-time] 1[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:452 multiply[Int16] 1[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:453 multiply[compile-time] 1[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:454 multiply[Int16] 1[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:455 multiply[compile-time] 1[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:456 multiply[Int16] 1[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:457 multiply[compile-time] 1[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:458 multiply[Int16] 127[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:459 multiply[compile-time] 127[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:460 multiply[Int16] 127[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:461 multiply[compile-time] 127[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -127;
endcode
varvalue r -16129

$overflow on
code auto:462 multiply[Int16] 127[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:463 multiply[compile-time] 127[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:464 multiply[Int16] 127[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:465 multiply[compile-time] 127[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:466 multiply[Int16] 127[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:467 multiply[compile-time] 127[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:468 multiply[Int16] 127[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:469 multiply[compile-time] 127[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:470 multiply[Int16] 128[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:471 multiply[compile-time] 128[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -128;
endcode
varvalue r -16384

$overflow on
code auto:472 multiply[Int16] 128[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:473 multiply[compile-time] 128[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -127;
endcode
varvalue r -16256

$overflow on
code auto:474 multiply[Int16] 128[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:475 multiply[compile-time] 128[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -1;
endcode
varvalue r -128

$overflow on
code auto:476 multiply[Int16] 128[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:477 multiply[compile-time] 128[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:478 multiply[Int16] 128[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:479 multiply[compile-time] 128[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:480 multiply[Int16] 128[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:481 multiply[compile-time] 128[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:482 multiply[Int16] 32767[Int16], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:483 multiply[compile-time] 32767[Int16], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:484 multiply[Int16] 32767[Int16], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:485 multiply[compile-time] 32767[Int16], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -127;
endcode
compile error

$overflow on
code auto:486 multiply[Int16] 32767[Int16], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:487 multiply[compile-time] 32767[Int16], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -1;
endcode
varvalue r -32767

$overflow on
code auto:488 multiply[Int16] 32767[Int16], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:489 multiply[compile-time] 32767[Int16], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:490 multiply[Int16] 32767[Int16], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:491 multiply[compile-time] 32767[Int16], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:492 multiply[Int16] 32767[Int16], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:493 multiply[compile-time] 32767[Int16], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:494 multiply[Int16] -32768[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:495 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -32768;
endcode
compile error

$overflow on
code auto:496 multiply[Int16] -32768[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:497 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -32767;
endcode
compile error

$overflow on
code auto:498 multiply[Int16] -32768[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:499 multiply[compile-time] -32768[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -129;
endcode
compile error

$overflow on
code auto:500 multiply[Int16] -32768[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:501 multiply[compile-time] -32768[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:502 multiply[Int16] -32768[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:503 multiply[compile-time] -32768[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -1;
endcode
compile error

$overflow on
code auto:504 multiply[Int16] -32768[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:505 multiply[compile-time] -32768[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:506 multiply[Int16] -32768[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:507 multiply[compile-time] -32768[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 1;
endcode
varvalue r -32768

$overflow on
code auto:508 multiply[Int16] -32768[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:509 multiply[compile-time] -32768[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:510 multiply[Int16] -32768[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:511 multiply[compile-time] -32768[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:512 multiply[Int16] -32768[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:513 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:514 multiply[Int16] -32767[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:515 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -32768;
endcode
compile error

$overflow on
code auto:516 multiply[Int16] -32767[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:517 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -32767;
endcode
compile error

$overflow on
code auto:518 multiply[Int16] -32767[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:519 multiply[compile-time] -32767[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -129;
endcode
compile error

$overflow on
code auto:520 multiply[Int16] -32767[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:521 multiply[compile-time] -32767[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:522 multiply[Int16] -32767[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:523 multiply[compile-time] -32767[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -1;
endcode
varvalue r 32767

$overflow on
code auto:524 multiply[Int16] -32767[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:525 multiply[compile-time] -32767[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:526 multiply[Int16] -32767[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:527 multiply[compile-time] -32767[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 1;
endcode
varvalue r -32767

$overflow on
code auto:528 multiply[Int16] -32767[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:529 multiply[compile-time] -32767[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:530 multiply[Int16] -32767[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:531 multiply[compile-time] -32767[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:532 multiply[Int16] -32767[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:533 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:534 multiply[Int16] -129[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:535 multiply[compile-time] -129[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -32768;
endcode
compile error

$overflow on
code auto:536 multiply[Int16] -129[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:537 multiply[compile-time] -129[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -32767;
endcode
compile error

$overflow on
code auto:538 multiply[Int16] -129[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16641

code auto:539 multiply[compile-time] -129[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -129;
endcode
varvalue r 16641

$overflow on
code auto:540 multiply[Int16] -129[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:541 multiply[compile-time] -129[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -128;
endcode
varvalue r 16512

$overflow on
code auto:542 multiply[Int16] -129[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:543 multiply[compile-time] -129[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -1;
endcode
varvalue r 129

$overflow on
code auto:544 multiply[Int16] -129[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:545 multiply[compile-time] -129[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:546 multiply[Int16] -129[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:547 multiply[compile-time] -129[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 1;
endcode
varvalue r -129

$overflow on
code auto:548 multiply[Int16] -129[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:549 multiply[compile-time] -129[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 127;
endcode
varvalue r -16383

$overflow on
code auto:550 multiply[Int16] -129[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:551 multiply[compile-time] -129[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 128;
endcode
varvalue r -16512

$overflow on
code auto:552 multiply[Int16] -129[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:553 multiply[compile-time] -129[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:554 multiply[Int16] -128[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:555 multiply[compile-time] -128[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:556 multiply[Int16] -128[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:557 multiply[compile-time] -128[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:558 multiply[Int16] -128[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:559 multiply[compile-time] -128[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -129;
endcode
varvalue r 16512

$overflow on
code auto:560 multiply[Int16] -128[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:561 multiply[compile-time] -128[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow on
code auto:562 multiply[Int16] -128[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:563 multiply[compile-time] -128[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow on
code auto:564 multiply[Int16] -128[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:565 multiply[compile-time] -128[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:566 multiply[Int16] -128[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:567 multiply[compile-time] -128[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:568 multiply[Int16] -128[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:569 multiply[compile-time] -128[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:570 multiply[Int16] -128[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:571 multiply[compile-time] -128[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 128;
endcode
varvalue r -16384

$overflow on
code auto:572 multiply[Int16] -128[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:573 multiply[compile-time] -128[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:574 multiply[Int16] -1[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:575 multiply[compile-time] -1[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32768;
endcode
compile error

$overflow on
code auto:576 multiply[Int16] -1[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:577 multiply[compile-time] -1[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32767;
endcode
varvalue r 32767

$overflow on
code auto:578 multiply[Int16] -1[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:579 multiply[compile-time] -1[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -129;
endcode
varvalue r 129

$overflow on
code auto:580 multiply[Int16] -1[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:581 multiply[compile-time] -1[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow on
code auto:582 multiply[Int16] -1[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:583 multiply[compile-time] -1[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:584 multiply[Int16] -1[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:585 multiply[compile-time] -1[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:586 multiply[Int16] -1[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:587 multiply[compile-time] -1[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:588 multiply[Int16] -1[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:589 multiply[compile-time] -1[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:590 multiply[Int16] -1[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:591 multiply[compile-time] -1[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 128;
endcode
varvalue r -128

$overflow on
code auto:592 multiply[Int16] -1[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:593 multiply[compile-time] -1[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32767;
endcode
varvalue r -32767

$overflow on
code auto:594 multiply[Int16] 0[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:595 multiply[compile-time] 0[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:596 multiply[Int16] 0[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:597 multiply[compile-time] 0[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:598 multiply[Int16] 0[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:599 multiply[compile-time] 0[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:600 multiply[Int16] 0[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:601 multiply[compile-time] 0[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:602 multiply[Int16] 0[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:603 multiply[compile-time] 0[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:604 multiply[Int16] 0[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:605 multiply[compile-time] 0[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:606 multiply[Int16] 0[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:607 multiply[compile-time] 0[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:608 multiply[Int16] 0[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:609 multiply[compile-time] 0[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:610 multiply[Int16] 0[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:611 multiply[compile-time] 0[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:612 multiply[Int16] 0[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:613 multiply[compile-time] 0[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:614 multiply[Int16] 1[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:615 multiply[compile-time] 1[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32768;
endcode
varvalue r -32768

$overflow on
code auto:616 multiply[Int16] 1[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:617 multiply[compile-time] 1[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32767;
endcode
varvalue r -32767

$overflow on
code auto:618 multiply[Int16] 1[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:619 multiply[compile-time] 1[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -129;
endcode
varvalue r -129

$overflow on
code auto:620 multiply[Int16] 1[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:621 multiply[compile-time] 1[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:622 multiply[Int16] 1[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:623 multiply[compile-time] 1[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:624 multiply[Int16] 1[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:625 multiply[compile-time] 1[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:626 multiply[Int16] 1[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:627 multiply[compile-time] 1[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:628 multiply[Int16] 1[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:629 multiply[compile-time] 1[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:630 multiply[Int16] 1[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:631 multiply[compile-time] 1[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:632 multiply[Int16] 1[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:633 multiply[compile-time] 1[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:634 multiply[Int16] 127[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:635 multiply[compile-time] 127[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:636 multiply[Int16] 127[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:637 multiply[compile-time] 127[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:638 multiply[Int16] 127[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:639 multiply[compile-time] 127[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -129;
endcode
varvalue r -16383

$overflow on
code auto:640 multiply[Int16] 127[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:641 multiply[compile-time] 127[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:642 multiply[Int16] 127[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:643 multiply[compile-time] 127[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:644 multiply[Int16] 127[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:645 multiply[compile-time] 127[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:646 multiply[Int16] 127[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:647 multiply[compile-time] 127[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:648 multiply[Int16] 127[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:649 multiply[compile-time] 127[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:650 multiply[Int16] 127[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:651 multiply[compile-time] 127[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:652 multiply[Int16] 127[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:653 multiply[compile-time] 127[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:654 multiply[Int16] 128[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:655 multiply[compile-time] 128[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:656 multiply[Int16] 128[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:657 multiply[compile-time] 128[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:658 multiply[Int16] 128[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:659 multiply[compile-time] 128[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -129;
endcode
varvalue r -16512

$overflow on
code auto:660 multiply[Int16] 128[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:661 multiply[compile-time] 128[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -128;
endcode
varvalue r -16384

$overflow on
code auto:662 multiply[Int16] 128[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:663 multiply[compile-time] 128[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -1;
endcode
varvalue r -128

$overflow on
code auto:664 multiply[Int16] 128[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:665 multiply[compile-time] 128[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:666 multiply[Int16] 128[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:667 multiply[compile-time] 128[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:668 multiply[Int16] 128[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:669 multiply[compile-time] 128[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:670 multiply[Int16] 128[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:671 multiply[compile-time] 128[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow on
code auto:672 multiply[Int16] 128[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:673 multiply[compile-time] 128[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:674 multiply[Int16] 32767[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:675 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:676 multiply[Int16] 32767[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:677 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:678 multiply[Int16] 32767[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:679 multiply[compile-time] 32767[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:680 multiply[Int16] 32767[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:681 multiply[compile-time] 32767[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:682 multiply[Int16] 32767[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:683 multiply[compile-time] 32767[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -1;
endcode
varvalue r -32767

$overflow on
code auto:684 multiply[Int16] 32767[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:685 multiply[compile-time] 32767[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:686 multiply[Int16] 32767[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:687 multiply[compile-time] 32767[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:688 multiply[Int16] 32767[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:689 multiply[compile-time] 32767[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:690 multiply[Int16] 32767[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:691 multiply[compile-time] 32767[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:692 multiply[Int16] 32767[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:693 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:694 multiply[Int16] -32768[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:695 multiply[compile-time] -32768[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:696 multiply[Int16] -32768[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:697 multiply[compile-time] -32768[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 1;
endcode
varvalue r -32768

$overflow on
code auto:698 multiply[Int16] -32768[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:699 multiply[compile-time] -32768[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:700 multiply[Int16] -32768[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:701 multiply[compile-time] -32768[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:702 multiply[Int16] -32768[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:703 multiply[compile-time] -32768[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 255;
endcode
compile error

$overflow on
code auto:704 multiply[Int16] -32767[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:705 multiply[compile-time] -32767[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:706 multiply[Int16] -32767[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:707 multiply[compile-time] -32767[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 1;
endcode
varvalue r -32767

$overflow on
code auto:708 multiply[Int16] -32767[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:709 multiply[compile-time] -32767[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:710 multiply[Int16] -32767[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:711 multiply[compile-time] -32767[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:712 multiply[Int16] -32767[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:713 multiply[compile-time] -32767[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 255;
endcode
compile error

$overflow on
code auto:714 multiply[Int16] -129[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:715 multiply[compile-time] -129[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:716 multiply[Int16] -129[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:717 multiply[compile-time] -129[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 1;
endcode
varvalue r -129

$overflow on
code auto:718 multiply[Int16] -129[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:719 multiply[compile-time] -129[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 127;
endcode
varvalue r -16383

$overflow on
code auto:720 multiply[Int16] -129[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:721 multiply[compile-time] -129[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 128;
endcode
varvalue r -16512

$overflow on
code auto:722 multiply[Int16] -129[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:723 multiply[compile-time] -129[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 255;
endcode
compile error

$overflow on
code auto:724 multiply[Int16] -128[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:725 multiply[compile-time] -128[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:726 multiply[Int16] -128[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:727 multiply[compile-time] -128[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:728 multiply[Int16] -128[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:729 multiply[compile-time] -128[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:730 multiply[Int16] -128[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:731 multiply[compile-time] -128[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 128;
endcode
varvalue r -16384

$overflow on
code auto:732 multiply[Int16] -128[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:733 multiply[compile-time] -128[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 255;
endcode
varvalue r -32640

$overflow on
code auto:734 multiply[Int16] -1[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:735 multiply[compile-time] -1[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:736 multiply[Int16] -1[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:737 multiply[compile-time] -1[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:738 multiply[Int16] -1[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:739 multiply[compile-time] -1[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:740 multiply[Int16] -1[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:741 multiply[compile-time] -1[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 128;
endcode
varvalue r -128

$overflow on
code auto:742 multiply[Int16] -1[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:743 multiply[compile-time] -1[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 255;
endcode
varvalue r -255

$overflow on
code auto:744 multiply[Int16] 0[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:745 multiply[compile-time] 0[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:746 multiply[Int16] 0[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:747 multiply[compile-time] 0[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:748 multiply[Int16] 0[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:749 multiply[compile-time] 0[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:750 multiply[Int16] 0[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:751 multiply[compile-time] 0[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:752 multiply[Int16] 0[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:753 multiply[compile-time] 0[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:754 multiply[Int16] 1[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:755 multiply[compile-time] 1[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:756 multiply[Int16] 1[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:757 multiply[compile-time] 1[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:758 multiply[Int16] 1[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:759 multiply[compile-time] 1[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:760 multiply[Int16] 1[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:761 multiply[compile-time] 1[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:762 multiply[Int16] 1[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:763 multiply[compile-time] 1[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:764 multiply[Int16] 127[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:765 multiply[compile-time] 127[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:766 multiply[Int16] 127[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:767 multiply[compile-time] 127[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:768 multiply[Int16] 127[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:769 multiply[compile-time] 127[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:770 multiply[Int16] 127[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:771 multiply[compile-time] 127[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:772 multiply[Int16] 127[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:773 multiply[compile-time] 127[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:774 multiply[Int16] 128[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:775 multiply[compile-time] 128[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:776 multiply[Int16] 128[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:777 multiply[compile-time] 128[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:778 multiply[Int16] 128[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:779 multiply[compile-time] 128[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:780 multiply[Int16] 128[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:781 multiply[compile-time] 128[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow on
code auto:782 multiply[Int16] 128[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32640

code auto:783 multiply[compile-time] 128[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow on
code auto:784 multiply[Int16] 32767[Int16], 0[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:785 multiply[compile-time] 32767[Int16], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:786 multiply[Int16] 32767[Int16], 1[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:787 multiply[compile-time] 32767[Int16], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:788 multiply[Int16] 32767[Int16], 127[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:789 multiply[compile-time] 32767[Int16], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:790 multiply[Int16] 32767[Int16], 128[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:791 multiply[compile-time] 32767[Int16], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:792 multiply[Int16] 32767[Int16], 255[Byte] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:793 multiply[compile-time] 32767[Int16], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:794 multiply[Int16] -32768[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:795 multiply[compile-time] -32768[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:796 multiply[Int16] -32768[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:797 multiply[compile-time] -32768[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 255;
endcode
compile error

$overflow on
code auto:798 multiply[Int16] -32768[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:799 multiply[compile-time] -32768[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:800 multiply[Int16] -32768[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:801 multiply[compile-time] -32768[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 32768;
endcode
compile error

$overflow on
code auto:802 multiply[Int16] -32768[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:803 multiply[compile-time] -32768[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 65535;
endcode
compile error

$overflow on
code auto:804 multiply[Int16] -32767[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:805 multiply[compile-time] -32767[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:806 multiply[Int16] -32767[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:807 multiply[compile-time] -32767[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 255;
endcode
compile error

$overflow on
code auto:808 multiply[Int16] -32767[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:809 multiply[compile-time] -32767[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:810 multiply[Int16] -32767[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:811 multiply[compile-time] -32767[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 32768;
endcode
compile error

$overflow on
code auto:812 multiply[Int16] -32767[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:813 multiply[compile-time] -32767[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 65535;
endcode
compile error

$overflow on
code auto:814 multiply[Int16] -129[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:815 multiply[compile-time] -129[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:816 multiply[Int16] -129[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:817 multiply[compile-time] -129[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 255;
endcode
compile error

$overflow on
code auto:818 multiply[Int16] -129[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:819 multiply[compile-time] -129[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:820 multiply[Int16] -129[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:821 multiply[compile-time] -129[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 32768;
endcode
compile error

$overflow on
code auto:822 multiply[Int16] -129[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:823 multiply[compile-time] -129[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 65535;
endcode
compile error

$overflow on
code auto:824 multiply[Int16] -128[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:825 multiply[compile-time] -128[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:826 multiply[Int16] -128[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:827 multiply[compile-time] -128[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 255;
endcode
varvalue r -32640

$overflow on
code auto:828 multiply[Int16] -128[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:829 multiply[compile-time] -128[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:830 multiply[Int16] -128[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:831 multiply[compile-time] -128[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32768;
endcode
compile error

$overflow on
code auto:832 multiply[Int16] -128[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:833 multiply[compile-time] -128[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 65535;
endcode
compile error

$overflow on
code auto:834 multiply[Int16] -1[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:835 multiply[compile-time] -1[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:836 multiply[Int16] -1[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:837 multiply[compile-time] -1[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 255;
endcode
varvalue r -255

$overflow on
code auto:838 multiply[Int16] -1[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:839 multiply[compile-time] -1[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32767;
endcode
varvalue r -32767

$overflow on
code auto:840 multiply[Int16] -1[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:841 multiply[compile-time] -1[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32768;
endcode
varvalue r -32768

$overflow on
code auto:842 multiply[Int16] -1[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:843 multiply[compile-time] -1[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 65535;
endcode
compile error

$overflow on
code auto:844 multiply[Int16] 0[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:845 multiply[compile-time] 0[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:846 multiply[Int16] 0[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:847 multiply[compile-time] 0[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:848 multiply[Int16] 0[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:849 multiply[compile-time] 0[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:850 multiply[Int16] 0[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:851 multiply[compile-time] 0[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:852 multiply[Int16] 0[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:853 multiply[compile-time] 0[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:854 multiply[Int16] 1[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:855 multiply[compile-time] 1[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:856 multiply[Int16] 1[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:857 multiply[compile-time] 1[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:858 multiply[Int16] 1[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:859 multiply[compile-time] 1[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:860 multiply[Int16] 1[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:861 multiply[compile-time] 1[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32768;
endcode
compile error

$overflow on
code auto:862 multiply[Int16] 1[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:863 multiply[compile-time] 1[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 65535;
endcode
compile error

$overflow on
code auto:864 multiply[Int16] 127[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:865 multiply[compile-time] 127[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:866 multiply[Int16] 127[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:867 multiply[compile-time] 127[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:868 multiply[Int16] 127[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:869 multiply[compile-time] 127[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:870 multiply[Int16] 127[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:871 multiply[compile-time] 127[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:872 multiply[Int16] 127[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:873 multiply[compile-time] 127[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:874 multiply[Int16] 128[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:875 multiply[compile-time] 128[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:876 multiply[Int16] 128[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32640

code auto:877 multiply[compile-time] 128[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow on
code auto:878 multiply[Int16] 128[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:879 multiply[compile-time] 128[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:880 multiply[Int16] 128[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:881 multiply[compile-time] 128[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 32768;
endcode
compile error

$overflow on
code auto:882 multiply[Int16] 128[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:883 multiply[compile-time] 128[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 65535;
endcode
compile error

$overflow on
code auto:884 multiply[Int16] 32767[Int16], 0[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:885 multiply[compile-time] 32767[Int16], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:886 multiply[Int16] 32767[Int16], 255[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:887 multiply[compile-time] 32767[Int16], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:888 multiply[Int16] 32767[Int16], 32767[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:889 multiply[compile-time] 32767[Int16], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:890 multiply[Int16] 32767[Int16], 32768[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:891 multiply[compile-time] 32767[Int16], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:892 multiply[Int16] 32767[Int16], 65535[Word] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:893 multiply[compile-time] 32767[Int16], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:894 multiply[Pointer] -32768[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:895 multiply[compile-time] -32768[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:896 multiply[Pointer] -32768[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:897 multiply[compile-time] -32768[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 * 255;
endcode
compile error

$overflow on
code auto:898 multiply[Pointer] -32768[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:899 multiply[compile-time] -32768[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:900 multiply[Pointer] -32768[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:901 multiply[compile-time] -32768[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 * 32768;
endcode
compile error

$overflow on
code auto:902 multiply[Pointer] -32768[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:903 multiply[compile-time] -32768[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 * 65535;
endcode
compile error

$overflow on
code auto:904 multiply[Pointer] -32767[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:905 multiply[compile-time] -32767[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:906 multiply[Pointer] -32767[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:907 multiply[compile-time] -32767[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 * 255;
endcode
compile error

$overflow on
code auto:908 multiply[Pointer] -32767[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:909 multiply[compile-time] -32767[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:910 multiply[Pointer] -32767[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:911 multiply[compile-time] -32767[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 * 32768;
endcode
compile error

$overflow on
code auto:912 multiply[Pointer] -32767[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:913 multiply[compile-time] -32767[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 * 65535;
endcode
compile error

$overflow on
code auto:914 multiply[Pointer] -129[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:915 multiply[compile-time] -129[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:916 multiply[Pointer] -129[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:917 multiply[compile-time] -129[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 * 255;
endcode
compile error

$overflow on
code auto:918 multiply[Pointer] -129[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:919 multiply[compile-time] -129[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:920 multiply[Pointer] -129[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:921 multiply[compile-time] -129[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 * 32768;
endcode
compile error

$overflow on
code auto:922 multiply[Pointer] -129[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:923 multiply[compile-time] -129[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 * 65535;
endcode
compile error

$overflow on
code auto:924 multiply[Pointer] -128[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:925 multiply[compile-time] -128[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:926 multiply[Pointer] -128[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:927 multiply[compile-time] -128[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 255;
endcode
compile error

$overflow on
code auto:928 multiply[Pointer] -128[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:929 multiply[compile-time] -128[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:930 multiply[Pointer] -128[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:931 multiply[compile-time] -128[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 32768;
endcode
compile error

$overflow on
code auto:932 multiply[Pointer] -128[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:933 multiply[compile-time] -128[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 * 65535;
endcode
compile error

$overflow on
code auto:934 multiply[Pointer] -1[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:935 multiply[compile-time] -1[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:936 multiply[Pointer] -1[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:937 multiply[compile-time] -1[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 255;
endcode
compile error

$overflow on
code auto:938 multiply[Pointer] -1[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:939 multiply[compile-time] -1[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 32767;
endcode
compile error

$overflow on
code auto:940 multiply[Pointer] -1[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:941 multiply[compile-time] -1[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 32768;
endcode
compile error

$overflow on
code auto:942 multiply[Pointer] -1[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:943 multiply[compile-time] -1[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 * 65535;
endcode
compile error

$overflow on
code auto:944 multiply[Pointer] 0[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:945 multiply[compile-time] 0[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:946 multiply[Pointer] 0[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:947 multiply[compile-time] 0[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:948 multiply[Pointer] 0[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:949 multiply[compile-time] 0[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:950 multiply[Pointer] 0[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:951 multiply[compile-time] 0[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:952 multiply[Pointer] 0[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:953 multiply[compile-time] 0[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:954 multiply[Pointer] 1[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:955 multiply[compile-time] 1[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:956 multiply[Pointer] 1[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:957 multiply[compile-time] 1[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:958 multiply[Pointer] 1[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:959 multiply[compile-time] 1[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:960 multiply[Pointer] 1[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:961 multiply[compile-time] 1[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32768;
endcode
varvalue r 32768

$overflow on
code auto:962 multiply[Pointer] 1[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:963 multiply[compile-time] 1[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 65535;
endcode
varvalue r 65535

$overflow on
code auto:964 multiply[Pointer] 127[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:965 multiply[compile-time] 127[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:966 multiply[Pointer] 127[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:967 multiply[compile-time] 127[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:968 multiply[Pointer] 127[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:969 multiply[compile-time] 127[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:970 multiply[Pointer] 127[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:971 multiply[compile-time] 127[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:972 multiply[Pointer] 127[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:973 multiply[compile-time] 127[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:974 multiply[Pointer] 128[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:975 multiply[compile-time] 128[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:976 multiply[Pointer] 128[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32640

code auto:977 multiply[compile-time] 128[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow on
code auto:978 multiply[Pointer] 128[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:979 multiply[compile-time] 128[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:980 multiply[Pointer] 128[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:981 multiply[compile-time] 128[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 32768;
endcode
compile error

$overflow on
code auto:982 multiply[Pointer] 128[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:983 multiply[compile-time] 128[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 65535;
endcode
compile error

$overflow on
code auto:984 multiply[Pointer] 32767[Int16], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:985 multiply[compile-time] 32767[Int16], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:986 multiply[Pointer] 32767[Int16], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:987 multiply[compile-time] 32767[Int16], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:988 multiply[Pointer] 32767[Int16], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:989 multiply[compile-time] 32767[Int16], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:990 multiply[Pointer] 32767[Int16], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:991 multiply[compile-time] 32767[Int16], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:992 multiply[Pointer] 32767[Int16], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:993 multiply[compile-time] 32767[Int16], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:994 multiply[Int16] 0[Byte], -128[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:995 multiply[compile-time] 0[Byte], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:996 multiply[Int16] 0[Byte], -127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:997 multiply[compile-time] 0[Byte], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:998 multiply[Int16] 0[Byte], -1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:999 multiply[compile-time] 0[Byte], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1000 multiply[Int16] 0[Byte], 0[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1001 multiply[compile-time] 0[Byte], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1002 multiply[Int16] 0[Byte], 1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1003 multiply[compile-time] 0[Byte], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1004 multiply[Int16] 0[Byte], 127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1005 multiply[compile-time] 0[Byte], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1006 multiply[Int16] 1[Byte], -128[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:1007 multiply[compile-time] 1[Byte], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:1008 multiply[Int16] 1[Byte], -127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:1009 multiply[compile-time] 1[Byte], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -127;
endcode
varvalue r -127

$overflow on
code auto:1010 multiply[Int16] 1[Byte], -1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:1011 multiply[compile-time] 1[Byte], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:1012 multiply[Int16] 1[Byte], 0[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1013 multiply[compile-time] 1[Byte], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1014 multiply[Int16] 1[Byte], 1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:1015 multiply[compile-time] 1[Byte], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:1016 multiply[Int16] 1[Byte], 127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:1017 multiply[compile-time] 1[Byte], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:1018 multiply[Int16] 127[Byte], -128[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:1019 multiply[compile-time] 127[Byte], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:1020 multiply[Int16] 127[Byte], -127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:1021 multiply[compile-time] 127[Byte], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -127;
endcode
varvalue r -16129

$overflow on
code auto:1022 multiply[Int16] 127[Byte], -1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:1023 multiply[compile-time] 127[Byte], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:1024 multiply[Int16] 127[Byte], 0[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1025 multiply[compile-time] 127[Byte], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1026 multiply[Int16] 127[Byte], 1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:1027 multiply[compile-time] 127[Byte], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:1028 multiply[Int16] 127[Byte], 127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:1029 multiply[compile-time] 127[Byte], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:1030 multiply[Int16] 128[Byte], -128[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:1031 multiply[compile-time] 128[Byte], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -128;
endcode
varvalue r -16384

$overflow on
code auto:1032 multiply[Int16] 128[Byte], -127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:1033 multiply[compile-time] 128[Byte], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -127;
endcode
varvalue r -16256

$overflow on
code auto:1034 multiply[Int16] 128[Byte], -1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:1035 multiply[compile-time] 128[Byte], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -1;
endcode
varvalue r -128

$overflow on
code auto:1036 multiply[Int16] 128[Byte], 0[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1037 multiply[compile-time] 128[Byte], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1038 multiply[Int16] 128[Byte], 1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:1039 multiply[compile-time] 128[Byte], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:1040 multiply[Int16] 128[Byte], 127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:1041 multiply[compile-time] 128[Byte], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:1042 multiply[Int16] 255[Byte], -128[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:1043 multiply[compile-time] 255[Byte], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -128;
endcode
varvalue r -32640

$overflow on
code auto:1044 multiply[Int16] 255[Byte], -127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32385

code auto:1045 multiply[compile-time] 255[Byte], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -127;
endcode
varvalue r -32385

$overflow on
code auto:1046 multiply[Int16] 255[Byte], -1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:1047 multiply[compile-time] 255[Byte], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -1;
endcode
varvalue r -255

$overflow on
code auto:1048 multiply[Int16] 255[Byte], 0[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1049 multiply[compile-time] 255[Byte], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1050 multiply[Int16] 255[Byte], 1[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:1051 multiply[compile-time] 255[Byte], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1052 multiply[Int16] 255[Byte], 127[Int8] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:1053 multiply[compile-time] 255[Byte], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1054 multiply[Int16] 0[Byte], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1055 multiply[compile-time] 0[Byte], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:1056 multiply[Int16] 0[Byte], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1057 multiply[compile-time] 0[Byte], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:1058 multiply[Int16] 0[Byte], -129[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1059 multiply[compile-time] 0[Byte], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:1060 multiply[Int16] 0[Byte], -128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1061 multiply[compile-time] 0[Byte], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1062 multiply[Int16] 0[Byte], -1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1063 multiply[compile-time] 0[Byte], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1064 multiply[Int16] 0[Byte], 0[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1065 multiply[compile-time] 0[Byte], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1066 multiply[Int16] 0[Byte], 1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1067 multiply[compile-time] 0[Byte], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1068 multiply[Int16] 0[Byte], 127[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1069 multiply[compile-time] 0[Byte], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1070 multiply[Int16] 0[Byte], 128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1071 multiply[compile-time] 0[Byte], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1072 multiply[Int16] 0[Byte], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1073 multiply[compile-time] 0[Byte], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1074 multiply[Int16] 1[Byte], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:1075 multiply[compile-time] 1[Byte], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32768;
endcode
varvalue r -32768

$overflow on
code auto:1076 multiply[Int16] 1[Byte], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:1077 multiply[compile-time] 1[Byte], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32767;
endcode
varvalue r -32767

$overflow on
code auto:1078 multiply[Int16] 1[Byte], -129[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:1079 multiply[compile-time] 1[Byte], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -129;
endcode
varvalue r -129

$overflow on
code auto:1080 multiply[Int16] 1[Byte], -128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:1081 multiply[compile-time] 1[Byte], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:1082 multiply[Int16] 1[Byte], -1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:1083 multiply[compile-time] 1[Byte], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:1084 multiply[Int16] 1[Byte], 0[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1085 multiply[compile-time] 1[Byte], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1086 multiply[Int16] 1[Byte], 1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:1087 multiply[compile-time] 1[Byte], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:1088 multiply[Int16] 1[Byte], 127[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:1089 multiply[compile-time] 1[Byte], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:1090 multiply[Int16] 1[Byte], 128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:1091 multiply[compile-time] 1[Byte], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:1092 multiply[Int16] 1[Byte], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:1093 multiply[compile-time] 1[Byte], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:1094 multiply[Int16] 127[Byte], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1095 multiply[compile-time] 127[Byte], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:1096 multiply[Int16] 127[Byte], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1097 multiply[compile-time] 127[Byte], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:1098 multiply[Int16] 127[Byte], -129[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:1099 multiply[compile-time] 127[Byte], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -129;
endcode
varvalue r -16383

$overflow on
code auto:1100 multiply[Int16] 127[Byte], -128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:1101 multiply[compile-time] 127[Byte], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:1102 multiply[Int16] 127[Byte], -1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:1103 multiply[compile-time] 127[Byte], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:1104 multiply[Int16] 127[Byte], 0[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1105 multiply[compile-time] 127[Byte], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1106 multiply[Int16] 127[Byte], 1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:1107 multiply[compile-time] 127[Byte], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:1108 multiply[Int16] 127[Byte], 127[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:1109 multiply[compile-time] 127[Byte], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:1110 multiply[Int16] 127[Byte], 128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:1111 multiply[compile-time] 127[Byte], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:1112 multiply[Int16] 127[Byte], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1113 multiply[compile-time] 127[Byte], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:1114 multiply[Int16] 128[Byte], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1115 multiply[compile-time] 128[Byte], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:1116 multiply[Int16] 128[Byte], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1117 multiply[compile-time] 128[Byte], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:1118 multiply[Int16] 128[Byte], -129[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:1119 multiply[compile-time] 128[Byte], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -129;
endcode
varvalue r -16512

$overflow on
code auto:1120 multiply[Int16] 128[Byte], -128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:1121 multiply[compile-time] 128[Byte], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -128;
endcode
varvalue r -16384

$overflow on
code auto:1122 multiply[Int16] 128[Byte], -1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:1123 multiply[compile-time] 128[Byte], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -1;
endcode
varvalue r -128

$overflow on
code auto:1124 multiply[Int16] 128[Byte], 0[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1125 multiply[compile-time] 128[Byte], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1126 multiply[Int16] 128[Byte], 1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:1127 multiply[compile-time] 128[Byte], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:1128 multiply[Int16] 128[Byte], 127[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:1129 multiply[compile-time] 128[Byte], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:1130 multiply[Int16] 128[Byte], 128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:1131 multiply[compile-time] 128[Byte], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow on
code auto:1132 multiply[Int16] 128[Byte], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1133 multiply[compile-time] 128[Byte], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:1134 multiply[Int16] 255[Byte], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1135 multiply[compile-time] 255[Byte], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -32768;
endcode
compile error

$overflow on
code auto:1136 multiply[Int16] 255[Byte], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1137 multiply[compile-time] 255[Byte], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -32767;
endcode
compile error

$overflow on
code auto:1138 multiply[Int16] 255[Byte], -129[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1139 multiply[compile-time] 255[Byte], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -129;
endcode
compile error

$overflow on
code auto:1140 multiply[Int16] 255[Byte], -128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:1141 multiply[compile-time] 255[Byte], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -128;
endcode
varvalue r -32640

$overflow on
code auto:1142 multiply[Int16] 255[Byte], -1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:1143 multiply[compile-time] 255[Byte], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -1;
endcode
varvalue r -255

$overflow on
code auto:1144 multiply[Int16] 255[Byte], 0[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1145 multiply[compile-time] 255[Byte], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1146 multiply[Int16] 255[Byte], 1[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:1147 multiply[compile-time] 255[Byte], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1148 multiply[Int16] 255[Byte], 127[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:1149 multiply[compile-time] 255[Byte], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1150 multiply[Int16] 255[Byte], 128[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32640

code auto:1151 multiply[compile-time] 255[Byte], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow on
code auto:1152 multiply[Int16] 255[Byte], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1153 multiply[compile-time] 255[Byte], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1154 multiply[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1155 multiply[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1156 multiply[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1157 multiply[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1158 multiply[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1159 multiply[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1160 multiply[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1161 multiply[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1162 multiply[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1163 multiply[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1164 multiply[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1165 multiply[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1166 multiply[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:1167 multiply[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:1168 multiply[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:1169 multiply[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:1170 multiply[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:1171 multiply[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:1172 multiply[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 255

code auto:1173 multiply[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:1174 multiply[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1175 multiply[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1176 multiply[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:1177 multiply[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:1178 multiply[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1179 multiply[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:1180 multiply[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1181 multiply[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 128;
endcode
compile error

$overflow on
code auto:1182 multiply[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1183 multiply[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 255;
endcode
compile error

$overflow on
code auto:1184 multiply[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1185 multiply[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1186 multiply[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:1187 multiply[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:1188 multiply[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1189 multiply[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 127;
endcode
compile error

$overflow on
code auto:1190 multiply[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1191 multiply[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 128;
endcode
compile error

$overflow on
code auto:1192 multiply[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1193 multiply[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 255;
endcode
compile error

$overflow on
code auto:1194 multiply[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:1195 multiply[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1196 multiply[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 255

code auto:1197 multiply[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1198 multiply[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1199 multiply[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 127;
endcode
compile error

$overflow on
code auto:1200 multiply[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1201 multiply[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 128;
endcode
compile error

$overflow on
code auto:1202 multiply[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:1203 multiply[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:1204 multiply[Word] 0[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1205 multiply[compile-time] 0[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1206 multiply[Word] 0[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1207 multiply[compile-time] 0[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1208 multiply[Word] 0[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1209 multiply[compile-time] 0[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1210 multiply[Word] 0[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1211 multiply[compile-time] 0[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1212 multiply[Word] 0[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1213 multiply[compile-time] 0[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1214 multiply[Word] 1[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1215 multiply[compile-time] 1[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1216 multiply[Word] 1[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 255

code auto:1217 multiply[compile-time] 1[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:1218 multiply[Word] 1[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:1219 multiply[compile-time] 1[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:1220 multiply[Word] 1[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32768

code auto:1221 multiply[compile-time] 1[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 32768;
endcode
varvalue r 32768

$overflow on
code auto:1222 multiply[Word] 1[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65535

code auto:1223 multiply[compile-time] 1[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 65535;
endcode
varvalue r 65535

$overflow on
code auto:1224 multiply[Word] 127[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1225 multiply[compile-time] 127[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1226 multiply[Word] 127[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32385

code auto:1227 multiply[compile-time] 127[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:1228 multiply[Word] 127[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1229 multiply[compile-time] 127[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:1230 multiply[Word] 127[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1231 multiply[compile-time] 127[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:1232 multiply[Word] 127[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1233 multiply[compile-time] 127[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:1234 multiply[Word] 128[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1235 multiply[compile-time] 128[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1236 multiply[Word] 128[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32640

code auto:1237 multiply[compile-time] 128[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow on
code auto:1238 multiply[Word] 128[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1239 multiply[compile-time] 128[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:1240 multiply[Word] 128[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1241 multiply[compile-time] 128[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 32768;
endcode
compile error

$overflow on
code auto:1242 multiply[Word] 128[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1243 multiply[compile-time] 128[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 65535;
endcode
compile error

$overflow on
code auto:1244 multiply[Word] 255[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1245 multiply[compile-time] 255[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1246 multiply[Word] 255[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65025

code auto:1247 multiply[compile-time] 255[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1248 multiply[Word] 255[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1249 multiply[compile-time] 255[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1250 multiply[Word] 255[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1251 multiply[compile-time] 255[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1252 multiply[Word] 255[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1253 multiply[compile-time] 255[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1254 multiply[Pointer] 0[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1255 multiply[compile-time] 0[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1256 multiply[Pointer] 0[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1257 multiply[compile-time] 0[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1258 multiply[Pointer] 0[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1259 multiply[compile-time] 0[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1260 multiply[Pointer] 0[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1261 multiply[compile-time] 0[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1262 multiply[Pointer] 0[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1263 multiply[compile-time] 0[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1264 multiply[Pointer] 1[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1265 multiply[compile-time] 1[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1266 multiply[Pointer] 1[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:1267 multiply[compile-time] 1[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:1268 multiply[Pointer] 1[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:1269 multiply[compile-time] 1[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:1270 multiply[Pointer] 1[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:1271 multiply[compile-time] 1[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 32768;
endcode
varvalue r 32768

$overflow on
code auto:1272 multiply[Pointer] 1[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:1273 multiply[compile-time] 1[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 * 65535;
endcode
varvalue r 65535

$overflow on
code auto:1274 multiply[Pointer] 127[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1275 multiply[compile-time] 127[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1276 multiply[Pointer] 127[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:1277 multiply[compile-time] 127[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow on
code auto:1278 multiply[Pointer] 127[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1279 multiply[compile-time] 127[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:1280 multiply[Pointer] 127[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1281 multiply[compile-time] 127[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 32768;
endcode
compile error

$overflow on
code auto:1282 multiply[Pointer] 127[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1283 multiply[compile-time] 127[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 * 65535;
endcode
compile error

$overflow on
code auto:1284 multiply[Pointer] 128[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1285 multiply[compile-time] 128[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1286 multiply[Pointer] 128[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32640

code auto:1287 multiply[compile-time] 128[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow on
code auto:1288 multiply[Pointer] 128[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1289 multiply[compile-time] 128[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:1290 multiply[Pointer] 128[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1291 multiply[compile-time] 128[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 32768;
endcode
compile error

$overflow on
code auto:1292 multiply[Pointer] 128[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1293 multiply[compile-time] 128[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 * 65535;
endcode
compile error

$overflow on
code auto:1294 multiply[Pointer] 255[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1295 multiply[compile-time] 255[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1296 multiply[Pointer] 255[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65025

code auto:1297 multiply[compile-time] 255[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1298 multiply[Pointer] 255[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1299 multiply[compile-time] 255[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1300 multiply[Pointer] 255[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1301 multiply[compile-time] 255[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1302 multiply[Pointer] 255[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1303 multiply[compile-time] 255[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1304 multiply[Int16] 0[Word], -128[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1305 multiply[compile-time] 0[Word], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1306 multiply[Int16] 0[Word], -127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1307 multiply[compile-time] 0[Word], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:1308 multiply[Int16] 0[Word], -1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1309 multiply[compile-time] 0[Word], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1310 multiply[Int16] 0[Word], 0[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1311 multiply[compile-time] 0[Word], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1312 multiply[Int16] 0[Word], 1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1313 multiply[compile-time] 0[Word], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1314 multiply[Int16] 0[Word], 127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1315 multiply[compile-time] 0[Word], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1316 multiply[Int16] 255[Word], -128[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:1317 multiply[compile-time] 255[Word], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -128;
endcode
varvalue r -32640

$overflow on
code auto:1318 multiply[Int16] 255[Word], -127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32385

code auto:1319 multiply[compile-time] 255[Word], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -127;
endcode
varvalue r -32385

$overflow on
code auto:1320 multiply[Int16] 255[Word], -1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:1321 multiply[compile-time] 255[Word], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -1;
endcode
varvalue r -255

$overflow on
code auto:1322 multiply[Int16] 255[Word], 0[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1323 multiply[compile-time] 255[Word], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1324 multiply[Int16] 255[Word], 1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:1325 multiply[compile-time] 255[Word], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1326 multiply[Int16] 255[Word], 127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:1327 multiply[compile-time] 255[Word], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1328 multiply[Int16] 32767[Word], -128[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1329 multiply[compile-time] 32767[Word], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:1330 multiply[Int16] 32767[Word], -127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1331 multiply[compile-time] 32767[Word], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -127;
endcode
compile error

$overflow on
code auto:1332 multiply[Int16] 32767[Word], -1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:1333 multiply[compile-time] 32767[Word], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -1;
endcode
varvalue r -32767

$overflow on
code auto:1334 multiply[Int16] 32767[Word], 0[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1335 multiply[compile-time] 32767[Word], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1336 multiply[Int16] 32767[Word], 1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:1337 multiply[compile-time] 32767[Word], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1338 multiply[Int16] 32767[Word], 127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1339 multiply[compile-time] 32767[Word], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1340 multiply[Int16] 32768[Word], -128[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1341 multiply[compile-time] 32768[Word], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -128;
endcode
compile error

$overflow on
code auto:1342 multiply[Int16] 32768[Word], -127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1343 multiply[compile-time] 32768[Word], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -127;
endcode
compile error

$overflow on
code auto:1344 multiply[Int16] 32768[Word], -1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:1345 multiply[compile-time] 32768[Word], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -1;
endcode
varvalue r -32768

$overflow on
code auto:1346 multiply[Int16] 32768[Word], 0[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1347 multiply[compile-time] 32768[Word], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1348 multiply[Int16] 32768[Word], 1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1349 multiply[compile-time] 32768[Word], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 1;
endcode
compile error

$overflow on
code auto:1350 multiply[Int16] 32768[Word], 127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1351 multiply[compile-time] 32768[Word], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1352 multiply[Int16] 65535[Word], -128[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1353 multiply[compile-time] 65535[Word], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -128;
endcode
compile error

$overflow on
code auto:1354 multiply[Int16] 65535[Word], -127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1355 multiply[compile-time] 65535[Word], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -127;
endcode
compile error

$overflow on
code auto:1356 multiply[Int16] 65535[Word], -1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1357 multiply[compile-time] 65535[Word], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -1;
endcode
compile error

$overflow on
code auto:1358 multiply[Int16] 65535[Word], 0[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1359 multiply[compile-time] 65535[Word], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1360 multiply[Int16] 65535[Word], 1[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1361 multiply[compile-time] 65535[Word], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 1;
endcode
compile error

$overflow on
code auto:1362 multiply[Int16] 65535[Word], 127[Int8] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1363 multiply[compile-time] 65535[Word], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1364 multiply[Int16] 0[Word], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1365 multiply[compile-time] 0[Word], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:1366 multiply[Int16] 0[Word], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1367 multiply[compile-time] 0[Word], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:1368 multiply[Int16] 0[Word], -129[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1369 multiply[compile-time] 0[Word], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:1370 multiply[Int16] 0[Word], -128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1371 multiply[compile-time] 0[Word], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1372 multiply[Int16] 0[Word], -1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1373 multiply[compile-time] 0[Word], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1374 multiply[Int16] 0[Word], 0[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1375 multiply[compile-time] 0[Word], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1376 multiply[Int16] 0[Word], 1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1377 multiply[compile-time] 0[Word], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1378 multiply[Int16] 0[Word], 127[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1379 multiply[compile-time] 0[Word], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1380 multiply[Int16] 0[Word], 128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1381 multiply[compile-time] 0[Word], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1382 multiply[Int16] 0[Word], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1383 multiply[compile-time] 0[Word], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1384 multiply[Int16] 255[Word], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1385 multiply[compile-time] 255[Word], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -32768;
endcode
compile error

$overflow on
code auto:1386 multiply[Int16] 255[Word], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1387 multiply[compile-time] 255[Word], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -32767;
endcode
compile error

$overflow on
code auto:1388 multiply[Int16] 255[Word], -129[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1389 multiply[compile-time] 255[Word], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -129;
endcode
compile error

$overflow on
code auto:1390 multiply[Int16] 255[Word], -128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32640

code auto:1391 multiply[compile-time] 255[Word], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -128;
endcode
varvalue r -32640

$overflow on
code auto:1392 multiply[Int16] 255[Word], -1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -255

code auto:1393 multiply[compile-time] 255[Word], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * -1;
endcode
varvalue r -255

$overflow on
code auto:1394 multiply[Int16] 255[Word], 0[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1395 multiply[compile-time] 255[Word], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1396 multiply[Int16] 255[Word], 1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:1397 multiply[compile-time] 255[Word], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1398 multiply[Int16] 255[Word], 127[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32385

code auto:1399 multiply[compile-time] 255[Word], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1400 multiply[Int16] 255[Word], 128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32640

code auto:1401 multiply[compile-time] 255[Word], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow on
code auto:1402 multiply[Int16] 255[Word], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1403 multiply[compile-time] 255[Word], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1404 multiply[Int16] 32767[Word], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1405 multiply[compile-time] 32767[Word], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:1406 multiply[Int16] 32767[Word], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1407 multiply[compile-time] 32767[Word], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:1408 multiply[Int16] 32767[Word], -129[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1409 multiply[compile-time] 32767[Word], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:1410 multiply[Int16] 32767[Word], -128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1411 multiply[compile-time] 32767[Word], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:1412 multiply[Int16] 32767[Word], -1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:1413 multiply[compile-time] 32767[Word], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -1;
endcode
varvalue r -32767

$overflow on
code auto:1414 multiply[Int16] 32767[Word], 0[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1415 multiply[compile-time] 32767[Word], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1416 multiply[Int16] 32767[Word], 1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:1417 multiply[compile-time] 32767[Word], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1418 multiply[Int16] 32767[Word], 127[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1419 multiply[compile-time] 32767[Word], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1420 multiply[Int16] 32767[Word], 128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1421 multiply[compile-time] 32767[Word], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:1422 multiply[Int16] 32767[Word], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1423 multiply[compile-time] 32767[Word], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1424 multiply[Int16] 32768[Word], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1425 multiply[compile-time] 32768[Word], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -32768;
endcode
compile error

$overflow on
code auto:1426 multiply[Int16] 32768[Word], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1427 multiply[compile-time] 32768[Word], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -32767;
endcode
compile error

$overflow on
code auto:1428 multiply[Int16] 32768[Word], -129[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1429 multiply[compile-time] 32768[Word], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -129;
endcode
compile error

$overflow on
code auto:1430 multiply[Int16] 32768[Word], -128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1431 multiply[compile-time] 32768[Word], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -128;
endcode
compile error

$overflow on
code auto:1432 multiply[Int16] 32768[Word], -1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:1433 multiply[compile-time] 32768[Word], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * -1;
endcode
varvalue r -32768

$overflow on
code auto:1434 multiply[Int16] 32768[Word], 0[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1435 multiply[compile-time] 32768[Word], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1436 multiply[Int16] 32768[Word], 1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1437 multiply[compile-time] 32768[Word], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 1;
endcode
compile error

$overflow on
code auto:1438 multiply[Int16] 32768[Word], 127[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1439 multiply[compile-time] 32768[Word], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1440 multiply[Int16] 32768[Word], 128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1441 multiply[compile-time] 32768[Word], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 128;
endcode
compile error

$overflow on
code auto:1442 multiply[Int16] 32768[Word], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1443 multiply[compile-time] 32768[Word], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1444 multiply[Int16] 65535[Word], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1445 multiply[compile-time] 65535[Word], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -32768;
endcode
compile error

$overflow on
code auto:1446 multiply[Int16] 65535[Word], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1447 multiply[compile-time] 65535[Word], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -32767;
endcode
compile error

$overflow on
code auto:1448 multiply[Int16] 65535[Word], -129[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1449 multiply[compile-time] 65535[Word], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -129;
endcode
compile error

$overflow on
code auto:1450 multiply[Int16] 65535[Word], -128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1451 multiply[compile-time] 65535[Word], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -128;
endcode
compile error

$overflow on
code auto:1452 multiply[Int16] 65535[Word], -1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1453 multiply[compile-time] 65535[Word], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * -1;
endcode
compile error

$overflow on
code auto:1454 multiply[Int16] 65535[Word], 0[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:1455 multiply[compile-time] 65535[Word], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1456 multiply[Int16] 65535[Word], 1[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1457 multiply[compile-time] 65535[Word], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 1;
endcode
compile error

$overflow on
code auto:1458 multiply[Int16] 65535[Word], 127[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1459 multiply[compile-time] 65535[Word], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1460 multiply[Int16] 65535[Word], 128[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1461 multiply[compile-time] 65535[Word], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 128;
endcode
compile error

$overflow on
code auto:1462 multiply[Int16] 65535[Word], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:1463 multiply[compile-time] 65535[Word], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1464 multiply[Word] 0[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1465 multiply[compile-time] 0[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1466 multiply[Word] 0[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1467 multiply[compile-time] 0[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1468 multiply[Word] 0[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1469 multiply[compile-time] 0[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1470 multiply[Word] 0[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1471 multiply[compile-time] 0[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1472 multiply[Word] 0[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1473 multiply[compile-time] 0[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1474 multiply[Word] 255[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1475 multiply[compile-time] 255[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1476 multiply[Word] 255[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 255

code auto:1477 multiply[compile-time] 255[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1478 multiply[Word] 255[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32385

code auto:1479 multiply[compile-time] 255[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1480 multiply[Word] 255[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32640

code auto:1481 multiply[compile-time] 255[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow on
code auto:1482 multiply[Word] 255[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65025

code auto:1483 multiply[compile-time] 255[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1484 multiply[Word] 32767[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1485 multiply[compile-time] 32767[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1486 multiply[Word] 32767[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:1487 multiply[compile-time] 32767[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1488 multiply[Word] 32767[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1489 multiply[compile-time] 32767[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1490 multiply[Word] 32767[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1491 multiply[compile-time] 32767[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:1492 multiply[Word] 32767[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1493 multiply[compile-time] 32767[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1494 multiply[Word] 32768[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1495 multiply[compile-time] 32768[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1496 multiply[Word] 32768[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32768

code auto:1497 multiply[compile-time] 32768[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 1;
endcode
varvalue r 32768

$overflow on
code auto:1498 multiply[Word] 32768[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1499 multiply[compile-time] 32768[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1500 multiply[Word] 32768[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1501 multiply[compile-time] 32768[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 128;
endcode
compile error

$overflow on
code auto:1502 multiply[Word] 32768[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1503 multiply[compile-time] 32768[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1504 multiply[Word] 65535[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1505 multiply[compile-time] 65535[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1506 multiply[Word] 65535[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65535

code auto:1507 multiply[compile-time] 65535[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 1;
endcode
varvalue r 65535

$overflow on
code auto:1508 multiply[Word] 65535[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1509 multiply[compile-time] 65535[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1510 multiply[Word] 65535[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1511 multiply[compile-time] 65535[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 128;
endcode
compile error

$overflow on
code auto:1512 multiply[Word] 65535[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1513 multiply[compile-time] 65535[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1514 multiply[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1515 multiply[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1516 multiply[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1517 multiply[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1518 multiply[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1519 multiply[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1520 multiply[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1521 multiply[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1522 multiply[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1523 multiply[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1524 multiply[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1525 multiply[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1526 multiply[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65025

code auto:1527 multiply[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1528 multiply[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1529 multiply[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1530 multiply[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1531 multiply[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1532 multiply[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1533 multiply[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1534 multiply[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1535 multiply[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1536 multiply[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1537 multiply[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1538 multiply[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1539 multiply[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1540 multiply[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1541 multiply[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:1542 multiply[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1543 multiply[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:1544 multiply[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1545 multiply[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1546 multiply[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1547 multiply[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1548 multiply[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1549 multiply[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1550 multiply[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1551 multiply[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:1552 multiply[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1553 multiply[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:1554 multiply[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:1555 multiply[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1556 multiply[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1557 multiply[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1558 multiply[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1559 multiply[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1560 multiply[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1561 multiply[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:1562 multiply[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:1563 multiply[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:1564 multiply[Pointer] 0[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1565 multiply[compile-time] 0[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1566 multiply[Pointer] 0[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1567 multiply[compile-time] 0[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1568 multiply[Pointer] 0[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1569 multiply[compile-time] 0[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1570 multiply[Pointer] 0[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1571 multiply[compile-time] 0[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1572 multiply[Pointer] 0[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1573 multiply[compile-time] 0[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1574 multiply[Pointer] 255[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1575 multiply[compile-time] 255[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1576 multiply[Pointer] 255[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65025

code auto:1577 multiply[compile-time] 255[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1578 multiply[Pointer] 255[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1579 multiply[compile-time] 255[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1580 multiply[Pointer] 255[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1581 multiply[compile-time] 255[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1582 multiply[Pointer] 255[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1583 multiply[compile-time] 255[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1584 multiply[Pointer] 32767[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1585 multiply[compile-time] 32767[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1586 multiply[Pointer] 32767[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1587 multiply[compile-time] 32767[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1588 multiply[Pointer] 32767[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1589 multiply[compile-time] 32767[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1590 multiply[Pointer] 32767[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1591 multiply[compile-time] 32767[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:1592 multiply[Pointer] 32767[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1593 multiply[compile-time] 32767[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:1594 multiply[Pointer] 32768[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1595 multiply[compile-time] 32768[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1596 multiply[Pointer] 32768[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1597 multiply[compile-time] 32768[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1598 multiply[Pointer] 32768[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1599 multiply[compile-time] 32768[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1600 multiply[Pointer] 32768[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1601 multiply[compile-time] 32768[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:1602 multiply[Pointer] 32768[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1603 multiply[compile-time] 32768[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:1604 multiply[Pointer] 65535[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1605 multiply[compile-time] 65535[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1606 multiply[Pointer] 65535[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1607 multiply[compile-time] 65535[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1608 multiply[Pointer] 65535[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1609 multiply[compile-time] 65535[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1610 multiply[Pointer] 65535[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1611 multiply[compile-time] 65535[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:1612 multiply[Pointer] 65535[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1613 multiply[compile-time] 65535[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:1614 multiply[Pointer] 0[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1615 multiply[compile-time] 0[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1616 multiply[Pointer] 0[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1617 multiply[compile-time] 0[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:1618 multiply[Pointer] 0[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1619 multiply[compile-time] 0[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1620 multiply[Pointer] 0[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1621 multiply[compile-time] 0[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1622 multiply[Pointer] 0[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1623 multiply[compile-time] 0[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1624 multiply[Pointer] 0[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1625 multiply[compile-time] 0[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1626 multiply[Pointer] 255[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1627 multiply[compile-time] 255[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -128;
endcode
compile error

$overflow on
code auto:1628 multiply[Pointer] 255[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1629 multiply[compile-time] 255[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -127;
endcode
compile error

$overflow on
code auto:1630 multiply[Pointer] 255[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1631 multiply[compile-time] 255[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -1;
endcode
compile error

$overflow on
code auto:1632 multiply[Pointer] 255[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1633 multiply[compile-time] 255[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1634 multiply[Pointer] 255[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:1635 multiply[compile-time] 255[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1636 multiply[Pointer] 255[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:1637 multiply[compile-time] 255[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1638 multiply[Pointer] 32767[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1639 multiply[compile-time] 32767[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:1640 multiply[Pointer] 32767[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1641 multiply[compile-time] 32767[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -127;
endcode
compile error

$overflow on
code auto:1642 multiply[Pointer] 32767[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1643 multiply[compile-time] 32767[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -1;
endcode
compile error

$overflow on
code auto:1644 multiply[Pointer] 32767[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1645 multiply[compile-time] 32767[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1646 multiply[Pointer] 32767[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:1647 multiply[compile-time] 32767[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1648 multiply[Pointer] 32767[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1649 multiply[compile-time] 32767[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1650 multiply[Pointer] 32768[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1651 multiply[compile-time] 32768[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -128;
endcode
compile error

$overflow on
code auto:1652 multiply[Pointer] 32768[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1653 multiply[compile-time] 32768[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -127;
endcode
compile error

$overflow on
code auto:1654 multiply[Pointer] 32768[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1655 multiply[compile-time] 32768[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -1;
endcode
compile error

$overflow on
code auto:1656 multiply[Pointer] 32768[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1657 multiply[compile-time] 32768[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1658 multiply[Pointer] 32768[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:1659 multiply[compile-time] 32768[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 1;
endcode
varvalue r 32768

$overflow on
code auto:1660 multiply[Pointer] 32768[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1661 multiply[compile-time] 32768[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1662 multiply[Pointer] 65535[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1663 multiply[compile-time] 65535[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -128;
endcode
compile error

$overflow on
code auto:1664 multiply[Pointer] 65535[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1665 multiply[compile-time] 65535[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -127;
endcode
compile error

$overflow on
code auto:1666 multiply[Pointer] 65535[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1667 multiply[compile-time] 65535[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -1;
endcode
compile error

$overflow on
code auto:1668 multiply[Pointer] 65535[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1669 multiply[compile-time] 65535[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1670 multiply[Pointer] 65535[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:1671 multiply[compile-time] 65535[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 1;
endcode
varvalue r 65535

$overflow on
code auto:1672 multiply[Pointer] 65535[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1673 multiply[compile-time] 65535[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1674 multiply[Pointer] 0[Pointer], -32768[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1675 multiply[compile-time] 0[Pointer], -32768[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:1676 multiply[Pointer] 0[Pointer], -32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1677 multiply[compile-time] 0[Pointer], -32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:1678 multiply[Pointer] 0[Pointer], -129[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -129;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1679 multiply[compile-time] 0[Pointer], -129[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:1680 multiply[Pointer] 0[Pointer], -128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1681 multiply[compile-time] 0[Pointer], -128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1682 multiply[Pointer] 0[Pointer], -1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1683 multiply[compile-time] 0[Pointer], -1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1684 multiply[Pointer] 0[Pointer], 0[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1685 multiply[compile-time] 0[Pointer], 0[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1686 multiply[Pointer] 0[Pointer], 1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1687 multiply[compile-time] 0[Pointer], 1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1688 multiply[Pointer] 0[Pointer], 127[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1689 multiply[compile-time] 0[Pointer], 127[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1690 multiply[Pointer] 0[Pointer], 128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1691 multiply[compile-time] 0[Pointer], 128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1692 multiply[Pointer] 0[Pointer], 32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1693 multiply[compile-time] 0[Pointer], 32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1694 multiply[Pointer] 255[Pointer], -32768[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1695 multiply[compile-time] 255[Pointer], -32768[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -32768;
endcode
compile error

$overflow on
code auto:1696 multiply[Pointer] 255[Pointer], -32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1697 multiply[compile-time] 255[Pointer], -32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -32767;
endcode
compile error

$overflow on
code auto:1698 multiply[Pointer] 255[Pointer], -129[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -129;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1699 multiply[compile-time] 255[Pointer], -129[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -129;
endcode
compile error

$overflow on
code auto:1700 multiply[Pointer] 255[Pointer], -128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1701 multiply[compile-time] 255[Pointer], -128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -128;
endcode
compile error

$overflow on
code auto:1702 multiply[Pointer] 255[Pointer], -1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1703 multiply[compile-time] 255[Pointer], -1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * -1;
endcode
compile error

$overflow on
code auto:1704 multiply[Pointer] 255[Pointer], 0[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1705 multiply[compile-time] 255[Pointer], 0[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1706 multiply[Pointer] 255[Pointer], 1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:1707 multiply[compile-time] 255[Pointer], 1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1708 multiply[Pointer] 255[Pointer], 127[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:1709 multiply[compile-time] 255[Pointer], 127[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1710 multiply[Pointer] 255[Pointer], 128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32640

code auto:1711 multiply[compile-time] 255[Pointer], 128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow on
code auto:1712 multiply[Pointer] 255[Pointer], 32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1713 multiply[compile-time] 255[Pointer], 32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1714 multiply[Pointer] 32767[Pointer], -32768[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1715 multiply[compile-time] 32767[Pointer], -32768[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:1716 multiply[Pointer] 32767[Pointer], -32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1717 multiply[compile-time] 32767[Pointer], -32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:1718 multiply[Pointer] 32767[Pointer], -129[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -129;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1719 multiply[compile-time] 32767[Pointer], -129[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:1720 multiply[Pointer] 32767[Pointer], -128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1721 multiply[compile-time] 32767[Pointer], -128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:1722 multiply[Pointer] 32767[Pointer], -1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1723 multiply[compile-time] 32767[Pointer], -1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * -1;
endcode
compile error

$overflow on
code auto:1724 multiply[Pointer] 32767[Pointer], 0[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1725 multiply[compile-time] 32767[Pointer], 0[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1726 multiply[Pointer] 32767[Pointer], 1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:1727 multiply[compile-time] 32767[Pointer], 1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1728 multiply[Pointer] 32767[Pointer], 127[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1729 multiply[compile-time] 32767[Pointer], 127[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1730 multiply[Pointer] 32767[Pointer], 128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1731 multiply[compile-time] 32767[Pointer], 128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:1732 multiply[Pointer] 32767[Pointer], 32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1733 multiply[compile-time] 32767[Pointer], 32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1734 multiply[Pointer] 32768[Pointer], -32768[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1735 multiply[compile-time] 32768[Pointer], -32768[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -32768;
endcode
compile error

$overflow on
code auto:1736 multiply[Pointer] 32768[Pointer], -32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1737 multiply[compile-time] 32768[Pointer], -32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -32767;
endcode
compile error

$overflow on
code auto:1738 multiply[Pointer] 32768[Pointer], -129[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -129;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1739 multiply[compile-time] 32768[Pointer], -129[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -129;
endcode
compile error

$overflow on
code auto:1740 multiply[Pointer] 32768[Pointer], -128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1741 multiply[compile-time] 32768[Pointer], -128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -128;
endcode
compile error

$overflow on
code auto:1742 multiply[Pointer] 32768[Pointer], -1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1743 multiply[compile-time] 32768[Pointer], -1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * -1;
endcode
compile error

$overflow on
code auto:1744 multiply[Pointer] 32768[Pointer], 0[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1745 multiply[compile-time] 32768[Pointer], 0[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1746 multiply[Pointer] 32768[Pointer], 1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:1747 multiply[compile-time] 32768[Pointer], 1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 1;
endcode
varvalue r 32768

$overflow on
code auto:1748 multiply[Pointer] 32768[Pointer], 127[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1749 multiply[compile-time] 32768[Pointer], 127[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1750 multiply[Pointer] 32768[Pointer], 128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1751 multiply[compile-time] 32768[Pointer], 128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 128;
endcode
compile error

$overflow on
code auto:1752 multiply[Pointer] 32768[Pointer], 32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1753 multiply[compile-time] 32768[Pointer], 32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1754 multiply[Pointer] 65535[Pointer], -32768[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1755 multiply[compile-time] 65535[Pointer], -32768[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -32768;
endcode
compile error

$overflow on
code auto:1756 multiply[Pointer] 65535[Pointer], -32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1757 multiply[compile-time] 65535[Pointer], -32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -32767;
endcode
compile error

$overflow on
code auto:1758 multiply[Pointer] 65535[Pointer], -129[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -129;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1759 multiply[compile-time] 65535[Pointer], -129[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -129;
endcode
compile error

$overflow on
code auto:1760 multiply[Pointer] 65535[Pointer], -128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1761 multiply[compile-time] 65535[Pointer], -128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -128;
endcode
compile error

$overflow on
code auto:1762 multiply[Pointer] 65535[Pointer], -1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -1;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1763 multiply[compile-time] 65535[Pointer], -1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * -1;
endcode
compile error

$overflow on
code auto:1764 multiply[Pointer] 65535[Pointer], 0[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1765 multiply[compile-time] 65535[Pointer], 0[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1766 multiply[Pointer] 65535[Pointer], 1[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:1767 multiply[compile-time] 65535[Pointer], 1[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 1;
endcode
varvalue r 65535

$overflow on
code auto:1768 multiply[Pointer] 65535[Pointer], 127[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1769 multiply[compile-time] 65535[Pointer], 127[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1770 multiply[Pointer] 65535[Pointer], 128[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1771 multiply[compile-time] 65535[Pointer], 128[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 128;
endcode
compile error

$overflow on
code auto:1772 multiply[Pointer] 65535[Pointer], 32767[Int16] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1773 multiply[compile-time] 65535[Pointer], 32767[Int16] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1774 multiply[Pointer] 0[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1775 multiply[compile-time] 0[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1776 multiply[Pointer] 0[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1777 multiply[compile-time] 0[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1778 multiply[Pointer] 0[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1779 multiply[compile-time] 0[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1780 multiply[Pointer] 0[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1781 multiply[compile-time] 0[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:1782 multiply[Pointer] 0[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1783 multiply[compile-time] 0[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1784 multiply[Pointer] 255[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1785 multiply[compile-time] 255[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1786 multiply[Pointer] 255[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 255

code auto:1787 multiply[compile-time] 255[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:1788 multiply[Pointer] 255[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32385

code auto:1789 multiply[compile-time] 255[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow on
code auto:1790 multiply[Pointer] 255[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32640

code auto:1791 multiply[compile-time] 255[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow on
code auto:1792 multiply[Pointer] 255[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65025

code auto:1793 multiply[compile-time] 255[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1794 multiply[Pointer] 32767[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1795 multiply[compile-time] 32767[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1796 multiply[Pointer] 32767[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32767

code auto:1797 multiply[compile-time] 32767[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:1798 multiply[Pointer] 32767[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1799 multiply[compile-time] 32767[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:1800 multiply[Pointer] 32767[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1801 multiply[compile-time] 32767[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:1802 multiply[Pointer] 32767[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1803 multiply[compile-time] 32767[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1804 multiply[Pointer] 32768[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1805 multiply[compile-time] 32768[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1806 multiply[Pointer] 32768[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 32768

code auto:1807 multiply[compile-time] 32768[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 1;
endcode
varvalue r 32768

$overflow on
code auto:1808 multiply[Pointer] 32768[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1809 multiply[compile-time] 32768[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 127;
endcode
compile error

$overflow on
code auto:1810 multiply[Pointer] 32768[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1811 multiply[compile-time] 32768[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 128;
endcode
compile error

$overflow on
code auto:1812 multiply[Pointer] 32768[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1813 multiply[compile-time] 32768[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1814 multiply[Pointer] 65535[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1815 multiply[compile-time] 65535[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1816 multiply[Pointer] 65535[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65535

code auto:1817 multiply[compile-time] 65535[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 1;
endcode
varvalue r 65535

$overflow on
code auto:1818 multiply[Pointer] 65535[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1819 multiply[compile-time] 65535[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 127;
endcode
compile error

$overflow on
code auto:1820 multiply[Pointer] 65535[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1821 multiply[compile-time] 65535[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 128;
endcode
compile error

$overflow on
code auto:1822 multiply[Pointer] 65535[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1823 multiply[compile-time] 65535[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1824 multiply[Pointer] 0[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1825 multiply[compile-time] 0[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1826 multiply[Pointer] 0[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1827 multiply[compile-time] 0[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1828 multiply[Pointer] 0[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1829 multiply[compile-time] 0[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1830 multiply[Pointer] 0[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1831 multiply[compile-time] 0[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1832 multiply[Pointer] 0[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1833 multiply[compile-time] 0[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1834 multiply[Pointer] 255[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1835 multiply[compile-time] 255[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1836 multiply[Pointer] 255[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65025

code auto:1837 multiply[compile-time] 255[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1838 multiply[Pointer] 255[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1839 multiply[compile-time] 255[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1840 multiply[Pointer] 255[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1841 multiply[compile-time] 255[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1842 multiply[Pointer] 255[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1843 multiply[compile-time] 255[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1844 multiply[Pointer] 32767[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1845 multiply[compile-time] 32767[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1846 multiply[Pointer] 32767[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1847 multiply[compile-time] 32767[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1848 multiply[Pointer] 32767[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1849 multiply[compile-time] 32767[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1850 multiply[Pointer] 32767[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1851 multiply[compile-time] 32767[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:1852 multiply[Pointer] 32767[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1853 multiply[compile-time] 32767[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:1854 multiply[Pointer] 32768[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1855 multiply[compile-time] 32768[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1856 multiply[Pointer] 32768[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1857 multiply[compile-time] 32768[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1858 multiply[Pointer] 32768[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1859 multiply[compile-time] 32768[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1860 multiply[Pointer] 32768[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1861 multiply[compile-time] 32768[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:1862 multiply[Pointer] 32768[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1863 multiply[compile-time] 32768[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:1864 multiply[Pointer] 65535[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1865 multiply[compile-time] 65535[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1866 multiply[Pointer] 65535[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1867 multiply[compile-time] 65535[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1868 multiply[Pointer] 65535[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1869 multiply[compile-time] 65535[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1870 multiply[Pointer] 65535[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1871 multiply[compile-time] 65535[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:1872 multiply[Pointer] 65535[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1873 multiply[compile-time] 65535[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:1874 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1875 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1876 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1877 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:1878 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1879 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:1880 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1881 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:1882 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1883 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:1884 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1885 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:1886 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 65025

code auto:1887 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:1888 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1889 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:1890 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1891 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:1892 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1893 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:1894 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1895 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:1896 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1897 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:1898 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1899 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:1900 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1901 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:1902 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1903 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:1904 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1905 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:1906 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1907 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:1908 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1909 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:1910 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1911 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:1912 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1913 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:1914 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a * b;
endcode
varvalue r 0

code auto:1915 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:1916 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1917 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:1918 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1919 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:1920 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1921 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:1922 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a * b;
endcode
runtime overflow

code auto:1923 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:1924 multiply[Int16] -128[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1925 multiply[compile-time] -128[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -128;
endcode
compile error

$overflow on
code auto:1926 multiply[Int16] -128[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1927 multiply[compile-time] -128[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -127;
endcode
compile error

$overflow on
code auto:1928 multiply[Int16] -128[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1929 multiply[compile-time] -128[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -1;
endcode
compile error

$overflow on
code auto:1930 multiply[Int16] -128[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1931 multiply[compile-time] -128[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:1932 multiply[Int16] -128[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:1933 multiply[compile-time] -128[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:1934 multiply[Int16] -128[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1935 multiply[compile-time] -128[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:1936 multiply[Int16] -127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1937 multiply[compile-time] -127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * -128;
endcode
compile error

$overflow on
code auto:1938 multiply[Int16] -127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1939 multiply[compile-time] -127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * -127;
endcode
compile error

$overflow on
code auto:1940 multiply[Int16] -127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:1941 multiply[compile-time] -127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * -1;
endcode
varvalue r 127

$overflow on
code auto:1942 multiply[Int16] -127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1943 multiply[compile-time] -127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1944 multiply[Int16] -127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:1945 multiply[compile-time] -127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * 1;
endcode
varvalue r -127

$overflow on
code auto:1946 multiply[Int16] -127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1947 multiply[compile-time] -127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 * 127;
endcode
compile error

$overflow on
code auto:1948 multiply[Int16] -1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1949 multiply[compile-time] -1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -128;
endcode
compile error

$overflow on
code auto:1950 multiply[Int16] -1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:1951 multiply[compile-time] -1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -127;
endcode
varvalue r 127

$overflow on
code auto:1952 multiply[Int16] -1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 1

code auto:1953 multiply[compile-time] -1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:1954 multiply[Int16] -1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1955 multiply[compile-time] -1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1956 multiply[Int16] -1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -1

code auto:1957 multiply[compile-time] -1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:1958 multiply[Int16] -1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:1959 multiply[compile-time] -1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:1960 multiply[Int16] 0[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1961 multiply[compile-time] 0[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:1962 multiply[Int16] 0[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1963 multiply[compile-time] 0[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -127;
endcode
varvalue r 0

$overflow on
code auto:1964 multiply[Int16] 0[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1965 multiply[compile-time] 0[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:1966 multiply[Int16] 0[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1967 multiply[compile-time] 0[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:1968 multiply[Int16] 0[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1969 multiply[compile-time] 0[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:1970 multiply[Int16] 0[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1971 multiply[compile-time] 0[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:1972 multiply[Int16] 1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:1973 multiply[compile-time] 1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:1974 multiply[Int16] 1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:1975 multiply[compile-time] 1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -127;
endcode
varvalue r -127

$overflow on
code auto:1976 multiply[Int16] 1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -1

code auto:1977 multiply[compile-time] 1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:1978 multiply[Int16] 1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1979 multiply[compile-time] 1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:1980 multiply[Int16] 1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 1

code auto:1981 multiply[compile-time] 1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:1982 multiply[Int16] 1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:1983 multiply[compile-time] 1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:1984 multiply[Int16] 127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1985 multiply[compile-time] 127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:1986 multiply[Int16] 127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1987 multiply[compile-time] 127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -127;
endcode
compile error

$overflow on
code auto:1988 multiply[Int16] 127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:1989 multiply[compile-time] 127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:1990 multiply[Int16] 127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:1991 multiply[compile-time] 127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:1992 multiply[Int16] 127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:1993 multiply[compile-time] 127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:1994 multiply[Int16] 127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:1995 multiply[compile-time] 127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 127;
endcode
compile error

$overflow off
code auto:1996 multiply[Int16] -128[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:1997 multiply[compile-time] -128[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * -128;
endcode
runtime noerror

$overflow on
code auto:1998 multiply[Int16] -128[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:1999 multiply[compile-time] -128[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow off
code auto:2000 multiply[Int16] -128[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2001 multiply[compile-time] -128[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * -127;
endcode
runtime noerror

$overflow on
code auto:2002 multiply[Int16] -128[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:2003 multiply[compile-time] -128[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -127;
endcode
varvalue r 16256

$overflow off
code auto:2004 multiply[Int16] -128[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2005 multiply[compile-time] -128[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * -1;
endcode
runtime noerror

$overflow on
code auto:2006 multiply[Int16] -128[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:2007 multiply[compile-time] -128[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow off
code auto:2008 multiply[Int16] -128[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2009 multiply[compile-time] -128[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:2010 multiply[Int16] -128[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2011 multiply[compile-time] -128[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:2012 multiply[Int16] -128[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2013 multiply[compile-time] -128[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * 1;
endcode
runtime noerror

$overflow on
code auto:2014 multiply[Int16] -128[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2015 multiply[compile-time] -128[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow off
code auto:2016 multiply[Int16] -128[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2017 multiply[compile-time] -128[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -128 * 127;
endcode
runtime noerror

$overflow on
code auto:2018 multiply[Int16] -128[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:2019 multiply[compile-time] -128[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow off
code auto:2020 multiply[Int16] -127[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2021 multiply[compile-time] -127[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * -128;
endcode
runtime noerror

$overflow on
code auto:2022 multiply[Int16] -127[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:2023 multiply[compile-time] -127[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -128;
endcode
varvalue r 16256

$overflow off
code auto:2024 multiply[Int16] -127[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2025 multiply[compile-time] -127[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * -127;
endcode
runtime noerror

$overflow on
code auto:2026 multiply[Int16] -127[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:2027 multiply[compile-time] -127[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -127;
endcode
varvalue r 16129

$overflow off
code auto:2028 multiply[Int16] -127[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2029 multiply[compile-time] -127[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * -1;
endcode
runtime noerror

$overflow on
code auto:2030 multiply[Int16] -127[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2031 multiply[compile-time] -127[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * -1;
endcode
varvalue r 127

$overflow off
code auto:2032 multiply[Int16] -127[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2033 multiply[compile-time] -127[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * 0;
endcode
runtime noerror

$overflow on
code auto:2034 multiply[Int16] -127[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2035 multiply[compile-time] -127[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2036 multiply[Int16] -127[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2037 multiply[compile-time] -127[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * 1;
endcode
runtime noerror

$overflow on
code auto:2038 multiply[Int16] -127[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2039 multiply[compile-time] -127[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 1;
endcode
varvalue r -127

$overflow off
code auto:2040 multiply[Int16] -127[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2041 multiply[compile-time] -127[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -127 * 127;
endcode
runtime noerror

$overflow on
code auto:2042 multiply[Int16] -127[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:2043 multiply[compile-time] -127[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -127 * 127;
endcode
varvalue r -16129

$overflow off
code auto:2044 multiply[Int16] -1[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2045 multiply[compile-time] -1[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * -128;
endcode
runtime noerror

$overflow on
code auto:2046 multiply[Int16] -1[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:2047 multiply[compile-time] -1[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow off
code auto:2048 multiply[Int16] -1[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2049 multiply[compile-time] -1[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * -127;
endcode
runtime noerror

$overflow on
code auto:2050 multiply[Int16] -1[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2051 multiply[compile-time] -1[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -127;
endcode
varvalue r 127

$overflow off
code auto:2052 multiply[Int16] -1[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2053 multiply[compile-time] -1[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:2054 multiply[Int16] -1[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:2055 multiply[compile-time] -1[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:2056 multiply[Int16] -1[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2057 multiply[compile-time] -1[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:2058 multiply[Int16] -1[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2059 multiply[compile-time] -1[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2060 multiply[Int16] -1[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2061 multiply[compile-time] -1[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * 1;
endcode
runtime noerror

$overflow on
code auto:2062 multiply[Int16] -1[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:2063 multiply[compile-time] -1[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow off
code auto:2064 multiply[Int16] -1[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2065 multiply[compile-time] -1[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := -1 * 127;
endcode
runtime noerror

$overflow on
code auto:2066 multiply[Int16] -1[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2067 multiply[compile-time] -1[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow off
code auto:2068 multiply[Int16] 0[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2069 multiply[compile-time] 0[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:2070 multiply[Int16] 0[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2071 multiply[compile-time] 0[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:2072 multiply[Int16] 0[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2073 multiply[compile-time] 0[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * -127;
endcode
runtime noerror

$overflow on
code auto:2074 multiply[Int16] 0[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2075 multiply[compile-time] 0[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -127;
endcode
varvalue r 0

$overflow off
code auto:2076 multiply[Int16] 0[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2077 multiply[compile-time] 0[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:2078 multiply[Int16] 0[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2079 multiply[compile-time] 0[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:2080 multiply[Int16] 0[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2081 multiply[compile-time] 0[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:2082 multiply[Int16] 0[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2083 multiply[compile-time] 0[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:2084 multiply[Int16] 0[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2085 multiply[compile-time] 0[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:2086 multiply[Int16] 0[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2087 multiply[compile-time] 0[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:2088 multiply[Int16] 0[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2089 multiply[compile-time] 0[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:2090 multiply[Int16] 0[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2091 multiply[compile-time] 0[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:2092 multiply[Int16] 1[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2093 multiply[compile-time] 1[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * -128;
endcode
runtime noerror

$overflow on
code auto:2094 multiply[Int16] 1[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2095 multiply[compile-time] 1[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow off
code auto:2096 multiply[Int16] 1[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2097 multiply[compile-time] 1[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * -127;
endcode
runtime noerror

$overflow on
code auto:2098 multiply[Int16] 1[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2099 multiply[compile-time] 1[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -127;
endcode
varvalue r -127

$overflow off
code auto:2100 multiply[Int16] 1[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2101 multiply[compile-time] 1[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * -1;
endcode
runtime noerror

$overflow on
code auto:2102 multiply[Int16] 1[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:2103 multiply[compile-time] 1[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow off
code auto:2104 multiply[Int16] 1[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2105 multiply[compile-time] 1[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:2106 multiply[Int16] 1[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2107 multiply[compile-time] 1[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2108 multiply[Int16] 1[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2109 multiply[compile-time] 1[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:2110 multiply[Int16] 1[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:2111 multiply[compile-time] 1[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:2112 multiply[Int16] 1[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2113 multiply[compile-time] 1[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:2114 multiply[Int16] 1[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2115 multiply[compile-time] 1[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:2116 multiply[Int16] 127[Int8], -128[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2117 multiply[compile-time] 127[Int8], -128[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * -128;
endcode
runtime noerror

$overflow on
code auto:2118 multiply[Int16] 127[Int8], -128[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:2119 multiply[compile-time] 127[Int8], -128[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow off
code auto:2120 multiply[Int16] 127[Int8], -127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2121 multiply[compile-time] 127[Int8], -127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * -127;
endcode
runtime noerror

$overflow on
code auto:2122 multiply[Int16] 127[Int8], -127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16129

code auto:2123 multiply[compile-time] 127[Int8], -127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -127;
endcode
varvalue r -16129

$overflow off
code auto:2124 multiply[Int16] 127[Int8], -1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2125 multiply[compile-time] 127[Int8], -1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * -1;
endcode
runtime noerror

$overflow on
code auto:2126 multiply[Int16] 127[Int8], -1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2127 multiply[compile-time] 127[Int8], -1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow off
code auto:2128 multiply[Int16] 127[Int8], 0[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2129 multiply[compile-time] 127[Int8], 0[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:2130 multiply[Int16] 127[Int8], 0[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2131 multiply[compile-time] 127[Int8], 0[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2132 multiply[Int16] 127[Int8], 1[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2133 multiply[compile-time] 127[Int8], 1[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:2134 multiply[Int16] 127[Int8], 1[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2135 multiply[compile-time] 127[Int8], 1[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:2136 multiply[Int16] 127[Int8], 127[Int8] -> [Int16] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:2137 multiply[compile-time] 127[Int8], 127[Int8] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 127;
endcode
runtime noerror

$overflow on
code auto:2138 multiply[Int16] 127[Int8], 127[Int8] -> [Int16] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:2139 multiply[compile-time] 127[Int8], 127[Int8] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow off
code auto:2140 multiply[Int16] -128[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2141 multiply[compile-time] -128[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -128;
endcode
compile error

$overflow on
code auto:2142 multiply[Int16] -128[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2143 multiply[compile-time] -128[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -128;
endcode
compile error

$overflow off
code auto:2144 multiply[Int16] -128[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2145 multiply[compile-time] -128[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -127;
endcode
compile error

$overflow on
code auto:2146 multiply[Int16] -128[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2147 multiply[compile-time] -128[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -127;
endcode
compile error

$overflow off
code auto:2148 multiply[Int16] -128[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2149 multiply[compile-time] -128[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -1;
endcode
runtime noerror

$overflow on
code auto:2150 multiply[Int16] -128[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:2151 multiply[compile-time] -128[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -1;
endcode
varvalue r 128

$overflow off
code auto:2152 multiply[Int16] -128[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2153 multiply[compile-time] -128[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:2154 multiply[Int16] -128[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2155 multiply[compile-time] -128[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:2156 multiply[Int16] -128[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2157 multiply[compile-time] -128[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 1;
endcode
compile error

$overflow on
code auto:2158 multiply[Int16] -128[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2159 multiply[compile-time] -128[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 1;
endcode
compile error

$overflow off
code auto:2160 multiply[Int16] -128[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2161 multiply[compile-time] -128[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:2162 multiply[Int16] -128[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2163 multiply[compile-time] -128[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 127;
endcode
compile error

$overflow off
code auto:2164 multiply[Int16] -127[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2165 multiply[compile-time] -127[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * -128;
endcode
compile error

$overflow on
code auto:2166 multiply[Int16] -127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2167 multiply[compile-time] -127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * -128;
endcode
compile error

$overflow off
code auto:2168 multiply[Int16] -127[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2169 multiply[compile-time] -127[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * -127;
endcode
compile error

$overflow on
code auto:2170 multiply[Int16] -127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2171 multiply[compile-time] -127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * -127;
endcode
compile error

$overflow off
code auto:2172 multiply[Int16] -127[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2173 multiply[compile-time] -127[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * -1;
endcode
runtime noerror

$overflow on
code auto:2174 multiply[Int16] -127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:2175 multiply[compile-time] -127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * -1;
endcode
varvalue r 127

$overflow off
code auto:2176 multiply[Int16] -127[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2177 multiply[compile-time] -127[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * 0;
endcode
runtime noerror

$overflow on
code auto:2178 multiply[Int16] -127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2179 multiply[compile-time] -127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2180 multiply[Int16] -127[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2181 multiply[compile-time] -127[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * 1;
endcode
compile error

$overflow on
code auto:2182 multiply[Int16] -127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2183 multiply[compile-time] -127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * 1;
endcode
compile error

$overflow off
code auto:2184 multiply[Int16] -127[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2185 multiply[compile-time] -127[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 * 127;
endcode
compile error

$overflow on
code auto:2186 multiply[Int16] -127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2187 multiply[compile-time] -127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 * 127;
endcode
compile error

$overflow off
code auto:2188 multiply[Int16] -1[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2189 multiply[compile-time] -1[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -128;
endcode
runtime noerror

$overflow on
code auto:2190 multiply[Int16] -1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:2191 multiply[compile-time] -1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -128;
endcode
varvalue r 128

$overflow off
code auto:2192 multiply[Int16] -1[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2193 multiply[compile-time] -1[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -127;
endcode
runtime noerror

$overflow on
code auto:2194 multiply[Int16] -1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:2195 multiply[compile-time] -1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -127;
endcode
varvalue r 127

$overflow off
code auto:2196 multiply[Int16] -1[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2197 multiply[compile-time] -1[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:2198 multiply[Int16] -1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:2199 multiply[compile-time] -1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:2200 multiply[Int16] -1[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2201 multiply[compile-time] -1[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:2202 multiply[Int16] -1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2203 multiply[compile-time] -1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2204 multiply[Int16] -1[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2205 multiply[compile-time] -1[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 1;
endcode
compile error

$overflow on
code auto:2206 multiply[Int16] -1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2207 multiply[compile-time] -1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 1;
endcode
compile error

$overflow off
code auto:2208 multiply[Int16] -1[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2209 multiply[compile-time] -1[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 127;
endcode
compile error

$overflow on
code auto:2210 multiply[Int16] -1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2211 multiply[compile-time] -1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 127;
endcode
compile error

$overflow off
code auto:2212 multiply[Int16] 0[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2213 multiply[compile-time] 0[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:2214 multiply[Int16] 0[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2215 multiply[compile-time] 0[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:2216 multiply[Int16] 0[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2217 multiply[compile-time] 0[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -127;
endcode
runtime noerror

$overflow on
code auto:2218 multiply[Int16] 0[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2219 multiply[compile-time] 0[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -127;
endcode
varvalue r 0

$overflow off
code auto:2220 multiply[Int16] 0[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2221 multiply[compile-time] 0[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:2222 multiply[Int16] 0[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2223 multiply[compile-time] 0[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:2224 multiply[Int16] 0[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2225 multiply[compile-time] 0[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:2226 multiply[Int16] 0[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2227 multiply[compile-time] 0[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:2228 multiply[Int16] 0[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2229 multiply[compile-time] 0[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:2230 multiply[Int16] 0[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2231 multiply[compile-time] 0[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:2232 multiply[Int16] 0[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2233 multiply[compile-time] 0[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:2234 multiply[Int16] 0[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2235 multiply[compile-time] 0[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:2236 multiply[Int16] 1[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2237 multiply[compile-time] 1[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -128;
endcode
compile error

$overflow on
code auto:2238 multiply[Int16] 1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2239 multiply[compile-time] 1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -128;
endcode
compile error

$overflow off
code auto:2240 multiply[Int16] 1[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2241 multiply[compile-time] 1[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -127;
endcode
compile error

$overflow on
code auto:2242 multiply[Int16] 1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2243 multiply[compile-time] 1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -127;
endcode
compile error

$overflow off
code auto:2244 multiply[Int16] 1[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2245 multiply[compile-time] 1[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -1;
endcode
compile error

$overflow on
code auto:2246 multiply[Int16] 1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2247 multiply[compile-time] 1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -1;
endcode
compile error

$overflow off
code auto:2248 multiply[Int16] 1[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2249 multiply[compile-time] 1[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:2250 multiply[Int16] 1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2251 multiply[compile-time] 1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2252 multiply[Int16] 1[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2253 multiply[compile-time] 1[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:2254 multiply[Int16] 1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:2255 multiply[compile-time] 1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:2256 multiply[Int16] 1[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2257 multiply[compile-time] 1[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:2258 multiply[Int16] 1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:2259 multiply[compile-time] 1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:2260 multiply[Int16] 127[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2261 multiply[compile-time] 127[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:2262 multiply[Int16] 127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2263 multiply[compile-time] 127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -128;
endcode
compile error

$overflow off
code auto:2264 multiply[Int16] 127[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2265 multiply[compile-time] 127[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -127;
endcode
compile error

$overflow on
code auto:2266 multiply[Int16] 127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2267 multiply[compile-time] 127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -127;
endcode
compile error

$overflow off
code auto:2268 multiply[Int16] 127[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2269 multiply[compile-time] 127[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -1;
endcode
compile error

$overflow on
code auto:2270 multiply[Int16] 127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2271 multiply[compile-time] 127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -1;
endcode
compile error

$overflow off
code auto:2272 multiply[Int16] 127[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2273 multiply[compile-time] 127[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:2274 multiply[Int16] 127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:2275 multiply[compile-time] 127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2276 multiply[Int16] 127[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2277 multiply[compile-time] 127[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:2278 multiply[Int16] 127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:2279 multiply[compile-time] 127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:2280 multiply[Int16] 127[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:2281 multiply[compile-time] 127[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:2282 multiply[Int16] 127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:2283 multiply[compile-time] 127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow off
code auto:2284 multiply[Int16] -128[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2285 multiply[compile-time] -128[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -128;
endcode
runtime noerror

$overflow on
code auto:2286 multiply[Int16] -128[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16384

code auto:2287 multiply[compile-time] -128[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow off
code auto:2288 multiply[Int16] -128[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2289 multiply[compile-time] -128[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -127;
endcode
runtime noerror

$overflow on
code auto:2290 multiply[Int16] -128[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16256

code auto:2291 multiply[compile-time] -128[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -127;
endcode
varvalue r 16256

$overflow off
code auto:2292 multiply[Int16] -128[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2293 multiply[compile-time] -128[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -1;
endcode
runtime noerror

$overflow on
code auto:2294 multiply[Int16] -128[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:2295 multiply[compile-time] -128[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -1;
endcode
varvalue r 128

$overflow off
code auto:2296 multiply[Int16] -128[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2297 multiply[compile-time] -128[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:2298 multiply[Int16] -128[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2299 multiply[compile-time] -128[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:2300 multiply[Int16] -128[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2301 multiply[compile-time] -128[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 1;
endcode
compile error

$overflow on
code auto:2302 multiply[Int16] -128[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2303 multiply[compile-time] -128[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 1;
endcode
compile error

$overflow off
code auto:2304 multiply[Int16] -128[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2305 multiply[compile-time] -128[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:2306 multiply[Int16] -128[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2307 multiply[compile-time] -128[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 127;
endcode
compile error

$overflow off
code auto:2308 multiply[Int16] -127[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2309 multiply[compile-time] -127[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * -128;
endcode
runtime noerror

$overflow on
code auto:2310 multiply[Int16] -127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16256

code auto:2311 multiply[compile-time] -127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * -128;
endcode
varvalue r 16256

$overflow off
code auto:2312 multiply[Int16] -127[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2313 multiply[compile-time] -127[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * -127;
endcode
runtime noerror

$overflow on
code auto:2314 multiply[Int16] -127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16129

code auto:2315 multiply[compile-time] -127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * -127;
endcode
varvalue r 16129

$overflow off
code auto:2316 multiply[Int16] -127[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2317 multiply[compile-time] -127[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * -1;
endcode
runtime noerror

$overflow on
code auto:2318 multiply[Int16] -127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:2319 multiply[compile-time] -127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * -1;
endcode
varvalue r 127

$overflow off
code auto:2320 multiply[Int16] -127[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2321 multiply[compile-time] -127[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * 0;
endcode
runtime noerror

$overflow on
code auto:2322 multiply[Int16] -127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2323 multiply[compile-time] -127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2324 multiply[Int16] -127[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2325 multiply[compile-time] -127[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * 1;
endcode
compile error

$overflow on
code auto:2326 multiply[Int16] -127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2327 multiply[compile-time] -127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * 1;
endcode
compile error

$overflow off
code auto:2328 multiply[Int16] -127[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2329 multiply[compile-time] -127[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 * 127;
endcode
compile error

$overflow on
code auto:2330 multiply[Int16] -127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2331 multiply[compile-time] -127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 * 127;
endcode
compile error

$overflow off
code auto:2332 multiply[Int16] -1[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2333 multiply[compile-time] -1[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -128;
endcode
runtime noerror

$overflow on
code auto:2334 multiply[Int16] -1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:2335 multiply[compile-time] -1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -128;
endcode
varvalue r 128

$overflow off
code auto:2336 multiply[Int16] -1[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2337 multiply[compile-time] -1[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -127;
endcode
runtime noerror

$overflow on
code auto:2338 multiply[Int16] -1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:2339 multiply[compile-time] -1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -127;
endcode
varvalue r 127

$overflow off
code auto:2340 multiply[Int16] -1[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2341 multiply[compile-time] -1[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:2342 multiply[Int16] -1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 1

code auto:2343 multiply[compile-time] -1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:2344 multiply[Int16] -1[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2345 multiply[compile-time] -1[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:2346 multiply[Int16] -1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2347 multiply[compile-time] -1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2348 multiply[Int16] -1[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2349 multiply[compile-time] -1[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 1;
endcode
compile error

$overflow on
code auto:2350 multiply[Int16] -1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2351 multiply[compile-time] -1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 1;
endcode
compile error

$overflow off
code auto:2352 multiply[Int16] -1[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2353 multiply[compile-time] -1[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 127;
endcode
compile error

$overflow on
code auto:2354 multiply[Int16] -1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2355 multiply[compile-time] -1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 127;
endcode
compile error

$overflow off
code auto:2356 multiply[Int16] 0[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2357 multiply[compile-time] 0[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:2358 multiply[Int16] 0[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2359 multiply[compile-time] 0[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:2360 multiply[Int16] 0[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2361 multiply[compile-time] 0[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -127;
endcode
runtime noerror

$overflow on
code auto:2362 multiply[Int16] 0[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2363 multiply[compile-time] 0[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -127;
endcode
varvalue r 0

$overflow off
code auto:2364 multiply[Int16] 0[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2365 multiply[compile-time] 0[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:2366 multiply[Int16] 0[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2367 multiply[compile-time] 0[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:2368 multiply[Int16] 0[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2369 multiply[compile-time] 0[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:2370 multiply[Int16] 0[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2371 multiply[compile-time] 0[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:2372 multiply[Int16] 0[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2373 multiply[compile-time] 0[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:2374 multiply[Int16] 0[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2375 multiply[compile-time] 0[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:2376 multiply[Int16] 0[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2377 multiply[compile-time] 0[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:2378 multiply[Int16] 0[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2379 multiply[compile-time] 0[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:2380 multiply[Int16] 1[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2381 multiply[compile-time] 1[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -128;
endcode
compile error

$overflow on
code auto:2382 multiply[Int16] 1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2383 multiply[compile-time] 1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -128;
endcode
compile error

$overflow off
code auto:2384 multiply[Int16] 1[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2385 multiply[compile-time] 1[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -127;
endcode
compile error

$overflow on
code auto:2386 multiply[Int16] 1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2387 multiply[compile-time] 1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -127;
endcode
compile error

$overflow off
code auto:2388 multiply[Int16] 1[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2389 multiply[compile-time] 1[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -1;
endcode
compile error

$overflow on
code auto:2390 multiply[Int16] 1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2391 multiply[compile-time] 1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -1;
endcode
compile error

$overflow off
code auto:2392 multiply[Int16] 1[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2393 multiply[compile-time] 1[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:2394 multiply[Int16] 1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2395 multiply[compile-time] 1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2396 multiply[Int16] 1[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2397 multiply[compile-time] 1[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:2398 multiply[Int16] 1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 1

code auto:2399 multiply[compile-time] 1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:2400 multiply[Int16] 1[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2401 multiply[compile-time] 1[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:2402 multiply[Int16] 1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:2403 multiply[compile-time] 1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:2404 multiply[Int16] 127[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2405 multiply[compile-time] 127[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:2406 multiply[Int16] 127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2407 multiply[compile-time] 127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -128;
endcode
compile error

$overflow off
code auto:2408 multiply[Int16] 127[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2409 multiply[compile-time] 127[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -127;
endcode
compile error

$overflow on
code auto:2410 multiply[Int16] 127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2411 multiply[compile-time] 127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -127;
endcode
compile error

$overflow off
code auto:2412 multiply[Int16] 127[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2413 multiply[compile-time] 127[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -1;
endcode
compile error

$overflow on
code auto:2414 multiply[Int16] 127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:2415 multiply[compile-time] 127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -1;
endcode
compile error

$overflow off
code auto:2416 multiply[Int16] 127[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2417 multiply[compile-time] 127[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:2418 multiply[Int16] 127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:2419 multiply[compile-time] 127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2420 multiply[Int16] 127[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2421 multiply[compile-time] 127[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:2422 multiply[Int16] 127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:2423 multiply[compile-time] 127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:2424 multiply[Int16] 127[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:2425 multiply[compile-time] 127[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 127;
endcode
runtime noerror

$overflow on
code auto:2426 multiply[Int16] 127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16129

code auto:2427 multiply[compile-time] 127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow off
code auto:2428 multiply[Int16] -32768[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2429 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * -32768;
endcode
compile error

$overflow on
code auto:2430 multiply[Int16] -32768[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2431 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * -32768;
endcode
compile error

$overflow off
code auto:2432 multiply[Int16] -32768[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2433 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * -32767;
endcode
compile error

$overflow on
code auto:2434 multiply[Int16] -32768[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2435 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * -32767;
endcode
compile error

$overflow off
code auto:2436 multiply[Int16] -32768[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2437 multiply[compile-time] -32768[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * -129;
endcode
compile error

$overflow on
code auto:2438 multiply[Int16] -32768[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2439 multiply[compile-time] -32768[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * -129;
endcode
compile error

$overflow off
code auto:2440 multiply[Int16] -32768[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2441 multiply[compile-time] -32768[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:2442 multiply[Int16] -32768[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2443 multiply[compile-time] -32768[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * -128;
endcode
compile error

$overflow off
code auto:2444 multiply[Int16] -32768[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2445 multiply[compile-time] -32768[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * -1;
endcode
compile error

$overflow on
code auto:2446 multiply[Int16] -32768[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2447 multiply[compile-time] -32768[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * -1;
endcode
compile error

$overflow off
code auto:2448 multiply[Int16] -32768[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2449 multiply[compile-time] -32768[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * 0;
endcode
runtime noerror

$overflow on
code auto:2450 multiply[Int16] -32768[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2451 multiply[compile-time] -32768[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:2452 multiply[Int16] -32768[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2453 multiply[compile-time] -32768[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * 1;
endcode
compile error

$overflow on
code auto:2454 multiply[Int16] -32768[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2455 multiply[compile-time] -32768[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * 1;
endcode
compile error

$overflow off
code auto:2456 multiply[Int16] -32768[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2457 multiply[compile-time] -32768[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:2458 multiply[Int16] -32768[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2459 multiply[compile-time] -32768[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * 127;
endcode
compile error

$overflow off
code auto:2460 multiply[Int16] -32768[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2461 multiply[compile-time] -32768[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:2462 multiply[Int16] -32768[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2463 multiply[compile-time] -32768[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * 128;
endcode
compile error

$overflow off
code auto:2464 multiply[Int16] -32768[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2465 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:2466 multiply[Int16] -32768[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2467 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 * 32767;
endcode
compile error

$overflow off
code auto:2468 multiply[Int16] -32767[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2469 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * -32768;
endcode
compile error

$overflow on
code auto:2470 multiply[Int16] -32767[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2471 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * -32768;
endcode
compile error

$overflow off
code auto:2472 multiply[Int16] -32767[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2473 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * -32767;
endcode
compile error

$overflow on
code auto:2474 multiply[Int16] -32767[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2475 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * -32767;
endcode
compile error

$overflow off
code auto:2476 multiply[Int16] -32767[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2477 multiply[compile-time] -32767[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * -129;
endcode
compile error

$overflow on
code auto:2478 multiply[Int16] -32767[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2479 multiply[compile-time] -32767[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * -129;
endcode
compile error

$overflow off
code auto:2480 multiply[Int16] -32767[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2481 multiply[compile-time] -32767[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:2482 multiply[Int16] -32767[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2483 multiply[compile-time] -32767[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * -128;
endcode
compile error

$overflow off
code auto:2484 multiply[Int16] -32767[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2485 multiply[compile-time] -32767[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * -1;
endcode
compile error

$overflow on
code auto:2486 multiply[Int16] -32767[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2487 multiply[compile-time] -32767[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * -1;
endcode
compile error

$overflow off
code auto:2488 multiply[Int16] -32767[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2489 multiply[compile-time] -32767[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * 0;
endcode
runtime noerror

$overflow on
code auto:2490 multiply[Int16] -32767[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2491 multiply[compile-time] -32767[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:2492 multiply[Int16] -32767[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2493 multiply[compile-time] -32767[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * 1;
endcode
compile error

$overflow on
code auto:2494 multiply[Int16] -32767[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2495 multiply[compile-time] -32767[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * 1;
endcode
compile error

$overflow off
code auto:2496 multiply[Int16] -32767[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2497 multiply[compile-time] -32767[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:2498 multiply[Int16] -32767[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2499 multiply[compile-time] -32767[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * 127;
endcode
compile error

$overflow off
code auto:2500 multiply[Int16] -32767[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2501 multiply[compile-time] -32767[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:2502 multiply[Int16] -32767[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2503 multiply[compile-time] -32767[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * 128;
endcode
compile error

$overflow off
code auto:2504 multiply[Int16] -32767[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2505 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:2506 multiply[Int16] -32767[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2507 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 * 32767;
endcode
compile error

$overflow off
code auto:2508 multiply[Int16] -129[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2509 multiply[compile-time] -129[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * -32768;
endcode
compile error

$overflow on
code auto:2510 multiply[Int16] -129[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2511 multiply[compile-time] -129[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * -32768;
endcode
compile error

$overflow off
code auto:2512 multiply[Int16] -129[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2513 multiply[compile-time] -129[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * -32767;
endcode
compile error

$overflow on
code auto:2514 multiply[Int16] -129[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2515 multiply[compile-time] -129[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * -32767;
endcode
compile error

$overflow off
code auto:2516 multiply[Int16] -129[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2517 multiply[compile-time] -129[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * -129;
endcode
compile error

$overflow on
code auto:2518 multiply[Int16] -129[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2519 multiply[compile-time] -129[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * -129;
endcode
compile error

$overflow off
code auto:2520 multiply[Int16] -129[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2521 multiply[compile-time] -129[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * -128;
endcode
compile error

$overflow on
code auto:2522 multiply[Int16] -129[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2523 multiply[compile-time] -129[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * -128;
endcode
compile error

$overflow off
code auto:2524 multiply[Int16] -129[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2525 multiply[compile-time] -129[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * -1;
endcode
compile error

$overflow on
code auto:2526 multiply[Int16] -129[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2527 multiply[compile-time] -129[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * -1;
endcode
compile error

$overflow off
code auto:2528 multiply[Int16] -129[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2529 multiply[compile-time] -129[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * 0;
endcode
runtime noerror

$overflow on
code auto:2530 multiply[Int16] -129[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2531 multiply[compile-time] -129[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * 0;
endcode
varvalue r 0

$overflow off
code auto:2532 multiply[Int16] -129[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2533 multiply[compile-time] -129[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * 1;
endcode
compile error

$overflow on
code auto:2534 multiply[Int16] -129[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2535 multiply[compile-time] -129[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * 1;
endcode
compile error

$overflow off
code auto:2536 multiply[Int16] -129[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2537 multiply[compile-time] -129[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * 127;
endcode
compile error

$overflow on
code auto:2538 multiply[Int16] -129[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2539 multiply[compile-time] -129[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * 127;
endcode
compile error

$overflow off
code auto:2540 multiply[Int16] -129[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2541 multiply[compile-time] -129[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * 128;
endcode
compile error

$overflow on
code auto:2542 multiply[Int16] -129[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2543 multiply[compile-time] -129[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * 128;
endcode
compile error

$overflow off
code auto:2544 multiply[Int16] -129[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2545 multiply[compile-time] -129[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:2546 multiply[Int16] -129[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2547 multiply[compile-time] -129[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 * 32767;
endcode
compile error

$overflow off
code auto:2548 multiply[Int16] -128[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2549 multiply[compile-time] -128[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:2550 multiply[Int16] -128[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2551 multiply[compile-time] -128[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -32768;
endcode
compile error

$overflow off
code auto:2552 multiply[Int16] -128[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2553 multiply[compile-time] -128[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:2554 multiply[Int16] -128[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2555 multiply[compile-time] -128[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -32767;
endcode
compile error

$overflow off
code auto:2556 multiply[Int16] -128[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2557 multiply[compile-time] -128[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * -129;
endcode
compile error

$overflow on
code auto:2558 multiply[Int16] -128[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2559 multiply[compile-time] -128[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -129;
endcode
compile error

$overflow off
code auto:2560 multiply[Int16] -128[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2561 multiply[compile-time] -128[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * -128;
endcode
compile error

$overflow on
code auto:2562 multiply[Int16] -128[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2563 multiply[compile-time] -128[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -128;
endcode
compile error

$overflow off
code auto:2564 multiply[Int16] -128[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2565 multiply[compile-time] -128[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * -1;
endcode
compile error

$overflow on
code auto:2566 multiply[Int16] -128[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2567 multiply[compile-time] -128[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * -1;
endcode
compile error

$overflow off
code auto:2568 multiply[Int16] -128[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2569 multiply[compile-time] -128[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:2570 multiply[Int16] -128[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2571 multiply[compile-time] -128[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:2572 multiply[Int16] -128[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2573 multiply[compile-time] -128[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * 1;
endcode
runtime noerror

$overflow on
code auto:2574 multiply[Int16] -128[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:2575 multiply[compile-time] -128[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 1;
endcode
varvalue r -128

$overflow off
code auto:2576 multiply[Int16] -128[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2577 multiply[compile-time] -128[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:2578 multiply[Int16] -128[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2579 multiply[compile-time] -128[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 127;
endcode
compile error

$overflow off
code auto:2580 multiply[Int16] -128[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2581 multiply[compile-time] -128[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * 128;
endcode
compile error

$overflow on
code auto:2582 multiply[Int16] -128[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2583 multiply[compile-time] -128[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 128;
endcode
compile error

$overflow off
code auto:2584 multiply[Int16] -128[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2585 multiply[compile-time] -128[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:2586 multiply[Int16] -128[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2587 multiply[compile-time] -128[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 * 32767;
endcode
compile error

$overflow off
code auto:2588 multiply[Int16] -1[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2589 multiply[compile-time] -1[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * -32768;
endcode
compile error

$overflow on
code auto:2590 multiply[Int16] -1[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2591 multiply[compile-time] -1[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -32768;
endcode
compile error

$overflow off
code auto:2592 multiply[Int16] -1[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2593 multiply[compile-time] -1[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * -32767;
endcode
compile error

$overflow on
code auto:2594 multiply[Int16] -1[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2595 multiply[compile-time] -1[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -32767;
endcode
compile error

$overflow off
code auto:2596 multiply[Int16] -1[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2597 multiply[compile-time] -1[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * -129;
endcode
compile error

$overflow on
code auto:2598 multiply[Int16] -1[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2599 multiply[compile-time] -1[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -129;
endcode
compile error

$overflow off
code auto:2600 multiply[Int16] -1[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2601 multiply[compile-time] -1[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * -128;
endcode
compile error

$overflow on
code auto:2602 multiply[Int16] -1[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2603 multiply[compile-time] -1[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -128;
endcode
compile error

$overflow off
code auto:2604 multiply[Int16] -1[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2605 multiply[compile-time] -1[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:2606 multiply[Int16] -1[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 1

code auto:2607 multiply[compile-time] -1[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:2608 multiply[Int16] -1[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2609 multiply[compile-time] -1[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:2610 multiply[Int16] -1[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2611 multiply[compile-time] -1[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2612 multiply[Int16] -1[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2613 multiply[compile-time] -1[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * 1;
endcode
runtime noerror

$overflow on
code auto:2614 multiply[Int16] -1[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -1

code auto:2615 multiply[compile-time] -1[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 1;
endcode
varvalue r -1

$overflow off
code auto:2616 multiply[Int16] -1[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2617 multiply[compile-time] -1[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * 127;
endcode
runtime noerror

$overflow on
code auto:2618 multiply[Int16] -1[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:2619 multiply[compile-time] -1[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 127;
endcode
varvalue r -127

$overflow off
code auto:2620 multiply[Int16] -1[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2621 multiply[compile-time] -1[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * 128;
endcode
runtime noerror

$overflow on
code auto:2622 multiply[Int16] -1[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:2623 multiply[compile-time] -1[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 128;
endcode
varvalue r -128

$overflow off
code auto:2624 multiply[Int16] -1[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2625 multiply[compile-time] -1[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 * 32767;
endcode
compile error

$overflow on
code auto:2626 multiply[Int16] -1[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2627 multiply[compile-time] -1[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 * 32767;
endcode
compile error

$overflow off
code auto:2628 multiply[Int16] 0[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2629 multiply[compile-time] 0[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * -32768;
endcode
runtime noerror

$overflow on
code auto:2630 multiply[Int16] 0[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2631 multiply[compile-time] 0[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow off
code auto:2632 multiply[Int16] 0[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2633 multiply[compile-time] 0[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * -32767;
endcode
runtime noerror

$overflow on
code auto:2634 multiply[Int16] 0[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2635 multiply[compile-time] 0[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow off
code auto:2636 multiply[Int16] 0[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2637 multiply[compile-time] 0[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * -129;
endcode
runtime noerror

$overflow on
code auto:2638 multiply[Int16] 0[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2639 multiply[compile-time] 0[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -129;
endcode
varvalue r 0

$overflow off
code auto:2640 multiply[Int16] 0[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2641 multiply[compile-time] 0[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:2642 multiply[Int16] 0[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2643 multiply[compile-time] 0[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:2644 multiply[Int16] 0[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2645 multiply[compile-time] 0[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:2646 multiply[Int16] 0[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2647 multiply[compile-time] 0[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:2648 multiply[Int16] 0[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2649 multiply[compile-time] 0[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:2650 multiply[Int16] 0[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2651 multiply[compile-time] 0[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:2652 multiply[Int16] 0[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2653 multiply[compile-time] 0[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:2654 multiply[Int16] 0[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2655 multiply[compile-time] 0[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:2656 multiply[Int16] 0[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2657 multiply[compile-time] 0[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:2658 multiply[Int16] 0[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2659 multiply[compile-time] 0[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:2660 multiply[Int16] 0[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2661 multiply[compile-time] 0[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:2662 multiply[Int16] 0[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2663 multiply[compile-time] 0[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:2664 multiply[Int16] 0[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2665 multiply[compile-time] 0[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:2666 multiply[Int16] 0[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2667 multiply[compile-time] 0[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:2668 multiply[Int16] 1[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2669 multiply[compile-time] 1[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * -32768;
endcode
compile error

$overflow on
code auto:2670 multiply[Int16] 1[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2671 multiply[compile-time] 1[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -32768;
endcode
compile error

$overflow off
code auto:2672 multiply[Int16] 1[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2673 multiply[compile-time] 1[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * -32767;
endcode
compile error

$overflow on
code auto:2674 multiply[Int16] 1[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2675 multiply[compile-time] 1[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -32767;
endcode
compile error

$overflow off
code auto:2676 multiply[Int16] 1[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2677 multiply[compile-time] 1[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * -129;
endcode
compile error

$overflow on
code auto:2678 multiply[Int16] 1[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2679 multiply[compile-time] 1[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -129;
endcode
compile error

$overflow off
code auto:2680 multiply[Int16] 1[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2681 multiply[compile-time] 1[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * -128;
endcode
runtime noerror

$overflow on
code auto:2682 multiply[Int16] 1[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:2683 multiply[compile-time] 1[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -128;
endcode
varvalue r -128

$overflow off
code auto:2684 multiply[Int16] 1[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2685 multiply[compile-time] 1[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * -1;
endcode
runtime noerror

$overflow on
code auto:2686 multiply[Int16] 1[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -1

code auto:2687 multiply[compile-time] 1[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * -1;
endcode
varvalue r -1

$overflow off
code auto:2688 multiply[Int16] 1[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2689 multiply[compile-time] 1[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:2690 multiply[Int16] 1[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2691 multiply[compile-time] 1[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:2692 multiply[Int16] 1[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2693 multiply[compile-time] 1[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:2694 multiply[Int16] 1[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 1

code auto:2695 multiply[compile-time] 1[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:2696 multiply[Int16] 1[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2697 multiply[compile-time] 1[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:2698 multiply[Int16] 1[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:2699 multiply[compile-time] 1[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:2700 multiply[Int16] 1[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2701 multiply[compile-time] 1[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 128;
endcode
compile error

$overflow on
code auto:2702 multiply[Int16] 1[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2703 multiply[compile-time] 1[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 128;
endcode
compile error

$overflow off
code auto:2704 multiply[Int16] 1[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2705 multiply[compile-time] 1[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 32767;
endcode
compile error

$overflow on
code auto:2706 multiply[Int16] 1[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2707 multiply[compile-time] 1[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 32767;
endcode
compile error

$overflow off
code auto:2708 multiply[Int16] 127[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2709 multiply[compile-time] 127[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:2710 multiply[Int16] 127[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2711 multiply[compile-time] 127[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -32768;
endcode
compile error

$overflow off
code auto:2712 multiply[Int16] 127[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2713 multiply[compile-time] 127[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:2714 multiply[Int16] 127[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2715 multiply[compile-time] 127[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -32767;
endcode
compile error

$overflow off
code auto:2716 multiply[Int16] 127[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2717 multiply[compile-time] 127[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * -129;
endcode
compile error

$overflow on
code auto:2718 multiply[Int16] 127[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2719 multiply[compile-time] 127[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -129;
endcode
compile error

$overflow off
code auto:2720 multiply[Int16] 127[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2721 multiply[compile-time] 127[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:2722 multiply[Int16] 127[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2723 multiply[compile-time] 127[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -128;
endcode
compile error

$overflow off
code auto:2724 multiply[Int16] 127[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2725 multiply[compile-time] 127[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * -1;
endcode
runtime noerror

$overflow on
code auto:2726 multiply[Int16] 127[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -127

code auto:2727 multiply[compile-time] 127[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * -1;
endcode
varvalue r -127

$overflow off
code auto:2728 multiply[Int16] 127[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2729 multiply[compile-time] 127[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:2730 multiply[Int16] 127[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2731 multiply[compile-time] 127[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:2732 multiply[Int16] 127[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2733 multiply[compile-time] 127[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:2734 multiply[Int16] 127[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:2735 multiply[compile-time] 127[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:2736 multiply[Int16] 127[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2737 multiply[compile-time] 127[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:2738 multiply[Int16] 127[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2739 multiply[compile-time] 127[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 127;
endcode
compile error

$overflow off
code auto:2740 multiply[Int16] 127[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2741 multiply[compile-time] 127[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 128;
endcode
compile error

$overflow on
code auto:2742 multiply[Int16] 127[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2743 multiply[compile-time] 127[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 128;
endcode
compile error

$overflow off
code auto:2744 multiply[Int16] 127[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2745 multiply[compile-time] 127[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:2746 multiply[Int16] 127[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2747 multiply[compile-time] 127[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 32767;
endcode
compile error

$overflow off
code auto:2748 multiply[Int16] 128[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2749 multiply[compile-time] 128[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:2750 multiply[Int16] 128[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2751 multiply[compile-time] 128[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * -32768;
endcode
compile error

$overflow off
code auto:2752 multiply[Int16] 128[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2753 multiply[compile-time] 128[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:2754 multiply[Int16] 128[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2755 multiply[compile-time] 128[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * -32767;
endcode
compile error

$overflow off
code auto:2756 multiply[Int16] 128[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2757 multiply[compile-time] 128[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * -129;
endcode
compile error

$overflow on
code auto:2758 multiply[Int16] 128[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2759 multiply[compile-time] 128[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * -129;
endcode
compile error

$overflow off
code auto:2760 multiply[Int16] 128[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2761 multiply[compile-time] 128[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * -128;
endcode
compile error

$overflow on
code auto:2762 multiply[Int16] 128[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2763 multiply[compile-time] 128[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * -128;
endcode
compile error

$overflow off
code auto:2764 multiply[Int16] 128[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2765 multiply[compile-time] 128[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * -1;
endcode
runtime noerror

$overflow on
code auto:2766 multiply[Int16] 128[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r -128

code auto:2767 multiply[compile-time] 128[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * -1;
endcode
varvalue r -128

$overflow off
code auto:2768 multiply[Int16] 128[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2769 multiply[compile-time] 128[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:2770 multiply[Int16] 128[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2771 multiply[compile-time] 128[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:2772 multiply[Int16] 128[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2773 multiply[compile-time] 128[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 1;
endcode
compile error

$overflow on
code auto:2774 multiply[Int16] 128[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2775 multiply[compile-time] 128[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 1;
endcode
compile error

$overflow off
code auto:2776 multiply[Int16] 128[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2777 multiply[compile-time] 128[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 127;
endcode
compile error

$overflow on
code auto:2778 multiply[Int16] 128[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2779 multiply[compile-time] 128[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 127;
endcode
compile error

$overflow off
code auto:2780 multiply[Int16] 128[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2781 multiply[compile-time] 128[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 128;
endcode
compile error

$overflow on
code auto:2782 multiply[Int16] 128[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2783 multiply[compile-time] 128[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 128;
endcode
compile error

$overflow off
code auto:2784 multiply[Int16] 128[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2785 multiply[compile-time] 128[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:2786 multiply[Int16] 128[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2787 multiply[compile-time] 128[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 32767;
endcode
compile error

$overflow off
code auto:2788 multiply[Int16] 32767[Int16], -32768[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2789 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:2790 multiply[Int16] 32767[Int16], -32768[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2791 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * -32768;
endcode
compile error

$overflow off
code auto:2792 multiply[Int16] 32767[Int16], -32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2793 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:2794 multiply[Int16] 32767[Int16], -32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2795 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * -32767;
endcode
compile error

$overflow off
code auto:2796 multiply[Int16] 32767[Int16], -129[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2797 multiply[compile-time] 32767[Int16], -129[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:2798 multiply[Int16] 32767[Int16], -129[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2799 multiply[compile-time] 32767[Int16], -129[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * -129;
endcode
compile error

$overflow off
code auto:2800 multiply[Int16] 32767[Int16], -128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2801 multiply[compile-time] 32767[Int16], -128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:2802 multiply[Int16] 32767[Int16], -128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2803 multiply[compile-time] 32767[Int16], -128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * -128;
endcode
compile error

$overflow off
code auto:2804 multiply[Int16] 32767[Int16], -1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2805 multiply[compile-time] 32767[Int16], -1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * -1;
endcode
compile error

$overflow on
code auto:2806 multiply[Int16] 32767[Int16], -1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2807 multiply[compile-time] 32767[Int16], -1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * -1;
endcode
compile error

$overflow off
code auto:2808 multiply[Int16] 32767[Int16], 0[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2809 multiply[compile-time] 32767[Int16], 0[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:2810 multiply[Int16] 32767[Int16], 0[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:2811 multiply[compile-time] 32767[Int16], 0[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:2812 multiply[Int16] 32767[Int16], 1[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2813 multiply[compile-time] 32767[Int16], 1[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 1;
endcode
compile error

$overflow on
code auto:2814 multiply[Int16] 32767[Int16], 1[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2815 multiply[compile-time] 32767[Int16], 1[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 1;
endcode
compile error

$overflow off
code auto:2816 multiply[Int16] 32767[Int16], 127[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2817 multiply[compile-time] 32767[Int16], 127[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:2818 multiply[Int16] 32767[Int16], 127[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2819 multiply[compile-time] 32767[Int16], 127[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 127;
endcode
compile error

$overflow off
code auto:2820 multiply[Int16] 32767[Int16], 128[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2821 multiply[compile-time] 32767[Int16], 128[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:2822 multiply[Int16] 32767[Int16], 128[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2823 multiply[compile-time] 32767[Int16], 128[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 128;
endcode
compile error

$overflow off
code auto:2824 multiply[Int16] 32767[Int16], 32767[Int16] -> [Int8] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:2825 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:2826 multiply[Int16] 32767[Int16], 32767[Int16] -> [Int8] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:2827 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:2828 multiply[Int16] -32768[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2829 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -32768;
endcode
compile error

$overflow on
code auto:2830 multiply[Int16] -32768[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2831 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -32767;
endcode
compile error

$overflow on
code auto:2832 multiply[Int16] -32768[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2833 multiply[compile-time] -32768[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -129;
endcode
compile error

$overflow on
code auto:2834 multiply[Int16] -32768[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2835 multiply[compile-time] -32768[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:2836 multiply[Int16] -32768[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2837 multiply[compile-time] -32768[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * -1;
endcode
compile error

$overflow on
code auto:2838 multiply[Int16] -32768[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2839 multiply[compile-time] -32768[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:2840 multiply[Int16] -32768[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:2841 multiply[compile-time] -32768[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 1;
endcode
varvalue r -32768

$overflow on
code auto:2842 multiply[Int16] -32768[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2843 multiply[compile-time] -32768[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:2844 multiply[Int16] -32768[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2845 multiply[compile-time] -32768[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:2846 multiply[Int16] -32768[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2847 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:2848 multiply[Int16] -32767[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2849 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -32768;
endcode
compile error

$overflow on
code auto:2850 multiply[Int16] -32767[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2851 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -32767;
endcode
compile error

$overflow on
code auto:2852 multiply[Int16] -32767[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2853 multiply[compile-time] -32767[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -129;
endcode
compile error

$overflow on
code auto:2854 multiply[Int16] -32767[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2855 multiply[compile-time] -32767[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:2856 multiply[Int16] -32767[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:2857 multiply[compile-time] -32767[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * -1;
endcode
varvalue r 32767

$overflow on
code auto:2858 multiply[Int16] -32767[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2859 multiply[compile-time] -32767[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:2860 multiply[Int16] -32767[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:2861 multiply[compile-time] -32767[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 1;
endcode
varvalue r -32767

$overflow on
code auto:2862 multiply[Int16] -32767[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2863 multiply[compile-time] -32767[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:2864 multiply[Int16] -32767[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2865 multiply[compile-time] -32767[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:2866 multiply[Int16] -32767[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2867 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:2868 multiply[Int16] -129[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2869 multiply[compile-time] -129[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -32768;
endcode
compile error

$overflow on
code auto:2870 multiply[Int16] -129[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2871 multiply[compile-time] -129[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -32767;
endcode
compile error

$overflow on
code auto:2872 multiply[Int16] -129[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16641

code auto:2873 multiply[compile-time] -129[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -129;
endcode
varvalue r 16641

$overflow on
code auto:2874 multiply[Int16] -129[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:2875 multiply[compile-time] -129[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -128;
endcode
varvalue r 16512

$overflow on
code auto:2876 multiply[Int16] -129[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:2877 multiply[compile-time] -129[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * -1;
endcode
varvalue r 129

$overflow on
code auto:2878 multiply[Int16] -129[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2879 multiply[compile-time] -129[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 0;
endcode
varvalue r 0

$overflow on
code auto:2880 multiply[Int16] -129[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:2881 multiply[compile-time] -129[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 1;
endcode
varvalue r -129

$overflow on
code auto:2882 multiply[Int16] -129[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:2883 multiply[compile-time] -129[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 127;
endcode
varvalue r -16383

$overflow on
code auto:2884 multiply[Int16] -129[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:2885 multiply[compile-time] -129[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 128;
endcode
varvalue r -16512

$overflow on
code auto:2886 multiply[Int16] -129[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2887 multiply[compile-time] -129[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:2888 multiply[Int16] -128[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2889 multiply[compile-time] -128[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:2890 multiply[Int16] -128[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2891 multiply[compile-time] -128[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:2892 multiply[Int16] -128[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16512

code auto:2893 multiply[compile-time] -128[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -129;
endcode
varvalue r 16512

$overflow on
code auto:2894 multiply[Int16] -128[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:2895 multiply[compile-time] -128[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow on
code auto:2896 multiply[Int16] -128[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:2897 multiply[compile-time] -128[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * -1;
endcode
varvalue r 128

$overflow on
code auto:2898 multiply[Int16] -128[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2899 multiply[compile-time] -128[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 0;
endcode
varvalue r 0

$overflow on
code auto:2900 multiply[Int16] -128[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2901 multiply[compile-time] -128[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 1;
endcode
varvalue r -128

$overflow on
code auto:2902 multiply[Int16] -128[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:2903 multiply[compile-time] -128[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 127;
endcode
varvalue r -16256

$overflow on
code auto:2904 multiply[Int16] -128[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:2905 multiply[compile-time] -128[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 128;
endcode
varvalue r -16384

$overflow on
code auto:2906 multiply[Int16] -128[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2907 multiply[compile-time] -128[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:2908 multiply[Int16] -1[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2909 multiply[compile-time] -1[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32768;
endcode
compile error

$overflow on
code auto:2910 multiply[Int16] -1[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:2911 multiply[compile-time] -1[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -32767;
endcode
varvalue r 32767

$overflow on
code auto:2912 multiply[Int16] -1[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 129

code auto:2913 multiply[compile-time] -1[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -129;
endcode
varvalue r 129

$overflow on
code auto:2914 multiply[Int16] -1[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:2915 multiply[compile-time] -1[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -128;
endcode
varvalue r 128

$overflow on
code auto:2916 multiply[Int16] -1[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:2917 multiply[compile-time] -1[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * -1;
endcode
varvalue r 1

$overflow on
code auto:2918 multiply[Int16] -1[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2919 multiply[compile-time] -1[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 0;
endcode
varvalue r 0

$overflow on
code auto:2920 multiply[Int16] -1[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:2921 multiply[compile-time] -1[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 1;
endcode
varvalue r -1

$overflow on
code auto:2922 multiply[Int16] -1[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2923 multiply[compile-time] -1[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 127;
endcode
varvalue r -127

$overflow on
code auto:2924 multiply[Int16] -1[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2925 multiply[compile-time] -1[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 128;
endcode
varvalue r -128

$overflow on
code auto:2926 multiply[Int16] -1[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:2927 multiply[compile-time] -1[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := -1 * 32767;
endcode
varvalue r -32767

$overflow on
code auto:2928 multiply[Int16] 0[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2929 multiply[compile-time] 0[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow on
code auto:2930 multiply[Int16] 0[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2931 multiply[compile-time] 0[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow on
code auto:2932 multiply[Int16] 0[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2933 multiply[compile-time] 0[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -129;
endcode
varvalue r 0

$overflow on
code auto:2934 multiply[Int16] 0[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2935 multiply[compile-time] 0[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -128;
endcode
varvalue r 0

$overflow on
code auto:2936 multiply[Int16] 0[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2937 multiply[compile-time] 0[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * -1;
endcode
varvalue r 0

$overflow on
code auto:2938 multiply[Int16] 0[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2939 multiply[compile-time] 0[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:2940 multiply[Int16] 0[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2941 multiply[compile-time] 0[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:2942 multiply[Int16] 0[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2943 multiply[compile-time] 0[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:2944 multiply[Int16] 0[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2945 multiply[compile-time] 0[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:2946 multiply[Int16] 0[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2947 multiply[compile-time] 0[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:2948 multiply[Int16] 1[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32768

code auto:2949 multiply[compile-time] 1[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32768;
endcode
varvalue r -32768

$overflow on
code auto:2950 multiply[Int16] 1[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:2951 multiply[compile-time] 1[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -32767;
endcode
varvalue r -32767

$overflow on
code auto:2952 multiply[Int16] 1[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -129

code auto:2953 multiply[compile-time] 1[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -129;
endcode
varvalue r -129

$overflow on
code auto:2954 multiply[Int16] 1[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2955 multiply[compile-time] 1[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -128;
endcode
varvalue r -128

$overflow on
code auto:2956 multiply[Int16] 1[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -1

code auto:2957 multiply[compile-time] 1[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * -1;
endcode
varvalue r -1

$overflow on
code auto:2958 multiply[Int16] 1[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2959 multiply[compile-time] 1[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:2960 multiply[Int16] 1[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:2961 multiply[compile-time] 1[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:2962 multiply[Int16] 1[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2963 multiply[compile-time] 1[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:2964 multiply[Int16] 1[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:2965 multiply[compile-time] 1[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:2966 multiply[Int16] 1[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:2967 multiply[compile-time] 1[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow on
code auto:2968 multiply[Int16] 127[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2969 multiply[compile-time] 127[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:2970 multiply[Int16] 127[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2971 multiply[compile-time] 127[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:2972 multiply[Int16] 127[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16383

code auto:2973 multiply[compile-time] 127[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -129;
endcode
varvalue r -16383

$overflow on
code auto:2974 multiply[Int16] 127[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16256

code auto:2975 multiply[compile-time] 127[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -128;
endcode
varvalue r -16256

$overflow on
code auto:2976 multiply[Int16] 127[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -127

code auto:2977 multiply[compile-time] 127[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * -1;
endcode
varvalue r -127

$overflow on
code auto:2978 multiply[Int16] 127[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2979 multiply[compile-time] 127[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:2980 multiply[Int16] 127[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:2981 multiply[compile-time] 127[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:2982 multiply[Int16] 127[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16129

code auto:2983 multiply[compile-time] 127[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow on
code auto:2984 multiply[Int16] 127[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:2985 multiply[compile-time] 127[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow on
code auto:2986 multiply[Int16] 127[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2987 multiply[compile-time] 127[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:2988 multiply[Int16] 128[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2989 multiply[compile-time] 128[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:2990 multiply[Int16] 128[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:2991 multiply[compile-time] 128[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:2992 multiply[Int16] 128[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16512

code auto:2993 multiply[compile-time] 128[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -129;
endcode
varvalue r -16512

$overflow on
code auto:2994 multiply[Int16] 128[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -16384

code auto:2995 multiply[compile-time] 128[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -128;
endcode
varvalue r -16384

$overflow on
code auto:2996 multiply[Int16] 128[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -128

code auto:2997 multiply[compile-time] 128[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * -1;
endcode
varvalue r -128

$overflow on
code auto:2998 multiply[Int16] 128[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:2999 multiply[compile-time] 128[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:3000 multiply[Int16] 128[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:3001 multiply[compile-time] 128[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:3002 multiply[Int16] 128[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16256

code auto:3003 multiply[compile-time] 128[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow on
code auto:3004 multiply[Int16] 128[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 16384

code auto:3005 multiply[compile-time] 128[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow on
code auto:3006 multiply[Int16] 128[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3007 multiply[compile-time] 128[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:3008 multiply[Int16] 32767[Int16], -32768[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3009 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:3010 multiply[Int16] 32767[Int16], -32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3011 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:3012 multiply[Int16] 32767[Int16], -129[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3013 multiply[compile-time] 32767[Int16], -129[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:3014 multiply[Int16] 32767[Int16], -128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3015 multiply[compile-time] 32767[Int16], -128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:3016 multiply[Int16] 32767[Int16], -1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r -32767

code auto:3017 multiply[compile-time] 32767[Int16], -1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * -1;
endcode
varvalue r -32767

$overflow on
code auto:3018 multiply[Int16] 32767[Int16], 0[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3019 multiply[compile-time] 32767[Int16], 0[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:3020 multiply[Int16] 32767[Int16], 1[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 32767

code auto:3021 multiply[compile-time] 32767[Int16], 1[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow on
code auto:3022 multiply[Int16] 32767[Int16], 127[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3023 multiply[compile-time] 32767[Int16], 127[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:3024 multiply[Int16] 32767[Int16], 128[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3025 multiply[compile-time] 32767[Int16], 128[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:3026 multiply[Int16] 32767[Int16], 32767[Int16] -> [Int16] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3027 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:3028 multiply[Int16] -32768[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3029 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * -32768;
endcode
compile error

$overflow on
code auto:3030 multiply[Int16] -32768[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3031 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * -32768;
endcode
compile error

$overflow off
code auto:3032 multiply[Int16] -32768[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3033 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * -32767;
endcode
compile error

$overflow on
code auto:3034 multiply[Int16] -32768[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3035 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * -32767;
endcode
compile error

$overflow off
code auto:3036 multiply[Int16] -32768[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3037 multiply[compile-time] -32768[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * -129;
endcode
compile error

$overflow on
code auto:3038 multiply[Int16] -32768[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3039 multiply[compile-time] -32768[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * -129;
endcode
compile error

$overflow off
code auto:3040 multiply[Int16] -32768[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3041 multiply[compile-time] -32768[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:3042 multiply[Int16] -32768[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3043 multiply[compile-time] -32768[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * -128;
endcode
compile error

$overflow off
code auto:3044 multiply[Int16] -32768[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3045 multiply[compile-time] -32768[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * -1;
endcode
compile error

$overflow on
code auto:3046 multiply[Int16] -32768[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3047 multiply[compile-time] -32768[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * -1;
endcode
compile error

$overflow off
code auto:3048 multiply[Int16] -32768[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3049 multiply[compile-time] -32768[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * 0;
endcode
runtime noerror

$overflow on
code auto:3050 multiply[Int16] -32768[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3051 multiply[compile-time] -32768[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:3052 multiply[Int16] -32768[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3053 multiply[compile-time] -32768[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * 1;
endcode
compile error

$overflow on
code auto:3054 multiply[Int16] -32768[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3055 multiply[compile-time] -32768[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * 1;
endcode
compile error

$overflow off
code auto:3056 multiply[Int16] -32768[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3057 multiply[compile-time] -32768[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:3058 multiply[Int16] -32768[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3059 multiply[compile-time] -32768[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * 127;
endcode
compile error

$overflow off
code auto:3060 multiply[Int16] -32768[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3061 multiply[compile-time] -32768[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:3062 multiply[Int16] -32768[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3063 multiply[compile-time] -32768[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * 128;
endcode
compile error

$overflow off
code auto:3064 multiply[Int16] -32768[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3065 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:3066 multiply[Int16] -32768[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3067 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 * 32767;
endcode
compile error

$overflow off
code auto:3068 multiply[Int16] -32767[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3069 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * -32768;
endcode
compile error

$overflow on
code auto:3070 multiply[Int16] -32767[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3071 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * -32768;
endcode
compile error

$overflow off
code auto:3072 multiply[Int16] -32767[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3073 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * -32767;
endcode
compile error

$overflow on
code auto:3074 multiply[Int16] -32767[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3075 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * -32767;
endcode
compile error

$overflow off
code auto:3076 multiply[Int16] -32767[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3077 multiply[compile-time] -32767[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * -129;
endcode
compile error

$overflow on
code auto:3078 multiply[Int16] -32767[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3079 multiply[compile-time] -32767[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * -129;
endcode
compile error

$overflow off
code auto:3080 multiply[Int16] -32767[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3081 multiply[compile-time] -32767[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:3082 multiply[Int16] -32767[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3083 multiply[compile-time] -32767[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * -128;
endcode
compile error

$overflow off
code auto:3084 multiply[Int16] -32767[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3085 multiply[compile-time] -32767[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * -1;
endcode
compile error

$overflow on
code auto:3086 multiply[Int16] -32767[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3087 multiply[compile-time] -32767[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * -1;
endcode
compile error

$overflow off
code auto:3088 multiply[Int16] -32767[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3089 multiply[compile-time] -32767[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * 0;
endcode
runtime noerror

$overflow on
code auto:3090 multiply[Int16] -32767[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3091 multiply[compile-time] -32767[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:3092 multiply[Int16] -32767[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3093 multiply[compile-time] -32767[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * 1;
endcode
compile error

$overflow on
code auto:3094 multiply[Int16] -32767[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3095 multiply[compile-time] -32767[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * 1;
endcode
compile error

$overflow off
code auto:3096 multiply[Int16] -32767[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3097 multiply[compile-time] -32767[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:3098 multiply[Int16] -32767[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3099 multiply[compile-time] -32767[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * 127;
endcode
compile error

$overflow off
code auto:3100 multiply[Int16] -32767[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3101 multiply[compile-time] -32767[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:3102 multiply[Int16] -32767[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3103 multiply[compile-time] -32767[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * 128;
endcode
compile error

$overflow off
code auto:3104 multiply[Int16] -32767[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3105 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:3106 multiply[Int16] -32767[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3107 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 * 32767;
endcode
compile error

$overflow off
code auto:3108 multiply[Int16] -129[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3109 multiply[compile-time] -129[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * -32768;
endcode
compile error

$overflow on
code auto:3110 multiply[Int16] -129[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3111 multiply[compile-time] -129[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * -32768;
endcode
compile error

$overflow off
code auto:3112 multiply[Int16] -129[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3113 multiply[compile-time] -129[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * -32767;
endcode
compile error

$overflow on
code auto:3114 multiply[Int16] -129[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3115 multiply[compile-time] -129[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * -32767;
endcode
compile error

$overflow off
code auto:3116 multiply[Int16] -129[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3117 multiply[compile-time] -129[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * -129;
endcode
compile error

$overflow on
code auto:3118 multiply[Int16] -129[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3119 multiply[compile-time] -129[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * -129;
endcode
compile error

$overflow off
code auto:3120 multiply[Int16] -129[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3121 multiply[compile-time] -129[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * -128;
endcode
compile error

$overflow on
code auto:3122 multiply[Int16] -129[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3123 multiply[compile-time] -129[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * -128;
endcode
compile error

$overflow off
code auto:3124 multiply[Int16] -129[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3125 multiply[compile-time] -129[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * -1;
endcode
runtime noerror

$overflow on
code auto:3126 multiply[Int16] -129[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 129

code auto:3127 multiply[compile-time] -129[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * -1;
endcode
varvalue r 129

$overflow off
code auto:3128 multiply[Int16] -129[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3129 multiply[compile-time] -129[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * 0;
endcode
runtime noerror

$overflow on
code auto:3130 multiply[Int16] -129[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3131 multiply[compile-time] -129[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * 0;
endcode
varvalue r 0

$overflow off
code auto:3132 multiply[Int16] -129[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3133 multiply[compile-time] -129[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * 1;
endcode
compile error

$overflow on
code auto:3134 multiply[Int16] -129[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3135 multiply[compile-time] -129[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * 1;
endcode
compile error

$overflow off
code auto:3136 multiply[Int16] -129[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3137 multiply[compile-time] -129[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * 127;
endcode
compile error

$overflow on
code auto:3138 multiply[Int16] -129[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3139 multiply[compile-time] -129[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * 127;
endcode
compile error

$overflow off
code auto:3140 multiply[Int16] -129[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3141 multiply[compile-time] -129[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * 128;
endcode
compile error

$overflow on
code auto:3142 multiply[Int16] -129[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3143 multiply[compile-time] -129[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * 128;
endcode
compile error

$overflow off
code auto:3144 multiply[Int16] -129[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3145 multiply[compile-time] -129[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:3146 multiply[Int16] -129[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3147 multiply[compile-time] -129[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 * 32767;
endcode
compile error

$overflow off
code auto:3148 multiply[Int16] -128[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3149 multiply[compile-time] -128[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:3150 multiply[Int16] -128[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3151 multiply[compile-time] -128[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -32768;
endcode
compile error

$overflow off
code auto:3152 multiply[Int16] -128[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3153 multiply[compile-time] -128[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:3154 multiply[Int16] -128[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3155 multiply[compile-time] -128[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -32767;
endcode
compile error

$overflow off
code auto:3156 multiply[Int16] -128[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3157 multiply[compile-time] -128[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -129;
endcode
compile error

$overflow on
code auto:3158 multiply[Int16] -128[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3159 multiply[compile-time] -128[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -129;
endcode
compile error

$overflow off
code auto:3160 multiply[Int16] -128[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3161 multiply[compile-time] -128[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -128;
endcode
compile error

$overflow on
code auto:3162 multiply[Int16] -128[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3163 multiply[compile-time] -128[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -128;
endcode
compile error

$overflow off
code auto:3164 multiply[Int16] -128[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3165 multiply[compile-time] -128[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * -1;
endcode
runtime noerror

$overflow on
code auto:3166 multiply[Int16] -128[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:3167 multiply[compile-time] -128[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * -1;
endcode
varvalue r 128

$overflow off
code auto:3168 multiply[Int16] -128[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3169 multiply[compile-time] -128[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:3170 multiply[Int16] -128[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3171 multiply[compile-time] -128[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3172 multiply[Int16] -128[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3173 multiply[compile-time] -128[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 1;
endcode
compile error

$overflow on
code auto:3174 multiply[Int16] -128[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3175 multiply[compile-time] -128[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 1;
endcode
compile error

$overflow off
code auto:3176 multiply[Int16] -128[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3177 multiply[compile-time] -128[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:3178 multiply[Int16] -128[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3179 multiply[compile-time] -128[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 127;
endcode
compile error

$overflow off
code auto:3180 multiply[Int16] -128[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3181 multiply[compile-time] -128[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 128;
endcode
compile error

$overflow on
code auto:3182 multiply[Int16] -128[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3183 multiply[compile-time] -128[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 128;
endcode
compile error

$overflow off
code auto:3184 multiply[Int16] -128[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3185 multiply[compile-time] -128[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:3186 multiply[Int16] -128[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3187 multiply[compile-time] -128[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 * 32767;
endcode
compile error

$overflow off
code auto:3188 multiply[Int16] -1[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3189 multiply[compile-time] -1[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -32768;
endcode
compile error

$overflow on
code auto:3190 multiply[Int16] -1[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3191 multiply[compile-time] -1[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -32768;
endcode
compile error

$overflow off
code auto:3192 multiply[Int16] -1[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3193 multiply[compile-time] -1[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -32767;
endcode
compile error

$overflow on
code auto:3194 multiply[Int16] -1[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3195 multiply[compile-time] -1[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -32767;
endcode
compile error

$overflow off
code auto:3196 multiply[Int16] -1[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3197 multiply[compile-time] -1[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -129;
endcode
runtime noerror

$overflow on
code auto:3198 multiply[Int16] -1[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 129

code auto:3199 multiply[compile-time] -1[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -129;
endcode
varvalue r 129

$overflow off
code auto:3200 multiply[Int16] -1[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3201 multiply[compile-time] -1[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -128;
endcode
runtime noerror

$overflow on
code auto:3202 multiply[Int16] -1[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:3203 multiply[compile-time] -1[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -128;
endcode
varvalue r 128

$overflow off
code auto:3204 multiply[Int16] -1[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3205 multiply[compile-time] -1[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:3206 multiply[Int16] -1[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:3207 multiply[compile-time] -1[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:3208 multiply[Int16] -1[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3209 multiply[compile-time] -1[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:3210 multiply[Int16] -1[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3211 multiply[compile-time] -1[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3212 multiply[Int16] -1[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3213 multiply[compile-time] -1[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 1;
endcode
compile error

$overflow on
code auto:3214 multiply[Int16] -1[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3215 multiply[compile-time] -1[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 1;
endcode
compile error

$overflow off
code auto:3216 multiply[Int16] -1[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3217 multiply[compile-time] -1[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 127;
endcode
compile error

$overflow on
code auto:3218 multiply[Int16] -1[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3219 multiply[compile-time] -1[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 127;
endcode
compile error

$overflow off
code auto:3220 multiply[Int16] -1[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3221 multiply[compile-time] -1[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 128;
endcode
compile error

$overflow on
code auto:3222 multiply[Int16] -1[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3223 multiply[compile-time] -1[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 128;
endcode
compile error

$overflow off
code auto:3224 multiply[Int16] -1[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3225 multiply[compile-time] -1[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 * 32767;
endcode
compile error

$overflow on
code auto:3226 multiply[Int16] -1[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3227 multiply[compile-time] -1[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 * 32767;
endcode
compile error

$overflow off
code auto:3228 multiply[Int16] 0[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3229 multiply[compile-time] 0[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -32768;
endcode
runtime noerror

$overflow on
code auto:3230 multiply[Int16] 0[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3231 multiply[compile-time] 0[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow off
code auto:3232 multiply[Int16] 0[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3233 multiply[compile-time] 0[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -32767;
endcode
runtime noerror

$overflow on
code auto:3234 multiply[Int16] 0[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3235 multiply[compile-time] 0[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow off
code auto:3236 multiply[Int16] 0[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3237 multiply[compile-time] 0[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -129;
endcode
runtime noerror

$overflow on
code auto:3238 multiply[Int16] 0[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3239 multiply[compile-time] 0[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -129;
endcode
varvalue r 0

$overflow off
code auto:3240 multiply[Int16] 0[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3241 multiply[compile-time] 0[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:3242 multiply[Int16] 0[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3243 multiply[compile-time] 0[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:3244 multiply[Int16] 0[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3245 multiply[compile-time] 0[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:3246 multiply[Int16] 0[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3247 multiply[compile-time] 0[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:3248 multiply[Int16] 0[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3249 multiply[compile-time] 0[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:3250 multiply[Int16] 0[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3251 multiply[compile-time] 0[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:3252 multiply[Int16] 0[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3253 multiply[compile-time] 0[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:3254 multiply[Int16] 0[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3255 multiply[compile-time] 0[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:3256 multiply[Int16] 0[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3257 multiply[compile-time] 0[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:3258 multiply[Int16] 0[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3259 multiply[compile-time] 0[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:3260 multiply[Int16] 0[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3261 multiply[compile-time] 0[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:3262 multiply[Int16] 0[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3263 multiply[compile-time] 0[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:3264 multiply[Int16] 0[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3265 multiply[compile-time] 0[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:3266 multiply[Int16] 0[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3267 multiply[compile-time] 0[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:3268 multiply[Int16] 1[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3269 multiply[compile-time] 1[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -32768;
endcode
compile error

$overflow on
code auto:3270 multiply[Int16] 1[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3271 multiply[compile-time] 1[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -32768;
endcode
compile error

$overflow off
code auto:3272 multiply[Int16] 1[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3273 multiply[compile-time] 1[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -32767;
endcode
compile error

$overflow on
code auto:3274 multiply[Int16] 1[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3275 multiply[compile-time] 1[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -32767;
endcode
compile error

$overflow off
code auto:3276 multiply[Int16] 1[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3277 multiply[compile-time] 1[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -129;
endcode
compile error

$overflow on
code auto:3278 multiply[Int16] 1[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3279 multiply[compile-time] 1[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -129;
endcode
compile error

$overflow off
code auto:3280 multiply[Int16] 1[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3281 multiply[compile-time] 1[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -128;
endcode
compile error

$overflow on
code auto:3282 multiply[Int16] 1[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3283 multiply[compile-time] 1[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -128;
endcode
compile error

$overflow off
code auto:3284 multiply[Int16] 1[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3285 multiply[compile-time] 1[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * -1;
endcode
compile error

$overflow on
code auto:3286 multiply[Int16] 1[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3287 multiply[compile-time] 1[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * -1;
endcode
compile error

$overflow off
code auto:3288 multiply[Int16] 1[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3289 multiply[compile-time] 1[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:3290 multiply[Int16] 1[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3291 multiply[compile-time] 1[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3292 multiply[Int16] 1[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3293 multiply[compile-time] 1[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:3294 multiply[Int16] 1[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:3295 multiply[compile-time] 1[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:3296 multiply[Int16] 1[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3297 multiply[compile-time] 1[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:3298 multiply[Int16] 1[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:3299 multiply[compile-time] 1[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:3300 multiply[Int16] 1[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3301 multiply[compile-time] 1[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 128;
endcode
runtime noerror

$overflow on
code auto:3302 multiply[Int16] 1[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:3303 multiply[compile-time] 1[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 128;
endcode
varvalue r 128

$overflow off
code auto:3304 multiply[Int16] 1[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3305 multiply[compile-time] 1[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 * 32767;
endcode
compile error

$overflow on
code auto:3306 multiply[Int16] 1[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3307 multiply[compile-time] 1[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 32767;
endcode
compile error

$overflow off
code auto:3308 multiply[Int16] 127[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3309 multiply[compile-time] 127[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:3310 multiply[Int16] 127[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3311 multiply[compile-time] 127[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -32768;
endcode
compile error

$overflow off
code auto:3312 multiply[Int16] 127[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3313 multiply[compile-time] 127[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:3314 multiply[Int16] 127[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3315 multiply[compile-time] 127[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -32767;
endcode
compile error

$overflow off
code auto:3316 multiply[Int16] 127[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3317 multiply[compile-time] 127[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -129;
endcode
compile error

$overflow on
code auto:3318 multiply[Int16] 127[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3319 multiply[compile-time] 127[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -129;
endcode
compile error

$overflow off
code auto:3320 multiply[Int16] 127[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3321 multiply[compile-time] 127[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:3322 multiply[Int16] 127[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3323 multiply[compile-time] 127[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -128;
endcode
compile error

$overflow off
code auto:3324 multiply[Int16] 127[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3325 multiply[compile-time] 127[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * -1;
endcode
compile error

$overflow on
code auto:3326 multiply[Int16] 127[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3327 multiply[compile-time] 127[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * -1;
endcode
compile error

$overflow off
code auto:3328 multiply[Int16] 127[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3329 multiply[compile-time] 127[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:3330 multiply[Int16] 127[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3331 multiply[compile-time] 127[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:3332 multiply[Int16] 127[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3333 multiply[compile-time] 127[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:3334 multiply[Int16] 127[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:3335 multiply[compile-time] 127[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:3336 multiply[Int16] 127[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3337 multiply[compile-time] 127[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:3338 multiply[Int16] 127[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3339 multiply[compile-time] 127[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow off
code auto:3340 multiply[Int16] 127[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3341 multiply[compile-time] 127[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 128;
endcode
compile error

$overflow on
code auto:3342 multiply[Int16] 127[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3343 multiply[compile-time] 127[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 128;
endcode
compile error

$overflow off
code auto:3344 multiply[Int16] 127[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3345 multiply[compile-time] 127[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:3346 multiply[Int16] 127[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3347 multiply[compile-time] 127[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 32767;
endcode
compile error

$overflow off
code auto:3348 multiply[Int16] 128[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3349 multiply[compile-time] 128[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:3350 multiply[Int16] 128[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3351 multiply[compile-time] 128[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * -32768;
endcode
compile error

$overflow off
code auto:3352 multiply[Int16] 128[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3353 multiply[compile-time] 128[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:3354 multiply[Int16] 128[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3355 multiply[compile-time] 128[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * -32767;
endcode
compile error

$overflow off
code auto:3356 multiply[Int16] 128[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3357 multiply[compile-time] 128[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * -129;
endcode
compile error

$overflow on
code auto:3358 multiply[Int16] 128[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3359 multiply[compile-time] 128[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * -129;
endcode
compile error

$overflow off
code auto:3360 multiply[Int16] 128[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3361 multiply[compile-time] 128[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * -128;
endcode
compile error

$overflow on
code auto:3362 multiply[Int16] 128[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3363 multiply[compile-time] 128[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * -128;
endcode
compile error

$overflow off
code auto:3364 multiply[Int16] 128[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3365 multiply[compile-time] 128[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * -1;
endcode
compile error

$overflow on
code auto:3366 multiply[Int16] 128[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3367 multiply[compile-time] 128[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * -1;
endcode
compile error

$overflow off
code auto:3368 multiply[Int16] 128[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3369 multiply[compile-time] 128[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:3370 multiply[Int16] 128[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3371 multiply[compile-time] 128[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3372 multiply[Int16] 128[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3373 multiply[compile-time] 128[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * 1;
endcode
runtime noerror

$overflow on
code auto:3374 multiply[Int16] 128[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:3375 multiply[compile-time] 128[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 1;
endcode
varvalue r 128

$overflow off
code auto:3376 multiply[Int16] 128[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3377 multiply[compile-time] 128[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * 127;
endcode
compile error

$overflow on
code auto:3378 multiply[Int16] 128[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3379 multiply[compile-time] 128[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 127;
endcode
compile error

$overflow off
code auto:3380 multiply[Int16] 128[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3381 multiply[compile-time] 128[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * 128;
endcode
compile error

$overflow on
code auto:3382 multiply[Int16] 128[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3383 multiply[compile-time] 128[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 128;
endcode
compile error

$overflow off
code auto:3384 multiply[Int16] 128[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3385 multiply[compile-time] 128[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:3386 multiply[Int16] 128[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3387 multiply[compile-time] 128[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 32767;
endcode
compile error

$overflow off
code auto:3388 multiply[Int16] 32767[Int16], -32768[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3389 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:3390 multiply[Int16] 32767[Int16], -32768[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3391 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * -32768;
endcode
compile error

$overflow off
code auto:3392 multiply[Int16] 32767[Int16], -32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3393 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:3394 multiply[Int16] 32767[Int16], -32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3395 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * -32767;
endcode
compile error

$overflow off
code auto:3396 multiply[Int16] 32767[Int16], -129[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3397 multiply[compile-time] 32767[Int16], -129[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:3398 multiply[Int16] 32767[Int16], -129[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3399 multiply[compile-time] 32767[Int16], -129[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * -129;
endcode
compile error

$overflow off
code auto:3400 multiply[Int16] 32767[Int16], -128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3401 multiply[compile-time] 32767[Int16], -128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:3402 multiply[Int16] 32767[Int16], -128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3403 multiply[compile-time] 32767[Int16], -128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * -128;
endcode
compile error

$overflow off
code auto:3404 multiply[Int16] 32767[Int16], -1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3405 multiply[compile-time] 32767[Int16], -1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * -1;
endcode
compile error

$overflow on
code auto:3406 multiply[Int16] 32767[Int16], -1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3407 multiply[compile-time] 32767[Int16], -1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * -1;
endcode
compile error

$overflow off
code auto:3408 multiply[Int16] 32767[Int16], 0[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3409 multiply[compile-time] 32767[Int16], 0[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:3410 multiply[Int16] 32767[Int16], 0[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:3411 multiply[compile-time] 32767[Int16], 0[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:3412 multiply[Int16] 32767[Int16], 1[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3413 multiply[compile-time] 32767[Int16], 1[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 1;
endcode
compile error

$overflow on
code auto:3414 multiply[Int16] 32767[Int16], 1[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3415 multiply[compile-time] 32767[Int16], 1[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 1;
endcode
compile error

$overflow off
code auto:3416 multiply[Int16] 32767[Int16], 127[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3417 multiply[compile-time] 32767[Int16], 127[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:3418 multiply[Int16] 32767[Int16], 127[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3419 multiply[compile-time] 32767[Int16], 127[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 127;
endcode
compile error

$overflow off
code auto:3420 multiply[Int16] 32767[Int16], 128[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3421 multiply[compile-time] 32767[Int16], 128[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:3422 multiply[Int16] 32767[Int16], 128[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3423 multiply[compile-time] 32767[Int16], 128[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 128;
endcode
compile error

$overflow off
code auto:3424 multiply[Int16] 32767[Int16], 32767[Int16] -> [Byte] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:3425 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:3426 multiply[Int16] 32767[Int16], 32767[Int16] -> [Byte] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:3427 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:3428 multiply[Int16] -32768[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3429 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * -32768;
endcode
compile error

$overflow on
code auto:3430 multiply[Int16] -32768[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3431 multiply[compile-time] -32768[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * -32768;
endcode
compile error

$overflow off
code auto:3432 multiply[Int16] -32768[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3433 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * -32767;
endcode
compile error

$overflow on
code auto:3434 multiply[Int16] -32768[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3435 multiply[compile-time] -32768[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * -32767;
endcode
compile error

$overflow off
code auto:3436 multiply[Int16] -32768[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3437 multiply[compile-time] -32768[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * -129;
endcode
compile error

$overflow on
code auto:3438 multiply[Int16] -32768[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3439 multiply[compile-time] -32768[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * -129;
endcode
compile error

$overflow off
code auto:3440 multiply[Int16] -32768[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3441 multiply[compile-time] -32768[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * -128;
endcode
compile error

$overflow on
code auto:3442 multiply[Int16] -32768[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3443 multiply[compile-time] -32768[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * -128;
endcode
compile error

$overflow off
code auto:3444 multiply[Int16] -32768[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3445 multiply[compile-time] -32768[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * -1;
endcode
runtime noerror

$overflow on
code auto:3446 multiply[Int16] -32768[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3447 multiply[compile-time] -32768[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * -1;
endcode
varvalue r 32768

$overflow off
code auto:3448 multiply[Int16] -32768[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3449 multiply[compile-time] -32768[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * 0;
endcode
runtime noerror

$overflow on
code auto:3450 multiply[Int16] -32768[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3451 multiply[compile-time] -32768[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:3452 multiply[Int16] -32768[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3453 multiply[compile-time] -32768[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * 1;
endcode
compile error

$overflow on
code auto:3454 multiply[Int16] -32768[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3455 multiply[compile-time] -32768[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * 1;
endcode
compile error

$overflow off
code auto:3456 multiply[Int16] -32768[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3457 multiply[compile-time] -32768[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * 127;
endcode
compile error

$overflow on
code auto:3458 multiply[Int16] -32768[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3459 multiply[compile-time] -32768[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * 127;
endcode
compile error

$overflow off
code auto:3460 multiply[Int16] -32768[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3461 multiply[compile-time] -32768[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * 128;
endcode
compile error

$overflow on
code auto:3462 multiply[Int16] -32768[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3463 multiply[compile-time] -32768[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * 128;
endcode
compile error

$overflow off
code auto:3464 multiply[Int16] -32768[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3465 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 * 32767;
endcode
compile error

$overflow on
code auto:3466 multiply[Int16] -32768[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3467 multiply[compile-time] -32768[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 * 32767;
endcode
compile error

$overflow off
code auto:3468 multiply[Int16] -32767[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3469 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * -32768;
endcode
compile error

$overflow on
code auto:3470 multiply[Int16] -32767[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3471 multiply[compile-time] -32767[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * -32768;
endcode
compile error

$overflow off
code auto:3472 multiply[Int16] -32767[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3473 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * -32767;
endcode
compile error

$overflow on
code auto:3474 multiply[Int16] -32767[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3475 multiply[compile-time] -32767[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * -32767;
endcode
compile error

$overflow off
code auto:3476 multiply[Int16] -32767[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3477 multiply[compile-time] -32767[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * -129;
endcode
compile error

$overflow on
code auto:3478 multiply[Int16] -32767[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3479 multiply[compile-time] -32767[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * -129;
endcode
compile error

$overflow off
code auto:3480 multiply[Int16] -32767[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3481 multiply[compile-time] -32767[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * -128;
endcode
compile error

$overflow on
code auto:3482 multiply[Int16] -32767[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3483 multiply[compile-time] -32767[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * -128;
endcode
compile error

$overflow off
code auto:3484 multiply[Int16] -32767[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3485 multiply[compile-time] -32767[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * -1;
endcode
runtime noerror

$overflow on
code auto:3486 multiply[Int16] -32767[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:3487 multiply[compile-time] -32767[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * -1;
endcode
varvalue r 32767

$overflow off
code auto:3488 multiply[Int16] -32767[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3489 multiply[compile-time] -32767[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * 0;
endcode
runtime noerror

$overflow on
code auto:3490 multiply[Int16] -32767[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3491 multiply[compile-time] -32767[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:3492 multiply[Int16] -32767[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3493 multiply[compile-time] -32767[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * 1;
endcode
compile error

$overflow on
code auto:3494 multiply[Int16] -32767[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3495 multiply[compile-time] -32767[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * 1;
endcode
compile error

$overflow off
code auto:3496 multiply[Int16] -32767[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3497 multiply[compile-time] -32767[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * 127;
endcode
compile error

$overflow on
code auto:3498 multiply[Int16] -32767[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3499 multiply[compile-time] -32767[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * 127;
endcode
compile error

$overflow off
code auto:3500 multiply[Int16] -32767[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3501 multiply[compile-time] -32767[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * 128;
endcode
compile error

$overflow on
code auto:3502 multiply[Int16] -32767[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3503 multiply[compile-time] -32767[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * 128;
endcode
compile error

$overflow off
code auto:3504 multiply[Int16] -32767[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3505 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 * 32767;
endcode
compile error

$overflow on
code auto:3506 multiply[Int16] -32767[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3507 multiply[compile-time] -32767[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 * 32767;
endcode
compile error

$overflow off
code auto:3508 multiply[Int16] -129[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3509 multiply[compile-time] -129[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * -32768;
endcode
compile error

$overflow on
code auto:3510 multiply[Int16] -129[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3511 multiply[compile-time] -129[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * -32768;
endcode
compile error

$overflow off
code auto:3512 multiply[Int16] -129[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3513 multiply[compile-time] -129[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * -32767;
endcode
compile error

$overflow on
code auto:3514 multiply[Int16] -129[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3515 multiply[compile-time] -129[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * -32767;
endcode
compile error

$overflow off
code auto:3516 multiply[Int16] -129[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3517 multiply[compile-time] -129[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * -129;
endcode
runtime noerror

$overflow on
code auto:3518 multiply[Int16] -129[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16641

code auto:3519 multiply[compile-time] -129[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * -129;
endcode
varvalue r 16641

$overflow off
code auto:3520 multiply[Int16] -129[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3521 multiply[compile-time] -129[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * -128;
endcode
runtime noerror

$overflow on
code auto:3522 multiply[Int16] -129[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16512

code auto:3523 multiply[compile-time] -129[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * -128;
endcode
varvalue r 16512

$overflow off
code auto:3524 multiply[Int16] -129[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3525 multiply[compile-time] -129[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * -1;
endcode
runtime noerror

$overflow on
code auto:3526 multiply[Int16] -129[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 129

code auto:3527 multiply[compile-time] -129[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * -1;
endcode
varvalue r 129

$overflow off
code auto:3528 multiply[Int16] -129[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3529 multiply[compile-time] -129[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * 0;
endcode
runtime noerror

$overflow on
code auto:3530 multiply[Int16] -129[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3531 multiply[compile-time] -129[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * 0;
endcode
varvalue r 0

$overflow off
code auto:3532 multiply[Int16] -129[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3533 multiply[compile-time] -129[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * 1;
endcode
compile error

$overflow on
code auto:3534 multiply[Int16] -129[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3535 multiply[compile-time] -129[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * 1;
endcode
compile error

$overflow off
code auto:3536 multiply[Int16] -129[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3537 multiply[compile-time] -129[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * 127;
endcode
compile error

$overflow on
code auto:3538 multiply[Int16] -129[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3539 multiply[compile-time] -129[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * 127;
endcode
compile error

$overflow off
code auto:3540 multiply[Int16] -129[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3541 multiply[compile-time] -129[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * 128;
endcode
compile error

$overflow on
code auto:3542 multiply[Int16] -129[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3543 multiply[compile-time] -129[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * 128;
endcode
compile error

$overflow off
code auto:3544 multiply[Int16] -129[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3545 multiply[compile-time] -129[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 * 32767;
endcode
compile error

$overflow on
code auto:3546 multiply[Int16] -129[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3547 multiply[compile-time] -129[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 * 32767;
endcode
compile error

$overflow off
code auto:3548 multiply[Int16] -128[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3549 multiply[compile-time] -128[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -32768;
endcode
compile error

$overflow on
code auto:3550 multiply[Int16] -128[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3551 multiply[compile-time] -128[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -32768;
endcode
compile error

$overflow off
code auto:3552 multiply[Int16] -128[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3553 multiply[compile-time] -128[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -32767;
endcode
compile error

$overflow on
code auto:3554 multiply[Int16] -128[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3555 multiply[compile-time] -128[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -32767;
endcode
compile error

$overflow off
code auto:3556 multiply[Int16] -128[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3557 multiply[compile-time] -128[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -129;
endcode
runtime noerror

$overflow on
code auto:3558 multiply[Int16] -128[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16512

code auto:3559 multiply[compile-time] -128[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -129;
endcode
varvalue r 16512

$overflow off
code auto:3560 multiply[Int16] -128[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3561 multiply[compile-time] -128[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -128;
endcode
runtime noerror

$overflow on
code auto:3562 multiply[Int16] -128[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16384

code auto:3563 multiply[compile-time] -128[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -128;
endcode
varvalue r 16384

$overflow off
code auto:3564 multiply[Int16] -128[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3565 multiply[compile-time] -128[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * -1;
endcode
runtime noerror

$overflow on
code auto:3566 multiply[Int16] -128[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:3567 multiply[compile-time] -128[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * -1;
endcode
varvalue r 128

$overflow off
code auto:3568 multiply[Int16] -128[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3569 multiply[compile-time] -128[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 0;
endcode
runtime noerror

$overflow on
code auto:3570 multiply[Int16] -128[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3571 multiply[compile-time] -128[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3572 multiply[Int16] -128[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3573 multiply[compile-time] -128[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 1;
endcode
compile error

$overflow on
code auto:3574 multiply[Int16] -128[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3575 multiply[compile-time] -128[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 1;
endcode
compile error

$overflow off
code auto:3576 multiply[Int16] -128[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3577 multiply[compile-time] -128[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 127;
endcode
compile error

$overflow on
code auto:3578 multiply[Int16] -128[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3579 multiply[compile-time] -128[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 127;
endcode
compile error

$overflow off
code auto:3580 multiply[Int16] -128[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3581 multiply[compile-time] -128[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 128;
endcode
compile error

$overflow on
code auto:3582 multiply[Int16] -128[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3583 multiply[compile-time] -128[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 128;
endcode
compile error

$overflow off
code auto:3584 multiply[Int16] -128[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3585 multiply[compile-time] -128[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 * 32767;
endcode
compile error

$overflow on
code auto:3586 multiply[Int16] -128[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3587 multiply[compile-time] -128[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 * 32767;
endcode
compile error

$overflow off
code auto:3588 multiply[Int16] -1[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3589 multiply[compile-time] -1[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -32768;
endcode
runtime noerror

$overflow on
code auto:3590 multiply[Int16] -1[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3591 multiply[compile-time] -1[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -32768;
endcode
varvalue r 32768

$overflow off
code auto:3592 multiply[Int16] -1[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3593 multiply[compile-time] -1[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -32767;
endcode
runtime noerror

$overflow on
code auto:3594 multiply[Int16] -1[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:3595 multiply[compile-time] -1[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -32767;
endcode
varvalue r 32767

$overflow off
code auto:3596 multiply[Int16] -1[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3597 multiply[compile-time] -1[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -129;
endcode
runtime noerror

$overflow on
code auto:3598 multiply[Int16] -1[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
varvalue r 129

code auto:3599 multiply[compile-time] -1[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -129;
endcode
varvalue r 129

$overflow off
code auto:3600 multiply[Int16] -1[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3601 multiply[compile-time] -1[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -128;
endcode
runtime noerror

$overflow on
code auto:3602 multiply[Int16] -1[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:3603 multiply[compile-time] -1[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -128;
endcode
varvalue r 128

$overflow off
code auto:3604 multiply[Int16] -1[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3605 multiply[compile-time] -1[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * -1;
endcode
runtime noerror

$overflow on
code auto:3606 multiply[Int16] -1[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 1

code auto:3607 multiply[compile-time] -1[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * -1;
endcode
varvalue r 1

$overflow off
code auto:3608 multiply[Int16] -1[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3609 multiply[compile-time] -1[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 0;
endcode
runtime noerror

$overflow on
code auto:3610 multiply[Int16] -1[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3611 multiply[compile-time] -1[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3612 multiply[Int16] -1[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3613 multiply[compile-time] -1[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 1;
endcode
compile error

$overflow on
code auto:3614 multiply[Int16] -1[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3615 multiply[compile-time] -1[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 1;
endcode
compile error

$overflow off
code auto:3616 multiply[Int16] -1[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3617 multiply[compile-time] -1[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 127;
endcode
compile error

$overflow on
code auto:3618 multiply[Int16] -1[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3619 multiply[compile-time] -1[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 127;
endcode
compile error

$overflow off
code auto:3620 multiply[Int16] -1[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3621 multiply[compile-time] -1[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 128;
endcode
compile error

$overflow on
code auto:3622 multiply[Int16] -1[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3623 multiply[compile-time] -1[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 128;
endcode
compile error

$overflow off
code auto:3624 multiply[Int16] -1[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3625 multiply[compile-time] -1[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 * 32767;
endcode
compile error

$overflow on
code auto:3626 multiply[Int16] -1[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3627 multiply[compile-time] -1[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 * 32767;
endcode
compile error

$overflow off
code auto:3628 multiply[Int16] 0[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3629 multiply[compile-time] 0[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -32768;
endcode
runtime noerror

$overflow on
code auto:3630 multiply[Int16] 0[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3631 multiply[compile-time] 0[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -32768;
endcode
varvalue r 0

$overflow off
code auto:3632 multiply[Int16] 0[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3633 multiply[compile-time] 0[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -32767;
endcode
runtime noerror

$overflow on
code auto:3634 multiply[Int16] 0[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3635 multiply[compile-time] 0[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -32767;
endcode
varvalue r 0

$overflow off
code auto:3636 multiply[Int16] 0[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3637 multiply[compile-time] 0[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -129;
endcode
runtime noerror

$overflow on
code auto:3638 multiply[Int16] 0[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3639 multiply[compile-time] 0[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -129;
endcode
varvalue r 0

$overflow off
code auto:3640 multiply[Int16] 0[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3641 multiply[compile-time] 0[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -128;
endcode
runtime noerror

$overflow on
code auto:3642 multiply[Int16] 0[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3643 multiply[compile-time] 0[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -128;
endcode
varvalue r 0

$overflow off
code auto:3644 multiply[Int16] 0[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3645 multiply[compile-time] 0[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * -1;
endcode
runtime noerror

$overflow on
code auto:3646 multiply[Int16] 0[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3647 multiply[compile-time] 0[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * -1;
endcode
varvalue r 0

$overflow off
code auto:3648 multiply[Int16] 0[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3649 multiply[compile-time] 0[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:3650 multiply[Int16] 0[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3651 multiply[compile-time] 0[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:3652 multiply[Int16] 0[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3653 multiply[compile-time] 0[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:3654 multiply[Int16] 0[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3655 multiply[compile-time] 0[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:3656 multiply[Int16] 0[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3657 multiply[compile-time] 0[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:3658 multiply[Int16] 0[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3659 multiply[compile-time] 0[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:3660 multiply[Int16] 0[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3661 multiply[compile-time] 0[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:3662 multiply[Int16] 0[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3663 multiply[compile-time] 0[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:3664 multiply[Int16] 0[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3665 multiply[compile-time] 0[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:3666 multiply[Int16] 0[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3667 multiply[compile-time] 0[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:3668 multiply[Int16] 1[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3669 multiply[compile-time] 1[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -32768;
endcode
compile error

$overflow on
code auto:3670 multiply[Int16] 1[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3671 multiply[compile-time] 1[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -32768;
endcode
compile error

$overflow off
code auto:3672 multiply[Int16] 1[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3673 multiply[compile-time] 1[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -32767;
endcode
compile error

$overflow on
code auto:3674 multiply[Int16] 1[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3675 multiply[compile-time] 1[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -32767;
endcode
compile error

$overflow off
code auto:3676 multiply[Int16] 1[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3677 multiply[compile-time] 1[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -129;
endcode
compile error

$overflow on
code auto:3678 multiply[Int16] 1[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3679 multiply[compile-time] 1[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -129;
endcode
compile error

$overflow off
code auto:3680 multiply[Int16] 1[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3681 multiply[compile-time] 1[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -128;
endcode
compile error

$overflow on
code auto:3682 multiply[Int16] 1[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3683 multiply[compile-time] 1[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -128;
endcode
compile error

$overflow off
code auto:3684 multiply[Int16] 1[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3685 multiply[compile-time] 1[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * -1;
endcode
compile error

$overflow on
code auto:3686 multiply[Int16] 1[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3687 multiply[compile-time] 1[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * -1;
endcode
compile error

$overflow off
code auto:3688 multiply[Int16] 1[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3689 multiply[compile-time] 1[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:3690 multiply[Int16] 1[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3691 multiply[compile-time] 1[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3692 multiply[Int16] 1[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3693 multiply[compile-time] 1[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:3694 multiply[Int16] 1[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 1

code auto:3695 multiply[compile-time] 1[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:3696 multiply[Int16] 1[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3697 multiply[compile-time] 1[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:3698 multiply[Int16] 1[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:3699 multiply[compile-time] 1[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:3700 multiply[Int16] 1[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3701 multiply[compile-time] 1[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 128;
endcode
runtime noerror

$overflow on
code auto:3702 multiply[Int16] 1[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:3703 multiply[compile-time] 1[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 128;
endcode
varvalue r 128

$overflow off
code auto:3704 multiply[Int16] 1[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3705 multiply[compile-time] 1[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 32767;
endcode
runtime noerror

$overflow on
code auto:3706 multiply[Int16] 1[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:3707 multiply[compile-time] 1[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 32767;
endcode
varvalue r 32767

$overflow off
code auto:3708 multiply[Int16] 127[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3709 multiply[compile-time] 127[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -32768;
endcode
compile error

$overflow on
code auto:3710 multiply[Int16] 127[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3711 multiply[compile-time] 127[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -32768;
endcode
compile error

$overflow off
code auto:3712 multiply[Int16] 127[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3713 multiply[compile-time] 127[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -32767;
endcode
compile error

$overflow on
code auto:3714 multiply[Int16] 127[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3715 multiply[compile-time] 127[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -32767;
endcode
compile error

$overflow off
code auto:3716 multiply[Int16] 127[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3717 multiply[compile-time] 127[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -129;
endcode
compile error

$overflow on
code auto:3718 multiply[Int16] 127[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3719 multiply[compile-time] 127[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -129;
endcode
compile error

$overflow off
code auto:3720 multiply[Int16] 127[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3721 multiply[compile-time] 127[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -128;
endcode
compile error

$overflow on
code auto:3722 multiply[Int16] 127[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3723 multiply[compile-time] 127[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -128;
endcode
compile error

$overflow off
code auto:3724 multiply[Int16] 127[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3725 multiply[compile-time] 127[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * -1;
endcode
compile error

$overflow on
code auto:3726 multiply[Int16] 127[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3727 multiply[compile-time] 127[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * -1;
endcode
compile error

$overflow off
code auto:3728 multiply[Int16] 127[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3729 multiply[compile-time] 127[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:3730 multiply[Int16] 127[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3731 multiply[compile-time] 127[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:3732 multiply[Int16] 127[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3733 multiply[compile-time] 127[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:3734 multiply[Int16] 127[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:3735 multiply[compile-time] 127[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:3736 multiply[Int16] 127[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3737 multiply[compile-time] 127[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 127;
endcode
runtime noerror

$overflow on
code auto:3738 multiply[Int16] 127[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16129

code auto:3739 multiply[compile-time] 127[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow off
code auto:3740 multiply[Int16] 127[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3741 multiply[compile-time] 127[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 128;
endcode
runtime noerror

$overflow on
code auto:3742 multiply[Int16] 127[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16256

code auto:3743 multiply[compile-time] 127[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow off
code auto:3744 multiply[Int16] 127[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3745 multiply[compile-time] 127[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 32767;
endcode
compile error

$overflow on
code auto:3746 multiply[Int16] 127[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3747 multiply[compile-time] 127[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 32767;
endcode
compile error

$overflow off
code auto:3748 multiply[Int16] 128[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3749 multiply[compile-time] 128[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * -32768;
endcode
compile error

$overflow on
code auto:3750 multiply[Int16] 128[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3751 multiply[compile-time] 128[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * -32768;
endcode
compile error

$overflow off
code auto:3752 multiply[Int16] 128[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3753 multiply[compile-time] 128[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * -32767;
endcode
compile error

$overflow on
code auto:3754 multiply[Int16] 128[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3755 multiply[compile-time] 128[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * -32767;
endcode
compile error

$overflow off
code auto:3756 multiply[Int16] 128[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3757 multiply[compile-time] 128[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * -129;
endcode
compile error

$overflow on
code auto:3758 multiply[Int16] 128[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3759 multiply[compile-time] 128[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * -129;
endcode
compile error

$overflow off
code auto:3760 multiply[Int16] 128[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3761 multiply[compile-time] 128[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * -128;
endcode
compile error

$overflow on
code auto:3762 multiply[Int16] 128[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3763 multiply[compile-time] 128[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * -128;
endcode
compile error

$overflow off
code auto:3764 multiply[Int16] 128[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3765 multiply[compile-time] 128[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * -1;
endcode
compile error

$overflow on
code auto:3766 multiply[Int16] 128[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3767 multiply[compile-time] 128[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * -1;
endcode
compile error

$overflow off
code auto:3768 multiply[Int16] 128[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3769 multiply[compile-time] 128[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:3770 multiply[Int16] 128[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3771 multiply[compile-time] 128[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3772 multiply[Int16] 128[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3773 multiply[compile-time] 128[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 1;
endcode
runtime noerror

$overflow on
code auto:3774 multiply[Int16] 128[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:3775 multiply[compile-time] 128[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 1;
endcode
varvalue r 128

$overflow off
code auto:3776 multiply[Int16] 128[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3777 multiply[compile-time] 128[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 127;
endcode
runtime noerror

$overflow on
code auto:3778 multiply[Int16] 128[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16256

code auto:3779 multiply[compile-time] 128[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow off
code auto:3780 multiply[Int16] 128[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3781 multiply[compile-time] 128[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 128;
endcode
runtime noerror

$overflow on
code auto:3782 multiply[Int16] 128[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 16384

code auto:3783 multiply[compile-time] 128[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow off
code auto:3784 multiply[Int16] 128[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3785 multiply[compile-time] 128[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 32767;
endcode
compile error

$overflow on
code auto:3786 multiply[Int16] 128[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3787 multiply[compile-time] 128[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 32767;
endcode
compile error

$overflow off
code auto:3788 multiply[Int16] 32767[Int16], -32768[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3789 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * -32768;
endcode
compile error

$overflow on
code auto:3790 multiply[Int16] 32767[Int16], -32768[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3791 multiply[compile-time] 32767[Int16], -32768[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * -32768;
endcode
compile error

$overflow off
code auto:3792 multiply[Int16] 32767[Int16], -32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3793 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * -32767;
endcode
compile error

$overflow on
code auto:3794 multiply[Int16] 32767[Int16], -32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3795 multiply[compile-time] 32767[Int16], -32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * -32767;
endcode
compile error

$overflow off
code auto:3796 multiply[Int16] 32767[Int16], -129[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3797 multiply[compile-time] 32767[Int16], -129[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * -129;
endcode
compile error

$overflow on
code auto:3798 multiply[Int16] 32767[Int16], -129[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3799 multiply[compile-time] 32767[Int16], -129[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * -129;
endcode
compile error

$overflow off
code auto:3800 multiply[Int16] 32767[Int16], -128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3801 multiply[compile-time] 32767[Int16], -128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * -128;
endcode
compile error

$overflow on
code auto:3802 multiply[Int16] 32767[Int16], -128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3803 multiply[compile-time] 32767[Int16], -128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * -128;
endcode
compile error

$overflow off
code auto:3804 multiply[Int16] 32767[Int16], -1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3805 multiply[compile-time] 32767[Int16], -1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * -1;
endcode
compile error

$overflow on
code auto:3806 multiply[Int16] 32767[Int16], -1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3807 multiply[compile-time] 32767[Int16], -1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * -1;
endcode
compile error

$overflow off
code auto:3808 multiply[Int16] 32767[Int16], 0[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3809 multiply[compile-time] 32767[Int16], 0[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:3810 multiply[Int16] 32767[Int16], 0[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:3811 multiply[compile-time] 32767[Int16], 0[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:3812 multiply[Int16] 32767[Int16], 1[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3813 multiply[compile-time] 32767[Int16], 1[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 1;
endcode
runtime noerror

$overflow on
code auto:3814 multiply[Int16] 32767[Int16], 1[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 32767

code auto:3815 multiply[compile-time] 32767[Int16], 1[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 1;
endcode
varvalue r 32767

$overflow off
code auto:3816 multiply[Int16] 32767[Int16], 127[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3817 multiply[compile-time] 32767[Int16], 127[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 127;
endcode
compile error

$overflow on
code auto:3818 multiply[Int16] 32767[Int16], 127[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3819 multiply[compile-time] 32767[Int16], 127[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 127;
endcode
compile error

$overflow off
code auto:3820 multiply[Int16] 32767[Int16], 128[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3821 multiply[compile-time] 32767[Int16], 128[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 128;
endcode
compile error

$overflow on
code auto:3822 multiply[Int16] 32767[Int16], 128[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3823 multiply[compile-time] 32767[Int16], 128[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 128;
endcode
compile error

$overflow off
code auto:3824 multiply[Int16] 32767[Int16], 32767[Int16] -> [Word] Var $overflow off
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:3825 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:3826 multiply[Int16] 32767[Int16], 32767[Int16] -> [Word] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:3827 multiply[compile-time] 32767[Int16], 32767[Int16] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:3828 multiply[Byte] 0[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3829 multiply[compile-time] 0[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:3830 multiply[Byte] 0[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3831 multiply[compile-time] 0[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:3832 multiply[Byte] 0[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3833 multiply[compile-time] 0[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:3834 multiply[Byte] 0[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3835 multiply[compile-time] 0[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:3836 multiply[Byte] 0[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3837 multiply[compile-time] 0[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:3838 multiply[Byte] 0[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3839 multiply[compile-time] 0[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:3840 multiply[Byte] 0[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3841 multiply[compile-time] 0[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:3842 multiply[Byte] 0[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3843 multiply[compile-time] 0[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:3844 multiply[Byte] 0[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3845 multiply[compile-time] 0[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:3846 multiply[Byte] 0[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3847 multiply[compile-time] 0[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:3848 multiply[Byte] 1[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3849 multiply[compile-time] 1[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:3850 multiply[Byte] 1[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3851 multiply[compile-time] 1[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3852 multiply[Byte] 1[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3853 multiply[compile-time] 1[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:3854 multiply[Byte] 1[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 1

code auto:3855 multiply[compile-time] 1[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:3856 multiply[Byte] 1[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3857 multiply[compile-time] 1[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:3858 multiply[Byte] 1[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:3859 multiply[compile-time] 1[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:3860 multiply[Byte] 1[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3861 multiply[compile-time] 1[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 128;
endcode
compile error

$overflow on
code auto:3862 multiply[Byte] 1[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3863 multiply[compile-time] 1[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 128;
endcode
compile error

$overflow off
code auto:3864 multiply[Byte] 1[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3865 multiply[compile-time] 1[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 * 255;
endcode
compile error

$overflow on
code auto:3866 multiply[Byte] 1[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3867 multiply[compile-time] 1[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 * 255;
endcode
compile error

$overflow off
code auto:3868 multiply[Byte] 127[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3869 multiply[compile-time] 127[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:3870 multiply[Byte] 127[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3871 multiply[compile-time] 127[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:3872 multiply[Byte] 127[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3873 multiply[compile-time] 127[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:3874 multiply[Byte] 127[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 127

code auto:3875 multiply[compile-time] 127[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:3876 multiply[Byte] 127[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3877 multiply[compile-time] 127[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:3878 multiply[Byte] 127[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3879 multiply[compile-time] 127[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 127;
endcode
compile error

$overflow off
code auto:3880 multiply[Byte] 127[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3881 multiply[compile-time] 127[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 128;
endcode
compile error

$overflow on
code auto:3882 multiply[Byte] 127[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3883 multiply[compile-time] 127[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 128;
endcode
compile error

$overflow off
code auto:3884 multiply[Byte] 127[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3885 multiply[compile-time] 127[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 * 255;
endcode
compile error

$overflow on
code auto:3886 multiply[Byte] 127[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3887 multiply[compile-time] 127[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 * 255;
endcode
compile error

$overflow off
code auto:3888 multiply[Byte] 128[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3889 multiply[compile-time] 128[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:3890 multiply[Byte] 128[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3891 multiply[compile-time] 128[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3892 multiply[Byte] 128[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3893 multiply[compile-time] 128[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 1;
endcode
compile error

$overflow on
code auto:3894 multiply[Byte] 128[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3895 multiply[compile-time] 128[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 1;
endcode
compile error

$overflow off
code auto:3896 multiply[Byte] 128[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3897 multiply[compile-time] 128[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 127;
endcode
compile error

$overflow on
code auto:3898 multiply[Byte] 128[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3899 multiply[compile-time] 128[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 127;
endcode
compile error

$overflow off
code auto:3900 multiply[Byte] 128[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3901 multiply[compile-time] 128[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 128;
endcode
compile error

$overflow on
code auto:3902 multiply[Byte] 128[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3903 multiply[compile-time] 128[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 128;
endcode
compile error

$overflow off
code auto:3904 multiply[Byte] 128[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3905 multiply[compile-time] 128[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 * 255;
endcode
compile error

$overflow on
code auto:3906 multiply[Byte] 128[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3907 multiply[compile-time] 128[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 * 255;
endcode
compile error

$overflow off
code auto:3908 multiply[Byte] 255[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3909 multiply[compile-time] 255[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:3910 multiply[Byte] 255[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:3911 multiply[compile-time] 255[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:3912 multiply[Byte] 255[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3913 multiply[compile-time] 255[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 1;
endcode
compile error

$overflow on
code auto:3914 multiply[Byte] 255[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3915 multiply[compile-time] 255[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 1;
endcode
compile error

$overflow off
code auto:3916 multiply[Byte] 255[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3917 multiply[compile-time] 255[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 127;
endcode
compile error

$overflow on
code auto:3918 multiply[Byte] 255[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3919 multiply[compile-time] 255[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 127;
endcode
compile error

$overflow off
code auto:3920 multiply[Byte] 255[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3921 multiply[compile-time] 255[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 128;
endcode
compile error

$overflow on
code auto:3922 multiply[Byte] 255[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3923 multiply[compile-time] 255[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 128;
endcode
compile error

$overflow off
code auto:3924 multiply[Byte] 255[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:3925 multiply[compile-time] 255[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:3926 multiply[Byte] 255[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:3927 multiply[compile-time] 255[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:3928 multiply[Byte] 0[Byte], 0[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3929 multiply[compile-time] 0[Byte], 0[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:3930 multiply[Byte] 0[Byte], 0[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3931 multiply[compile-time] 0[Byte], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:3932 multiply[Byte] 0[Byte], 1[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3933 multiply[compile-time] 0[Byte], 1[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:3934 multiply[Byte] 0[Byte], 1[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3935 multiply[compile-time] 0[Byte], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:3936 multiply[Byte] 0[Byte], 127[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3937 multiply[compile-time] 0[Byte], 127[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:3938 multiply[Byte] 0[Byte], 127[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3939 multiply[compile-time] 0[Byte], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:3940 multiply[Byte] 0[Byte], 128[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3941 multiply[compile-time] 0[Byte], 128[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:3942 multiply[Byte] 0[Byte], 128[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3943 multiply[compile-time] 0[Byte], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:3944 multiply[Byte] 0[Byte], 255[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3945 multiply[compile-time] 0[Byte], 255[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:3946 multiply[Byte] 0[Byte], 255[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3947 multiply[compile-time] 0[Byte], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:3948 multiply[Byte] 1[Byte], 0[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3949 multiply[compile-time] 1[Byte], 0[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:3950 multiply[Byte] 1[Byte], 0[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3951 multiply[compile-time] 1[Byte], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:3952 multiply[Byte] 1[Byte], 1[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3953 multiply[compile-time] 1[Byte], 1[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:3954 multiply[Byte] 1[Byte], 1[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 1

code auto:3955 multiply[compile-time] 1[Byte], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:3956 multiply[Byte] 1[Byte], 127[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3957 multiply[compile-time] 1[Byte], 127[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:3958 multiply[Byte] 1[Byte], 127[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:3959 multiply[compile-time] 1[Byte], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:3960 multiply[Byte] 1[Byte], 128[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3961 multiply[compile-time] 1[Byte], 128[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 128;
endcode
runtime noerror

$overflow on
code auto:3962 multiply[Byte] 1[Byte], 128[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:3963 multiply[compile-time] 1[Byte], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 128;
endcode
varvalue r 128

$overflow off
code auto:3964 multiply[Byte] 1[Byte], 255[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3965 multiply[compile-time] 1[Byte], 255[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 1 * 255;
endcode
runtime noerror

$overflow on
code auto:3966 multiply[Byte] 1[Byte], 255[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:3967 multiply[compile-time] 1[Byte], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 1 * 255;
endcode
varvalue r 255

$overflow off
code auto:3968 multiply[Byte] 127[Byte], 0[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3969 multiply[compile-time] 127[Byte], 0[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:3970 multiply[Byte] 127[Byte], 0[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3971 multiply[compile-time] 127[Byte], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:3972 multiply[Byte] 127[Byte], 1[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3973 multiply[compile-time] 127[Byte], 1[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:3974 multiply[Byte] 127[Byte], 1[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 127

code auto:3975 multiply[compile-time] 127[Byte], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:3976 multiply[Byte] 127[Byte], 127[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3977 multiply[compile-time] 127[Byte], 127[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 127;
endcode
runtime noerror

$overflow on
code auto:3978 multiply[Byte] 127[Byte], 127[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3979 multiply[compile-time] 127[Byte], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow off
code auto:3980 multiply[Byte] 127[Byte], 128[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3981 multiply[compile-time] 127[Byte], 128[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 128;
endcode
runtime noerror

$overflow on
code auto:3982 multiply[Byte] 127[Byte], 128[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3983 multiply[compile-time] 127[Byte], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow off
code auto:3984 multiply[Byte] 127[Byte], 255[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3985 multiply[compile-time] 127[Byte], 255[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 127 * 255;
endcode
runtime noerror

$overflow on
code auto:3986 multiply[Byte] 127[Byte], 255[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3987 multiply[compile-time] 127[Byte], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow off
code auto:3988 multiply[Byte] 128[Byte], 0[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3989 multiply[compile-time] 128[Byte], 0[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:3990 multiply[Byte] 128[Byte], 0[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:3991 multiply[compile-time] 128[Byte], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:3992 multiply[Byte] 128[Byte], 1[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3993 multiply[compile-time] 128[Byte], 1[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 128 * 1;
endcode
runtime noerror

$overflow on
code auto:3994 multiply[Byte] 128[Byte], 1[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 128

code auto:3995 multiply[compile-time] 128[Byte], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 1;
endcode
varvalue r 128

$overflow off
code auto:3996 multiply[Byte] 128[Byte], 127[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:3997 multiply[compile-time] 128[Byte], 127[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 128 * 127;
endcode
runtime noerror

$overflow on
code auto:3998 multiply[Byte] 128[Byte], 127[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:3999 multiply[compile-time] 128[Byte], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow off
code auto:4000 multiply[Byte] 128[Byte], 128[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4001 multiply[compile-time] 128[Byte], 128[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 128 * 128;
endcode
runtime noerror

$overflow on
code auto:4002 multiply[Byte] 128[Byte], 128[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4003 multiply[compile-time] 128[Byte], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow off
code auto:4004 multiply[Byte] 128[Byte], 255[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4005 multiply[compile-time] 128[Byte], 255[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 128 * 255;
endcode
runtime noerror

$overflow on
code auto:4006 multiply[Byte] 128[Byte], 255[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4007 multiply[compile-time] 128[Byte], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow off
code auto:4008 multiply[Byte] 255[Byte], 0[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4009 multiply[compile-time] 255[Byte], 0[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4010 multiply[Byte] 255[Byte], 0[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4011 multiply[compile-time] 255[Byte], 0[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4012 multiply[Byte] 255[Byte], 1[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4013 multiply[compile-time] 255[Byte], 1[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 1;
endcode
runtime noerror

$overflow on
code auto:4014 multiply[Byte] 255[Byte], 1[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 255

code auto:4015 multiply[compile-time] 255[Byte], 1[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 1;
endcode
varvalue r 255

$overflow off
code auto:4016 multiply[Byte] 255[Byte], 127[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4017 multiply[compile-time] 255[Byte], 127[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 127;
endcode
runtime noerror

$overflow on
code auto:4018 multiply[Byte] 255[Byte], 127[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4019 multiply[compile-time] 255[Byte], 127[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow off
code auto:4020 multiply[Byte] 255[Byte], 128[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4021 multiply[compile-time] 255[Byte], 128[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 128;
endcode
runtime noerror

$overflow on
code auto:4022 multiply[Byte] 255[Byte], 128[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4023 multiply[compile-time] 255[Byte], 128[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow off
code auto:4024 multiply[Byte] 255[Byte], 255[Byte] -> [Int16] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4025 multiply[compile-time] 255[Byte], 255[Byte] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4026 multiply[Byte] 255[Byte], 255[Byte] -> [Int16] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4027 multiply[compile-time] 255[Byte], 255[Byte] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4028 multiply[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4029 multiply[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:4030 multiply[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4031 multiply[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 1;
endcode
varvalue r 0

$overflow on
code auto:4032 multiply[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4033 multiply[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 127;
endcode
varvalue r 0

$overflow on
code auto:4034 multiply[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4035 multiply[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 128;
endcode
varvalue r 0

$overflow on
code auto:4036 multiply[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4037 multiply[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:4038 multiply[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4039 multiply[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 0;
endcode
varvalue r 0

$overflow on
code auto:4040 multiply[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 1

code auto:4041 multiply[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 1;
endcode
varvalue r 1

$overflow on
code auto:4042 multiply[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:4043 multiply[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 127;
endcode
varvalue r 127

$overflow on
code auto:4044 multiply[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:4045 multiply[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 128;
endcode
varvalue r 128

$overflow on
code auto:4046 multiply[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 255

code auto:4047 multiply[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 * 255;
endcode
varvalue r 255

$overflow on
code auto:4048 multiply[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4049 multiply[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 0;
endcode
varvalue r 0

$overflow on
code auto:4050 multiply[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 127

code auto:4051 multiply[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 1;
endcode
varvalue r 127

$overflow on
code auto:4052 multiply[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4053 multiply[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 127;
endcode
compile error

$overflow on
code auto:4054 multiply[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4055 multiply[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 128;
endcode
compile error

$overflow on
code auto:4056 multiply[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4057 multiply[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 * 255;
endcode
compile error

$overflow on
code auto:4058 multiply[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4059 multiply[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 0;
endcode
varvalue r 0

$overflow on
code auto:4060 multiply[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 128

code auto:4061 multiply[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 1;
endcode
varvalue r 128

$overflow on
code auto:4062 multiply[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4063 multiply[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 127;
endcode
compile error

$overflow on
code auto:4064 multiply[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4065 multiply[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 128;
endcode
compile error

$overflow on
code auto:4066 multiply[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4067 multiply[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 * 255;
endcode
compile error

$overflow on
code auto:4068 multiply[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4069 multiply[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:4070 multiply[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 255

code auto:4071 multiply[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 1;
endcode
varvalue r 255

$overflow on
code auto:4072 multiply[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4073 multiply[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 127;
endcode
compile error

$overflow on
code auto:4074 multiply[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4075 multiply[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 128;
endcode
compile error

$overflow on
code auto:4076 multiply[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4077 multiply[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4078 multiply[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4079 multiply[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4080 multiply[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4081 multiply[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4082 multiply[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4083 multiply[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 1;
endcode
runtime noerror

$overflow on
code auto:4084 multiply[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4085 multiply[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 1;
endcode
varvalue r 0

$overflow off
code auto:4086 multiply[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4087 multiply[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 127;
endcode
runtime noerror

$overflow on
code auto:4088 multiply[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4089 multiply[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 127;
endcode
varvalue r 0

$overflow off
code auto:4090 multiply[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4091 multiply[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 128;
endcode
runtime noerror

$overflow on
code auto:4092 multiply[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4093 multiply[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 128;
endcode
varvalue r 0

$overflow off
code auto:4094 multiply[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4095 multiply[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4096 multiply[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4097 multiply[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4098 multiply[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4099 multiply[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 0;
endcode
runtime noerror

$overflow on
code auto:4100 multiply[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4101 multiply[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 0;
endcode
varvalue r 0

$overflow off
code auto:4102 multiply[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4103 multiply[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 1;
endcode
runtime noerror

$overflow on
code auto:4104 multiply[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 1

code auto:4105 multiply[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 1;
endcode
varvalue r 1

$overflow off
code auto:4106 multiply[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4107 multiply[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 127;
endcode
runtime noerror

$overflow on
code auto:4108 multiply[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:4109 multiply[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 127;
endcode
varvalue r 127

$overflow off
code auto:4110 multiply[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4111 multiply[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 128;
endcode
runtime noerror

$overflow on
code auto:4112 multiply[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:4113 multiply[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 128;
endcode
varvalue r 128

$overflow off
code auto:4114 multiply[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4115 multiply[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 * 255;
endcode
runtime noerror

$overflow on
code auto:4116 multiply[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 255

code auto:4117 multiply[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 * 255;
endcode
varvalue r 255

$overflow off
code auto:4118 multiply[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4119 multiply[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 0;
endcode
runtime noerror

$overflow on
code auto:4120 multiply[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4121 multiply[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 0;
endcode
varvalue r 0

$overflow off
code auto:4122 multiply[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4123 multiply[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 1;
endcode
runtime noerror

$overflow on
code auto:4124 multiply[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 127

code auto:4125 multiply[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 1;
endcode
varvalue r 127

$overflow off
code auto:4126 multiply[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4127 multiply[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 127;
endcode
runtime noerror

$overflow on
code auto:4128 multiply[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4129 multiply[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 127;
endcode
varvalue r 16129

$overflow off
code auto:4130 multiply[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4131 multiply[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 128;
endcode
runtime noerror

$overflow on
code auto:4132 multiply[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4133 multiply[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 128;
endcode
varvalue r 16256

$overflow off
code auto:4134 multiply[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4135 multiply[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 * 255;
endcode
runtime noerror

$overflow on
code auto:4136 multiply[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4137 multiply[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 * 255;
endcode
varvalue r 32385

$overflow off
code auto:4138 multiply[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4139 multiply[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 0;
endcode
runtime noerror

$overflow on
code auto:4140 multiply[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4141 multiply[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 0;
endcode
varvalue r 0

$overflow off
code auto:4142 multiply[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4143 multiply[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 1;
endcode
runtime noerror

$overflow on
code auto:4144 multiply[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 128

code auto:4145 multiply[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 1;
endcode
varvalue r 128

$overflow off
code auto:4146 multiply[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4147 multiply[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 127;
endcode
runtime noerror

$overflow on
code auto:4148 multiply[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4149 multiply[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 127;
endcode
varvalue r 16256

$overflow off
code auto:4150 multiply[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4151 multiply[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 128;
endcode
runtime noerror

$overflow on
code auto:4152 multiply[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4153 multiply[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 128;
endcode
varvalue r 16384

$overflow off
code auto:4154 multiply[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4155 multiply[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 * 255;
endcode
runtime noerror

$overflow on
code auto:4156 multiply[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4157 multiply[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 * 255;
endcode
varvalue r 32640

$overflow off
code auto:4158 multiply[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4159 multiply[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4160 multiply[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4161 multiply[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4162 multiply[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4163 multiply[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 1;
endcode
runtime noerror

$overflow on
code auto:4164 multiply[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a * b;
endcode
varvalue r 255

code auto:4165 multiply[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 1;
endcode
varvalue r 255

$overflow off
code auto:4166 multiply[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4167 multiply[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 127;
endcode
runtime noerror

$overflow on
code auto:4168 multiply[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4169 multiply[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 127;
endcode
varvalue r 32385

$overflow off
code auto:4170 multiply[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4171 multiply[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 128;
endcode
runtime noerror

$overflow on
code auto:4172 multiply[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4173 multiply[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 128;
endcode
varvalue r 32640

$overflow off
code auto:4174 multiply[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4175 multiply[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 255;
endcode
runtime noerror

$overflow on
code auto:4176 multiply[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4177 multiply[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow off
code auto:4178 multiply[Word] 0[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4179 multiply[compile-time] 0[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4180 multiply[Word] 0[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4181 multiply[compile-time] 0[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4182 multiply[Word] 0[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4183 multiply[compile-time] 0[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4184 multiply[Word] 0[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4185 multiply[compile-time] 0[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4186 multiply[Word] 0[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4187 multiply[compile-time] 0[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4188 multiply[Word] 0[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4189 multiply[compile-time] 0[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4190 multiply[Word] 0[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4191 multiply[compile-time] 0[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4192 multiply[Word] 0[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4193 multiply[compile-time] 0[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4194 multiply[Word] 0[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4195 multiply[compile-time] 0[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4196 multiply[Word] 0[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4197 multiply[compile-time] 0[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4198 multiply[Word] 255[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4199 multiply[compile-time] 255[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4200 multiply[Word] 255[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4201 multiply[compile-time] 255[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4202 multiply[Word] 255[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4203 multiply[compile-time] 255[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4204 multiply[Word] 255[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4205 multiply[compile-time] 255[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4206 multiply[Word] 255[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4207 multiply[compile-time] 255[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4208 multiply[Word] 255[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4209 multiply[compile-time] 255[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4210 multiply[Word] 255[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4211 multiply[compile-time] 255[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4212 multiply[Word] 255[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4213 multiply[compile-time] 255[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4214 multiply[Word] 255[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4215 multiply[compile-time] 255[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4216 multiply[Word] 255[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4217 multiply[compile-time] 255[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4218 multiply[Word] 32767[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4219 multiply[compile-time] 32767[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4220 multiply[Word] 32767[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4221 multiply[compile-time] 32767[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4222 multiply[Word] 32767[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4223 multiply[compile-time] 32767[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4224 multiply[Word] 32767[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4225 multiply[compile-time] 32767[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4226 multiply[Word] 32767[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4227 multiply[compile-time] 32767[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4228 multiply[Word] 32767[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4229 multiply[compile-time] 32767[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4230 multiply[Word] 32767[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4231 multiply[compile-time] 32767[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4232 multiply[Word] 32767[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4233 multiply[compile-time] 32767[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4234 multiply[Word] 32767[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4235 multiply[compile-time] 32767[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4236 multiply[Word] 32767[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4237 multiply[compile-time] 32767[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4238 multiply[Word] 32768[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4239 multiply[compile-time] 32768[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4240 multiply[Word] 32768[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4241 multiply[compile-time] 32768[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4242 multiply[Word] 32768[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4243 multiply[compile-time] 32768[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4244 multiply[Word] 32768[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4245 multiply[compile-time] 32768[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4246 multiply[Word] 32768[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4247 multiply[compile-time] 32768[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4248 multiply[Word] 32768[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4249 multiply[compile-time] 32768[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4250 multiply[Word] 32768[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4251 multiply[compile-time] 32768[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4252 multiply[Word] 32768[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4253 multiply[compile-time] 32768[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4254 multiply[Word] 32768[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4255 multiply[compile-time] 32768[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4256 multiply[Word] 32768[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4257 multiply[compile-time] 32768[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4258 multiply[Word] 65535[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4259 multiply[compile-time] 65535[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4260 multiply[Word] 65535[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4261 multiply[compile-time] 65535[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4262 multiply[Word] 65535[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4263 multiply[compile-time] 65535[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4264 multiply[Word] 65535[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4265 multiply[compile-time] 65535[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4266 multiply[Word] 65535[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4267 multiply[compile-time] 65535[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4268 multiply[Word] 65535[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4269 multiply[compile-time] 65535[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4270 multiply[Word] 65535[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4271 multiply[compile-time] 65535[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4272 multiply[Word] 65535[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4273 multiply[compile-time] 65535[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4274 multiply[Word] 65535[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4275 multiply[compile-time] 65535[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4276 multiply[Word] 65535[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4277 multiply[compile-time] 65535[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4278 multiply[Word] 0[Word], 0[Word] -> [Int16] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4279 multiply[compile-time] 0[Word], 0[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4280 multiply[Word] 0[Word], 0[Word] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4281 multiply[compile-time] 0[Word], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4282 multiply[Word] 0[Word], 255[Word] -> [Int16] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4283 multiply[compile-time] 0[Word], 255[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4284 multiply[Word] 0[Word], 255[Word] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4285 multiply[compile-time] 0[Word], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4286 multiply[Word] 0[Word], 32767[Word] -> [Int16] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4287 multiply[compile-time] 0[Word], 32767[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4288 multiply[Word] 0[Word], 32767[Word] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4289 multiply[compile-time] 0[Word], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4290 multiply[Word] 0[Word], 32768[Word] -> [Int16] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4291 multiply[compile-time] 0[Word], 32768[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4292 multiply[Word] 0[Word], 32768[Word] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4293 multiply[compile-time] 0[Word], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4294 multiply[Word] 0[Word], 65535[Word] -> [Int16] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4295 multiply[compile-time] 0[Word], 65535[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4296 multiply[Word] 0[Word], 65535[Word] -> [Int16] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4297 multiply[compile-time] 0[Word], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4298 multiply[Word] 255[Word], 0[Word] -> [Int16] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4299 multiply[compile-time] 255[Word], 0[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4300 multiply[Word] 255[Word], 0[Word] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4301 multiply[compile-time] 255[Word], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4302 multiply[Word] 255[Word], 255[Word] -> [Int16] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4303 multiply[compile-time] 255[Word], 255[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4304 multiply[Word] 255[Word], 255[Word] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4305 multiply[compile-time] 255[Word], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4306 multiply[Word] 255[Word], 32767[Word] -> [Int16] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4307 multiply[compile-time] 255[Word], 32767[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4308 multiply[Word] 255[Word], 32767[Word] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4309 multiply[compile-time] 255[Word], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4310 multiply[Word] 255[Word], 32768[Word] -> [Int16] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4311 multiply[compile-time] 255[Word], 32768[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4312 multiply[Word] 255[Word], 32768[Word] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4313 multiply[compile-time] 255[Word], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4314 multiply[Word] 255[Word], 65535[Word] -> [Int16] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4315 multiply[compile-time] 255[Word], 65535[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4316 multiply[Word] 255[Word], 65535[Word] -> [Int16] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4317 multiply[compile-time] 255[Word], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4318 multiply[Word] 32767[Word], 0[Word] -> [Int16] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4319 multiply[compile-time] 32767[Word], 0[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4320 multiply[Word] 32767[Word], 0[Word] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4321 multiply[compile-time] 32767[Word], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4322 multiply[Word] 32767[Word], 255[Word] -> [Int16] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4323 multiply[compile-time] 32767[Word], 255[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4324 multiply[Word] 32767[Word], 255[Word] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4325 multiply[compile-time] 32767[Word], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4326 multiply[Word] 32767[Word], 32767[Word] -> [Int16] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4327 multiply[compile-time] 32767[Word], 32767[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4328 multiply[Word] 32767[Word], 32767[Word] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4329 multiply[compile-time] 32767[Word], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4330 multiply[Word] 32767[Word], 32768[Word] -> [Int16] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4331 multiply[compile-time] 32767[Word], 32768[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4332 multiply[Word] 32767[Word], 32768[Word] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4333 multiply[compile-time] 32767[Word], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4334 multiply[Word] 32767[Word], 65535[Word] -> [Int16] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4335 multiply[compile-time] 32767[Word], 65535[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4336 multiply[Word] 32767[Word], 65535[Word] -> [Int16] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4337 multiply[compile-time] 32767[Word], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4338 multiply[Word] 32768[Word], 0[Word] -> [Int16] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4339 multiply[compile-time] 32768[Word], 0[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4340 multiply[Word] 32768[Word], 0[Word] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4341 multiply[compile-time] 32768[Word], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4342 multiply[Word] 32768[Word], 255[Word] -> [Int16] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4343 multiply[compile-time] 32768[Word], 255[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4344 multiply[Word] 32768[Word], 255[Word] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4345 multiply[compile-time] 32768[Word], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4346 multiply[Word] 32768[Word], 32767[Word] -> [Int16] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4347 multiply[compile-time] 32768[Word], 32767[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4348 multiply[Word] 32768[Word], 32767[Word] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4349 multiply[compile-time] 32768[Word], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4350 multiply[Word] 32768[Word], 32768[Word] -> [Int16] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4351 multiply[compile-time] 32768[Word], 32768[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4352 multiply[Word] 32768[Word], 32768[Word] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4353 multiply[compile-time] 32768[Word], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4354 multiply[Word] 32768[Word], 65535[Word] -> [Int16] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4355 multiply[compile-time] 32768[Word], 65535[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4356 multiply[Word] 32768[Word], 65535[Word] -> [Int16] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4357 multiply[compile-time] 32768[Word], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4358 multiply[Word] 65535[Word], 0[Word] -> [Int16] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4359 multiply[compile-time] 65535[Word], 0[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4360 multiply[Word] 65535[Word], 0[Word] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4361 multiply[compile-time] 65535[Word], 0[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4362 multiply[Word] 65535[Word], 255[Word] -> [Int16] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4363 multiply[compile-time] 65535[Word], 255[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4364 multiply[Word] 65535[Word], 255[Word] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4365 multiply[compile-time] 65535[Word], 255[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4366 multiply[Word] 65535[Word], 32767[Word] -> [Int16] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4367 multiply[compile-time] 65535[Word], 32767[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4368 multiply[Word] 65535[Word], 32767[Word] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4369 multiply[compile-time] 65535[Word], 32767[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4370 multiply[Word] 65535[Word], 32768[Word] -> [Int16] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4371 multiply[compile-time] 65535[Word], 32768[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4372 multiply[Word] 65535[Word], 32768[Word] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4373 multiply[compile-time] 65535[Word], 32768[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4374 multiply[Word] 65535[Word], 65535[Word] -> [Int16] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4375 multiply[compile-time] 65535[Word], 65535[Word] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4376 multiply[Word] 65535[Word], 65535[Word] -> [Int16] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4377 multiply[compile-time] 65535[Word], 65535[Word] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4378 multiply[Word] 0[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4379 multiply[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4380 multiply[Word] 0[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4381 multiply[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4382 multiply[Word] 0[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4383 multiply[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4384 multiply[Word] 0[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4385 multiply[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4386 multiply[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4387 multiply[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4388 multiply[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4389 multiply[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4390 multiply[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4391 multiply[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4392 multiply[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4393 multiply[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4394 multiply[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4395 multiply[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4396 multiply[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4397 multiply[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4398 multiply[Word] 255[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4399 multiply[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4400 multiply[Word] 255[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4401 multiply[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4402 multiply[Word] 255[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4403 multiply[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4404 multiply[Word] 255[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4405 multiply[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4406 multiply[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4407 multiply[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4408 multiply[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4409 multiply[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4410 multiply[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4411 multiply[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4412 multiply[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4413 multiply[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4414 multiply[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4415 multiply[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4416 multiply[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4417 multiply[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4418 multiply[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4419 multiply[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4420 multiply[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4421 multiply[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4422 multiply[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4423 multiply[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4424 multiply[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4425 multiply[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4426 multiply[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4427 multiply[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4428 multiply[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4429 multiply[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4430 multiply[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4431 multiply[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4432 multiply[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4433 multiply[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4434 multiply[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4435 multiply[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4436 multiply[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4437 multiply[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4438 multiply[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4439 multiply[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4440 multiply[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4441 multiply[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4442 multiply[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4443 multiply[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4444 multiply[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4445 multiply[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4446 multiply[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4447 multiply[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4448 multiply[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4449 multiply[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4450 multiply[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4451 multiply[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4452 multiply[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4453 multiply[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4454 multiply[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4455 multiply[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4456 multiply[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4457 multiply[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4458 multiply[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4459 multiply[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4460 multiply[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4461 multiply[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4462 multiply[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4463 multiply[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4464 multiply[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4465 multiply[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4466 multiply[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4467 multiply[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4468 multiply[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4469 multiply[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4470 multiply[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4471 multiply[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4472 multiply[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4473 multiply[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4474 multiply[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4475 multiply[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4476 multiply[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4477 multiply[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4478 multiply[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4479 multiply[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow on
code auto:4480 multiply[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4481 multiply[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow on
code auto:4482 multiply[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4483 multiply[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow on
code auto:4484 multiply[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4485 multiply[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow on
code auto:4486 multiply[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4487 multiply[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow on
code auto:4488 multiply[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4489 multiply[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow on
code auto:4490 multiply[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65025

code auto:4491 multiply[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow on
code auto:4492 multiply[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4493 multiply[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4494 multiply[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4495 multiply[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4496 multiply[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4497 multiply[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4498 multiply[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4499 multiply[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow on
code auto:4500 multiply[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4501 multiply[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4502 multiply[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4503 multiply[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4504 multiply[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4505 multiply[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4506 multiply[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4507 multiply[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4508 multiply[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4509 multiply[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow on
code auto:4510 multiply[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4511 multiply[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4512 multiply[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4513 multiply[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4514 multiply[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4515 multiply[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4516 multiply[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4517 multiply[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4518 multiply[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4519 multiply[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow on
code auto:4520 multiply[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4521 multiply[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4522 multiply[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4523 multiply[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4524 multiply[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4525 multiply[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4526 multiply[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4527 multiply[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4528 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4529 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4530 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4531 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4532 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4533 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4534 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4535 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4536 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4537 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4538 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4539 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4540 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4541 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4542 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4543 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4544 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4545 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4546 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4547 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4548 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4549 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4550 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4551 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4552 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4553 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4554 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4555 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4556 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4557 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4558 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4559 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4560 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4561 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4562 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4563 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4564 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4565 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4566 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4567 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4568 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4569 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4570 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4571 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4572 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4573 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4574 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4575 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4576 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4577 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4578 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4579 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4580 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4581 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4582 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4583 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4584 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4585 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4586 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4587 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4588 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4589 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4590 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4591 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4592 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4593 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4594 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4595 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4596 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4597 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4598 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4599 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4600 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4601 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4602 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4603 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4604 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4605 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4606 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4607 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4608 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4609 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4610 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a * b;
endcode
varvalue r 0

code auto:4611 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4612 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4613 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4614 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4615 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4616 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4617 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4618 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4619 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4620 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4621 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4622 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4623 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4624 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime noerror

code auto:4625 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4626 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a * b;
endcode
runtime overflow

code auto:4627 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4628 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4629 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4630 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4631 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4632 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4633 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4634 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4635 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4636 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4637 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4638 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4639 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4640 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4641 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4642 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4643 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4644 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4645 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4646 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4647 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4648 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4649 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4650 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4651 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4652 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4653 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4654 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4655 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4656 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4657 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4658 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4659 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4660 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4661 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4662 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4663 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4664 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4665 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4666 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4667 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4668 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4669 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4670 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4671 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4672 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4673 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4674 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4675 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4676 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4677 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4678 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4679 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4680 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4681 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4682 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4683 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4684 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4685 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4686 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4687 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4688 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4689 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4690 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4691 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4692 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4693 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4694 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4695 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4696 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4697 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4698 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4699 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4700 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4701 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4702 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4703 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4704 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4705 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4706 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4707 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4708 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4709 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4710 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int16;
  r := a * b;
endcode
varvalue r 0

code auto:4711 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4712 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4713 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4714 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4715 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4716 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4717 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4718 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4719 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4720 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4721 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4722 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4723 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4724 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Int16] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime noerror

code auto:4725 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow off
  var  r: Int16;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4726 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Int16] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int16;
  r := a * b;
endcode
runtime overflow

code auto:4727 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Int16] Both immediate $overflow on
  var  r: Int16;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4728 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4729 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4730 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4731 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4732 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4733 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4734 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4735 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4736 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4737 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4738 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4739 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4740 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4741 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4742 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4743 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4744 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4745 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4746 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4747 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4748 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4749 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4750 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4751 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4752 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4753 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow on
code auto:4754 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4755 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 255;
endcode
compile error

$overflow off
code auto:4756 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4757 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4758 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4759 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4760 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4761 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4762 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4763 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4764 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4765 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4766 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4767 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4768 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4769 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4770 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4771 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4772 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4773 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4774 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4775 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4776 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4777 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4778 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4779 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4780 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4781 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4782 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4783 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4784 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4785 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4786 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4787 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4788 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4789 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4790 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4791 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4792 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4793 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4794 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4795 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4796 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4797 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4798 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4799 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4800 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4801 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4802 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4803 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4804 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4805 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4806 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4807 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4808 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4809 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4810 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a * b;
endcode
varvalue r 0

code auto:4811 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4812 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4813 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4814 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4815 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4816 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4817 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4818 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4819 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4820 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4821 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4822 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4823 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4824 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime noerror

code auto:4825 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4826 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a * b;
endcode
runtime overflow

code auto:4827 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 * 65535;
endcode
compile error

$overflow off
code auto:4828 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4829 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 0;
endcode
runtime noerror

$overflow on
code auto:4830 multiply[Pointer] 0[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4831 multiply[compile-time] 0[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 0;
endcode
varvalue r 0

$overflow off
code auto:4832 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4833 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 255;
endcode
runtime noerror

$overflow on
code auto:4834 multiply[Pointer] 0[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4835 multiply[compile-time] 0[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 255;
endcode
varvalue r 0

$overflow off
code auto:4836 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4837 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 32767;
endcode
runtime noerror

$overflow on
code auto:4838 multiply[Pointer] 0[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4839 multiply[compile-time] 0[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32767;
endcode
varvalue r 0

$overflow off
code auto:4840 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4841 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 32768;
endcode
runtime noerror

$overflow on
code auto:4842 multiply[Pointer] 0[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4843 multiply[compile-time] 0[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 32768;
endcode
varvalue r 0

$overflow off
code auto:4844 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4845 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 * 65535;
endcode
runtime noerror

$overflow on
code auto:4846 multiply[Pointer] 0[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4847 multiply[compile-time] 0[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 * 65535;
endcode
varvalue r 0

$overflow off
code auto:4848 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4849 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 0;
endcode
runtime noerror

$overflow on
code auto:4850 multiply[Pointer] 255[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4851 multiply[compile-time] 255[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 0;
endcode
varvalue r 0

$overflow off
code auto:4852 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4853 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 255;
endcode
runtime noerror

$overflow on
code auto:4854 multiply[Pointer] 255[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
varvalue r 65025

code auto:4855 multiply[compile-time] 255[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 255;
endcode
varvalue r 65025

$overflow off
code auto:4856 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4857 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 32767;
endcode
compile error

$overflow on
code auto:4858 multiply[Pointer] 255[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4859 multiply[compile-time] 255[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32767;
endcode
compile error

$overflow off
code auto:4860 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4861 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 32768;
endcode
compile error

$overflow on
code auto:4862 multiply[Pointer] 255[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4863 multiply[compile-time] 255[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 32768;
endcode
compile error

$overflow off
code auto:4864 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4865 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 * 65535;
endcode
compile error

$overflow on
code auto:4866 multiply[Pointer] 255[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4867 multiply[compile-time] 255[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 * 65535;
endcode
compile error

$overflow off
code auto:4868 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4869 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 0;
endcode
runtime noerror

$overflow on
code auto:4870 multiply[Pointer] 32767[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4871 multiply[compile-time] 32767[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 0;
endcode
varvalue r 0

$overflow off
code auto:4872 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4873 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 255;
endcode
compile error

$overflow on
code auto:4874 multiply[Pointer] 32767[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4875 multiply[compile-time] 32767[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 255;
endcode
compile error

$overflow off
code auto:4876 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4877 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow on
code auto:4878 multiply[Pointer] 32767[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4879 multiply[compile-time] 32767[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32767;
endcode
compile error

$overflow off
code auto:4880 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4881 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 32768;
endcode
compile error

$overflow on
code auto:4882 multiply[Pointer] 32767[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4883 multiply[compile-time] 32767[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 32768;
endcode
compile error

$overflow off
code auto:4884 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4885 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 * 65535;
endcode
compile error

$overflow on
code auto:4886 multiply[Pointer] 32767[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4887 multiply[compile-time] 32767[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 * 65535;
endcode
compile error

$overflow off
code auto:4888 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4889 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 * 0;
endcode
runtime noerror

$overflow on
code auto:4890 multiply[Pointer] 32768[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4891 multiply[compile-time] 32768[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 0;
endcode
varvalue r 0

$overflow off
code auto:4892 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4893 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 * 255;
endcode
compile error

$overflow on
code auto:4894 multiply[Pointer] 32768[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4895 multiply[compile-time] 32768[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 255;
endcode
compile error

$overflow off
code auto:4896 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4897 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 * 32767;
endcode
compile error

$overflow on
code auto:4898 multiply[Pointer] 32768[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4899 multiply[compile-time] 32768[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32767;
endcode
compile error

$overflow off
code auto:4900 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4901 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 * 32768;
endcode
compile error

$overflow on
code auto:4902 multiply[Pointer] 32768[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4903 multiply[compile-time] 32768[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 32768;
endcode
compile error

$overflow off
code auto:4904 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4905 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 * 65535;
endcode
compile error

$overflow on
code auto:4906 multiply[Pointer] 32768[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4907 multiply[compile-time] 32768[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 * 65535;
endcode
compile error

$overflow off
code auto:4908 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4909 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 * 0;
endcode
runtime noerror

$overflow on
code auto:4910 multiply[Pointer] 65535[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a * b;
endcode
varvalue r 0

code auto:4911 multiply[compile-time] 65535[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 0;
endcode
varvalue r 0

$overflow off
code auto:4912 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4913 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 * 255;
endcode
compile error

$overflow on
code auto:4914 multiply[Pointer] 65535[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4915 multiply[compile-time] 65535[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 255;
endcode
compile error

$overflow off
code auto:4916 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4917 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 * 32767;
endcode
compile error

$overflow on
code auto:4918 multiply[Pointer] 65535[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4919 multiply[compile-time] 65535[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32767;
endcode
compile error

$overflow off
code auto:4920 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4921 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 * 32768;
endcode
compile error

$overflow on
code auto:4922 multiply[Pointer] 65535[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4923 multiply[compile-time] 65535[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 32768;
endcode
compile error

$overflow off
code auto:4924 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime noerror

code auto:4925 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 * 65535;
endcode
compile error

$overflow on
code auto:4926 multiply[Pointer] 65535[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a * b;
endcode
runtime overflow

code auto:4927 multiply[compile-time] 65535[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 * 65535;
endcode
compile error

