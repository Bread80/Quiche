;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 greater-equal[Int16] -128[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3 greater-equal[Int16] -128[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:4 greater-equal[Int16] -128[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:5 greater-equal[compile-time] -128[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -128;
endcode
varvalue r True

$overflow on
code auto:6 greater-equal[Int16] -128[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:7 greater-equal[Int16] -128[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:8 greater-equal[Int16] -128[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r False

code auto:9 greater-equal[compile-time] -128[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -127;
endcode
varvalue r False

$overflow on
code auto:10 greater-equal[Int16] -128[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:11 greater-equal[Int16] -128[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:12 greater-equal[Int16] -128[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:13 greater-equal[compile-time] -128[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -1;
endcode
varvalue r False

$overflow on
code auto:14 greater-equal[Int16] -128[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:15 greater-equal[Int16] -128[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:16 greater-equal[Int16] -128[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:17 greater-equal[compile-time] -128[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:18 greater-equal[Int16] -128[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:19 greater-equal[Int16] -128[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:20 greater-equal[Int16] -128[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:21 greater-equal[compile-time] -128[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:22 greater-equal[Int16] -128[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:23 greater-equal[Int16] -128[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:24 greater-equal[Int16] -128[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:25 greater-equal[compile-time] -128[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:26 greater-equal[Int16] -127[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:27 greater-equal[Int16] -127[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:28 greater-equal[Int16] -127[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:29 greater-equal[compile-time] -127[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -128;
endcode
varvalue r True

$overflow on
code auto:30 greater-equal[Int16] -127[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:31 greater-equal[Int16] -127[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:32 greater-equal[Int16] -127[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:33 greater-equal[compile-time] -127[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -127;
endcode
varvalue r True

$overflow on
code auto:34 greater-equal[Int16] -127[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:35 greater-equal[Int16] -127[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:36 greater-equal[Int16] -127[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:37 greater-equal[compile-time] -127[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -1;
endcode
varvalue r False

$overflow on
code auto:38 greater-equal[Int16] -127[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:39 greater-equal[Int16] -127[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:40 greater-equal[Int16] -127[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:41 greater-equal[compile-time] -127[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 0;
endcode
varvalue r False

$overflow on
code auto:42 greater-equal[Int16] -127[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:43 greater-equal[Int16] -127[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:44 greater-equal[Int16] -127[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:45 greater-equal[compile-time] -127[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 1;
endcode
varvalue r False

$overflow on
code auto:46 greater-equal[Int16] -127[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:47 greater-equal[Int16] -127[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:48 greater-equal[Int16] -127[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:49 greater-equal[compile-time] -127[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 127;
endcode
varvalue r False

$overflow on
code auto:50 greater-equal[Int16] -1[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:51 greater-equal[Int16] -1[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:52 greater-equal[Int16] -1[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:53 greater-equal[compile-time] -1[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -128;
endcode
varvalue r True

$overflow on
code auto:54 greater-equal[Int16] -1[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:55 greater-equal[Int16] -1[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:56 greater-equal[Int16] -1[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:57 greater-equal[compile-time] -1[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -127;
endcode
varvalue r True

$overflow on
code auto:58 greater-equal[Int16] -1[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:59 greater-equal[Int16] -1[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:60 greater-equal[Int16] -1[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:61 greater-equal[compile-time] -1[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -1;
endcode
varvalue r True

$overflow on
code auto:62 greater-equal[Int16] -1[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:63 greater-equal[Int16] -1[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:64 greater-equal[Int16] -1[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:65 greater-equal[compile-time] -1[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:66 greater-equal[Int16] -1[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:67 greater-equal[Int16] -1[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:68 greater-equal[Int16] -1[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:69 greater-equal[compile-time] -1[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:70 greater-equal[Int16] -1[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:71 greater-equal[Int16] -1[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:72 greater-equal[Int16] -1[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:73 greater-equal[compile-time] -1[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:74 greater-equal[Int16] 0[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:75 greater-equal[Int16] 0[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:76 greater-equal[Int16] 0[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:77 greater-equal[compile-time] 0[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:78 greater-equal[Int16] 0[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:79 greater-equal[Int16] 0[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:80 greater-equal[Int16] 0[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:81 greater-equal[compile-time] 0[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -127;
endcode
varvalue r True

$overflow on
code auto:82 greater-equal[Int16] 0[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:83 greater-equal[Int16] 0[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:84 greater-equal[Int16] 0[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:85 greater-equal[compile-time] 0[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:86 greater-equal[Int16] 0[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:87 greater-equal[Int16] 0[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:88 greater-equal[Int16] 0[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:89 greater-equal[compile-time] 0[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:90 greater-equal[Int16] 0[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:91 greater-equal[Int16] 0[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:92 greater-equal[Int16] 0[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:93 greater-equal[compile-time] 0[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:94 greater-equal[Int16] 0[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:95 greater-equal[Int16] 0[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:96 greater-equal[Int16] 0[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:97 greater-equal[compile-time] 0[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:98 greater-equal[Int16] 1[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:99 greater-equal[Int16] 1[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:100 greater-equal[Int16] 1[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:101 greater-equal[compile-time] 1[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:102 greater-equal[Int16] 1[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:103 greater-equal[Int16] 1[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:104 greater-equal[Int16] 1[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:105 greater-equal[compile-time] 1[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -127;
endcode
varvalue r True

$overflow on
code auto:106 greater-equal[Int16] 1[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:107 greater-equal[Int16] 1[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:108 greater-equal[Int16] 1[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:109 greater-equal[compile-time] 1[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:110 greater-equal[Int16] 1[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:111 greater-equal[Int16] 1[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:112 greater-equal[Int16] 1[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:113 greater-equal[compile-time] 1[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:114 greater-equal[Int16] 1[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:115 greater-equal[Int16] 1[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:116 greater-equal[Int16] 1[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:117 greater-equal[compile-time] 1[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:118 greater-equal[Int16] 1[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:119 greater-equal[Int16] 1[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:120 greater-equal[Int16] 1[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:121 greater-equal[compile-time] 1[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:122 greater-equal[Int16] 127[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:123 greater-equal[Int16] 127[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:124 greater-equal[Int16] 127[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:125 greater-equal[compile-time] 127[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:126 greater-equal[Int16] 127[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:127 greater-equal[Int16] 127[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:128 greater-equal[Int16] 127[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:129 greater-equal[compile-time] 127[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -127;
endcode
varvalue r True

$overflow on
code auto:130 greater-equal[Int16] 127[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:131 greater-equal[Int16] 127[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:132 greater-equal[Int16] 127[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:133 greater-equal[compile-time] 127[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:134 greater-equal[Int16] 127[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:135 greater-equal[Int16] 127[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:136 greater-equal[Int16] 127[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:137 greater-equal[compile-time] 127[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:138 greater-equal[Int16] 127[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:139 greater-equal[Int16] 127[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:140 greater-equal[Int16] 127[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:141 greater-equal[compile-time] 127[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:142 greater-equal[Int16] 127[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:143 greater-equal[Int16] 127[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:144 greater-equal[Int16] 127[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:145 greater-equal[compile-time] 127[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:146 greater-equal[Int16] -128[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:147 greater-equal[Int16] -128[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:148 greater-equal[Int16] -128[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:149 greater-equal[compile-time] -128[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -32768;
endcode
varvalue r True

$overflow on
code auto:150 greater-equal[Int16] -128[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:151 greater-equal[Int16] -128[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:152 greater-equal[Int16] -128[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:153 greater-equal[compile-time] -128[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -32767;
endcode
varvalue r True

$overflow on
code auto:154 greater-equal[Int16] -128[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:155 greater-equal[Int16] -128[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:156 greater-equal[Int16] -128[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:157 greater-equal[compile-time] -128[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -129;
endcode
varvalue r True

$overflow on
code auto:158 greater-equal[Int16] -128[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:159 greater-equal[Int16] -128[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:160 greater-equal[Int16] -128[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:161 greater-equal[compile-time] -128[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -128;
endcode
varvalue r True

$overflow on
code auto:162 greater-equal[Int16] -128[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:163 greater-equal[Int16] -128[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:164 greater-equal[Int16] -128[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:165 greater-equal[compile-time] -128[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -1;
endcode
varvalue r False

$overflow on
code auto:166 greater-equal[Int16] -128[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:167 greater-equal[Int16] -128[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:168 greater-equal[Int16] -128[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:169 greater-equal[compile-time] -128[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:170 greater-equal[Int16] -128[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:171 greater-equal[Int16] -128[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:172 greater-equal[Int16] -128[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:173 greater-equal[compile-time] -128[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:174 greater-equal[Int16] -128[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:175 greater-equal[Int16] -128[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:176 greater-equal[Int16] -128[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:177 greater-equal[compile-time] -128[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:178 greater-equal[Int16] -128[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:179 greater-equal[Int16] -128[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:180 greater-equal[Int16] -128[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:181 greater-equal[compile-time] -128[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 128;
endcode
varvalue r False

$overflow on
code auto:182 greater-equal[Int16] -128[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:183 greater-equal[Int16] -128[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:184 greater-equal[Int16] -128[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:185 greater-equal[compile-time] -128[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:186 greater-equal[Int16] -127[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:187 greater-equal[Int16] -127[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:188 greater-equal[Int16] -127[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:189 greater-equal[compile-time] -127[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -32768;
endcode
varvalue r True

$overflow on
code auto:190 greater-equal[Int16] -127[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:191 greater-equal[Int16] -127[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:192 greater-equal[Int16] -127[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:193 greater-equal[compile-time] -127[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -32767;
endcode
varvalue r True

$overflow on
code auto:194 greater-equal[Int16] -127[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:195 greater-equal[Int16] -127[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:196 greater-equal[Int16] -127[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:197 greater-equal[compile-time] -127[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -129;
endcode
varvalue r True

$overflow on
code auto:198 greater-equal[Int16] -127[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:199 greater-equal[Int16] -127[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r True

code auto:200 greater-equal[Int16] -127[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:201 greater-equal[compile-time] -127[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -128;
endcode
varvalue r True

$overflow on
code auto:202 greater-equal[Int16] -127[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:203 greater-equal[Int16] -127[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:204 greater-equal[Int16] -127[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:205 greater-equal[compile-time] -127[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= -1;
endcode
varvalue r False

$overflow on
code auto:206 greater-equal[Int16] -127[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:207 greater-equal[Int16] -127[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:208 greater-equal[Int16] -127[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:209 greater-equal[compile-time] -127[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 0;
endcode
varvalue r False

$overflow on
code auto:210 greater-equal[Int16] -127[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:211 greater-equal[Int16] -127[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:212 greater-equal[Int16] -127[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:213 greater-equal[compile-time] -127[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 1;
endcode
varvalue r False

$overflow on
code auto:214 greater-equal[Int16] -127[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:215 greater-equal[Int16] -127[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:216 greater-equal[Int16] -127[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:217 greater-equal[compile-time] -127[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 127;
endcode
varvalue r False

$overflow on
code auto:218 greater-equal[Int16] -127[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:219 greater-equal[Int16] -127[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:220 greater-equal[Int16] -127[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:221 greater-equal[compile-time] -127[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 128;
endcode
varvalue r False

$overflow on
code auto:222 greater-equal[Int16] -127[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:223 greater-equal[Int16] -127[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:224 greater-equal[Int16] -127[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:225 greater-equal[compile-time] -127[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:226 greater-equal[Int16] -1[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:227 greater-equal[Int16] -1[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:228 greater-equal[Int16] -1[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:229 greater-equal[compile-time] -1[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -32768;
endcode
varvalue r True

$overflow on
code auto:230 greater-equal[Int16] -1[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:231 greater-equal[Int16] -1[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:232 greater-equal[Int16] -1[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:233 greater-equal[compile-time] -1[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -32767;
endcode
varvalue r True

$overflow on
code auto:234 greater-equal[Int16] -1[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:235 greater-equal[Int16] -1[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:236 greater-equal[Int16] -1[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:237 greater-equal[compile-time] -1[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -129;
endcode
varvalue r True

$overflow on
code auto:238 greater-equal[Int16] -1[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:239 greater-equal[Int16] -1[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:240 greater-equal[Int16] -1[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:241 greater-equal[compile-time] -1[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -128;
endcode
varvalue r True

$overflow on
code auto:242 greater-equal[Int16] -1[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:243 greater-equal[Int16] -1[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:244 greater-equal[Int16] -1[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:245 greater-equal[compile-time] -1[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -1;
endcode
varvalue r True

$overflow on
code auto:246 greater-equal[Int16] -1[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:247 greater-equal[Int16] -1[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:248 greater-equal[Int16] -1[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:249 greater-equal[compile-time] -1[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:250 greater-equal[Int16] -1[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:251 greater-equal[Int16] -1[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:252 greater-equal[Int16] -1[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:253 greater-equal[compile-time] -1[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:254 greater-equal[Int16] -1[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:255 greater-equal[Int16] -1[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:256 greater-equal[Int16] -1[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:257 greater-equal[compile-time] -1[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:258 greater-equal[Int16] -1[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:259 greater-equal[Int16] -1[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:260 greater-equal[Int16] -1[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:261 greater-equal[compile-time] -1[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 128;
endcode
varvalue r False

$overflow on
code auto:262 greater-equal[Int16] -1[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:263 greater-equal[Int16] -1[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:264 greater-equal[Int16] -1[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:265 greater-equal[compile-time] -1[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:266 greater-equal[Int16] 0[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:267 greater-equal[Int16] 0[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:268 greater-equal[Int16] 0[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:269 greater-equal[compile-time] 0[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32768;
endcode
varvalue r True

$overflow on
code auto:270 greater-equal[Int16] 0[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:271 greater-equal[Int16] 0[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:272 greater-equal[Int16] 0[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:273 greater-equal[compile-time] 0[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32767;
endcode
varvalue r True

$overflow on
code auto:274 greater-equal[Int16] 0[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:275 greater-equal[Int16] 0[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:276 greater-equal[Int16] 0[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:277 greater-equal[compile-time] 0[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -129;
endcode
varvalue r True

$overflow on
code auto:278 greater-equal[Int16] 0[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:279 greater-equal[Int16] 0[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:280 greater-equal[Int16] 0[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:281 greater-equal[compile-time] 0[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:282 greater-equal[Int16] 0[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:283 greater-equal[Int16] 0[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:284 greater-equal[Int16] 0[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:285 greater-equal[compile-time] 0[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:286 greater-equal[Int16] 0[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:287 greater-equal[Int16] 0[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:288 greater-equal[Int16] 0[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:289 greater-equal[compile-time] 0[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:290 greater-equal[Int16] 0[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:291 greater-equal[Int16] 0[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:292 greater-equal[Int16] 0[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:293 greater-equal[compile-time] 0[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:294 greater-equal[Int16] 0[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:295 greater-equal[Int16] 0[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:296 greater-equal[Int16] 0[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:297 greater-equal[compile-time] 0[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:298 greater-equal[Int16] 0[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:299 greater-equal[Int16] 0[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:300 greater-equal[Int16] 0[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:301 greater-equal[compile-time] 0[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:302 greater-equal[Int16] 0[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:303 greater-equal[Int16] 0[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:304 greater-equal[Int16] 0[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:305 greater-equal[compile-time] 0[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:306 greater-equal[Int16] 1[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:307 greater-equal[Int16] 1[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:308 greater-equal[Int16] 1[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:309 greater-equal[compile-time] 1[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32768;
endcode
varvalue r True

$overflow on
code auto:310 greater-equal[Int16] 1[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:311 greater-equal[Int16] 1[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:312 greater-equal[Int16] 1[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:313 greater-equal[compile-time] 1[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32767;
endcode
varvalue r True

$overflow on
code auto:314 greater-equal[Int16] 1[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:315 greater-equal[Int16] 1[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:316 greater-equal[Int16] 1[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:317 greater-equal[compile-time] 1[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -129;
endcode
varvalue r True

$overflow on
code auto:318 greater-equal[Int16] 1[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:319 greater-equal[Int16] 1[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:320 greater-equal[Int16] 1[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:321 greater-equal[compile-time] 1[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:322 greater-equal[Int16] 1[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:323 greater-equal[Int16] 1[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:324 greater-equal[Int16] 1[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:325 greater-equal[compile-time] 1[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:326 greater-equal[Int16] 1[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:327 greater-equal[Int16] 1[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:328 greater-equal[Int16] 1[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:329 greater-equal[compile-time] 1[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:330 greater-equal[Int16] 1[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:331 greater-equal[Int16] 1[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:332 greater-equal[Int16] 1[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:333 greater-equal[compile-time] 1[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:334 greater-equal[Int16] 1[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:335 greater-equal[Int16] 1[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:336 greater-equal[Int16] 1[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:337 greater-equal[compile-time] 1[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:338 greater-equal[Int16] 1[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:339 greater-equal[Int16] 1[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:340 greater-equal[Int16] 1[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:341 greater-equal[compile-time] 1[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:342 greater-equal[Int16] 1[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:343 greater-equal[Int16] 1[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:344 greater-equal[Int16] 1[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:345 greater-equal[compile-time] 1[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:346 greater-equal[Int16] 127[Int8], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:347 greater-equal[Int16] 127[Int8], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:348 greater-equal[Int16] 127[Int8], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:349 greater-equal[compile-time] 127[Int8], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32768;
endcode
varvalue r True

$overflow on
code auto:350 greater-equal[Int16] 127[Int8], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:351 greater-equal[Int16] 127[Int8], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:352 greater-equal[Int16] 127[Int8], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:353 greater-equal[compile-time] 127[Int8], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32767;
endcode
varvalue r True

$overflow on
code auto:354 greater-equal[Int16] 127[Int8], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:355 greater-equal[Int16] 127[Int8], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:356 greater-equal[Int16] 127[Int8], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:357 greater-equal[compile-time] 127[Int8], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -129;
endcode
varvalue r True

$overflow on
code auto:358 greater-equal[Int16] 127[Int8], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:359 greater-equal[Int16] 127[Int8], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:360 greater-equal[Int16] 127[Int8], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:361 greater-equal[compile-time] 127[Int8], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:362 greater-equal[Int16] 127[Int8], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:363 greater-equal[Int16] 127[Int8], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:364 greater-equal[Int16] 127[Int8], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:365 greater-equal[compile-time] 127[Int8], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:366 greater-equal[Int16] 127[Int8], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:367 greater-equal[Int16] 127[Int8], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:368 greater-equal[Int16] 127[Int8], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:369 greater-equal[compile-time] 127[Int8], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:370 greater-equal[Int16] 127[Int8], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:371 greater-equal[Int16] 127[Int8], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:372 greater-equal[Int16] 127[Int8], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:373 greater-equal[compile-time] 127[Int8], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:374 greater-equal[Int16] 127[Int8], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:375 greater-equal[Int16] 127[Int8], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:376 greater-equal[Int16] 127[Int8], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:377 greater-equal[compile-time] 127[Int8], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:378 greater-equal[Int16] 127[Int8], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:379 greater-equal[Int16] 127[Int8], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:380 greater-equal[Int16] 127[Int8], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:381 greater-equal[compile-time] 127[Int8], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:382 greater-equal[Int16] 127[Int8], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:383 greater-equal[Int16] 127[Int8], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:384 greater-equal[Int16] 127[Int8], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:385 greater-equal[compile-time] 127[Int8], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:386 greater-equal[Int16] -128[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:387 greater-equal[Int16] -128[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:388 greater-equal[Int16] -128[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:389 greater-equal[compile-time] -128[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:390 greater-equal[Int16] -128[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:391 greater-equal[Int16] -128[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:392 greater-equal[Int16] -128[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:393 greater-equal[compile-time] -128[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:394 greater-equal[Int16] -128[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:395 greater-equal[Int16] -128[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:396 greater-equal[Int16] -128[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:397 greater-equal[compile-time] -128[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:398 greater-equal[Int16] -128[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:399 greater-equal[Int16] -128[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:400 greater-equal[Int16] -128[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:401 greater-equal[compile-time] -128[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 128;
endcode
varvalue r False

$overflow on
code auto:402 greater-equal[Int16] -128[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:403 greater-equal[Int16] -128[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:404 greater-equal[Int16] -128[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:405 greater-equal[compile-time] -128[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:406 greater-equal[Int16] -127[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:407 greater-equal[Int16] -127[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:408 greater-equal[Int16] -127[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:409 greater-equal[compile-time] -127[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 0;
endcode
varvalue r False

$overflow on
code auto:410 greater-equal[Int16] -127[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:411 greater-equal[Int16] -127[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:412 greater-equal[Int16] -127[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:413 greater-equal[compile-time] -127[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 1;
endcode
varvalue r False

$overflow on
code auto:414 greater-equal[Int16] -127[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:415 greater-equal[Int16] -127[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:416 greater-equal[Int16] -127[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:417 greater-equal[compile-time] -127[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 127;
endcode
varvalue r False

$overflow on
code auto:418 greater-equal[Int16] -127[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:419 greater-equal[Int16] -127[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:420 greater-equal[Int16] -127[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:421 greater-equal[compile-time] -127[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 128;
endcode
varvalue r False

$overflow on
code auto:422 greater-equal[Int16] -127[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:423 greater-equal[Int16] -127[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:424 greater-equal[Int16] -127[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:425 greater-equal[compile-time] -127[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 255;
endcode
varvalue r False

$overflow on
code auto:426 greater-equal[Int16] -1[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:427 greater-equal[Int16] -1[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:428 greater-equal[Int16] -1[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:429 greater-equal[compile-time] -1[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:430 greater-equal[Int16] -1[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:431 greater-equal[Int16] -1[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:432 greater-equal[Int16] -1[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:433 greater-equal[compile-time] -1[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:434 greater-equal[Int16] -1[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:435 greater-equal[Int16] -1[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:436 greater-equal[Int16] -1[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:437 greater-equal[compile-time] -1[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:438 greater-equal[Int16] -1[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:439 greater-equal[Int16] -1[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:440 greater-equal[Int16] -1[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:441 greater-equal[compile-time] -1[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 128;
endcode
varvalue r False

$overflow on
code auto:442 greater-equal[Int16] -1[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:443 greater-equal[Int16] -1[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:444 greater-equal[Int16] -1[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:445 greater-equal[compile-time] -1[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:446 greater-equal[Int16] 0[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:447 greater-equal[Int16] 0[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:448 greater-equal[Int16] 0[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:449 greater-equal[compile-time] 0[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:450 greater-equal[Int16] 0[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:451 greater-equal[Int16] 0[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:452 greater-equal[Int16] 0[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:453 greater-equal[compile-time] 0[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:454 greater-equal[Int16] 0[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:455 greater-equal[Int16] 0[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:456 greater-equal[Int16] 0[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:457 greater-equal[compile-time] 0[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:458 greater-equal[Int16] 0[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:459 greater-equal[Int16] 0[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:460 greater-equal[Int16] 0[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:461 greater-equal[compile-time] 0[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:462 greater-equal[Int16] 0[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:463 greater-equal[Int16] 0[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:464 greater-equal[Int16] 0[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:465 greater-equal[compile-time] 0[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:466 greater-equal[Int16] 1[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:467 greater-equal[Int16] 1[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:468 greater-equal[Int16] 1[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:469 greater-equal[compile-time] 1[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:470 greater-equal[Int16] 1[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:471 greater-equal[Int16] 1[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:472 greater-equal[Int16] 1[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:473 greater-equal[compile-time] 1[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:474 greater-equal[Int16] 1[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:475 greater-equal[Int16] 1[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:476 greater-equal[Int16] 1[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:477 greater-equal[compile-time] 1[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:478 greater-equal[Int16] 1[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:479 greater-equal[Int16] 1[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:480 greater-equal[Int16] 1[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:481 greater-equal[compile-time] 1[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:482 greater-equal[Int16] 1[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:483 greater-equal[Int16] 1[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:484 greater-equal[Int16] 1[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:485 greater-equal[compile-time] 1[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:486 greater-equal[Int16] 127[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:487 greater-equal[Int16] 127[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:488 greater-equal[Int16] 127[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:489 greater-equal[compile-time] 127[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:490 greater-equal[Int16] 127[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:491 greater-equal[Int16] 127[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:492 greater-equal[Int16] 127[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:493 greater-equal[compile-time] 127[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:494 greater-equal[Int16] 127[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:495 greater-equal[Int16] 127[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:496 greater-equal[Int16] 127[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:497 greater-equal[compile-time] 127[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:498 greater-equal[Int16] 127[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:499 greater-equal[Int16] 127[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:500 greater-equal[Int16] 127[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:501 greater-equal[compile-time] 127[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:502 greater-equal[Int16] 127[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:503 greater-equal[Int16] 127[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:504 greater-equal[Int16] 127[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:505 greater-equal[compile-time] 127[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:506 greater-equal[Int16] -128[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:507 greater-equal[Int16] -128[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:508 greater-equal[Int16] -128[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:509 greater-equal[compile-time] -128[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:510 greater-equal[Int16] -128[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:511 greater-equal[Int16] -128[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:512 greater-equal[Int16] -128[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:513 greater-equal[compile-time] -128[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:514 greater-equal[Int16] -128[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:515 greater-equal[Int16] -128[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:516 greater-equal[Int16] -128[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:517 greater-equal[compile-time] -128[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:518 greater-equal[Int16] -128[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:519 greater-equal[Int16] -128[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:520 greater-equal[Int16] -128[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:521 greater-equal[compile-time] -128[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:522 greater-equal[Int16] -128[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:523 greater-equal[Int16] -128[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:524 greater-equal[Int16] -128[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:525 greater-equal[compile-time] -128[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:526 greater-equal[Int16] -127[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:527 greater-equal[Int16] -127[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:528 greater-equal[Int16] -127[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:529 greater-equal[compile-time] -127[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 0;
endcode
varvalue r False

$overflow on
code auto:530 greater-equal[Int16] -127[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:531 greater-equal[Int16] -127[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:532 greater-equal[Int16] -127[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:533 greater-equal[compile-time] -127[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 255;
endcode
varvalue r False

$overflow on
code auto:534 greater-equal[Int16] -127[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:535 greater-equal[Int16] -127[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:536 greater-equal[Int16] -127[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:537 greater-equal[compile-time] -127[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:538 greater-equal[Int16] -127[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:539 greater-equal[Int16] -127[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:540 greater-equal[Int16] -127[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:541 greater-equal[compile-time] -127[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:542 greater-equal[Int16] -127[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:543 greater-equal[Int16] -127[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:544 greater-equal[Int16] -127[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:545 greater-equal[compile-time] -127[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:546 greater-equal[Int16] -1[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:547 greater-equal[Int16] -1[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:548 greater-equal[Int16] -1[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:549 greater-equal[compile-time] -1[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:550 greater-equal[Int16] -1[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:551 greater-equal[Int16] -1[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:552 greater-equal[Int16] -1[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:553 greater-equal[compile-time] -1[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:554 greater-equal[Int16] -1[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:555 greater-equal[Int16] -1[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:556 greater-equal[Int16] -1[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:557 greater-equal[compile-time] -1[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:558 greater-equal[Int16] -1[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:559 greater-equal[Int16] -1[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:560 greater-equal[Int16] -1[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:561 greater-equal[compile-time] -1[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:562 greater-equal[Int16] -1[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:563 greater-equal[Int16] -1[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:564 greater-equal[Int16] -1[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:565 greater-equal[compile-time] -1[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:566 greater-equal[Int16] 0[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:567 greater-equal[Int16] 0[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:568 greater-equal[Int16] 0[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:569 greater-equal[compile-time] 0[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:570 greater-equal[Int16] 0[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:571 greater-equal[Int16] 0[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:572 greater-equal[Int16] 0[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:573 greater-equal[compile-time] 0[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:574 greater-equal[Int16] 0[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:575 greater-equal[Int16] 0[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:576 greater-equal[Int16] 0[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:577 greater-equal[compile-time] 0[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:578 greater-equal[Int16] 0[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:579 greater-equal[Int16] 0[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:580 greater-equal[Int16] 0[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:581 greater-equal[compile-time] 0[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:582 greater-equal[Int16] 0[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:583 greater-equal[Int16] 0[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:584 greater-equal[Int16] 0[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:585 greater-equal[compile-time] 0[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:586 greater-equal[Int16] 1[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:587 greater-equal[Int16] 1[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:588 greater-equal[Int16] 1[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:589 greater-equal[compile-time] 1[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:590 greater-equal[Int16] 1[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:591 greater-equal[Int16] 1[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:592 greater-equal[Int16] 1[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:593 greater-equal[compile-time] 1[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:594 greater-equal[Int16] 1[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:595 greater-equal[Int16] 1[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:596 greater-equal[Int16] 1[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:597 greater-equal[compile-time] 1[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:598 greater-equal[Int16] 1[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:599 greater-equal[Int16] 1[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:600 greater-equal[Int16] 1[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:601 greater-equal[compile-time] 1[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:602 greater-equal[Int16] 1[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:603 greater-equal[Int16] 1[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:604 greater-equal[Int16] 1[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:605 greater-equal[compile-time] 1[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:606 greater-equal[Int16] 127[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:607 greater-equal[Int16] 127[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:608 greater-equal[Int16] 127[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:609 greater-equal[compile-time] 127[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:610 greater-equal[Int16] 127[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:611 greater-equal[Int16] 127[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:612 greater-equal[Int16] 127[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:613 greater-equal[compile-time] 127[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:614 greater-equal[Int16] 127[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:615 greater-equal[Int16] 127[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:616 greater-equal[Int16] 127[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:617 greater-equal[compile-time] 127[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:618 greater-equal[Int16] 127[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:619 greater-equal[Int16] 127[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:620 greater-equal[Int16] 127[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:621 greater-equal[compile-time] 127[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:622 greater-equal[Int16] 127[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:623 greater-equal[Int16] 127[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:624 greater-equal[Int16] 127[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:625 greater-equal[compile-time] 127[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:626 greater-equal[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:627 greater-equal[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:628 greater-equal[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:629 greater-equal[compile-time] -128[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:630 greater-equal[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:631 greater-equal[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:632 greater-equal[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:633 greater-equal[compile-time] -128[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:634 greater-equal[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:635 greater-equal[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:636 greater-equal[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:637 greater-equal[compile-time] -128[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:638 greater-equal[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:639 greater-equal[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:640 greater-equal[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:641 greater-equal[compile-time] -128[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:642 greater-equal[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:643 greater-equal[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:644 greater-equal[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:645 greater-equal[compile-time] -128[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:646 greater-equal[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:647 greater-equal[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:648 greater-equal[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:649 greater-equal[compile-time] -127[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 0;
endcode
varvalue r False

$overflow on
code auto:650 greater-equal[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:651 greater-equal[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:652 greater-equal[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:653 greater-equal[compile-time] -127[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 255;
endcode
varvalue r False

$overflow on
code auto:654 greater-equal[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:655 greater-equal[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:656 greater-equal[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:657 greater-equal[compile-time] -127[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:658 greater-equal[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:659 greater-equal[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:660 greater-equal[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:661 greater-equal[compile-time] -127[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:662 greater-equal[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:663 greater-equal[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -127 >= b;
endcode
varvalue r False

code auto:664 greater-equal[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:665 greater-equal[compile-time] -127[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:666 greater-equal[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:667 greater-equal[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:668 greater-equal[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:669 greater-equal[compile-time] -1[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:670 greater-equal[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:671 greater-equal[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:672 greater-equal[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:673 greater-equal[compile-time] -1[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:674 greater-equal[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:675 greater-equal[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:676 greater-equal[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:677 greater-equal[compile-time] -1[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:678 greater-equal[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:679 greater-equal[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:680 greater-equal[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:681 greater-equal[compile-time] -1[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:682 greater-equal[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:683 greater-equal[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:684 greater-equal[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:685 greater-equal[compile-time] -1[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:686 greater-equal[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:687 greater-equal[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:688 greater-equal[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:689 greater-equal[compile-time] 0[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:690 greater-equal[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:691 greater-equal[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:692 greater-equal[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:693 greater-equal[compile-time] 0[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:694 greater-equal[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:695 greater-equal[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:696 greater-equal[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:697 greater-equal[compile-time] 0[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:698 greater-equal[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:699 greater-equal[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:700 greater-equal[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:701 greater-equal[compile-time] 0[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:702 greater-equal[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:703 greater-equal[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:704 greater-equal[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:705 greater-equal[compile-time] 0[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:706 greater-equal[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:707 greater-equal[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:708 greater-equal[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:709 greater-equal[compile-time] 1[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:710 greater-equal[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:711 greater-equal[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:712 greater-equal[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:713 greater-equal[compile-time] 1[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:714 greater-equal[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:715 greater-equal[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:716 greater-equal[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:717 greater-equal[compile-time] 1[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:718 greater-equal[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:719 greater-equal[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:720 greater-equal[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:721 greater-equal[compile-time] 1[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:722 greater-equal[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:723 greater-equal[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:724 greater-equal[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:725 greater-equal[compile-time] 1[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:726 greater-equal[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:727 greater-equal[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:728 greater-equal[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:729 greater-equal[compile-time] 127[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:730 greater-equal[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:731 greater-equal[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:732 greater-equal[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:733 greater-equal[compile-time] 127[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:734 greater-equal[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:735 greater-equal[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:736 greater-equal[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:737 greater-equal[compile-time] 127[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:738 greater-equal[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:739 greater-equal[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:740 greater-equal[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:741 greater-equal[compile-time] 127[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:742 greater-equal[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:743 greater-equal[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:744 greater-equal[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:745 greater-equal[compile-time] 127[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:746 greater-equal[Int16] -32768[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:747 greater-equal[Int16] -32768[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:748 greater-equal[Int16] -32768[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:749 greater-equal[compile-time] -32768[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -128;
endcode
varvalue r False

$overflow on
code auto:750 greater-equal[Int16] -32768[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:751 greater-equal[Int16] -32768[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:752 greater-equal[Int16] -32768[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r False

code auto:753 greater-equal[compile-time] -32768[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -127;
endcode
varvalue r False

$overflow on
code auto:754 greater-equal[Int16] -32768[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:755 greater-equal[Int16] -32768[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:756 greater-equal[Int16] -32768[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:757 greater-equal[compile-time] -32768[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -1;
endcode
varvalue r False

$overflow on
code auto:758 greater-equal[Int16] -32768[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:759 greater-equal[Int16] -32768[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:760 greater-equal[Int16] -32768[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:761 greater-equal[compile-time] -32768[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 0;
endcode
varvalue r False

$overflow on
code auto:762 greater-equal[Int16] -32768[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:763 greater-equal[Int16] -32768[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:764 greater-equal[Int16] -32768[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:765 greater-equal[compile-time] -32768[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 1;
endcode
varvalue r False

$overflow on
code auto:766 greater-equal[Int16] -32768[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:767 greater-equal[Int16] -32768[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:768 greater-equal[Int16] -32768[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:769 greater-equal[compile-time] -32768[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 127;
endcode
varvalue r False

$overflow on
code auto:770 greater-equal[Int16] -32767[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:771 greater-equal[Int16] -32767[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:772 greater-equal[Int16] -32767[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:773 greater-equal[compile-time] -32767[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -128;
endcode
varvalue r False

$overflow on
code auto:774 greater-equal[Int16] -32767[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:775 greater-equal[Int16] -32767[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:776 greater-equal[Int16] -32767[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r False

code auto:777 greater-equal[compile-time] -32767[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -127;
endcode
varvalue r False

$overflow on
code auto:778 greater-equal[Int16] -32767[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:779 greater-equal[Int16] -32767[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:780 greater-equal[Int16] -32767[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:781 greater-equal[compile-time] -32767[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -1;
endcode
varvalue r False

$overflow on
code auto:782 greater-equal[Int16] -32767[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:783 greater-equal[Int16] -32767[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:784 greater-equal[Int16] -32767[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:785 greater-equal[compile-time] -32767[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 0;
endcode
varvalue r False

$overflow on
code auto:786 greater-equal[Int16] -32767[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:787 greater-equal[Int16] -32767[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:788 greater-equal[Int16] -32767[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:789 greater-equal[compile-time] -32767[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 1;
endcode
varvalue r False

$overflow on
code auto:790 greater-equal[Int16] -32767[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:791 greater-equal[Int16] -32767[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:792 greater-equal[Int16] -32767[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:793 greater-equal[compile-time] -32767[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 127;
endcode
varvalue r False

$overflow on
code auto:794 greater-equal[Int16] -129[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:795 greater-equal[Int16] -129[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:796 greater-equal[Int16] -129[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:797 greater-equal[compile-time] -129[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -128;
endcode
varvalue r False

$overflow on
code auto:798 greater-equal[Int16] -129[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:799 greater-equal[Int16] -129[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:800 greater-equal[Int16] -129[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r False

code auto:801 greater-equal[compile-time] -129[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -127;
endcode
varvalue r False

$overflow on
code auto:802 greater-equal[Int16] -129[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:803 greater-equal[Int16] -129[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:804 greater-equal[Int16] -129[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:805 greater-equal[compile-time] -129[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -1;
endcode
varvalue r False

$overflow on
code auto:806 greater-equal[Int16] -129[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:807 greater-equal[Int16] -129[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:808 greater-equal[Int16] -129[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:809 greater-equal[compile-time] -129[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 0;
endcode
varvalue r False

$overflow on
code auto:810 greater-equal[Int16] -129[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:811 greater-equal[Int16] -129[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:812 greater-equal[Int16] -129[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:813 greater-equal[compile-time] -129[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 1;
endcode
varvalue r False

$overflow on
code auto:814 greater-equal[Int16] -129[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:815 greater-equal[Int16] -129[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:816 greater-equal[Int16] -129[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:817 greater-equal[compile-time] -129[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 127;
endcode
varvalue r False

$overflow on
code auto:818 greater-equal[Int16] -128[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:819 greater-equal[Int16] -128[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:820 greater-equal[Int16] -128[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:821 greater-equal[compile-time] -128[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -128;
endcode
varvalue r True

$overflow on
code auto:822 greater-equal[Int16] -128[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:823 greater-equal[Int16] -128[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:824 greater-equal[Int16] -128[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r False

code auto:825 greater-equal[compile-time] -128[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -127;
endcode
varvalue r False

$overflow on
code auto:826 greater-equal[Int16] -128[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:827 greater-equal[Int16] -128[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:828 greater-equal[Int16] -128[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:829 greater-equal[compile-time] -128[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -1;
endcode
varvalue r False

$overflow on
code auto:830 greater-equal[Int16] -128[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:831 greater-equal[Int16] -128[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:832 greater-equal[Int16] -128[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:833 greater-equal[compile-time] -128[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:834 greater-equal[Int16] -128[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:835 greater-equal[Int16] -128[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:836 greater-equal[Int16] -128[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:837 greater-equal[compile-time] -128[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:838 greater-equal[Int16] -128[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:839 greater-equal[Int16] -128[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:840 greater-equal[Int16] -128[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:841 greater-equal[compile-time] -128[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:842 greater-equal[Int16] -1[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:843 greater-equal[Int16] -1[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:844 greater-equal[Int16] -1[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:845 greater-equal[compile-time] -1[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -128;
endcode
varvalue r True

$overflow on
code auto:846 greater-equal[Int16] -1[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:847 greater-equal[Int16] -1[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:848 greater-equal[Int16] -1[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:849 greater-equal[compile-time] -1[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -127;
endcode
varvalue r True

$overflow on
code auto:850 greater-equal[Int16] -1[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:851 greater-equal[Int16] -1[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:852 greater-equal[Int16] -1[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:853 greater-equal[compile-time] -1[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -1;
endcode
varvalue r True

$overflow on
code auto:854 greater-equal[Int16] -1[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:855 greater-equal[Int16] -1[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:856 greater-equal[Int16] -1[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:857 greater-equal[compile-time] -1[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:858 greater-equal[Int16] -1[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:859 greater-equal[Int16] -1[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:860 greater-equal[Int16] -1[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:861 greater-equal[compile-time] -1[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:862 greater-equal[Int16] -1[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:863 greater-equal[Int16] -1[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:864 greater-equal[Int16] -1[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:865 greater-equal[compile-time] -1[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:866 greater-equal[Int16] 0[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:867 greater-equal[Int16] 0[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:868 greater-equal[Int16] 0[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:869 greater-equal[compile-time] 0[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:870 greater-equal[Int16] 0[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:871 greater-equal[Int16] 0[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:872 greater-equal[Int16] 0[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:873 greater-equal[compile-time] 0[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -127;
endcode
varvalue r True

$overflow on
code auto:874 greater-equal[Int16] 0[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:875 greater-equal[Int16] 0[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:876 greater-equal[Int16] 0[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:877 greater-equal[compile-time] 0[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:878 greater-equal[Int16] 0[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:879 greater-equal[Int16] 0[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:880 greater-equal[Int16] 0[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:881 greater-equal[compile-time] 0[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:882 greater-equal[Int16] 0[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:883 greater-equal[Int16] 0[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:884 greater-equal[Int16] 0[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:885 greater-equal[compile-time] 0[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:886 greater-equal[Int16] 0[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:887 greater-equal[Int16] 0[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:888 greater-equal[Int16] 0[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:889 greater-equal[compile-time] 0[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:890 greater-equal[Int16] 1[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:891 greater-equal[Int16] 1[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:892 greater-equal[Int16] 1[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:893 greater-equal[compile-time] 1[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:894 greater-equal[Int16] 1[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:895 greater-equal[Int16] 1[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:896 greater-equal[Int16] 1[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:897 greater-equal[compile-time] 1[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -127;
endcode
varvalue r True

$overflow on
code auto:898 greater-equal[Int16] 1[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:899 greater-equal[Int16] 1[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:900 greater-equal[Int16] 1[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:901 greater-equal[compile-time] 1[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:902 greater-equal[Int16] 1[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:903 greater-equal[Int16] 1[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:904 greater-equal[Int16] 1[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:905 greater-equal[compile-time] 1[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:906 greater-equal[Int16] 1[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:907 greater-equal[Int16] 1[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:908 greater-equal[Int16] 1[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:909 greater-equal[compile-time] 1[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:910 greater-equal[Int16] 1[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:911 greater-equal[Int16] 1[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:912 greater-equal[Int16] 1[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:913 greater-equal[compile-time] 1[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:914 greater-equal[Int16] 127[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:915 greater-equal[Int16] 127[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:916 greater-equal[Int16] 127[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:917 greater-equal[compile-time] 127[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:918 greater-equal[Int16] 127[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:919 greater-equal[Int16] 127[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:920 greater-equal[Int16] 127[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:921 greater-equal[compile-time] 127[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -127;
endcode
varvalue r True

$overflow on
code auto:922 greater-equal[Int16] 127[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:923 greater-equal[Int16] 127[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:924 greater-equal[Int16] 127[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:925 greater-equal[compile-time] 127[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:926 greater-equal[Int16] 127[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:927 greater-equal[Int16] 127[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:928 greater-equal[Int16] 127[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:929 greater-equal[compile-time] 127[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:930 greater-equal[Int16] 127[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:931 greater-equal[Int16] 127[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:932 greater-equal[Int16] 127[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:933 greater-equal[compile-time] 127[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:934 greater-equal[Int16] 127[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:935 greater-equal[Int16] 127[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:936 greater-equal[Int16] 127[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:937 greater-equal[compile-time] 127[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:938 greater-equal[Int16] 128[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:939 greater-equal[Int16] 128[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:940 greater-equal[Int16] 128[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:941 greater-equal[compile-time] 128[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -128;
endcode
varvalue r True

$overflow on
code auto:942 greater-equal[Int16] 128[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:943 greater-equal[Int16] 128[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:944 greater-equal[Int16] 128[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:945 greater-equal[compile-time] 128[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -127;
endcode
varvalue r True

$overflow on
code auto:946 greater-equal[Int16] 128[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:947 greater-equal[Int16] 128[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:948 greater-equal[Int16] 128[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:949 greater-equal[compile-time] 128[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -1;
endcode
varvalue r True

$overflow on
code auto:950 greater-equal[Int16] 128[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:951 greater-equal[Int16] 128[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:952 greater-equal[Int16] 128[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:953 greater-equal[compile-time] 128[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:954 greater-equal[Int16] 128[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:955 greater-equal[Int16] 128[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:956 greater-equal[Int16] 128[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:957 greater-equal[compile-time] 128[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:958 greater-equal[Int16] 128[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:959 greater-equal[Int16] 128[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:960 greater-equal[Int16] 128[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:961 greater-equal[compile-time] 128[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:962 greater-equal[Int16] 32767[Int16], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:963 greater-equal[Int16] 32767[Int16], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:964 greater-equal[Int16] 32767[Int16], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:965 greater-equal[compile-time] 32767[Int16], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:966 greater-equal[Int16] 32767[Int16], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:967 greater-equal[Int16] 32767[Int16], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:968 greater-equal[Int16] 32767[Int16], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:969 greater-equal[compile-time] 32767[Int16], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -127;
endcode
varvalue r True

$overflow on
code auto:970 greater-equal[Int16] 32767[Int16], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:971 greater-equal[Int16] 32767[Int16], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:972 greater-equal[Int16] 32767[Int16], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:973 greater-equal[compile-time] 32767[Int16], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:974 greater-equal[Int16] 32767[Int16], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:975 greater-equal[Int16] 32767[Int16], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:976 greater-equal[Int16] 32767[Int16], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:977 greater-equal[compile-time] 32767[Int16], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:978 greater-equal[Int16] 32767[Int16], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:979 greater-equal[Int16] 32767[Int16], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:980 greater-equal[Int16] 32767[Int16], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:981 greater-equal[compile-time] 32767[Int16], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:982 greater-equal[Int16] 32767[Int16], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:983 greater-equal[Int16] 32767[Int16], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:984 greater-equal[Int16] 32767[Int16], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:985 greater-equal[compile-time] 32767[Int16], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:986 greater-equal[Int16] -32768[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:987 greater-equal[Int16] -32768[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r True

code auto:988 greater-equal[Int16] -32768[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:989 greater-equal[compile-time] -32768[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -32768;
endcode
varvalue r True

$overflow on
code auto:990 greater-equal[Int16] -32768[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:991 greater-equal[Int16] -32768[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:992 greater-equal[Int16] -32768[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r False

code auto:993 greater-equal[compile-time] -32768[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -32767;
endcode
varvalue r False

$overflow on
code auto:994 greater-equal[Int16] -32768[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:995 greater-equal[Int16] -32768[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:996 greater-equal[Int16] -32768[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r False

code auto:997 greater-equal[compile-time] -32768[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -129;
endcode
varvalue r False

$overflow on
code auto:998 greater-equal[Int16] -32768[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:999 greater-equal[Int16] -32768[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1000 greater-equal[Int16] -32768[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:1001 greater-equal[compile-time] -32768[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -128;
endcode
varvalue r False

$overflow on
code auto:1002 greater-equal[Int16] -32768[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1003 greater-equal[Int16] -32768[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1004 greater-equal[Int16] -32768[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:1005 greater-equal[compile-time] -32768[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= -1;
endcode
varvalue r False

$overflow on
code auto:1006 greater-equal[Int16] -32768[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1007 greater-equal[Int16] -32768[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1008 greater-equal[Int16] -32768[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1009 greater-equal[compile-time] -32768[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 0;
endcode
varvalue r False

$overflow on
code auto:1010 greater-equal[Int16] -32768[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1011 greater-equal[Int16] -32768[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1012 greater-equal[Int16] -32768[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1013 greater-equal[compile-time] -32768[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 1;
endcode
varvalue r False

$overflow on
code auto:1014 greater-equal[Int16] -32768[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1015 greater-equal[Int16] -32768[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1016 greater-equal[Int16] -32768[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1017 greater-equal[compile-time] -32768[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 127;
endcode
varvalue r False

$overflow on
code auto:1018 greater-equal[Int16] -32768[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1019 greater-equal[Int16] -32768[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1020 greater-equal[Int16] -32768[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1021 greater-equal[compile-time] -32768[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 128;
endcode
varvalue r False

$overflow on
code auto:1022 greater-equal[Int16] -32768[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1023 greater-equal[Int16] -32768[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1024 greater-equal[Int16] -32768[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1025 greater-equal[compile-time] -32768[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1026 greater-equal[Int16] -32767[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1027 greater-equal[Int16] -32767[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r True

code auto:1028 greater-equal[Int16] -32767[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1029 greater-equal[compile-time] -32767[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1030 greater-equal[Int16] -32767[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1031 greater-equal[Int16] -32767[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r True

code auto:1032 greater-equal[Int16] -32767[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1033 greater-equal[compile-time] -32767[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1034 greater-equal[Int16] -32767[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1035 greater-equal[Int16] -32767[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1036 greater-equal[Int16] -32767[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r False

code auto:1037 greater-equal[compile-time] -32767[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -129;
endcode
varvalue r False

$overflow on
code auto:1038 greater-equal[Int16] -32767[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1039 greater-equal[Int16] -32767[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1040 greater-equal[Int16] -32767[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:1041 greater-equal[compile-time] -32767[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -128;
endcode
varvalue r False

$overflow on
code auto:1042 greater-equal[Int16] -32767[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1043 greater-equal[Int16] -32767[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1044 greater-equal[Int16] -32767[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:1045 greater-equal[compile-time] -32767[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= -1;
endcode
varvalue r False

$overflow on
code auto:1046 greater-equal[Int16] -32767[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1047 greater-equal[Int16] -32767[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1048 greater-equal[Int16] -32767[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1049 greater-equal[compile-time] -32767[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 0;
endcode
varvalue r False

$overflow on
code auto:1050 greater-equal[Int16] -32767[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1051 greater-equal[Int16] -32767[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1052 greater-equal[Int16] -32767[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1053 greater-equal[compile-time] -32767[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 1;
endcode
varvalue r False

$overflow on
code auto:1054 greater-equal[Int16] -32767[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1055 greater-equal[Int16] -32767[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1056 greater-equal[Int16] -32767[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1057 greater-equal[compile-time] -32767[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 127;
endcode
varvalue r False

$overflow on
code auto:1058 greater-equal[Int16] -32767[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1059 greater-equal[Int16] -32767[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1060 greater-equal[Int16] -32767[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1061 greater-equal[compile-time] -32767[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 128;
endcode
varvalue r False

$overflow on
code auto:1062 greater-equal[Int16] -32767[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1063 greater-equal[Int16] -32767[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1064 greater-equal[Int16] -32767[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1065 greater-equal[compile-time] -32767[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1066 greater-equal[Int16] -129[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1067 greater-equal[Int16] -129[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r True

code auto:1068 greater-equal[Int16] -129[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1069 greater-equal[compile-time] -129[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1070 greater-equal[Int16] -129[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1071 greater-equal[Int16] -129[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r True

code auto:1072 greater-equal[Int16] -129[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1073 greater-equal[compile-time] -129[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1074 greater-equal[Int16] -129[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1075 greater-equal[Int16] -129[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r True

code auto:1076 greater-equal[Int16] -129[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1077 greater-equal[compile-time] -129[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -129;
endcode
varvalue r True

$overflow on
code auto:1078 greater-equal[Int16] -129[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1079 greater-equal[Int16] -129[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1080 greater-equal[Int16] -129[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r False

code auto:1081 greater-equal[compile-time] -129[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -128;
endcode
varvalue r False

$overflow on
code auto:1082 greater-equal[Int16] -129[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1083 greater-equal[Int16] -129[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1084 greater-equal[Int16] -129[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:1085 greater-equal[compile-time] -129[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= -1;
endcode
varvalue r False

$overflow on
code auto:1086 greater-equal[Int16] -129[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1087 greater-equal[Int16] -129[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1088 greater-equal[Int16] -129[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1089 greater-equal[compile-time] -129[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 0;
endcode
varvalue r False

$overflow on
code auto:1090 greater-equal[Int16] -129[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1091 greater-equal[Int16] -129[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1092 greater-equal[Int16] -129[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1093 greater-equal[compile-time] -129[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 1;
endcode
varvalue r False

$overflow on
code auto:1094 greater-equal[Int16] -129[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1095 greater-equal[Int16] -129[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1096 greater-equal[Int16] -129[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1097 greater-equal[compile-time] -129[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 127;
endcode
varvalue r False

$overflow on
code auto:1098 greater-equal[Int16] -129[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1099 greater-equal[Int16] -129[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1100 greater-equal[Int16] -129[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1101 greater-equal[compile-time] -129[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 128;
endcode
varvalue r False

$overflow on
code auto:1102 greater-equal[Int16] -129[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1103 greater-equal[Int16] -129[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1104 greater-equal[Int16] -129[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1105 greater-equal[compile-time] -129[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1106 greater-equal[Int16] -128[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1107 greater-equal[Int16] -128[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:1108 greater-equal[Int16] -128[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1109 greater-equal[compile-time] -128[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1110 greater-equal[Int16] -128[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1111 greater-equal[Int16] -128[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:1112 greater-equal[Int16] -128[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1113 greater-equal[compile-time] -128[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1114 greater-equal[Int16] -128[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1115 greater-equal[Int16] -128[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:1116 greater-equal[Int16] -128[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1117 greater-equal[compile-time] -128[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -129;
endcode
varvalue r True

$overflow on
code auto:1118 greater-equal[Int16] -128[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1119 greater-equal[Int16] -128[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r True

code auto:1120 greater-equal[Int16] -128[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1121 greater-equal[compile-time] -128[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -128;
endcode
varvalue r True

$overflow on
code auto:1122 greater-equal[Int16] -128[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1123 greater-equal[Int16] -128[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1124 greater-equal[Int16] -128[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r False

code auto:1125 greater-equal[compile-time] -128[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= -1;
endcode
varvalue r False

$overflow on
code auto:1126 greater-equal[Int16] -128[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1127 greater-equal[Int16] -128[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1128 greater-equal[Int16] -128[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1129 greater-equal[compile-time] -128[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:1130 greater-equal[Int16] -128[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1131 greater-equal[Int16] -128[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1132 greater-equal[Int16] -128[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1133 greater-equal[compile-time] -128[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:1134 greater-equal[Int16] -128[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1135 greater-equal[Int16] -128[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1136 greater-equal[Int16] -128[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1137 greater-equal[compile-time] -128[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:1138 greater-equal[Int16] -128[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1139 greater-equal[Int16] -128[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1140 greater-equal[Int16] -128[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1141 greater-equal[compile-time] -128[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 128;
endcode
varvalue r False

$overflow on
code auto:1142 greater-equal[Int16] -128[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1143 greater-equal[Int16] -128[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1144 greater-equal[Int16] -128[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1145 greater-equal[compile-time] -128[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1146 greater-equal[Int16] -1[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1147 greater-equal[Int16] -1[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:1148 greater-equal[Int16] -1[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1149 greater-equal[compile-time] -1[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1150 greater-equal[Int16] -1[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1151 greater-equal[Int16] -1[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:1152 greater-equal[Int16] -1[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1153 greater-equal[compile-time] -1[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1154 greater-equal[Int16] -1[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1155 greater-equal[Int16] -1[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:1156 greater-equal[Int16] -1[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1157 greater-equal[compile-time] -1[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -129;
endcode
varvalue r True

$overflow on
code auto:1158 greater-equal[Int16] -1[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1159 greater-equal[Int16] -1[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:1160 greater-equal[Int16] -1[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1161 greater-equal[compile-time] -1[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -128;
endcode
varvalue r True

$overflow on
code auto:1162 greater-equal[Int16] -1[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1163 greater-equal[Int16] -1[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r True

code auto:1164 greater-equal[Int16] -1[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1165 greater-equal[compile-time] -1[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= -1;
endcode
varvalue r True

$overflow on
code auto:1166 greater-equal[Int16] -1[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1167 greater-equal[Int16] -1[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1168 greater-equal[Int16] -1[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1169 greater-equal[compile-time] -1[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:1170 greater-equal[Int16] -1[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1171 greater-equal[Int16] -1[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1172 greater-equal[Int16] -1[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1173 greater-equal[compile-time] -1[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:1174 greater-equal[Int16] -1[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1175 greater-equal[Int16] -1[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1176 greater-equal[Int16] -1[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1177 greater-equal[compile-time] -1[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:1178 greater-equal[Int16] -1[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1179 greater-equal[Int16] -1[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1180 greater-equal[Int16] -1[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1181 greater-equal[compile-time] -1[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 128;
endcode
varvalue r False

$overflow on
code auto:1182 greater-equal[Int16] -1[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1183 greater-equal[Int16] -1[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1184 greater-equal[Int16] -1[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1185 greater-equal[compile-time] -1[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1186 greater-equal[Int16] 0[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1187 greater-equal[Int16] 0[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1188 greater-equal[Int16] 0[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1189 greater-equal[compile-time] 0[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1190 greater-equal[Int16] 0[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1191 greater-equal[Int16] 0[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1192 greater-equal[Int16] 0[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1193 greater-equal[compile-time] 0[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1194 greater-equal[Int16] 0[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1195 greater-equal[Int16] 0[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1196 greater-equal[Int16] 0[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1197 greater-equal[compile-time] 0[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -129;
endcode
varvalue r True

$overflow on
code auto:1198 greater-equal[Int16] 0[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1199 greater-equal[Int16] 0[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1200 greater-equal[Int16] 0[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1201 greater-equal[compile-time] 0[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:1202 greater-equal[Int16] 0[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1203 greater-equal[Int16] 0[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1204 greater-equal[Int16] 0[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1205 greater-equal[compile-time] 0[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:1206 greater-equal[Int16] 0[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1207 greater-equal[Int16] 0[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1208 greater-equal[Int16] 0[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1209 greater-equal[compile-time] 0[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:1210 greater-equal[Int16] 0[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1211 greater-equal[Int16] 0[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1212 greater-equal[Int16] 0[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1213 greater-equal[compile-time] 0[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:1214 greater-equal[Int16] 0[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1215 greater-equal[Int16] 0[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1216 greater-equal[Int16] 0[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1217 greater-equal[compile-time] 0[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:1218 greater-equal[Int16] 0[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1219 greater-equal[Int16] 0[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1220 greater-equal[Int16] 0[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1221 greater-equal[compile-time] 0[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:1222 greater-equal[Int16] 0[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1223 greater-equal[Int16] 0[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1224 greater-equal[Int16] 0[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1225 greater-equal[compile-time] 0[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1226 greater-equal[Int16] 1[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1227 greater-equal[Int16] 1[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1228 greater-equal[Int16] 1[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1229 greater-equal[compile-time] 1[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1230 greater-equal[Int16] 1[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1231 greater-equal[Int16] 1[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1232 greater-equal[Int16] 1[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1233 greater-equal[compile-time] 1[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1234 greater-equal[Int16] 1[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1235 greater-equal[Int16] 1[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1236 greater-equal[Int16] 1[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1237 greater-equal[compile-time] 1[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -129;
endcode
varvalue r True

$overflow on
code auto:1238 greater-equal[Int16] 1[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1239 greater-equal[Int16] 1[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1240 greater-equal[Int16] 1[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1241 greater-equal[compile-time] 1[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:1242 greater-equal[Int16] 1[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1243 greater-equal[Int16] 1[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1244 greater-equal[Int16] 1[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1245 greater-equal[compile-time] 1[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:1246 greater-equal[Int16] 1[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1247 greater-equal[Int16] 1[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1248 greater-equal[Int16] 1[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1249 greater-equal[compile-time] 1[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:1250 greater-equal[Int16] 1[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1251 greater-equal[Int16] 1[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1252 greater-equal[Int16] 1[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1253 greater-equal[compile-time] 1[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:1254 greater-equal[Int16] 1[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1255 greater-equal[Int16] 1[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1256 greater-equal[Int16] 1[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1257 greater-equal[compile-time] 1[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:1258 greater-equal[Int16] 1[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1259 greater-equal[Int16] 1[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1260 greater-equal[Int16] 1[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1261 greater-equal[compile-time] 1[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:1262 greater-equal[Int16] 1[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1263 greater-equal[Int16] 1[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1264 greater-equal[Int16] 1[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1265 greater-equal[compile-time] 1[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1266 greater-equal[Int16] 127[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1267 greater-equal[Int16] 127[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1268 greater-equal[Int16] 127[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1269 greater-equal[compile-time] 127[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1270 greater-equal[Int16] 127[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1271 greater-equal[Int16] 127[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1272 greater-equal[Int16] 127[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1273 greater-equal[compile-time] 127[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1274 greater-equal[Int16] 127[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1275 greater-equal[Int16] 127[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1276 greater-equal[Int16] 127[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1277 greater-equal[compile-time] 127[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -129;
endcode
varvalue r True

$overflow on
code auto:1278 greater-equal[Int16] 127[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1279 greater-equal[Int16] 127[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1280 greater-equal[Int16] 127[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1281 greater-equal[compile-time] 127[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:1282 greater-equal[Int16] 127[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1283 greater-equal[Int16] 127[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1284 greater-equal[Int16] 127[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1285 greater-equal[compile-time] 127[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:1286 greater-equal[Int16] 127[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1287 greater-equal[Int16] 127[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1288 greater-equal[Int16] 127[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1289 greater-equal[compile-time] 127[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:1290 greater-equal[Int16] 127[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1291 greater-equal[Int16] 127[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1292 greater-equal[Int16] 127[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1293 greater-equal[compile-time] 127[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:1294 greater-equal[Int16] 127[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1295 greater-equal[Int16] 127[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1296 greater-equal[Int16] 127[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1297 greater-equal[compile-time] 127[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:1298 greater-equal[Int16] 127[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1299 greater-equal[Int16] 127[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1300 greater-equal[Int16] 127[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1301 greater-equal[compile-time] 127[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:1302 greater-equal[Int16] 127[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1303 greater-equal[Int16] 127[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1304 greater-equal[Int16] 127[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1305 greater-equal[compile-time] 127[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1306 greater-equal[Int16] 128[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1307 greater-equal[Int16] 128[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1308 greater-equal[Int16] 128[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1309 greater-equal[compile-time] 128[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1310 greater-equal[Int16] 128[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1311 greater-equal[Int16] 128[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1312 greater-equal[Int16] 128[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1313 greater-equal[compile-time] 128[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1314 greater-equal[Int16] 128[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1315 greater-equal[Int16] 128[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1316 greater-equal[Int16] 128[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1317 greater-equal[compile-time] 128[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -129;
endcode
varvalue r True

$overflow on
code auto:1318 greater-equal[Int16] 128[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1319 greater-equal[Int16] 128[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1320 greater-equal[Int16] 128[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1321 greater-equal[compile-time] 128[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -128;
endcode
varvalue r True

$overflow on
code auto:1322 greater-equal[Int16] 128[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1323 greater-equal[Int16] 128[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1324 greater-equal[Int16] 128[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1325 greater-equal[compile-time] 128[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -1;
endcode
varvalue r True

$overflow on
code auto:1326 greater-equal[Int16] 128[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1327 greater-equal[Int16] 128[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1328 greater-equal[Int16] 128[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1329 greater-equal[compile-time] 128[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:1330 greater-equal[Int16] 128[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1331 greater-equal[Int16] 128[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1332 greater-equal[Int16] 128[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1333 greater-equal[compile-time] 128[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:1334 greater-equal[Int16] 128[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1335 greater-equal[Int16] 128[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1336 greater-equal[Int16] 128[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1337 greater-equal[compile-time] 128[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:1338 greater-equal[Int16] 128[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1339 greater-equal[Int16] 128[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1340 greater-equal[Int16] 128[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:1341 greater-equal[compile-time] 128[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 128;
endcode
varvalue r True

$overflow on
code auto:1342 greater-equal[Int16] 128[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1343 greater-equal[Int16] 128[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1344 greater-equal[Int16] 128[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1345 greater-equal[compile-time] 128[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1346 greater-equal[Int16] 32767[Int16], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1347 greater-equal[Int16] 32767[Int16], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1348 greater-equal[Int16] 32767[Int16], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:1349 greater-equal[compile-time] 32767[Int16], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32768;
endcode
varvalue r True

$overflow on
code auto:1350 greater-equal[Int16] 32767[Int16], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1351 greater-equal[Int16] 32767[Int16], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1352 greater-equal[Int16] 32767[Int16], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:1353 greater-equal[compile-time] 32767[Int16], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32767;
endcode
varvalue r True

$overflow on
code auto:1354 greater-equal[Int16] 32767[Int16], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1355 greater-equal[Int16] 32767[Int16], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1356 greater-equal[Int16] 32767[Int16], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:1357 greater-equal[compile-time] 32767[Int16], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -129;
endcode
varvalue r True

$overflow on
code auto:1358 greater-equal[Int16] 32767[Int16], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1359 greater-equal[Int16] 32767[Int16], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1360 greater-equal[Int16] 32767[Int16], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1361 greater-equal[compile-time] 32767[Int16], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:1362 greater-equal[Int16] 32767[Int16], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1363 greater-equal[Int16] 32767[Int16], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1364 greater-equal[Int16] 32767[Int16], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1365 greater-equal[compile-time] 32767[Int16], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:1366 greater-equal[Int16] 32767[Int16], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1367 greater-equal[Int16] 32767[Int16], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1368 greater-equal[Int16] 32767[Int16], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1369 greater-equal[compile-time] 32767[Int16], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:1370 greater-equal[Int16] 32767[Int16], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1371 greater-equal[Int16] 32767[Int16], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1372 greater-equal[Int16] 32767[Int16], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1373 greater-equal[compile-time] 32767[Int16], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:1374 greater-equal[Int16] 32767[Int16], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1375 greater-equal[Int16] 32767[Int16], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1376 greater-equal[Int16] 32767[Int16], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1377 greater-equal[compile-time] 32767[Int16], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:1378 greater-equal[Int16] 32767[Int16], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1379 greater-equal[Int16] 32767[Int16], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1380 greater-equal[Int16] 32767[Int16], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:1381 greater-equal[compile-time] 32767[Int16], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:1382 greater-equal[Int16] 32767[Int16], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1383 greater-equal[Int16] 32767[Int16], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1384 greater-equal[Int16] 32767[Int16], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:1385 greater-equal[compile-time] 32767[Int16], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:1386 greater-equal[Int16] -32768[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1387 greater-equal[Int16] -32768[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1388 greater-equal[Int16] -32768[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1389 greater-equal[compile-time] -32768[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 0;
endcode
varvalue r False

$overflow on
code auto:1390 greater-equal[Int16] -32768[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1391 greater-equal[Int16] -32768[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1392 greater-equal[Int16] -32768[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1393 greater-equal[compile-time] -32768[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 1;
endcode
varvalue r False

$overflow on
code auto:1394 greater-equal[Int16] -32768[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1395 greater-equal[Int16] -32768[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1396 greater-equal[Int16] -32768[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1397 greater-equal[compile-time] -32768[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 127;
endcode
varvalue r False

$overflow on
code auto:1398 greater-equal[Int16] -32768[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1399 greater-equal[Int16] -32768[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1400 greater-equal[Int16] -32768[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1401 greater-equal[compile-time] -32768[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 128;
endcode
varvalue r False

$overflow on
code auto:1402 greater-equal[Int16] -32768[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1403 greater-equal[Int16] -32768[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1404 greater-equal[Int16] -32768[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1405 greater-equal[compile-time] -32768[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 255;
endcode
varvalue r False

$overflow on
code auto:1406 greater-equal[Int16] -32767[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1407 greater-equal[Int16] -32767[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1408 greater-equal[Int16] -32767[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1409 greater-equal[compile-time] -32767[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 0;
endcode
varvalue r False

$overflow on
code auto:1410 greater-equal[Int16] -32767[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1411 greater-equal[Int16] -32767[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1412 greater-equal[Int16] -32767[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1413 greater-equal[compile-time] -32767[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 1;
endcode
varvalue r False

$overflow on
code auto:1414 greater-equal[Int16] -32767[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1415 greater-equal[Int16] -32767[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1416 greater-equal[Int16] -32767[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1417 greater-equal[compile-time] -32767[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 127;
endcode
varvalue r False

$overflow on
code auto:1418 greater-equal[Int16] -32767[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1419 greater-equal[Int16] -32767[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1420 greater-equal[Int16] -32767[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1421 greater-equal[compile-time] -32767[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 128;
endcode
varvalue r False

$overflow on
code auto:1422 greater-equal[Int16] -32767[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1423 greater-equal[Int16] -32767[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1424 greater-equal[Int16] -32767[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1425 greater-equal[compile-time] -32767[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 255;
endcode
varvalue r False

$overflow on
code auto:1426 greater-equal[Int16] -129[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1427 greater-equal[Int16] -129[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1428 greater-equal[Int16] -129[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1429 greater-equal[compile-time] -129[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 0;
endcode
varvalue r False

$overflow on
code auto:1430 greater-equal[Int16] -129[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1431 greater-equal[Int16] -129[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1432 greater-equal[Int16] -129[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1433 greater-equal[compile-time] -129[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 1;
endcode
varvalue r False

$overflow on
code auto:1434 greater-equal[Int16] -129[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1435 greater-equal[Int16] -129[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1436 greater-equal[Int16] -129[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1437 greater-equal[compile-time] -129[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 127;
endcode
varvalue r False

$overflow on
code auto:1438 greater-equal[Int16] -129[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1439 greater-equal[Int16] -129[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1440 greater-equal[Int16] -129[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1441 greater-equal[compile-time] -129[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 128;
endcode
varvalue r False

$overflow on
code auto:1442 greater-equal[Int16] -129[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1443 greater-equal[Int16] -129[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1444 greater-equal[Int16] -129[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1445 greater-equal[compile-time] -129[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 255;
endcode
varvalue r False

$overflow on
code auto:1446 greater-equal[Int16] -128[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1447 greater-equal[Int16] -128[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1448 greater-equal[Int16] -128[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1449 greater-equal[compile-time] -128[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:1450 greater-equal[Int16] -128[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1451 greater-equal[Int16] -128[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1452 greater-equal[Int16] -128[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1453 greater-equal[compile-time] -128[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 1;
endcode
varvalue r False

$overflow on
code auto:1454 greater-equal[Int16] -128[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1455 greater-equal[Int16] -128[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1456 greater-equal[Int16] -128[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1457 greater-equal[compile-time] -128[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 127;
endcode
varvalue r False

$overflow on
code auto:1458 greater-equal[Int16] -128[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1459 greater-equal[Int16] -128[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1460 greater-equal[Int16] -128[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1461 greater-equal[compile-time] -128[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 128;
endcode
varvalue r False

$overflow on
code auto:1462 greater-equal[Int16] -128[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1463 greater-equal[Int16] -128[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1464 greater-equal[Int16] -128[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1465 greater-equal[compile-time] -128[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1466 greater-equal[Int16] -1[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1467 greater-equal[Int16] -1[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1468 greater-equal[Int16] -1[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1469 greater-equal[compile-time] -1[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:1470 greater-equal[Int16] -1[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1471 greater-equal[Int16] -1[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1472 greater-equal[Int16] -1[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1473 greater-equal[compile-time] -1[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 1;
endcode
varvalue r False

$overflow on
code auto:1474 greater-equal[Int16] -1[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1475 greater-equal[Int16] -1[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1476 greater-equal[Int16] -1[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1477 greater-equal[compile-time] -1[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 127;
endcode
varvalue r False

$overflow on
code auto:1478 greater-equal[Int16] -1[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1479 greater-equal[Int16] -1[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1480 greater-equal[Int16] -1[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1481 greater-equal[compile-time] -1[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 128;
endcode
varvalue r False

$overflow on
code auto:1482 greater-equal[Int16] -1[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1483 greater-equal[Int16] -1[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1484 greater-equal[Int16] -1[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1485 greater-equal[compile-time] -1[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1486 greater-equal[Int16] 0[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1487 greater-equal[Int16] 0[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1488 greater-equal[Int16] 0[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1489 greater-equal[compile-time] 0[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:1490 greater-equal[Int16] 0[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1491 greater-equal[Int16] 0[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1492 greater-equal[Int16] 0[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:1493 greater-equal[compile-time] 0[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:1494 greater-equal[Int16] 0[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1495 greater-equal[Int16] 0[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1496 greater-equal[Int16] 0[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1497 greater-equal[compile-time] 0[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:1498 greater-equal[Int16] 0[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1499 greater-equal[Int16] 0[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1500 greater-equal[Int16] 0[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1501 greater-equal[compile-time] 0[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:1502 greater-equal[Int16] 0[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1503 greater-equal[Int16] 0[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1504 greater-equal[Int16] 0[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1505 greater-equal[compile-time] 0[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:1506 greater-equal[Int16] 1[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1507 greater-equal[Int16] 1[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1508 greater-equal[Int16] 1[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1509 greater-equal[compile-time] 1[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:1510 greater-equal[Int16] 1[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1511 greater-equal[Int16] 1[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1512 greater-equal[Int16] 1[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1513 greater-equal[compile-time] 1[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:1514 greater-equal[Int16] 1[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1515 greater-equal[Int16] 1[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1516 greater-equal[Int16] 1[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:1517 greater-equal[compile-time] 1[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:1518 greater-equal[Int16] 1[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1519 greater-equal[Int16] 1[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1520 greater-equal[Int16] 1[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1521 greater-equal[compile-time] 1[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:1522 greater-equal[Int16] 1[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1523 greater-equal[Int16] 1[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1524 greater-equal[Int16] 1[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1525 greater-equal[compile-time] 1[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1526 greater-equal[Int16] 127[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1527 greater-equal[Int16] 127[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1528 greater-equal[Int16] 127[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1529 greater-equal[compile-time] 127[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:1530 greater-equal[Int16] 127[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1531 greater-equal[Int16] 127[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1532 greater-equal[Int16] 127[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1533 greater-equal[compile-time] 127[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:1534 greater-equal[Int16] 127[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1535 greater-equal[Int16] 127[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1536 greater-equal[Int16] 127[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1537 greater-equal[compile-time] 127[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:1538 greater-equal[Int16] 127[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1539 greater-equal[Int16] 127[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1540 greater-equal[Int16] 127[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:1541 greater-equal[compile-time] 127[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:1542 greater-equal[Int16] 127[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1543 greater-equal[Int16] 127[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1544 greater-equal[Int16] 127[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1545 greater-equal[compile-time] 127[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:1546 greater-equal[Int16] 128[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1547 greater-equal[Int16] 128[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1548 greater-equal[Int16] 128[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1549 greater-equal[compile-time] 128[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:1550 greater-equal[Int16] 128[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1551 greater-equal[Int16] 128[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1552 greater-equal[Int16] 128[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1553 greater-equal[compile-time] 128[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:1554 greater-equal[Int16] 128[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1555 greater-equal[Int16] 128[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1556 greater-equal[Int16] 128[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1557 greater-equal[compile-time] 128[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:1558 greater-equal[Int16] 128[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1559 greater-equal[Int16] 128[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1560 greater-equal[Int16] 128[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:1561 greater-equal[compile-time] 128[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 128;
endcode
varvalue r True

$overflow on
code auto:1562 greater-equal[Int16] 128[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1563 greater-equal[Int16] 128[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1564 greater-equal[Int16] 128[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1565 greater-equal[compile-time] 128[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1566 greater-equal[Int16] 32767[Int16], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1567 greater-equal[Int16] 32767[Int16], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1568 greater-equal[Int16] 32767[Int16], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1569 greater-equal[compile-time] 32767[Int16], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:1570 greater-equal[Int16] 32767[Int16], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1571 greater-equal[Int16] 32767[Int16], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1572 greater-equal[Int16] 32767[Int16], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:1573 greater-equal[compile-time] 32767[Int16], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:1574 greater-equal[Int16] 32767[Int16], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1575 greater-equal[Int16] 32767[Int16], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1576 greater-equal[Int16] 32767[Int16], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:1577 greater-equal[compile-time] 32767[Int16], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:1578 greater-equal[Int16] 32767[Int16], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1579 greater-equal[Int16] 32767[Int16], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1580 greater-equal[Int16] 32767[Int16], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:1581 greater-equal[compile-time] 32767[Int16], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:1582 greater-equal[Int16] 32767[Int16], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1583 greater-equal[Int16] 32767[Int16], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1584 greater-equal[Int16] 32767[Int16], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:1585 greater-equal[compile-time] 32767[Int16], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:1586 greater-equal[Int16] -32768[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1587 greater-equal[Int16] -32768[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1588 greater-equal[Int16] -32768[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1589 greater-equal[compile-time] -32768[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 0;
endcode
varvalue r False

$overflow on
code auto:1590 greater-equal[Int16] -32768[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1591 greater-equal[Int16] -32768[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1592 greater-equal[Int16] -32768[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1593 greater-equal[compile-time] -32768[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 255;
endcode
varvalue r False

$overflow on
code auto:1594 greater-equal[Int16] -32768[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1595 greater-equal[Int16] -32768[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1596 greater-equal[Int16] -32768[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1597 greater-equal[compile-time] -32768[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1598 greater-equal[Int16] -32768[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1599 greater-equal[Int16] -32768[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1600 greater-equal[Int16] -32768[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1601 greater-equal[compile-time] -32768[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1602 greater-equal[Int16] -32768[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1603 greater-equal[Int16] -32768[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1604 greater-equal[Int16] -32768[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1605 greater-equal[compile-time] -32768[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1606 greater-equal[Int16] -32767[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1607 greater-equal[Int16] -32767[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1608 greater-equal[Int16] -32767[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1609 greater-equal[compile-time] -32767[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 0;
endcode
varvalue r False

$overflow on
code auto:1610 greater-equal[Int16] -32767[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1611 greater-equal[Int16] -32767[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1612 greater-equal[Int16] -32767[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1613 greater-equal[compile-time] -32767[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 255;
endcode
varvalue r False

$overflow on
code auto:1614 greater-equal[Int16] -32767[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1615 greater-equal[Int16] -32767[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1616 greater-equal[Int16] -32767[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1617 greater-equal[compile-time] -32767[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1618 greater-equal[Int16] -32767[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1619 greater-equal[Int16] -32767[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1620 greater-equal[Int16] -32767[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1621 greater-equal[compile-time] -32767[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1622 greater-equal[Int16] -32767[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1623 greater-equal[Int16] -32767[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1624 greater-equal[Int16] -32767[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1625 greater-equal[compile-time] -32767[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1626 greater-equal[Int16] -129[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1627 greater-equal[Int16] -129[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1628 greater-equal[Int16] -129[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1629 greater-equal[compile-time] -129[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 0;
endcode
varvalue r False

$overflow on
code auto:1630 greater-equal[Int16] -129[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1631 greater-equal[Int16] -129[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1632 greater-equal[Int16] -129[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1633 greater-equal[compile-time] -129[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 255;
endcode
varvalue r False

$overflow on
code auto:1634 greater-equal[Int16] -129[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1635 greater-equal[Int16] -129[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1636 greater-equal[Int16] -129[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1637 greater-equal[compile-time] -129[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1638 greater-equal[Int16] -129[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1639 greater-equal[Int16] -129[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1640 greater-equal[Int16] -129[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1641 greater-equal[compile-time] -129[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1642 greater-equal[Int16] -129[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1643 greater-equal[Int16] -129[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1644 greater-equal[Int16] -129[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1645 greater-equal[compile-time] -129[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1646 greater-equal[Int16] -128[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1647 greater-equal[Int16] -128[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1648 greater-equal[Int16] -128[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1649 greater-equal[compile-time] -128[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:1650 greater-equal[Int16] -128[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1651 greater-equal[Int16] -128[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1652 greater-equal[Int16] -128[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1653 greater-equal[compile-time] -128[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1654 greater-equal[Int16] -128[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1655 greater-equal[Int16] -128[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1656 greater-equal[Int16] -128[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1657 greater-equal[compile-time] -128[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1658 greater-equal[Int16] -128[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1659 greater-equal[Int16] -128[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1660 greater-equal[Int16] -128[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1661 greater-equal[compile-time] -128[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1662 greater-equal[Int16] -128[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1663 greater-equal[Int16] -128[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1664 greater-equal[Int16] -128[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1665 greater-equal[compile-time] -128[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1666 greater-equal[Int16] -1[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1667 greater-equal[Int16] -1[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1668 greater-equal[Int16] -1[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1669 greater-equal[compile-time] -1[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:1670 greater-equal[Int16] -1[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1671 greater-equal[Int16] -1[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1672 greater-equal[Int16] -1[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1673 greater-equal[compile-time] -1[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1674 greater-equal[Int16] -1[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1675 greater-equal[Int16] -1[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1676 greater-equal[Int16] -1[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1677 greater-equal[compile-time] -1[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1678 greater-equal[Int16] -1[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1679 greater-equal[Int16] -1[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1680 greater-equal[Int16] -1[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1681 greater-equal[compile-time] -1[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1682 greater-equal[Int16] -1[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1683 greater-equal[Int16] -1[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1684 greater-equal[Int16] -1[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1685 greater-equal[compile-time] -1[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1686 greater-equal[Int16] 0[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1687 greater-equal[Int16] 0[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1688 greater-equal[Int16] 0[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1689 greater-equal[compile-time] 0[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:1690 greater-equal[Int16] 0[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1691 greater-equal[Int16] 0[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1692 greater-equal[Int16] 0[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1693 greater-equal[compile-time] 0[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:1694 greater-equal[Int16] 0[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1695 greater-equal[Int16] 0[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1696 greater-equal[Int16] 0[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1697 greater-equal[compile-time] 0[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1698 greater-equal[Int16] 0[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1699 greater-equal[Int16] 0[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1700 greater-equal[Int16] 0[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1701 greater-equal[compile-time] 0[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1702 greater-equal[Int16] 0[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1703 greater-equal[Int16] 0[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1704 greater-equal[Int16] 0[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1705 greater-equal[compile-time] 0[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1706 greater-equal[Int16] 1[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1707 greater-equal[Int16] 1[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1708 greater-equal[Int16] 1[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1709 greater-equal[compile-time] 1[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:1710 greater-equal[Int16] 1[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1711 greater-equal[Int16] 1[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1712 greater-equal[Int16] 1[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1713 greater-equal[compile-time] 1[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1714 greater-equal[Int16] 1[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1715 greater-equal[Int16] 1[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1716 greater-equal[Int16] 1[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1717 greater-equal[compile-time] 1[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1718 greater-equal[Int16] 1[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1719 greater-equal[Int16] 1[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1720 greater-equal[Int16] 1[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1721 greater-equal[compile-time] 1[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1722 greater-equal[Int16] 1[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1723 greater-equal[Int16] 1[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1724 greater-equal[Int16] 1[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1725 greater-equal[compile-time] 1[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1726 greater-equal[Int16] 127[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1727 greater-equal[Int16] 127[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1728 greater-equal[Int16] 127[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1729 greater-equal[compile-time] 127[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:1730 greater-equal[Int16] 127[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1731 greater-equal[Int16] 127[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1732 greater-equal[Int16] 127[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1733 greater-equal[compile-time] 127[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:1734 greater-equal[Int16] 127[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1735 greater-equal[Int16] 127[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1736 greater-equal[Int16] 127[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1737 greater-equal[compile-time] 127[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1738 greater-equal[Int16] 127[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1739 greater-equal[Int16] 127[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1740 greater-equal[Int16] 127[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1741 greater-equal[compile-time] 127[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1742 greater-equal[Int16] 127[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1743 greater-equal[Int16] 127[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1744 greater-equal[Int16] 127[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1745 greater-equal[compile-time] 127[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1746 greater-equal[Int16] 128[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1747 greater-equal[Int16] 128[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1748 greater-equal[Int16] 128[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1749 greater-equal[compile-time] 128[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:1750 greater-equal[Int16] 128[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1751 greater-equal[Int16] 128[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1752 greater-equal[Int16] 128[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1753 greater-equal[compile-time] 128[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1754 greater-equal[Int16] 128[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1755 greater-equal[Int16] 128[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1756 greater-equal[Int16] 128[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1757 greater-equal[compile-time] 128[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1758 greater-equal[Int16] 128[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1759 greater-equal[Int16] 128[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1760 greater-equal[Int16] 128[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1761 greater-equal[compile-time] 128[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1762 greater-equal[Int16] 128[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1763 greater-equal[Int16] 128[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1764 greater-equal[Int16] 128[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1765 greater-equal[compile-time] 128[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1766 greater-equal[Int16] 32767[Int16], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1767 greater-equal[Int16] 32767[Int16], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1768 greater-equal[Int16] 32767[Int16], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1769 greater-equal[compile-time] 32767[Int16], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:1770 greater-equal[Int16] 32767[Int16], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1771 greater-equal[Int16] 32767[Int16], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1772 greater-equal[Int16] 32767[Int16], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:1773 greater-equal[compile-time] 32767[Int16], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:1774 greater-equal[Int16] 32767[Int16], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1775 greater-equal[Int16] 32767[Int16], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1776 greater-equal[Int16] 32767[Int16], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:1777 greater-equal[compile-time] 32767[Int16], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:1778 greater-equal[Int16] 32767[Int16], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1779 greater-equal[Int16] 32767[Int16], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:1780 greater-equal[Int16] 32767[Int16], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1781 greater-equal[compile-time] 32767[Int16], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1782 greater-equal[Int16] 32767[Int16], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1783 greater-equal[Int16] 32767[Int16], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:1784 greater-equal[Int16] 32767[Int16], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1785 greater-equal[compile-time] 32767[Int16], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1786 greater-equal[Pointer] -32768[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1787 greater-equal[Pointer] -32768[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1788 greater-equal[Pointer] -32768[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1789 greater-equal[compile-time] -32768[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 0;
endcode
varvalue r False

$overflow on
code auto:1790 greater-equal[Pointer] -32768[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1791 greater-equal[Pointer] -32768[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1792 greater-equal[Pointer] -32768[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1793 greater-equal[compile-time] -32768[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 255;
endcode
varvalue r False

$overflow on
code auto:1794 greater-equal[Pointer] -32768[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1795 greater-equal[Pointer] -32768[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1796 greater-equal[Pointer] -32768[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1797 greater-equal[compile-time] -32768[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1798 greater-equal[Pointer] -32768[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1799 greater-equal[Pointer] -32768[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1800 greater-equal[Pointer] -32768[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1801 greater-equal[compile-time] -32768[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1802 greater-equal[Pointer] -32768[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1803 greater-equal[Pointer] -32768[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -32768 >= b;
endcode
varvalue r False

code auto:1804 greater-equal[Pointer] -32768[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1805 greater-equal[compile-time] -32768[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1806 greater-equal[Pointer] -32767[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1807 greater-equal[Pointer] -32767[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1808 greater-equal[Pointer] -32767[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1809 greater-equal[compile-time] -32767[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 0;
endcode
varvalue r False

$overflow on
code auto:1810 greater-equal[Pointer] -32767[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1811 greater-equal[Pointer] -32767[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1812 greater-equal[Pointer] -32767[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1813 greater-equal[compile-time] -32767[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 255;
endcode
varvalue r False

$overflow on
code auto:1814 greater-equal[Pointer] -32767[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1815 greater-equal[Pointer] -32767[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1816 greater-equal[Pointer] -32767[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1817 greater-equal[compile-time] -32767[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1818 greater-equal[Pointer] -32767[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1819 greater-equal[Pointer] -32767[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1820 greater-equal[Pointer] -32767[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1821 greater-equal[compile-time] -32767[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1822 greater-equal[Pointer] -32767[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1823 greater-equal[Pointer] -32767[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -32767 >= b;
endcode
varvalue r False

code auto:1824 greater-equal[Pointer] -32767[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1825 greater-equal[compile-time] -32767[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1826 greater-equal[Pointer] -129[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1827 greater-equal[Pointer] -129[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1828 greater-equal[Pointer] -129[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1829 greater-equal[compile-time] -129[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 0;
endcode
varvalue r False

$overflow on
code auto:1830 greater-equal[Pointer] -129[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1831 greater-equal[Pointer] -129[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1832 greater-equal[Pointer] -129[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1833 greater-equal[compile-time] -129[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 255;
endcode
varvalue r False

$overflow on
code auto:1834 greater-equal[Pointer] -129[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1835 greater-equal[Pointer] -129[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1836 greater-equal[Pointer] -129[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1837 greater-equal[compile-time] -129[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1838 greater-equal[Pointer] -129[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1839 greater-equal[Pointer] -129[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1840 greater-equal[Pointer] -129[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1841 greater-equal[compile-time] -129[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1842 greater-equal[Pointer] -129[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -129;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1843 greater-equal[Pointer] -129[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -129 >= b;
endcode
varvalue r False

code auto:1844 greater-equal[Pointer] -129[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -129;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1845 greater-equal[compile-time] -129[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1846 greater-equal[Pointer] -128[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1847 greater-equal[Pointer] -128[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1848 greater-equal[Pointer] -128[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1849 greater-equal[compile-time] -128[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 0;
endcode
varvalue r False

$overflow on
code auto:1850 greater-equal[Pointer] -128[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1851 greater-equal[Pointer] -128[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1852 greater-equal[Pointer] -128[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1853 greater-equal[compile-time] -128[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1854 greater-equal[Pointer] -128[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1855 greater-equal[Pointer] -128[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1856 greater-equal[Pointer] -128[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1857 greater-equal[compile-time] -128[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1858 greater-equal[Pointer] -128[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1859 greater-equal[Pointer] -128[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1860 greater-equal[Pointer] -128[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1861 greater-equal[compile-time] -128[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1862 greater-equal[Pointer] -128[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1863 greater-equal[Pointer] -128[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -128 >= b;
endcode
varvalue r False

code auto:1864 greater-equal[Pointer] -128[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1865 greater-equal[compile-time] -128[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1866 greater-equal[Pointer] -1[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1867 greater-equal[Pointer] -1[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1868 greater-equal[Pointer] -1[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r False

code auto:1869 greater-equal[compile-time] -1[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 0;
endcode
varvalue r False

$overflow on
code auto:1870 greater-equal[Pointer] -1[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1871 greater-equal[Pointer] -1[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1872 greater-equal[Pointer] -1[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1873 greater-equal[compile-time] -1[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1874 greater-equal[Pointer] -1[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1875 greater-equal[Pointer] -1[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1876 greater-equal[Pointer] -1[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1877 greater-equal[compile-time] -1[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1878 greater-equal[Pointer] -1[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1879 greater-equal[Pointer] -1[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1880 greater-equal[Pointer] -1[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1881 greater-equal[compile-time] -1[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1882 greater-equal[Pointer] -1[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = -1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1883 greater-equal[Pointer] -1[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -1 >= b;
endcode
varvalue r False

code auto:1884 greater-equal[Pointer] -1[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = -1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1885 greater-equal[compile-time] -1[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1886 greater-equal[Pointer] 0[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1887 greater-equal[Pointer] 0[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1888 greater-equal[Pointer] 0[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1889 greater-equal[compile-time] 0[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:1890 greater-equal[Pointer] 0[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1891 greater-equal[Pointer] 0[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1892 greater-equal[Pointer] 0[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1893 greater-equal[compile-time] 0[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:1894 greater-equal[Pointer] 0[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1895 greater-equal[Pointer] 0[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1896 greater-equal[Pointer] 0[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1897 greater-equal[compile-time] 0[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1898 greater-equal[Pointer] 0[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1899 greater-equal[Pointer] 0[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1900 greater-equal[Pointer] 0[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1901 greater-equal[compile-time] 0[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1902 greater-equal[Pointer] 0[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1903 greater-equal[Pointer] 0[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:1904 greater-equal[Pointer] 0[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1905 greater-equal[compile-time] 0[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1906 greater-equal[Pointer] 1[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1907 greater-equal[Pointer] 1[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:1908 greater-equal[Pointer] 1[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1909 greater-equal[compile-time] 1[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:1910 greater-equal[Pointer] 1[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1911 greater-equal[Pointer] 1[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1912 greater-equal[Pointer] 1[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1913 greater-equal[compile-time] 1[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:1914 greater-equal[Pointer] 1[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1915 greater-equal[Pointer] 1[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1916 greater-equal[Pointer] 1[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1917 greater-equal[compile-time] 1[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1918 greater-equal[Pointer] 1[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1919 greater-equal[Pointer] 1[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1920 greater-equal[Pointer] 1[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1921 greater-equal[compile-time] 1[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1922 greater-equal[Pointer] 1[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1923 greater-equal[Pointer] 1[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:1924 greater-equal[Pointer] 1[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1925 greater-equal[compile-time] 1[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1926 greater-equal[Pointer] 127[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1927 greater-equal[Pointer] 127[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:1928 greater-equal[Pointer] 127[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1929 greater-equal[compile-time] 127[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:1930 greater-equal[Pointer] 127[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1931 greater-equal[Pointer] 127[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1932 greater-equal[Pointer] 127[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1933 greater-equal[compile-time] 127[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:1934 greater-equal[Pointer] 127[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1935 greater-equal[Pointer] 127[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1936 greater-equal[Pointer] 127[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1937 greater-equal[compile-time] 127[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1938 greater-equal[Pointer] 127[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1939 greater-equal[Pointer] 127[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1940 greater-equal[Pointer] 127[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1941 greater-equal[compile-time] 127[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1942 greater-equal[Pointer] 127[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1943 greater-equal[Pointer] 127[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:1944 greater-equal[Pointer] 127[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1945 greater-equal[compile-time] 127[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1946 greater-equal[Pointer] 128[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1947 greater-equal[Pointer] 128[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:1948 greater-equal[Pointer] 128[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1949 greater-equal[compile-time] 128[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:1950 greater-equal[Pointer] 128[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1951 greater-equal[Pointer] 128[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1952 greater-equal[Pointer] 128[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:1953 greater-equal[compile-time] 128[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:1954 greater-equal[Pointer] 128[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1955 greater-equal[Pointer] 128[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1956 greater-equal[Pointer] 128[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:1957 greater-equal[compile-time] 128[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:1958 greater-equal[Pointer] 128[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1959 greater-equal[Pointer] 128[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1960 greater-equal[Pointer] 128[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1961 greater-equal[compile-time] 128[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1962 greater-equal[Pointer] 128[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1963 greater-equal[Pointer] 128[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:1964 greater-equal[Pointer] 128[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1965 greater-equal[compile-time] 128[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1966 greater-equal[Pointer] 32767[Int16], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1967 greater-equal[Pointer] 32767[Int16], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1968 greater-equal[Pointer] 32767[Int16], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:1969 greater-equal[compile-time] 32767[Int16], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:1970 greater-equal[Pointer] 32767[Int16], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1971 greater-equal[Pointer] 32767[Int16], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1972 greater-equal[Pointer] 32767[Int16], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:1973 greater-equal[compile-time] 32767[Int16], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:1974 greater-equal[Pointer] 32767[Int16], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1975 greater-equal[Pointer] 32767[Int16], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:1976 greater-equal[Pointer] 32767[Int16], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:1977 greater-equal[compile-time] 32767[Int16], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:1978 greater-equal[Pointer] 32767[Int16], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1979 greater-equal[Pointer] 32767[Int16], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:1980 greater-equal[Pointer] 32767[Int16], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:1981 greater-equal[compile-time] 32767[Int16], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:1982 greater-equal[Pointer] 32767[Int16], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int16 = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:1983 greater-equal[Pointer] 32767[Int16], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:1984 greater-equal[Pointer] 32767[Int16], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int16 = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:1985 greater-equal[compile-time] 32767[Int16], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:1986 greater-equal[Int16] 0[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1987 greater-equal[Int16] 0[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1988 greater-equal[Int16] 0[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:1989 greater-equal[compile-time] 0[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:1990 greater-equal[Int16] 0[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1991 greater-equal[Int16] 0[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1992 greater-equal[Int16] 0[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:1993 greater-equal[compile-time] 0[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -127;
endcode
varvalue r True

$overflow on
code auto:1994 greater-equal[Int16] 0[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1995 greater-equal[Int16] 0[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:1996 greater-equal[Int16] 0[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:1997 greater-equal[compile-time] 0[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:1998 greater-equal[Int16] 0[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:1999 greater-equal[Int16] 0[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2000 greater-equal[Int16] 0[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2001 greater-equal[compile-time] 0[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2002 greater-equal[Int16] 0[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2003 greater-equal[Int16] 0[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2004 greater-equal[Int16] 0[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2005 greater-equal[compile-time] 0[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2006 greater-equal[Int16] 0[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2007 greater-equal[Int16] 0[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2008 greater-equal[Int16] 0[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2009 greater-equal[compile-time] 0[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2010 greater-equal[Int16] 1[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2011 greater-equal[Int16] 1[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2012 greater-equal[Int16] 1[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2013 greater-equal[compile-time] 1[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:2014 greater-equal[Int16] 1[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2015 greater-equal[Int16] 1[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2016 greater-equal[Int16] 1[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2017 greater-equal[compile-time] 1[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -127;
endcode
varvalue r True

$overflow on
code auto:2018 greater-equal[Int16] 1[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2019 greater-equal[Int16] 1[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2020 greater-equal[Int16] 1[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2021 greater-equal[compile-time] 1[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:2022 greater-equal[Int16] 1[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2023 greater-equal[Int16] 1[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2024 greater-equal[Int16] 1[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2025 greater-equal[compile-time] 1[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:2026 greater-equal[Int16] 1[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2027 greater-equal[Int16] 1[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2028 greater-equal[Int16] 1[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2029 greater-equal[compile-time] 1[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:2030 greater-equal[Int16] 1[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2031 greater-equal[Int16] 1[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2032 greater-equal[Int16] 1[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2033 greater-equal[compile-time] 1[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:2034 greater-equal[Int16] 127[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2035 greater-equal[Int16] 127[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2036 greater-equal[Int16] 127[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2037 greater-equal[compile-time] 127[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:2038 greater-equal[Int16] 127[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2039 greater-equal[Int16] 127[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2040 greater-equal[Int16] 127[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2041 greater-equal[compile-time] 127[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -127;
endcode
varvalue r True

$overflow on
code auto:2042 greater-equal[Int16] 127[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2043 greater-equal[Int16] 127[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2044 greater-equal[Int16] 127[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2045 greater-equal[compile-time] 127[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:2046 greater-equal[Int16] 127[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2047 greater-equal[Int16] 127[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2048 greater-equal[Int16] 127[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2049 greater-equal[compile-time] 127[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:2050 greater-equal[Int16] 127[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2051 greater-equal[Int16] 127[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2052 greater-equal[Int16] 127[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2053 greater-equal[compile-time] 127[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:2054 greater-equal[Int16] 127[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2055 greater-equal[Int16] 127[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2056 greater-equal[Int16] 127[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2057 greater-equal[compile-time] 127[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:2058 greater-equal[Int16] 128[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2059 greater-equal[Int16] 128[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2060 greater-equal[Int16] 128[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2061 greater-equal[compile-time] 128[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -128;
endcode
varvalue r True

$overflow on
code auto:2062 greater-equal[Int16] 128[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2063 greater-equal[Int16] 128[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2064 greater-equal[Int16] 128[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2065 greater-equal[compile-time] 128[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -127;
endcode
varvalue r True

$overflow on
code auto:2066 greater-equal[Int16] 128[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2067 greater-equal[Int16] 128[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2068 greater-equal[Int16] 128[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2069 greater-equal[compile-time] 128[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -1;
endcode
varvalue r True

$overflow on
code auto:2070 greater-equal[Int16] 128[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2071 greater-equal[Int16] 128[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2072 greater-equal[Int16] 128[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2073 greater-equal[compile-time] 128[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:2074 greater-equal[Int16] 128[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2075 greater-equal[Int16] 128[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2076 greater-equal[Int16] 128[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2077 greater-equal[compile-time] 128[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:2078 greater-equal[Int16] 128[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2079 greater-equal[Int16] 128[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2080 greater-equal[Int16] 128[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2081 greater-equal[compile-time] 128[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:2082 greater-equal[Int16] 255[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2083 greater-equal[Int16] 255[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2084 greater-equal[Int16] 255[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2085 greater-equal[compile-time] 255[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:2086 greater-equal[Int16] 255[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2087 greater-equal[Int16] 255[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2088 greater-equal[Int16] 255[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2089 greater-equal[compile-time] 255[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -127;
endcode
varvalue r True

$overflow on
code auto:2090 greater-equal[Int16] 255[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2091 greater-equal[Int16] 255[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2092 greater-equal[Int16] 255[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2093 greater-equal[compile-time] 255[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:2094 greater-equal[Int16] 255[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2095 greater-equal[Int16] 255[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2096 greater-equal[Int16] 255[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2097 greater-equal[compile-time] 255[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2098 greater-equal[Int16] 255[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2099 greater-equal[Int16] 255[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2100 greater-equal[Int16] 255[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2101 greater-equal[compile-time] 255[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2102 greater-equal[Int16] 255[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2103 greater-equal[Int16] 255[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2104 greater-equal[Int16] 255[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2105 greater-equal[compile-time] 255[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2106 greater-equal[Int16] 0[Byte], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2107 greater-equal[Int16] 0[Byte], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2108 greater-equal[Int16] 0[Byte], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2109 greater-equal[compile-time] 0[Byte], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2110 greater-equal[Int16] 0[Byte], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2111 greater-equal[Int16] 0[Byte], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2112 greater-equal[Int16] 0[Byte], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2113 greater-equal[compile-time] 0[Byte], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2114 greater-equal[Int16] 0[Byte], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2115 greater-equal[Int16] 0[Byte], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2116 greater-equal[Int16] 0[Byte], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2117 greater-equal[compile-time] 0[Byte], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -129;
endcode
varvalue r True

$overflow on
code auto:2118 greater-equal[Int16] 0[Byte], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2119 greater-equal[Int16] 0[Byte], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2120 greater-equal[Int16] 0[Byte], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2121 greater-equal[compile-time] 0[Byte], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:2122 greater-equal[Int16] 0[Byte], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2123 greater-equal[Int16] 0[Byte], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2124 greater-equal[Int16] 0[Byte], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2125 greater-equal[compile-time] 0[Byte], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:2126 greater-equal[Int16] 0[Byte], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2127 greater-equal[Int16] 0[Byte], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2128 greater-equal[Int16] 0[Byte], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2129 greater-equal[compile-time] 0[Byte], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2130 greater-equal[Int16] 0[Byte], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2131 greater-equal[Int16] 0[Byte], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2132 greater-equal[Int16] 0[Byte], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2133 greater-equal[compile-time] 0[Byte], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2134 greater-equal[Int16] 0[Byte], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2135 greater-equal[Int16] 0[Byte], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2136 greater-equal[Int16] 0[Byte], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2137 greater-equal[compile-time] 0[Byte], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2138 greater-equal[Int16] 0[Byte], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2139 greater-equal[Int16] 0[Byte], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2140 greater-equal[Int16] 0[Byte], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2141 greater-equal[compile-time] 0[Byte], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:2142 greater-equal[Int16] 0[Byte], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2143 greater-equal[Int16] 0[Byte], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2144 greater-equal[Int16] 0[Byte], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2145 greater-equal[compile-time] 0[Byte], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2146 greater-equal[Int16] 1[Byte], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2147 greater-equal[Int16] 1[Byte], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2148 greater-equal[Int16] 1[Byte], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2149 greater-equal[compile-time] 1[Byte], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2150 greater-equal[Int16] 1[Byte], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2151 greater-equal[Int16] 1[Byte], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2152 greater-equal[Int16] 1[Byte], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2153 greater-equal[compile-time] 1[Byte], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2154 greater-equal[Int16] 1[Byte], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2155 greater-equal[Int16] 1[Byte], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2156 greater-equal[Int16] 1[Byte], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2157 greater-equal[compile-time] 1[Byte], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -129;
endcode
varvalue r True

$overflow on
code auto:2158 greater-equal[Int16] 1[Byte], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2159 greater-equal[Int16] 1[Byte], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2160 greater-equal[Int16] 1[Byte], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2161 greater-equal[compile-time] 1[Byte], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -128;
endcode
varvalue r True

$overflow on
code auto:2162 greater-equal[Int16] 1[Byte], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2163 greater-equal[Int16] 1[Byte], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2164 greater-equal[Int16] 1[Byte], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2165 greater-equal[compile-time] 1[Byte], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= -1;
endcode
varvalue r True

$overflow on
code auto:2166 greater-equal[Int16] 1[Byte], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2167 greater-equal[Int16] 1[Byte], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2168 greater-equal[Int16] 1[Byte], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2169 greater-equal[compile-time] 1[Byte], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:2170 greater-equal[Int16] 1[Byte], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2171 greater-equal[Int16] 1[Byte], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2172 greater-equal[Int16] 1[Byte], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2173 greater-equal[compile-time] 1[Byte], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:2174 greater-equal[Int16] 1[Byte], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2175 greater-equal[Int16] 1[Byte], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2176 greater-equal[Int16] 1[Byte], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2177 greater-equal[compile-time] 1[Byte], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:2178 greater-equal[Int16] 1[Byte], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2179 greater-equal[Int16] 1[Byte], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2180 greater-equal[Int16] 1[Byte], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2181 greater-equal[compile-time] 1[Byte], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:2182 greater-equal[Int16] 1[Byte], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2183 greater-equal[Int16] 1[Byte], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2184 greater-equal[Int16] 1[Byte], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2185 greater-equal[compile-time] 1[Byte], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2186 greater-equal[Int16] 127[Byte], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2187 greater-equal[Int16] 127[Byte], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2188 greater-equal[Int16] 127[Byte], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2189 greater-equal[compile-time] 127[Byte], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2190 greater-equal[Int16] 127[Byte], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2191 greater-equal[Int16] 127[Byte], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2192 greater-equal[Int16] 127[Byte], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2193 greater-equal[compile-time] 127[Byte], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2194 greater-equal[Int16] 127[Byte], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2195 greater-equal[Int16] 127[Byte], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2196 greater-equal[Int16] 127[Byte], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2197 greater-equal[compile-time] 127[Byte], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -129;
endcode
varvalue r True

$overflow on
code auto:2198 greater-equal[Int16] 127[Byte], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2199 greater-equal[Int16] 127[Byte], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2200 greater-equal[Int16] 127[Byte], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2201 greater-equal[compile-time] 127[Byte], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -128;
endcode
varvalue r True

$overflow on
code auto:2202 greater-equal[Int16] 127[Byte], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2203 greater-equal[Int16] 127[Byte], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2204 greater-equal[Int16] 127[Byte], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2205 greater-equal[compile-time] 127[Byte], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= -1;
endcode
varvalue r True

$overflow on
code auto:2206 greater-equal[Int16] 127[Byte], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2207 greater-equal[Int16] 127[Byte], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2208 greater-equal[Int16] 127[Byte], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2209 greater-equal[compile-time] 127[Byte], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:2210 greater-equal[Int16] 127[Byte], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2211 greater-equal[Int16] 127[Byte], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2212 greater-equal[Int16] 127[Byte], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2213 greater-equal[compile-time] 127[Byte], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:2214 greater-equal[Int16] 127[Byte], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2215 greater-equal[Int16] 127[Byte], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2216 greater-equal[Int16] 127[Byte], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2217 greater-equal[compile-time] 127[Byte], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:2218 greater-equal[Int16] 127[Byte], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2219 greater-equal[Int16] 127[Byte], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2220 greater-equal[Int16] 127[Byte], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2221 greater-equal[compile-time] 127[Byte], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:2222 greater-equal[Int16] 127[Byte], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2223 greater-equal[Int16] 127[Byte], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2224 greater-equal[Int16] 127[Byte], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2225 greater-equal[compile-time] 127[Byte], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2226 greater-equal[Int16] 128[Byte], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2227 greater-equal[Int16] 128[Byte], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2228 greater-equal[Int16] 128[Byte], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2229 greater-equal[compile-time] 128[Byte], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2230 greater-equal[Int16] 128[Byte], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2231 greater-equal[Int16] 128[Byte], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2232 greater-equal[Int16] 128[Byte], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2233 greater-equal[compile-time] 128[Byte], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2234 greater-equal[Int16] 128[Byte], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2235 greater-equal[Int16] 128[Byte], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2236 greater-equal[Int16] 128[Byte], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2237 greater-equal[compile-time] 128[Byte], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -129;
endcode
varvalue r True

$overflow on
code auto:2238 greater-equal[Int16] 128[Byte], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2239 greater-equal[Int16] 128[Byte], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2240 greater-equal[Int16] 128[Byte], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2241 greater-equal[compile-time] 128[Byte], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -128;
endcode
varvalue r True

$overflow on
code auto:2242 greater-equal[Int16] 128[Byte], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2243 greater-equal[Int16] 128[Byte], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2244 greater-equal[Int16] 128[Byte], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2245 greater-equal[compile-time] 128[Byte], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= -1;
endcode
varvalue r True

$overflow on
code auto:2246 greater-equal[Int16] 128[Byte], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2247 greater-equal[Int16] 128[Byte], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2248 greater-equal[Int16] 128[Byte], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2249 greater-equal[compile-time] 128[Byte], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:2250 greater-equal[Int16] 128[Byte], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2251 greater-equal[Int16] 128[Byte], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2252 greater-equal[Int16] 128[Byte], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2253 greater-equal[compile-time] 128[Byte], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:2254 greater-equal[Int16] 128[Byte], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2255 greater-equal[Int16] 128[Byte], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2256 greater-equal[Int16] 128[Byte], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2257 greater-equal[compile-time] 128[Byte], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:2258 greater-equal[Int16] 128[Byte], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2259 greater-equal[Int16] 128[Byte], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2260 greater-equal[Int16] 128[Byte], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2261 greater-equal[compile-time] 128[Byte], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 128;
endcode
varvalue r True

$overflow on
code auto:2262 greater-equal[Int16] 128[Byte], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2263 greater-equal[Int16] 128[Byte], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2264 greater-equal[Int16] 128[Byte], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2265 greater-equal[compile-time] 128[Byte], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2266 greater-equal[Int16] 255[Byte], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2267 greater-equal[Int16] 255[Byte], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2268 greater-equal[Int16] 255[Byte], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2269 greater-equal[compile-time] 255[Byte], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2270 greater-equal[Int16] 255[Byte], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2271 greater-equal[Int16] 255[Byte], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2272 greater-equal[Int16] 255[Byte], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2273 greater-equal[compile-time] 255[Byte], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2274 greater-equal[Int16] 255[Byte], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2275 greater-equal[Int16] 255[Byte], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2276 greater-equal[Int16] 255[Byte], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2277 greater-equal[compile-time] 255[Byte], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -129;
endcode
varvalue r True

$overflow on
code auto:2278 greater-equal[Int16] 255[Byte], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2279 greater-equal[Int16] 255[Byte], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2280 greater-equal[Int16] 255[Byte], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2281 greater-equal[compile-time] 255[Byte], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:2282 greater-equal[Int16] 255[Byte], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2283 greater-equal[Int16] 255[Byte], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2284 greater-equal[Int16] 255[Byte], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2285 greater-equal[compile-time] 255[Byte], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:2286 greater-equal[Int16] 255[Byte], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2287 greater-equal[Int16] 255[Byte], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2288 greater-equal[Int16] 255[Byte], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2289 greater-equal[compile-time] 255[Byte], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2290 greater-equal[Int16] 255[Byte], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2291 greater-equal[Int16] 255[Byte], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2292 greater-equal[Int16] 255[Byte], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2293 greater-equal[compile-time] 255[Byte], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2294 greater-equal[Int16] 255[Byte], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2295 greater-equal[Int16] 255[Byte], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2296 greater-equal[Int16] 255[Byte], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2297 greater-equal[compile-time] 255[Byte], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2298 greater-equal[Int16] 255[Byte], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2299 greater-equal[Int16] 255[Byte], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2300 greater-equal[Int16] 255[Byte], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2301 greater-equal[compile-time] 255[Byte], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:2302 greater-equal[Int16] 255[Byte], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2303 greater-equal[Int16] 255[Byte], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2304 greater-equal[Int16] 255[Byte], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2305 greater-equal[compile-time] 255[Byte], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2306 greater-equal[Byte] 0[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2307 greater-equal[Byte] 0[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2308 greater-equal[Byte] 0[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2309 greater-equal[compile-time] 0[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2310 greater-equal[Byte] 0[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2311 greater-equal[Byte] 0[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2312 greater-equal[Byte] 0[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2313 greater-equal[compile-time] 0[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2314 greater-equal[Byte] 0[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2315 greater-equal[Byte] 0[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2316 greater-equal[Byte] 0[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2317 greater-equal[compile-time] 0[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2318 greater-equal[Byte] 0[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2319 greater-equal[Byte] 0[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2320 greater-equal[Byte] 0[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2321 greater-equal[compile-time] 0[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:2322 greater-equal[Byte] 0[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2323 greater-equal[Byte] 0[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2324 greater-equal[Byte] 0[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2325 greater-equal[compile-time] 0[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:2326 greater-equal[Byte] 1[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2327 greater-equal[Byte] 1[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2328 greater-equal[Byte] 1[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2329 greater-equal[compile-time] 1[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:2330 greater-equal[Byte] 1[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2331 greater-equal[Byte] 1[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2332 greater-equal[Byte] 1[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2333 greater-equal[compile-time] 1[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 1;
endcode
varvalue r True

$overflow on
code auto:2334 greater-equal[Byte] 1[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2335 greater-equal[Byte] 1[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2336 greater-equal[Byte] 1[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2337 greater-equal[compile-time] 1[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 127;
endcode
varvalue r False

$overflow on
code auto:2338 greater-equal[Byte] 1[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2339 greater-equal[Byte] 1[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2340 greater-equal[Byte] 1[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2341 greater-equal[compile-time] 1[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 128;
endcode
varvalue r False

$overflow on
code auto:2342 greater-equal[Byte] 1[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2343 greater-equal[Byte] 1[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2344 greater-equal[Byte] 1[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2345 greater-equal[compile-time] 1[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:2346 greater-equal[Byte] 127[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2347 greater-equal[Byte] 127[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2348 greater-equal[Byte] 127[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2349 greater-equal[compile-time] 127[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:2350 greater-equal[Byte] 127[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2351 greater-equal[Byte] 127[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2352 greater-equal[Byte] 127[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2353 greater-equal[compile-time] 127[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 1;
endcode
varvalue r True

$overflow on
code auto:2354 greater-equal[Byte] 127[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2355 greater-equal[Byte] 127[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2356 greater-equal[Byte] 127[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2357 greater-equal[compile-time] 127[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 127;
endcode
varvalue r True

$overflow on
code auto:2358 greater-equal[Byte] 127[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2359 greater-equal[Byte] 127[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2360 greater-equal[Byte] 127[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2361 greater-equal[compile-time] 127[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 128;
endcode
varvalue r False

$overflow on
code auto:2362 greater-equal[Byte] 127[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2363 greater-equal[Byte] 127[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2364 greater-equal[Byte] 127[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2365 greater-equal[compile-time] 127[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:2366 greater-equal[Byte] 128[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2367 greater-equal[Byte] 128[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2368 greater-equal[Byte] 128[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2369 greater-equal[compile-time] 128[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:2370 greater-equal[Byte] 128[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2371 greater-equal[Byte] 128[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2372 greater-equal[Byte] 128[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2373 greater-equal[compile-time] 128[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 1;
endcode
varvalue r True

$overflow on
code auto:2374 greater-equal[Byte] 128[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2375 greater-equal[Byte] 128[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2376 greater-equal[Byte] 128[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2377 greater-equal[compile-time] 128[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 127;
endcode
varvalue r True

$overflow on
code auto:2378 greater-equal[Byte] 128[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2379 greater-equal[Byte] 128[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2380 greater-equal[Byte] 128[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2381 greater-equal[compile-time] 128[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 128;
endcode
varvalue r True

$overflow on
code auto:2382 greater-equal[Byte] 128[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2383 greater-equal[Byte] 128[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2384 greater-equal[Byte] 128[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2385 greater-equal[compile-time] 128[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:2386 greater-equal[Byte] 255[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2387 greater-equal[Byte] 255[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2388 greater-equal[Byte] 255[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2389 greater-equal[compile-time] 255[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2390 greater-equal[Byte] 255[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2391 greater-equal[Byte] 255[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2392 greater-equal[Byte] 255[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2393 greater-equal[compile-time] 255[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2394 greater-equal[Byte] 255[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2395 greater-equal[Byte] 255[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2396 greater-equal[Byte] 255[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2397 greater-equal[compile-time] 255[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2398 greater-equal[Byte] 255[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2399 greater-equal[Byte] 255[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2400 greater-equal[Byte] 255[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2401 greater-equal[compile-time] 255[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:2402 greater-equal[Byte] 255[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2403 greater-equal[Byte] 255[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2404 greater-equal[Byte] 255[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:2405 greater-equal[compile-time] 255[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:2406 greater-equal[Word] 0[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2407 greater-equal[Word] 0[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2408 greater-equal[Word] 0[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2409 greater-equal[compile-time] 0[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2410 greater-equal[Word] 0[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2411 greater-equal[Word] 0[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2412 greater-equal[Word] 0[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2413 greater-equal[compile-time] 0[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:2414 greater-equal[Word] 0[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2415 greater-equal[Word] 0[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2416 greater-equal[Word] 0[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2417 greater-equal[compile-time] 0[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2418 greater-equal[Word] 0[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2419 greater-equal[Word] 0[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2420 greater-equal[Word] 0[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2421 greater-equal[compile-time] 0[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2422 greater-equal[Word] 0[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2423 greater-equal[Word] 0[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2424 greater-equal[Word] 0[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2425 greater-equal[compile-time] 0[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2426 greater-equal[Word] 1[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2427 greater-equal[Word] 1[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2428 greater-equal[Word] 1[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2429 greater-equal[compile-time] 1[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:2430 greater-equal[Word] 1[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2431 greater-equal[Word] 1[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2432 greater-equal[Word] 1[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2433 greater-equal[compile-time] 1[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:2434 greater-equal[Word] 1[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2435 greater-equal[Word] 1[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2436 greater-equal[Word] 1[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2437 greater-equal[compile-time] 1[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2438 greater-equal[Word] 1[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2439 greater-equal[Word] 1[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2440 greater-equal[Word] 1[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2441 greater-equal[compile-time] 1[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2442 greater-equal[Word] 1[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2443 greater-equal[Word] 1[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2444 greater-equal[Word] 1[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2445 greater-equal[compile-time] 1[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2446 greater-equal[Word] 127[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2447 greater-equal[Word] 127[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2448 greater-equal[Word] 127[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2449 greater-equal[compile-time] 127[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:2450 greater-equal[Word] 127[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2451 greater-equal[Word] 127[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2452 greater-equal[Word] 127[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2453 greater-equal[compile-time] 127[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:2454 greater-equal[Word] 127[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2455 greater-equal[Word] 127[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2456 greater-equal[Word] 127[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2457 greater-equal[compile-time] 127[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2458 greater-equal[Word] 127[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2459 greater-equal[Word] 127[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2460 greater-equal[Word] 127[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2461 greater-equal[compile-time] 127[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2462 greater-equal[Word] 127[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2463 greater-equal[Word] 127[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2464 greater-equal[Word] 127[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2465 greater-equal[compile-time] 127[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2466 greater-equal[Word] 128[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2467 greater-equal[Word] 128[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2468 greater-equal[Word] 128[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2469 greater-equal[compile-time] 128[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:2470 greater-equal[Word] 128[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2471 greater-equal[Word] 128[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2472 greater-equal[Word] 128[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2473 greater-equal[compile-time] 128[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:2474 greater-equal[Word] 128[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2475 greater-equal[Word] 128[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2476 greater-equal[Word] 128[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2477 greater-equal[compile-time] 128[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2478 greater-equal[Word] 128[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2479 greater-equal[Word] 128[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2480 greater-equal[Word] 128[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2481 greater-equal[compile-time] 128[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2482 greater-equal[Word] 128[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2483 greater-equal[Word] 128[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2484 greater-equal[Word] 128[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2485 greater-equal[compile-time] 128[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2486 greater-equal[Word] 255[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2487 greater-equal[Word] 255[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2488 greater-equal[Word] 255[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2489 greater-equal[compile-time] 255[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2490 greater-equal[Word] 255[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2491 greater-equal[Word] 255[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2492 greater-equal[Word] 255[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:2493 greater-equal[compile-time] 255[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:2494 greater-equal[Word] 255[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2495 greater-equal[Word] 255[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2496 greater-equal[Word] 255[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2497 greater-equal[compile-time] 255[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2498 greater-equal[Word] 255[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2499 greater-equal[Word] 255[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2500 greater-equal[Word] 255[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2501 greater-equal[compile-time] 255[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2502 greater-equal[Word] 255[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2503 greater-equal[Word] 255[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2504 greater-equal[Word] 255[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2505 greater-equal[compile-time] 255[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2506 greater-equal[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2507 greater-equal[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2508 greater-equal[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2509 greater-equal[compile-time] 0[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2510 greater-equal[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2511 greater-equal[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2512 greater-equal[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2513 greater-equal[compile-time] 0[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:2514 greater-equal[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2515 greater-equal[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2516 greater-equal[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2517 greater-equal[compile-time] 0[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2518 greater-equal[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2519 greater-equal[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2520 greater-equal[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2521 greater-equal[compile-time] 0[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2522 greater-equal[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2523 greater-equal[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2524 greater-equal[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2525 greater-equal[compile-time] 0[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2526 greater-equal[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2527 greater-equal[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r True

code auto:2528 greater-equal[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2529 greater-equal[compile-time] 1[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 0;
endcode
varvalue r True

$overflow on
code auto:2530 greater-equal[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2531 greater-equal[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2532 greater-equal[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2533 greater-equal[compile-time] 1[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 255;
endcode
varvalue r False

$overflow on
code auto:2534 greater-equal[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2535 greater-equal[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2536 greater-equal[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2537 greater-equal[compile-time] 1[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2538 greater-equal[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2539 greater-equal[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2540 greater-equal[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2541 greater-equal[compile-time] 1[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2542 greater-equal[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2543 greater-equal[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 >= b;
endcode
varvalue r False

code auto:2544 greater-equal[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2545 greater-equal[compile-time] 1[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2546 greater-equal[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2547 greater-equal[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r True

code auto:2548 greater-equal[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2549 greater-equal[compile-time] 127[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 0;
endcode
varvalue r True

$overflow on
code auto:2550 greater-equal[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2551 greater-equal[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2552 greater-equal[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2553 greater-equal[compile-time] 127[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 255;
endcode
varvalue r False

$overflow on
code auto:2554 greater-equal[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2555 greater-equal[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2556 greater-equal[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2557 greater-equal[compile-time] 127[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2558 greater-equal[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2559 greater-equal[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2560 greater-equal[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2561 greater-equal[compile-time] 127[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2562 greater-equal[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2563 greater-equal[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 >= b;
endcode
varvalue r False

code auto:2564 greater-equal[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2565 greater-equal[compile-time] 127[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2566 greater-equal[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2567 greater-equal[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r True

code auto:2568 greater-equal[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2569 greater-equal[compile-time] 128[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 0;
endcode
varvalue r True

$overflow on
code auto:2570 greater-equal[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2571 greater-equal[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2572 greater-equal[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2573 greater-equal[compile-time] 128[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 255;
endcode
varvalue r False

$overflow on
code auto:2574 greater-equal[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2575 greater-equal[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2576 greater-equal[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2577 greater-equal[compile-time] 128[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2578 greater-equal[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2579 greater-equal[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2580 greater-equal[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2581 greater-equal[compile-time] 128[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2582 greater-equal[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2583 greater-equal[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 128 >= b;
endcode
varvalue r False

code auto:2584 greater-equal[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2585 greater-equal[compile-time] 128[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2586 greater-equal[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2587 greater-equal[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2588 greater-equal[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2589 greater-equal[compile-time] 255[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2590 greater-equal[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2591 greater-equal[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2592 greater-equal[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:2593 greater-equal[compile-time] 255[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:2594 greater-equal[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2595 greater-equal[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2596 greater-equal[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2597 greater-equal[compile-time] 255[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2598 greater-equal[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2599 greater-equal[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2600 greater-equal[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:2601 greater-equal[compile-time] 255[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:2602 greater-equal[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2603 greater-equal[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2604 greater-equal[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:2605 greater-equal[compile-time] 255[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:2606 greater-equal[Int16] 0[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2607 greater-equal[Int16] 0[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2608 greater-equal[Int16] 0[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2609 greater-equal[compile-time] 0[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:2610 greater-equal[Int16] 0[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2611 greater-equal[Int16] 0[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2612 greater-equal[Int16] 0[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2613 greater-equal[compile-time] 0[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -127;
endcode
varvalue r True

$overflow on
code auto:2614 greater-equal[Int16] 0[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2615 greater-equal[Int16] 0[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2616 greater-equal[Int16] 0[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2617 greater-equal[compile-time] 0[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:2618 greater-equal[Int16] 0[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2619 greater-equal[Int16] 0[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2620 greater-equal[Int16] 0[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2621 greater-equal[compile-time] 0[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2622 greater-equal[Int16] 0[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2623 greater-equal[Int16] 0[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2624 greater-equal[Int16] 0[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2625 greater-equal[compile-time] 0[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2626 greater-equal[Int16] 0[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2627 greater-equal[Int16] 0[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2628 greater-equal[Int16] 0[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2629 greater-equal[compile-time] 0[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2630 greater-equal[Int16] 255[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2631 greater-equal[Int16] 255[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2632 greater-equal[Int16] 255[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2633 greater-equal[compile-time] 255[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:2634 greater-equal[Int16] 255[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2635 greater-equal[Int16] 255[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2636 greater-equal[Int16] 255[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2637 greater-equal[compile-time] 255[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -127;
endcode
varvalue r True

$overflow on
code auto:2638 greater-equal[Int16] 255[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2639 greater-equal[Int16] 255[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2640 greater-equal[Int16] 255[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2641 greater-equal[compile-time] 255[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:2642 greater-equal[Int16] 255[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2643 greater-equal[Int16] 255[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2644 greater-equal[Int16] 255[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2645 greater-equal[compile-time] 255[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2646 greater-equal[Int16] 255[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2647 greater-equal[Int16] 255[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2648 greater-equal[Int16] 255[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2649 greater-equal[compile-time] 255[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2650 greater-equal[Int16] 255[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2651 greater-equal[Int16] 255[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2652 greater-equal[Int16] 255[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2653 greater-equal[compile-time] 255[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2654 greater-equal[Int16] 32767[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2655 greater-equal[Int16] 32767[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2656 greater-equal[Int16] 32767[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2657 greater-equal[compile-time] 32767[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:2658 greater-equal[Int16] 32767[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2659 greater-equal[Int16] 32767[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2660 greater-equal[Int16] 32767[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2661 greater-equal[compile-time] 32767[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -127;
endcode
varvalue r True

$overflow on
code auto:2662 greater-equal[Int16] 32767[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2663 greater-equal[Int16] 32767[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2664 greater-equal[Int16] 32767[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2665 greater-equal[compile-time] 32767[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:2666 greater-equal[Int16] 32767[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2667 greater-equal[Int16] 32767[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2668 greater-equal[Int16] 32767[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2669 greater-equal[compile-time] 32767[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:2670 greater-equal[Int16] 32767[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2671 greater-equal[Int16] 32767[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2672 greater-equal[Int16] 32767[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2673 greater-equal[compile-time] 32767[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:2674 greater-equal[Int16] 32767[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2675 greater-equal[Int16] 32767[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2676 greater-equal[Int16] 32767[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2677 greater-equal[compile-time] 32767[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:2678 greater-equal[Int16] 32768[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2679 greater-equal[Int16] 32768[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2680 greater-equal[Int16] 32768[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2681 greater-equal[compile-time] 32768[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -128;
endcode
varvalue r True

$overflow on
code auto:2682 greater-equal[Int16] 32768[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2683 greater-equal[Int16] 32768[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2684 greater-equal[Int16] 32768[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2685 greater-equal[compile-time] 32768[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -127;
endcode
varvalue r True

$overflow on
code auto:2686 greater-equal[Int16] 32768[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2687 greater-equal[Int16] 32768[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2688 greater-equal[Int16] 32768[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2689 greater-equal[compile-time] 32768[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -1;
endcode
varvalue r True

$overflow on
code auto:2690 greater-equal[Int16] 32768[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2691 greater-equal[Int16] 32768[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2692 greater-equal[Int16] 32768[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2693 greater-equal[compile-time] 32768[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:2694 greater-equal[Int16] 32768[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2695 greater-equal[Int16] 32768[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2696 greater-equal[Int16] 32768[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2697 greater-equal[compile-time] 32768[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:2698 greater-equal[Int16] 32768[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2699 greater-equal[Int16] 32768[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2700 greater-equal[Int16] 32768[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2701 greater-equal[compile-time] 32768[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:2702 greater-equal[Int16] 65535[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2703 greater-equal[Int16] 65535[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2704 greater-equal[Int16] 65535[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2705 greater-equal[compile-time] 65535[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -128;
endcode
varvalue r True

$overflow on
code auto:2706 greater-equal[Int16] 65535[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2707 greater-equal[Int16] 65535[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2708 greater-equal[Int16] 65535[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:2709 greater-equal[compile-time] 65535[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -127;
endcode
varvalue r True

$overflow on
code auto:2710 greater-equal[Int16] 65535[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2711 greater-equal[Int16] 65535[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2712 greater-equal[Int16] 65535[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2713 greater-equal[compile-time] 65535[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -1;
endcode
varvalue r True

$overflow on
code auto:2714 greater-equal[Int16] 65535[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2715 greater-equal[Int16] 65535[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2716 greater-equal[Int16] 65535[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2717 greater-equal[compile-time] 65535[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:2718 greater-equal[Int16] 65535[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2719 greater-equal[Int16] 65535[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2720 greater-equal[Int16] 65535[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2721 greater-equal[compile-time] 65535[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:2722 greater-equal[Int16] 65535[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2723 greater-equal[Int16] 65535[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2724 greater-equal[Int16] 65535[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2725 greater-equal[compile-time] 65535[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:2726 greater-equal[Int16] 0[Word], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2727 greater-equal[Int16] 0[Word], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2728 greater-equal[Int16] 0[Word], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2729 greater-equal[compile-time] 0[Word], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2730 greater-equal[Int16] 0[Word], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2731 greater-equal[Int16] 0[Word], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2732 greater-equal[Int16] 0[Word], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2733 greater-equal[compile-time] 0[Word], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2734 greater-equal[Int16] 0[Word], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2735 greater-equal[Int16] 0[Word], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2736 greater-equal[Int16] 0[Word], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2737 greater-equal[compile-time] 0[Word], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -129;
endcode
varvalue r True

$overflow on
code auto:2738 greater-equal[Int16] 0[Word], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2739 greater-equal[Int16] 0[Word], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2740 greater-equal[Int16] 0[Word], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2741 greater-equal[compile-time] 0[Word], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:2742 greater-equal[Int16] 0[Word], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2743 greater-equal[Int16] 0[Word], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2744 greater-equal[Int16] 0[Word], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2745 greater-equal[compile-time] 0[Word], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:2746 greater-equal[Int16] 0[Word], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2747 greater-equal[Int16] 0[Word], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2748 greater-equal[Int16] 0[Word], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2749 greater-equal[compile-time] 0[Word], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2750 greater-equal[Int16] 0[Word], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2751 greater-equal[Int16] 0[Word], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2752 greater-equal[Int16] 0[Word], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2753 greater-equal[compile-time] 0[Word], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2754 greater-equal[Int16] 0[Word], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2755 greater-equal[Int16] 0[Word], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2756 greater-equal[Int16] 0[Word], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2757 greater-equal[compile-time] 0[Word], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2758 greater-equal[Int16] 0[Word], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2759 greater-equal[Int16] 0[Word], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2760 greater-equal[Int16] 0[Word], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2761 greater-equal[compile-time] 0[Word], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:2762 greater-equal[Int16] 0[Word], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2763 greater-equal[Int16] 0[Word], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2764 greater-equal[Int16] 0[Word], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2765 greater-equal[compile-time] 0[Word], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2766 greater-equal[Int16] 255[Word], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2767 greater-equal[Int16] 255[Word], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2768 greater-equal[Int16] 255[Word], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2769 greater-equal[compile-time] 255[Word], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2770 greater-equal[Int16] 255[Word], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2771 greater-equal[Int16] 255[Word], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2772 greater-equal[Int16] 255[Word], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2773 greater-equal[compile-time] 255[Word], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2774 greater-equal[Int16] 255[Word], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2775 greater-equal[Int16] 255[Word], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2776 greater-equal[Int16] 255[Word], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2777 greater-equal[compile-time] 255[Word], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -129;
endcode
varvalue r True

$overflow on
code auto:2778 greater-equal[Int16] 255[Word], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2779 greater-equal[Int16] 255[Word], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2780 greater-equal[Int16] 255[Word], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2781 greater-equal[compile-time] 255[Word], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:2782 greater-equal[Int16] 255[Word], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2783 greater-equal[Int16] 255[Word], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2784 greater-equal[Int16] 255[Word], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2785 greater-equal[compile-time] 255[Word], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:2786 greater-equal[Int16] 255[Word], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2787 greater-equal[Int16] 255[Word], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2788 greater-equal[Int16] 255[Word], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2789 greater-equal[compile-time] 255[Word], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2790 greater-equal[Int16] 255[Word], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2791 greater-equal[Int16] 255[Word], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2792 greater-equal[Int16] 255[Word], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2793 greater-equal[compile-time] 255[Word], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2794 greater-equal[Int16] 255[Word], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2795 greater-equal[Int16] 255[Word], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2796 greater-equal[Int16] 255[Word], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2797 greater-equal[compile-time] 255[Word], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2798 greater-equal[Int16] 255[Word], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2799 greater-equal[Int16] 255[Word], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2800 greater-equal[Int16] 255[Word], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2801 greater-equal[compile-time] 255[Word], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:2802 greater-equal[Int16] 255[Word], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2803 greater-equal[Int16] 255[Word], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:2804 greater-equal[Int16] 255[Word], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:2805 greater-equal[compile-time] 255[Word], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:2806 greater-equal[Int16] 32767[Word], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2807 greater-equal[Int16] 32767[Word], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2808 greater-equal[Int16] 32767[Word], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2809 greater-equal[compile-time] 32767[Word], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2810 greater-equal[Int16] 32767[Word], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2811 greater-equal[Int16] 32767[Word], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2812 greater-equal[Int16] 32767[Word], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2813 greater-equal[compile-time] 32767[Word], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2814 greater-equal[Int16] 32767[Word], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2815 greater-equal[Int16] 32767[Word], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2816 greater-equal[Int16] 32767[Word], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2817 greater-equal[compile-time] 32767[Word], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -129;
endcode
varvalue r True

$overflow on
code auto:2818 greater-equal[Int16] 32767[Word], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2819 greater-equal[Int16] 32767[Word], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2820 greater-equal[Int16] 32767[Word], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2821 greater-equal[compile-time] 32767[Word], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:2822 greater-equal[Int16] 32767[Word], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2823 greater-equal[Int16] 32767[Word], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2824 greater-equal[Int16] 32767[Word], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2825 greater-equal[compile-time] 32767[Word], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:2826 greater-equal[Int16] 32767[Word], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2827 greater-equal[Int16] 32767[Word], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2828 greater-equal[Int16] 32767[Word], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2829 greater-equal[compile-time] 32767[Word], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:2830 greater-equal[Int16] 32767[Word], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2831 greater-equal[Int16] 32767[Word], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2832 greater-equal[Int16] 32767[Word], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2833 greater-equal[compile-time] 32767[Word], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:2834 greater-equal[Int16] 32767[Word], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2835 greater-equal[Int16] 32767[Word], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2836 greater-equal[Int16] 32767[Word], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2837 greater-equal[compile-time] 32767[Word], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:2838 greater-equal[Int16] 32767[Word], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2839 greater-equal[Int16] 32767[Word], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2840 greater-equal[Int16] 32767[Word], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2841 greater-equal[compile-time] 32767[Word], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:2842 greater-equal[Int16] 32767[Word], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2843 greater-equal[Int16] 32767[Word], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2844 greater-equal[Int16] 32767[Word], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:2845 greater-equal[compile-time] 32767[Word], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:2846 greater-equal[Int16] 32768[Word], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2847 greater-equal[Int16] 32768[Word], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2848 greater-equal[Int16] 32768[Word], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2849 greater-equal[compile-time] 32768[Word], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2850 greater-equal[Int16] 32768[Word], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2851 greater-equal[Int16] 32768[Word], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2852 greater-equal[Int16] 32768[Word], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2853 greater-equal[compile-time] 32768[Word], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2854 greater-equal[Int16] 32768[Word], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2855 greater-equal[Int16] 32768[Word], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2856 greater-equal[Int16] 32768[Word], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2857 greater-equal[compile-time] 32768[Word], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -129;
endcode
varvalue r True

$overflow on
code auto:2858 greater-equal[Int16] 32768[Word], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2859 greater-equal[Int16] 32768[Word], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2860 greater-equal[Int16] 32768[Word], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2861 greater-equal[compile-time] 32768[Word], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -128;
endcode
varvalue r True

$overflow on
code auto:2862 greater-equal[Int16] 32768[Word], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2863 greater-equal[Int16] 32768[Word], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2864 greater-equal[Int16] 32768[Word], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2865 greater-equal[compile-time] 32768[Word], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -1;
endcode
varvalue r True

$overflow on
code auto:2866 greater-equal[Int16] 32768[Word], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2867 greater-equal[Int16] 32768[Word], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2868 greater-equal[Int16] 32768[Word], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2869 greater-equal[compile-time] 32768[Word], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:2870 greater-equal[Int16] 32768[Word], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2871 greater-equal[Int16] 32768[Word], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2872 greater-equal[Int16] 32768[Word], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2873 greater-equal[compile-time] 32768[Word], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:2874 greater-equal[Int16] 32768[Word], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2875 greater-equal[Int16] 32768[Word], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2876 greater-equal[Int16] 32768[Word], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2877 greater-equal[compile-time] 32768[Word], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:2878 greater-equal[Int16] 32768[Word], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2879 greater-equal[Int16] 32768[Word], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2880 greater-equal[Int16] 32768[Word], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2881 greater-equal[compile-time] 32768[Word], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 128;
endcode
varvalue r True

$overflow on
code auto:2882 greater-equal[Int16] 32768[Word], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2883 greater-equal[Int16] 32768[Word], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2884 greater-equal[Int16] 32768[Word], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:2885 greater-equal[compile-time] 32768[Word], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:2886 greater-equal[Int16] 65535[Word], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2887 greater-equal[Int16] 65535[Word], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2888 greater-equal[Int16] 65535[Word], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:2889 greater-equal[compile-time] 65535[Word], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -32768;
endcode
varvalue r True

$overflow on
code auto:2890 greater-equal[Int16] 65535[Word], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2891 greater-equal[Int16] 65535[Word], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2892 greater-equal[Int16] 65535[Word], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:2893 greater-equal[compile-time] 65535[Word], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -32767;
endcode
varvalue r True

$overflow on
code auto:2894 greater-equal[Int16] 65535[Word], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2895 greater-equal[Int16] 65535[Word], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2896 greater-equal[Int16] 65535[Word], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:2897 greater-equal[compile-time] 65535[Word], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -129;
endcode
varvalue r True

$overflow on
code auto:2898 greater-equal[Int16] 65535[Word], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2899 greater-equal[Int16] 65535[Word], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2900 greater-equal[Int16] 65535[Word], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:2901 greater-equal[compile-time] 65535[Word], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -128;
endcode
varvalue r True

$overflow on
code auto:2902 greater-equal[Int16] 65535[Word], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2903 greater-equal[Int16] 65535[Word], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2904 greater-equal[Int16] 65535[Word], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:2905 greater-equal[compile-time] 65535[Word], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -1;
endcode
varvalue r True

$overflow on
code auto:2906 greater-equal[Int16] 65535[Word], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2907 greater-equal[Int16] 65535[Word], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2908 greater-equal[Int16] 65535[Word], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2909 greater-equal[compile-time] 65535[Word], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:2910 greater-equal[Int16] 65535[Word], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2911 greater-equal[Int16] 65535[Word], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2912 greater-equal[Int16] 65535[Word], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2913 greater-equal[compile-time] 65535[Word], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:2914 greater-equal[Int16] 65535[Word], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2915 greater-equal[Int16] 65535[Word], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2916 greater-equal[Int16] 65535[Word], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2917 greater-equal[compile-time] 65535[Word], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:2918 greater-equal[Int16] 65535[Word], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2919 greater-equal[Int16] 65535[Word], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2920 greater-equal[Int16] 65535[Word], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2921 greater-equal[compile-time] 65535[Word], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 128;
endcode
varvalue r True

$overflow on
code auto:2922 greater-equal[Int16] 65535[Word], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2923 greater-equal[Int16] 65535[Word], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:2924 greater-equal[Int16] 65535[Word], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:2925 greater-equal[compile-time] 65535[Word], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:2926 greater-equal[Word] 0[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2927 greater-equal[Word] 0[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:2928 greater-equal[Word] 0[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2929 greater-equal[compile-time] 0[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:2930 greater-equal[Word] 0[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2931 greater-equal[Word] 0[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2932 greater-equal[Word] 0[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:2933 greater-equal[compile-time] 0[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:2934 greater-equal[Word] 0[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2935 greater-equal[Word] 0[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2936 greater-equal[Word] 0[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:2937 greater-equal[compile-time] 0[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:2938 greater-equal[Word] 0[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2939 greater-equal[Word] 0[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2940 greater-equal[Word] 0[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:2941 greater-equal[compile-time] 0[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:2942 greater-equal[Word] 0[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:2943 greater-equal[Word] 0[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:2944 greater-equal[Word] 0[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:2945 greater-equal[compile-time] 0[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:2946 greater-equal[Word] 255[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2947 greater-equal[Word] 255[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2948 greater-equal[Word] 255[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2949 greater-equal[compile-time] 255[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:2950 greater-equal[Word] 255[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2951 greater-equal[Word] 255[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2952 greater-equal[Word] 255[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2953 greater-equal[compile-time] 255[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:2954 greater-equal[Word] 255[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2955 greater-equal[Word] 255[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2956 greater-equal[Word] 255[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2957 greater-equal[compile-time] 255[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:2958 greater-equal[Word] 255[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2959 greater-equal[Word] 255[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2960 greater-equal[Word] 255[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2961 greater-equal[compile-time] 255[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:2962 greater-equal[Word] 255[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2963 greater-equal[Word] 255[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:2964 greater-equal[Word] 255[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:2965 greater-equal[compile-time] 255[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:2966 greater-equal[Word] 32767[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2967 greater-equal[Word] 32767[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2968 greater-equal[Word] 32767[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2969 greater-equal[compile-time] 32767[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:2970 greater-equal[Word] 32767[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2971 greater-equal[Word] 32767[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2972 greater-equal[Word] 32767[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2973 greater-equal[compile-time] 32767[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:2974 greater-equal[Word] 32767[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2975 greater-equal[Word] 32767[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2976 greater-equal[Word] 32767[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2977 greater-equal[compile-time] 32767[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:2978 greater-equal[Word] 32767[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2979 greater-equal[Word] 32767[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2980 greater-equal[Word] 32767[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:2981 greater-equal[compile-time] 32767[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:2982 greater-equal[Word] 32767[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2983 greater-equal[Word] 32767[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:2984 greater-equal[Word] 32767[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:2985 greater-equal[compile-time] 32767[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:2986 greater-equal[Word] 32768[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2987 greater-equal[Word] 32768[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2988 greater-equal[Word] 32768[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:2989 greater-equal[compile-time] 32768[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:2990 greater-equal[Word] 32768[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2991 greater-equal[Word] 32768[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2992 greater-equal[Word] 32768[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:2993 greater-equal[compile-time] 32768[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:2994 greater-equal[Word] 32768[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2995 greater-equal[Word] 32768[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:2996 greater-equal[Word] 32768[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:2997 greater-equal[compile-time] 32768[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:2998 greater-equal[Word] 32768[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:2999 greater-equal[Word] 32768[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3000 greater-equal[Word] 32768[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3001 greater-equal[compile-time] 32768[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 128;
endcode
varvalue r True

$overflow on
code auto:3002 greater-equal[Word] 32768[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3003 greater-equal[Word] 32768[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3004 greater-equal[Word] 32768[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3005 greater-equal[compile-time] 32768[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3006 greater-equal[Word] 65535[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3007 greater-equal[Word] 65535[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3008 greater-equal[Word] 65535[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3009 greater-equal[compile-time] 65535[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3010 greater-equal[Word] 65535[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3011 greater-equal[Word] 65535[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3012 greater-equal[Word] 65535[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3013 greater-equal[compile-time] 65535[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:3014 greater-equal[Word] 65535[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3015 greater-equal[Word] 65535[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3016 greater-equal[Word] 65535[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3017 greater-equal[compile-time] 65535[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:3018 greater-equal[Word] 65535[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3019 greater-equal[Word] 65535[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3020 greater-equal[Word] 65535[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3021 greater-equal[compile-time] 65535[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 128;
endcode
varvalue r True

$overflow on
code auto:3022 greater-equal[Word] 65535[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3023 greater-equal[Word] 65535[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3024 greater-equal[Word] 65535[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3025 greater-equal[compile-time] 65535[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3026 greater-equal[Word] 0[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3027 greater-equal[Word] 0[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3028 greater-equal[Word] 0[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3029 greater-equal[compile-time] 0[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3030 greater-equal[Word] 0[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3031 greater-equal[Word] 0[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3032 greater-equal[Word] 0[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:3033 greater-equal[compile-time] 0[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:3034 greater-equal[Word] 0[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3035 greater-equal[Word] 0[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3036 greater-equal[Word] 0[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3037 greater-equal[compile-time] 0[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3038 greater-equal[Word] 0[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3039 greater-equal[Word] 0[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3040 greater-equal[Word] 0[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3041 greater-equal[compile-time] 0[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3042 greater-equal[Word] 0[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3043 greater-equal[Word] 0[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3044 greater-equal[Word] 0[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3045 greater-equal[compile-time] 0[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3046 greater-equal[Word] 255[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3047 greater-equal[Word] 255[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3048 greater-equal[Word] 255[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3049 greater-equal[compile-time] 255[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3050 greater-equal[Word] 255[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3051 greater-equal[Word] 255[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3052 greater-equal[Word] 255[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3053 greater-equal[compile-time] 255[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:3054 greater-equal[Word] 255[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3055 greater-equal[Word] 255[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3056 greater-equal[Word] 255[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3057 greater-equal[compile-time] 255[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3058 greater-equal[Word] 255[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3059 greater-equal[Word] 255[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3060 greater-equal[Word] 255[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3061 greater-equal[compile-time] 255[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3062 greater-equal[Word] 255[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3063 greater-equal[Word] 255[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3064 greater-equal[Word] 255[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3065 greater-equal[compile-time] 255[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3066 greater-equal[Word] 32767[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3067 greater-equal[Word] 32767[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3068 greater-equal[Word] 32767[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3069 greater-equal[compile-time] 32767[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3070 greater-equal[Word] 32767[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3071 greater-equal[Word] 32767[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3072 greater-equal[Word] 32767[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3073 greater-equal[compile-time] 32767[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:3074 greater-equal[Word] 32767[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3075 greater-equal[Word] 32767[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3076 greater-equal[Word] 32767[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3077 greater-equal[compile-time] 32767[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3078 greater-equal[Word] 32767[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3079 greater-equal[Word] 32767[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3080 greater-equal[Word] 32767[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3081 greater-equal[compile-time] 32767[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3082 greater-equal[Word] 32767[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3083 greater-equal[Word] 32767[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3084 greater-equal[Word] 32767[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3085 greater-equal[compile-time] 32767[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3086 greater-equal[Word] 32768[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3087 greater-equal[Word] 32768[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3088 greater-equal[Word] 32768[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3089 greater-equal[compile-time] 32768[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3090 greater-equal[Word] 32768[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3091 greater-equal[Word] 32768[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3092 greater-equal[Word] 32768[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3093 greater-equal[compile-time] 32768[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3094 greater-equal[Word] 32768[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3095 greater-equal[Word] 32768[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3096 greater-equal[Word] 32768[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3097 greater-equal[compile-time] 32768[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3098 greater-equal[Word] 32768[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3099 greater-equal[Word] 32768[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3100 greater-equal[Word] 32768[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3101 greater-equal[compile-time] 32768[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3102 greater-equal[Word] 32768[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3103 greater-equal[Word] 32768[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r False

code auto:3104 greater-equal[Word] 32768[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3105 greater-equal[compile-time] 32768[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3106 greater-equal[Word] 65535[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3107 greater-equal[Word] 65535[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3108 greater-equal[Word] 65535[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3109 greater-equal[compile-time] 65535[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3110 greater-equal[Word] 65535[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3111 greater-equal[Word] 65535[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3112 greater-equal[Word] 65535[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3113 greater-equal[compile-time] 65535[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3114 greater-equal[Word] 65535[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3115 greater-equal[Word] 65535[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3116 greater-equal[Word] 65535[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3117 greater-equal[compile-time] 65535[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3118 greater-equal[Word] 65535[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3119 greater-equal[Word] 65535[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3120 greater-equal[Word] 65535[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3121 greater-equal[compile-time] 65535[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3122 greater-equal[Word] 65535[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3123 greater-equal[Word] 65535[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3124 greater-equal[Word] 65535[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r True

code auto:3125 greater-equal[compile-time] 65535[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 65535;
endcode
varvalue r True

$overflow on
code auto:3126 greater-equal[Pointer] 0[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3127 greater-equal[Pointer] 0[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3128 greater-equal[Pointer] 0[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3129 greater-equal[compile-time] 0[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3130 greater-equal[Pointer] 0[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3131 greater-equal[Pointer] 0[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3132 greater-equal[Pointer] 0[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:3133 greater-equal[compile-time] 0[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:3134 greater-equal[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3135 greater-equal[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3136 greater-equal[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3137 greater-equal[compile-time] 0[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3138 greater-equal[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3139 greater-equal[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3140 greater-equal[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3141 greater-equal[compile-time] 0[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3142 greater-equal[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3143 greater-equal[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3144 greater-equal[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3145 greater-equal[compile-time] 0[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3146 greater-equal[Pointer] 255[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3147 greater-equal[Pointer] 255[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3148 greater-equal[Pointer] 255[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3149 greater-equal[compile-time] 255[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3150 greater-equal[Pointer] 255[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3151 greater-equal[Pointer] 255[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3152 greater-equal[Pointer] 255[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3153 greater-equal[compile-time] 255[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:3154 greater-equal[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3155 greater-equal[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3156 greater-equal[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3157 greater-equal[compile-time] 255[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3158 greater-equal[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3159 greater-equal[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3160 greater-equal[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3161 greater-equal[compile-time] 255[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3162 greater-equal[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3163 greater-equal[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3164 greater-equal[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3165 greater-equal[compile-time] 255[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3166 greater-equal[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3167 greater-equal[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3168 greater-equal[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3169 greater-equal[compile-time] 32767[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3170 greater-equal[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3171 greater-equal[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3172 greater-equal[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3173 greater-equal[compile-time] 32767[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:3174 greater-equal[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3175 greater-equal[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3176 greater-equal[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3177 greater-equal[compile-time] 32767[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3178 greater-equal[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3179 greater-equal[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3180 greater-equal[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3181 greater-equal[compile-time] 32767[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3182 greater-equal[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3183 greater-equal[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3184 greater-equal[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3185 greater-equal[compile-time] 32767[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3186 greater-equal[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3187 greater-equal[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3188 greater-equal[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3189 greater-equal[compile-time] 32768[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3190 greater-equal[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3191 greater-equal[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3192 greater-equal[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3193 greater-equal[compile-time] 32768[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3194 greater-equal[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3195 greater-equal[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3196 greater-equal[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3197 greater-equal[compile-time] 32768[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3198 greater-equal[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3199 greater-equal[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3200 greater-equal[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3201 greater-equal[compile-time] 32768[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3202 greater-equal[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3203 greater-equal[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r False

code auto:3204 greater-equal[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3205 greater-equal[compile-time] 32768[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3206 greater-equal[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3207 greater-equal[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3208 greater-equal[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3209 greater-equal[compile-time] 65535[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3210 greater-equal[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3211 greater-equal[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3212 greater-equal[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3213 greater-equal[compile-time] 65535[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3214 greater-equal[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3215 greater-equal[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3216 greater-equal[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3217 greater-equal[compile-time] 65535[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3218 greater-equal[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3219 greater-equal[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3220 greater-equal[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3221 greater-equal[compile-time] 65535[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3222 greater-equal[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3223 greater-equal[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3224 greater-equal[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r True

code auto:3225 greater-equal[compile-time] 65535[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 65535;
endcode
varvalue r True

$overflow on
code auto:3226 greater-equal[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3227 greater-equal[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3228 greater-equal[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3229 greater-equal[compile-time] 0[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:3230 greater-equal[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3231 greater-equal[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3232 greater-equal[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:3233 greater-equal[compile-time] 0[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -127;
endcode
varvalue r True

$overflow on
code auto:3234 greater-equal[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3235 greater-equal[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3236 greater-equal[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3237 greater-equal[compile-time] 0[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:3238 greater-equal[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3239 greater-equal[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3240 greater-equal[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3241 greater-equal[compile-time] 0[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3242 greater-equal[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3243 greater-equal[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3244 greater-equal[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:3245 greater-equal[compile-time] 0[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:3246 greater-equal[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3247 greater-equal[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3248 greater-equal[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:3249 greater-equal[compile-time] 0[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:3250 greater-equal[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3251 greater-equal[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3252 greater-equal[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3253 greater-equal[compile-time] 255[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:3254 greater-equal[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3255 greater-equal[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3256 greater-equal[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:3257 greater-equal[compile-time] 255[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -127;
endcode
varvalue r True

$overflow on
code auto:3258 greater-equal[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3259 greater-equal[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3260 greater-equal[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3261 greater-equal[compile-time] 255[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:3262 greater-equal[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3263 greater-equal[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3264 greater-equal[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3265 greater-equal[compile-time] 255[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3266 greater-equal[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3267 greater-equal[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3268 greater-equal[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3269 greater-equal[compile-time] 255[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:3270 greater-equal[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3271 greater-equal[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3272 greater-equal[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3273 greater-equal[compile-time] 255[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:3274 greater-equal[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3275 greater-equal[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3276 greater-equal[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3277 greater-equal[compile-time] 32767[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:3278 greater-equal[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3279 greater-equal[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3280 greater-equal[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:3281 greater-equal[compile-time] 32767[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -127;
endcode
varvalue r True

$overflow on
code auto:3282 greater-equal[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3283 greater-equal[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3284 greater-equal[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3285 greater-equal[compile-time] 32767[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:3286 greater-equal[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3287 greater-equal[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3288 greater-equal[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3289 greater-equal[compile-time] 32767[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3290 greater-equal[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3291 greater-equal[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3292 greater-equal[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3293 greater-equal[compile-time] 32767[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:3294 greater-equal[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3295 greater-equal[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3296 greater-equal[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3297 greater-equal[compile-time] 32767[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:3298 greater-equal[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3299 greater-equal[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3300 greater-equal[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3301 greater-equal[compile-time] 32768[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -128;
endcode
varvalue r True

$overflow on
code auto:3302 greater-equal[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3303 greater-equal[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3304 greater-equal[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:3305 greater-equal[compile-time] 32768[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -127;
endcode
varvalue r True

$overflow on
code auto:3306 greater-equal[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3307 greater-equal[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3308 greater-equal[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3309 greater-equal[compile-time] 32768[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -1;
endcode
varvalue r True

$overflow on
code auto:3310 greater-equal[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3311 greater-equal[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3312 greater-equal[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3313 greater-equal[compile-time] 32768[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3314 greater-equal[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3315 greater-equal[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3316 greater-equal[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3317 greater-equal[compile-time] 32768[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:3318 greater-equal[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3319 greater-equal[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3320 greater-equal[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3321 greater-equal[compile-time] 32768[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:3322 greater-equal[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3323 greater-equal[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3324 greater-equal[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3325 greater-equal[compile-time] 65535[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -128;
endcode
varvalue r True

$overflow on
code auto:3326 greater-equal[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3327 greater-equal[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3328 greater-equal[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -127;
endcode
varvalue r True

code auto:3329 greater-equal[compile-time] 65535[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -127;
endcode
varvalue r True

$overflow on
code auto:3330 greater-equal[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3331 greater-equal[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3332 greater-equal[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3333 greater-equal[compile-time] 65535[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -1;
endcode
varvalue r True

$overflow on
code auto:3334 greater-equal[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3335 greater-equal[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3336 greater-equal[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3337 greater-equal[compile-time] 65535[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3338 greater-equal[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3339 greater-equal[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3340 greater-equal[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3341 greater-equal[compile-time] 65535[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:3342 greater-equal[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3343 greater-equal[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3344 greater-equal[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3345 greater-equal[compile-time] 65535[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:3346 greater-equal[Pointer] 0[Pointer], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3347 greater-equal[Pointer] 0[Pointer], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3348 greater-equal[Pointer] 0[Pointer], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:3349 greater-equal[compile-time] 0[Pointer], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32768;
endcode
varvalue r True

$overflow on
code auto:3350 greater-equal[Pointer] 0[Pointer], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3351 greater-equal[Pointer] 0[Pointer], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3352 greater-equal[Pointer] 0[Pointer], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:3353 greater-equal[compile-time] 0[Pointer], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -32767;
endcode
varvalue r True

$overflow on
code auto:3354 greater-equal[Pointer] 0[Pointer], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3355 greater-equal[Pointer] 0[Pointer], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3356 greater-equal[Pointer] 0[Pointer], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:3357 greater-equal[compile-time] 0[Pointer], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -129;
endcode
varvalue r True

$overflow on
code auto:3358 greater-equal[Pointer] 0[Pointer], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3359 greater-equal[Pointer] 0[Pointer], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3360 greater-equal[Pointer] 0[Pointer], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3361 greater-equal[compile-time] 0[Pointer], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -128;
endcode
varvalue r True

$overflow on
code auto:3362 greater-equal[Pointer] 0[Pointer], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3363 greater-equal[Pointer] 0[Pointer], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3364 greater-equal[Pointer] 0[Pointer], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3365 greater-equal[compile-time] 0[Pointer], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= -1;
endcode
varvalue r True

$overflow on
code auto:3366 greater-equal[Pointer] 0[Pointer], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3367 greater-equal[Pointer] 0[Pointer], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3368 greater-equal[Pointer] 0[Pointer], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3369 greater-equal[compile-time] 0[Pointer], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3370 greater-equal[Pointer] 0[Pointer], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3371 greater-equal[Pointer] 0[Pointer], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3372 greater-equal[Pointer] 0[Pointer], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:3373 greater-equal[compile-time] 0[Pointer], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:3374 greater-equal[Pointer] 0[Pointer], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3375 greater-equal[Pointer] 0[Pointer], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3376 greater-equal[Pointer] 0[Pointer], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:3377 greater-equal[compile-time] 0[Pointer], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:3378 greater-equal[Pointer] 0[Pointer], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3379 greater-equal[Pointer] 0[Pointer], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3380 greater-equal[Pointer] 0[Pointer], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:3381 greater-equal[compile-time] 0[Pointer], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:3382 greater-equal[Pointer] 0[Pointer], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3383 greater-equal[Pointer] 0[Pointer], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3384 greater-equal[Pointer] 0[Pointer], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3385 greater-equal[compile-time] 0[Pointer], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3386 greater-equal[Pointer] 255[Pointer], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3387 greater-equal[Pointer] 255[Pointer], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3388 greater-equal[Pointer] 255[Pointer], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:3389 greater-equal[compile-time] 255[Pointer], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32768;
endcode
varvalue r True

$overflow on
code auto:3390 greater-equal[Pointer] 255[Pointer], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3391 greater-equal[Pointer] 255[Pointer], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3392 greater-equal[Pointer] 255[Pointer], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:3393 greater-equal[compile-time] 255[Pointer], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -32767;
endcode
varvalue r True

$overflow on
code auto:3394 greater-equal[Pointer] 255[Pointer], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3395 greater-equal[Pointer] 255[Pointer], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3396 greater-equal[Pointer] 255[Pointer], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:3397 greater-equal[compile-time] 255[Pointer], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -129;
endcode
varvalue r True

$overflow on
code auto:3398 greater-equal[Pointer] 255[Pointer], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3399 greater-equal[Pointer] 255[Pointer], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3400 greater-equal[Pointer] 255[Pointer], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3401 greater-equal[compile-time] 255[Pointer], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -128;
endcode
varvalue r True

$overflow on
code auto:3402 greater-equal[Pointer] 255[Pointer], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3403 greater-equal[Pointer] 255[Pointer], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3404 greater-equal[Pointer] 255[Pointer], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3405 greater-equal[compile-time] 255[Pointer], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= -1;
endcode
varvalue r True

$overflow on
code auto:3406 greater-equal[Pointer] 255[Pointer], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3407 greater-equal[Pointer] 255[Pointer], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3408 greater-equal[Pointer] 255[Pointer], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3409 greater-equal[compile-time] 255[Pointer], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3410 greater-equal[Pointer] 255[Pointer], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3411 greater-equal[Pointer] 255[Pointer], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3412 greater-equal[Pointer] 255[Pointer], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3413 greater-equal[compile-time] 255[Pointer], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:3414 greater-equal[Pointer] 255[Pointer], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3415 greater-equal[Pointer] 255[Pointer], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3416 greater-equal[Pointer] 255[Pointer], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3417 greater-equal[compile-time] 255[Pointer], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:3418 greater-equal[Pointer] 255[Pointer], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3419 greater-equal[Pointer] 255[Pointer], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3420 greater-equal[Pointer] 255[Pointer], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3421 greater-equal[compile-time] 255[Pointer], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:3422 greater-equal[Pointer] 255[Pointer], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3423 greater-equal[Pointer] 255[Pointer], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3424 greater-equal[Pointer] 255[Pointer], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3425 greater-equal[compile-time] 255[Pointer], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3426 greater-equal[Pointer] 32767[Pointer], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3427 greater-equal[Pointer] 32767[Pointer], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3428 greater-equal[Pointer] 32767[Pointer], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:3429 greater-equal[compile-time] 32767[Pointer], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32768;
endcode
varvalue r True

$overflow on
code auto:3430 greater-equal[Pointer] 32767[Pointer], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3431 greater-equal[Pointer] 32767[Pointer], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3432 greater-equal[Pointer] 32767[Pointer], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:3433 greater-equal[compile-time] 32767[Pointer], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -32767;
endcode
varvalue r True

$overflow on
code auto:3434 greater-equal[Pointer] 32767[Pointer], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3435 greater-equal[Pointer] 32767[Pointer], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3436 greater-equal[Pointer] 32767[Pointer], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:3437 greater-equal[compile-time] 32767[Pointer], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -129;
endcode
varvalue r True

$overflow on
code auto:3438 greater-equal[Pointer] 32767[Pointer], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3439 greater-equal[Pointer] 32767[Pointer], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3440 greater-equal[Pointer] 32767[Pointer], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3441 greater-equal[compile-time] 32767[Pointer], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -128;
endcode
varvalue r True

$overflow on
code auto:3442 greater-equal[Pointer] 32767[Pointer], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3443 greater-equal[Pointer] 32767[Pointer], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3444 greater-equal[Pointer] 32767[Pointer], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3445 greater-equal[compile-time] 32767[Pointer], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= -1;
endcode
varvalue r True

$overflow on
code auto:3446 greater-equal[Pointer] 32767[Pointer], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3447 greater-equal[Pointer] 32767[Pointer], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3448 greater-equal[Pointer] 32767[Pointer], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3449 greater-equal[compile-time] 32767[Pointer], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3450 greater-equal[Pointer] 32767[Pointer], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3451 greater-equal[Pointer] 32767[Pointer], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3452 greater-equal[Pointer] 32767[Pointer], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3453 greater-equal[compile-time] 32767[Pointer], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:3454 greater-equal[Pointer] 32767[Pointer], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3455 greater-equal[Pointer] 32767[Pointer], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3456 greater-equal[Pointer] 32767[Pointer], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3457 greater-equal[compile-time] 32767[Pointer], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:3458 greater-equal[Pointer] 32767[Pointer], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3459 greater-equal[Pointer] 32767[Pointer], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3460 greater-equal[Pointer] 32767[Pointer], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3461 greater-equal[compile-time] 32767[Pointer], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:3462 greater-equal[Pointer] 32767[Pointer], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3463 greater-equal[Pointer] 32767[Pointer], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3464 greater-equal[Pointer] 32767[Pointer], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3465 greater-equal[compile-time] 32767[Pointer], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3466 greater-equal[Pointer] 32768[Pointer], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3467 greater-equal[Pointer] 32768[Pointer], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3468 greater-equal[Pointer] 32768[Pointer], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:3469 greater-equal[compile-time] 32768[Pointer], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -32768;
endcode
varvalue r True

$overflow on
code auto:3470 greater-equal[Pointer] 32768[Pointer], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3471 greater-equal[Pointer] 32768[Pointer], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3472 greater-equal[Pointer] 32768[Pointer], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:3473 greater-equal[compile-time] 32768[Pointer], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -32767;
endcode
varvalue r True

$overflow on
code auto:3474 greater-equal[Pointer] 32768[Pointer], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3475 greater-equal[Pointer] 32768[Pointer], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3476 greater-equal[Pointer] 32768[Pointer], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:3477 greater-equal[compile-time] 32768[Pointer], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -129;
endcode
varvalue r True

$overflow on
code auto:3478 greater-equal[Pointer] 32768[Pointer], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3479 greater-equal[Pointer] 32768[Pointer], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3480 greater-equal[Pointer] 32768[Pointer], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3481 greater-equal[compile-time] 32768[Pointer], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -128;
endcode
varvalue r True

$overflow on
code auto:3482 greater-equal[Pointer] 32768[Pointer], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3483 greater-equal[Pointer] 32768[Pointer], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3484 greater-equal[Pointer] 32768[Pointer], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3485 greater-equal[compile-time] 32768[Pointer], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= -1;
endcode
varvalue r True

$overflow on
code auto:3486 greater-equal[Pointer] 32768[Pointer], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3487 greater-equal[Pointer] 32768[Pointer], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3488 greater-equal[Pointer] 32768[Pointer], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3489 greater-equal[compile-time] 32768[Pointer], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3490 greater-equal[Pointer] 32768[Pointer], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3491 greater-equal[Pointer] 32768[Pointer], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3492 greater-equal[Pointer] 32768[Pointer], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3493 greater-equal[compile-time] 32768[Pointer], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:3494 greater-equal[Pointer] 32768[Pointer], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3495 greater-equal[Pointer] 32768[Pointer], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3496 greater-equal[Pointer] 32768[Pointer], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3497 greater-equal[compile-time] 32768[Pointer], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:3498 greater-equal[Pointer] 32768[Pointer], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3499 greater-equal[Pointer] 32768[Pointer], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3500 greater-equal[Pointer] 32768[Pointer], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3501 greater-equal[compile-time] 32768[Pointer], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 128;
endcode
varvalue r True

$overflow on
code auto:3502 greater-equal[Pointer] 32768[Pointer], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3503 greater-equal[Pointer] 32768[Pointer], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3504 greater-equal[Pointer] 32768[Pointer], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3505 greater-equal[compile-time] 32768[Pointer], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3506 greater-equal[Pointer] 65535[Pointer], -32768[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3507 greater-equal[Pointer] 65535[Pointer], -32768[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3508 greater-equal[Pointer] 65535[Pointer], -32768[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -32768;
endcode
varvalue r True

code auto:3509 greater-equal[compile-time] 65535[Pointer], -32768[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -32768;
endcode
varvalue r True

$overflow on
code auto:3510 greater-equal[Pointer] 65535[Pointer], -32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3511 greater-equal[Pointer] 65535[Pointer], -32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3512 greater-equal[Pointer] 65535[Pointer], -32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -32767;
endcode
varvalue r True

code auto:3513 greater-equal[compile-time] 65535[Pointer], -32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -32767;
endcode
varvalue r True

$overflow on
code auto:3514 greater-equal[Pointer] 65535[Pointer], -129[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -129;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3515 greater-equal[Pointer] 65535[Pointer], -129[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -129;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3516 greater-equal[Pointer] 65535[Pointer], -129[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -129;
endcode
varvalue r True

code auto:3517 greater-equal[compile-time] 65535[Pointer], -129[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -129;
endcode
varvalue r True

$overflow on
code auto:3518 greater-equal[Pointer] 65535[Pointer], -128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3519 greater-equal[Pointer] 65535[Pointer], -128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3520 greater-equal[Pointer] 65535[Pointer], -128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -128;
endcode
varvalue r True

code auto:3521 greater-equal[compile-time] 65535[Pointer], -128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -128;
endcode
varvalue r True

$overflow on
code auto:3522 greater-equal[Pointer] 65535[Pointer], -1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = -1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3523 greater-equal[Pointer] 65535[Pointer], -1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = -1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3524 greater-equal[Pointer] 65535[Pointer], -1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= -1;
endcode
varvalue r True

code auto:3525 greater-equal[compile-time] 65535[Pointer], -1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= -1;
endcode
varvalue r True

$overflow on
code auto:3526 greater-equal[Pointer] 65535[Pointer], 0[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3527 greater-equal[Pointer] 65535[Pointer], 0[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3528 greater-equal[Pointer] 65535[Pointer], 0[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3529 greater-equal[compile-time] 65535[Pointer], 0[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3530 greater-equal[Pointer] 65535[Pointer], 1[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3531 greater-equal[Pointer] 65535[Pointer], 1[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3532 greater-equal[Pointer] 65535[Pointer], 1[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3533 greater-equal[compile-time] 65535[Pointer], 1[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:3534 greater-equal[Pointer] 65535[Pointer], 127[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3535 greater-equal[Pointer] 65535[Pointer], 127[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3536 greater-equal[Pointer] 65535[Pointer], 127[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3537 greater-equal[compile-time] 65535[Pointer], 127[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:3538 greater-equal[Pointer] 65535[Pointer], 128[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3539 greater-equal[Pointer] 65535[Pointer], 128[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3540 greater-equal[Pointer] 65535[Pointer], 128[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3541 greater-equal[compile-time] 65535[Pointer], 128[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 128;
endcode
varvalue r True

$overflow on
code auto:3542 greater-equal[Pointer] 65535[Pointer], 32767[Int16] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3543 greater-equal[Pointer] 65535[Pointer], 32767[Int16] -> [Boolean] Left immediate $overflow on
  var  b: Int16 = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3544 greater-equal[Pointer] 65535[Pointer], 32767[Int16] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3545 greater-equal[compile-time] 65535[Pointer], 32767[Int16] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3546 greater-equal[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3547 greater-equal[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3548 greater-equal[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3549 greater-equal[compile-time] 0[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3550 greater-equal[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3551 greater-equal[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3552 greater-equal[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r False

code auto:3553 greater-equal[compile-time] 0[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 1;
endcode
varvalue r False

$overflow on
code auto:3554 greater-equal[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3555 greater-equal[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3556 greater-equal[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r False

code auto:3557 greater-equal[compile-time] 0[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 127;
endcode
varvalue r False

$overflow on
code auto:3558 greater-equal[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3559 greater-equal[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3560 greater-equal[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r False

code auto:3561 greater-equal[compile-time] 0[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 128;
endcode
varvalue r False

$overflow on
code auto:3562 greater-equal[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3563 greater-equal[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3564 greater-equal[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:3565 greater-equal[compile-time] 0[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:3566 greater-equal[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3567 greater-equal[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3568 greater-equal[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3569 greater-equal[compile-time] 255[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3570 greater-equal[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3571 greater-equal[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3572 greater-equal[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3573 greater-equal[compile-time] 255[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 1;
endcode
varvalue r True

$overflow on
code auto:3574 greater-equal[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3575 greater-equal[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3576 greater-equal[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3577 greater-equal[compile-time] 255[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 127;
endcode
varvalue r True

$overflow on
code auto:3578 greater-equal[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3579 greater-equal[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3580 greater-equal[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3581 greater-equal[compile-time] 255[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 128;
endcode
varvalue r True

$overflow on
code auto:3582 greater-equal[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3583 greater-equal[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3584 greater-equal[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3585 greater-equal[compile-time] 255[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:3586 greater-equal[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3587 greater-equal[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3588 greater-equal[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3589 greater-equal[compile-time] 32767[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3590 greater-equal[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3591 greater-equal[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3592 greater-equal[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3593 greater-equal[compile-time] 32767[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 1;
endcode
varvalue r True

$overflow on
code auto:3594 greater-equal[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3595 greater-equal[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3596 greater-equal[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3597 greater-equal[compile-time] 32767[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 127;
endcode
varvalue r True

$overflow on
code auto:3598 greater-equal[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3599 greater-equal[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3600 greater-equal[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3601 greater-equal[compile-time] 32767[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 128;
endcode
varvalue r True

$overflow on
code auto:3602 greater-equal[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3603 greater-equal[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3604 greater-equal[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3605 greater-equal[compile-time] 32767[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:3606 greater-equal[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3607 greater-equal[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3608 greater-equal[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3609 greater-equal[compile-time] 32768[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3610 greater-equal[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3611 greater-equal[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3612 greater-equal[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3613 greater-equal[compile-time] 32768[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 1;
endcode
varvalue r True

$overflow on
code auto:3614 greater-equal[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3615 greater-equal[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3616 greater-equal[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3617 greater-equal[compile-time] 32768[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 127;
endcode
varvalue r True

$overflow on
code auto:3618 greater-equal[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3619 greater-equal[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3620 greater-equal[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3621 greater-equal[compile-time] 32768[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 128;
endcode
varvalue r True

$overflow on
code auto:3622 greater-equal[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3623 greater-equal[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3624 greater-equal[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3625 greater-equal[compile-time] 32768[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3626 greater-equal[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3627 greater-equal[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3628 greater-equal[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3629 greater-equal[compile-time] 65535[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3630 greater-equal[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3631 greater-equal[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3632 greater-equal[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 1;
endcode
varvalue r True

code auto:3633 greater-equal[compile-time] 65535[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 1;
endcode
varvalue r True

$overflow on
code auto:3634 greater-equal[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3635 greater-equal[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3636 greater-equal[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 127;
endcode
varvalue r True

code auto:3637 greater-equal[compile-time] 65535[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 127;
endcode
varvalue r True

$overflow on
code auto:3638 greater-equal[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3639 greater-equal[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3640 greater-equal[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 128;
endcode
varvalue r True

code auto:3641 greater-equal[compile-time] 65535[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 128;
endcode
varvalue r True

$overflow on
code auto:3642 greater-equal[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3643 greater-equal[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3644 greater-equal[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3645 greater-equal[compile-time] 65535[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3646 greater-equal[Pointer] 0[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3647 greater-equal[Pointer] 0[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3648 greater-equal[Pointer] 0[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3649 greater-equal[compile-time] 0[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3650 greater-equal[Pointer] 0[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3651 greater-equal[Pointer] 0[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3652 greater-equal[Pointer] 0[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:3653 greater-equal[compile-time] 0[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:3654 greater-equal[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3655 greater-equal[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3656 greater-equal[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3657 greater-equal[compile-time] 0[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3658 greater-equal[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3659 greater-equal[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3660 greater-equal[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3661 greater-equal[compile-time] 0[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3662 greater-equal[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3663 greater-equal[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3664 greater-equal[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3665 greater-equal[compile-time] 0[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3666 greater-equal[Pointer] 255[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3667 greater-equal[Pointer] 255[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3668 greater-equal[Pointer] 255[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3669 greater-equal[compile-time] 255[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3670 greater-equal[Pointer] 255[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3671 greater-equal[Pointer] 255[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3672 greater-equal[Pointer] 255[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3673 greater-equal[compile-time] 255[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:3674 greater-equal[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3675 greater-equal[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3676 greater-equal[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3677 greater-equal[compile-time] 255[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3678 greater-equal[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3679 greater-equal[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3680 greater-equal[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3681 greater-equal[compile-time] 255[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3682 greater-equal[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3683 greater-equal[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3684 greater-equal[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3685 greater-equal[compile-time] 255[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3686 greater-equal[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3687 greater-equal[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3688 greater-equal[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3689 greater-equal[compile-time] 32767[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3690 greater-equal[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3691 greater-equal[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3692 greater-equal[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3693 greater-equal[compile-time] 32767[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:3694 greater-equal[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3695 greater-equal[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3696 greater-equal[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3697 greater-equal[compile-time] 32767[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3698 greater-equal[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3699 greater-equal[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3700 greater-equal[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3701 greater-equal[compile-time] 32767[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3702 greater-equal[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3703 greater-equal[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3704 greater-equal[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3705 greater-equal[compile-time] 32767[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3706 greater-equal[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3707 greater-equal[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3708 greater-equal[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3709 greater-equal[compile-time] 32768[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3710 greater-equal[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3711 greater-equal[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3712 greater-equal[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3713 greater-equal[compile-time] 32768[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3714 greater-equal[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3715 greater-equal[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3716 greater-equal[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3717 greater-equal[compile-time] 32768[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3718 greater-equal[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3719 greater-equal[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3720 greater-equal[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3721 greater-equal[compile-time] 32768[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3722 greater-equal[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3723 greater-equal[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r False

code auto:3724 greater-equal[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3725 greater-equal[compile-time] 32768[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3726 greater-equal[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3727 greater-equal[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3728 greater-equal[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3729 greater-equal[compile-time] 65535[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3730 greater-equal[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3731 greater-equal[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3732 greater-equal[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3733 greater-equal[compile-time] 65535[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3734 greater-equal[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3735 greater-equal[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3736 greater-equal[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3737 greater-equal[compile-time] 65535[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3738 greater-equal[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3739 greater-equal[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3740 greater-equal[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3741 greater-equal[compile-time] 65535[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3742 greater-equal[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3743 greater-equal[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3744 greater-equal[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r True

code auto:3745 greater-equal[compile-time] 65535[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 65535;
endcode
varvalue r True

$overflow on
code auto:3746 greater-equal[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3747 greater-equal[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r True

code auto:3748 greater-equal[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3749 greater-equal[compile-time] 0[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 0;
endcode
varvalue r True

$overflow on
code auto:3750 greater-equal[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3751 greater-equal[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3752 greater-equal[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r False

code auto:3753 greater-equal[compile-time] 0[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 255;
endcode
varvalue r False

$overflow on
code auto:3754 greater-equal[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3755 greater-equal[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3756 greater-equal[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3757 greater-equal[compile-time] 0[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3758 greater-equal[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3759 greater-equal[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3760 greater-equal[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3761 greater-equal[compile-time] 0[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3762 greater-equal[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3763 greater-equal[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 >= b;
endcode
varvalue r False

code auto:3764 greater-equal[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3765 greater-equal[compile-time] 0[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3766 greater-equal[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3767 greater-equal[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3768 greater-equal[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3769 greater-equal[compile-time] 255[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 0;
endcode
varvalue r True

$overflow on
code auto:3770 greater-equal[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3771 greater-equal[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r True

code auto:3772 greater-equal[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3773 greater-equal[compile-time] 255[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 255;
endcode
varvalue r True

$overflow on
code auto:3774 greater-equal[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3775 greater-equal[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3776 greater-equal[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r False

code auto:3777 greater-equal[compile-time] 255[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32767;
endcode
varvalue r False

$overflow on
code auto:3778 greater-equal[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3779 greater-equal[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3780 greater-equal[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3781 greater-equal[compile-time] 255[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3782 greater-equal[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3783 greater-equal[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 >= b;
endcode
varvalue r False

code auto:3784 greater-equal[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3785 greater-equal[compile-time] 255[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3786 greater-equal[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3787 greater-equal[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3788 greater-equal[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3789 greater-equal[compile-time] 32767[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 0;
endcode
varvalue r True

$overflow on
code auto:3790 greater-equal[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3791 greater-equal[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3792 greater-equal[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3793 greater-equal[compile-time] 32767[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 255;
endcode
varvalue r True

$overflow on
code auto:3794 greater-equal[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3795 greater-equal[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r True

code auto:3796 greater-equal[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3797 greater-equal[compile-time] 32767[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3798 greater-equal[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3799 greater-equal[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3800 greater-equal[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r False

code auto:3801 greater-equal[compile-time] 32767[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 32768;
endcode
varvalue r False

$overflow on
code auto:3802 greater-equal[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3803 greater-equal[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 >= b;
endcode
varvalue r False

code auto:3804 greater-equal[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3805 greater-equal[compile-time] 32767[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3806 greater-equal[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3807 greater-equal[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3808 greater-equal[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3809 greater-equal[compile-time] 32768[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 0;
endcode
varvalue r True

$overflow on
code auto:3810 greater-equal[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3811 greater-equal[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3812 greater-equal[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3813 greater-equal[compile-time] 32768[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 255;
endcode
varvalue r True

$overflow on
code auto:3814 greater-equal[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3815 greater-equal[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3816 greater-equal[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3817 greater-equal[compile-time] 32768[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3818 greater-equal[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3819 greater-equal[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r True

code auto:3820 greater-equal[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3821 greater-equal[compile-time] 32768[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3822 greater-equal[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3823 greater-equal[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32768 >= b;
endcode
varvalue r False

code auto:3824 greater-equal[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r False

code auto:3825 greater-equal[compile-time] 32768[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 >= 65535;
endcode
varvalue r False

$overflow on
code auto:3826 greater-equal[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3827 greater-equal[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3828 greater-equal[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 0;
endcode
varvalue r True

code auto:3829 greater-equal[compile-time] 65535[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 0;
endcode
varvalue r True

$overflow on
code auto:3830 greater-equal[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3831 greater-equal[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3832 greater-equal[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 255;
endcode
varvalue r True

code auto:3833 greater-equal[compile-time] 65535[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 255;
endcode
varvalue r True

$overflow on
code auto:3834 greater-equal[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3835 greater-equal[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3836 greater-equal[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 32767;
endcode
varvalue r True

code auto:3837 greater-equal[compile-time] 65535[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32767;
endcode
varvalue r True

$overflow on
code auto:3838 greater-equal[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3839 greater-equal[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3840 greater-equal[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 32768;
endcode
varvalue r True

code auto:3841 greater-equal[compile-time] 65535[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 32768;
endcode
varvalue r True

$overflow on
code auto:3842 greater-equal[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3843 greater-equal[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 65535 >= b;
endcode
varvalue r True

code auto:3844 greater-equal[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a >= 65535;
endcode
varvalue r True

code auto:3845 greater-equal[compile-time] 65535[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 >= 65535;
endcode
varvalue r True

$overflow on
code auto:3846 greater-equal[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3847 greater-equal[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := False >= b;
endcode
varvalue r True

code auto:3848 greater-equal[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a >= False;
endcode
varvalue r True

code auto:3849 greater-equal[compile-time] 0[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False >= False;
endcode
varvalue r True

$overflow on
code auto:3850 greater-equal[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3851 greater-equal[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := False >= b;
endcode
varvalue r False

code auto:3852 greater-equal[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a >= True;
endcode
varvalue r False

code auto:3853 greater-equal[compile-time] 0[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False >= True;
endcode
varvalue r False

$overflow on
code auto:3854 greater-equal[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3855 greater-equal[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := True >= b;
endcode
varvalue r True

code auto:3856 greater-equal[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a >= False;
endcode
varvalue r True

code auto:3857 greater-equal[compile-time] 255[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True >= False;
endcode
varvalue r True

$overflow on
code auto:3858 greater-equal[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3859 greater-equal[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := True >= b;
endcode
varvalue r True

code auto:3860 greater-equal[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a >= True;
endcode
varvalue r True

code auto:3861 greater-equal[compile-time] 255[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True >= True;
endcode
varvalue r True

$overflow on
code auto:3862 greater-equal[Char] 0[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3863 greater-equal[Char] 0[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #0 >= b;
endcode
varvalue r True

code auto:3864 greater-equal[Char] 0[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a >= #0;
endcode
varvalue r True

code auto:3865 greater-equal[compile-time] 0[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 >= #0;
endcode
varvalue r True

$overflow on
code auto:3866 greater-equal[Char] 0[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #31;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3867 greater-equal[Char] 0[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #0 >= b;
endcode
varvalue r False

code auto:3868 greater-equal[Char] 0[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a >= #31;
endcode
varvalue r False

code auto:3869 greater-equal[compile-time] 0[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 >= #31;
endcode
varvalue r False

$overflow on
code auto:3870 greater-equal[Char] 0[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3871 greater-equal[Char] 0[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #0 >= b;
endcode
varvalue r False

code auto:3872 greater-equal[Char] 0[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a >= ' ';
endcode
varvalue r False

code auto:3873 greater-equal[compile-time] 0[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 >= ' ';
endcode
varvalue r False

$overflow on
code auto:3874 greater-equal[Char] 0[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3875 greater-equal[Char] 0[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #0 >= b;
endcode
varvalue r False

code auto:3876 greater-equal[Char] 0[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a >= #255;
endcode
varvalue r False

code auto:3877 greater-equal[compile-time] 0[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 >= #255;
endcode
varvalue r False

$overflow on
code auto:3878 greater-equal[Char] 31[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3879 greater-equal[Char] 31[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #31 >= b;
endcode
varvalue r True

code auto:3880 greater-equal[Char] 31[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a >= #0;
endcode
varvalue r True

code auto:3881 greater-equal[compile-time] 31[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 >= #0;
endcode
varvalue r True

$overflow on
code auto:3882 greater-equal[Char] 31[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #31;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3883 greater-equal[Char] 31[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #31 >= b;
endcode
varvalue r True

code auto:3884 greater-equal[Char] 31[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a >= #31;
endcode
varvalue r True

code auto:3885 greater-equal[compile-time] 31[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 >= #31;
endcode
varvalue r True

$overflow on
code auto:3886 greater-equal[Char] 31[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3887 greater-equal[Char] 31[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #31 >= b;
endcode
varvalue r False

code auto:3888 greater-equal[Char] 31[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a >= ' ';
endcode
varvalue r False

code auto:3889 greater-equal[compile-time] 31[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 >= ' ';
endcode
varvalue r False

$overflow on
code auto:3890 greater-equal[Char] 31[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3891 greater-equal[Char] 31[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #31 >= b;
endcode
varvalue r False

code auto:3892 greater-equal[Char] 31[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a >= #255;
endcode
varvalue r False

code auto:3893 greater-equal[compile-time] 31[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 >= #255;
endcode
varvalue r False

$overflow on
code auto:3894 greater-equal[Char] 32[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3895 greater-equal[Char] 32[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := ' ' >= b;
endcode
varvalue r True

code auto:3896 greater-equal[Char] 32[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a >= #0;
endcode
varvalue r True

code auto:3897 greater-equal[compile-time] 32[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' >= #0;
endcode
varvalue r True

$overflow on
code auto:3898 greater-equal[Char] 32[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #31;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3899 greater-equal[Char] 32[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := ' ' >= b;
endcode
varvalue r True

code auto:3900 greater-equal[Char] 32[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a >= #31;
endcode
varvalue r True

code auto:3901 greater-equal[compile-time] 32[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' >= #31;
endcode
varvalue r True

$overflow on
code auto:3902 greater-equal[Char] 32[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = ' ';
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3903 greater-equal[Char] 32[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := ' ' >= b;
endcode
varvalue r True

code auto:3904 greater-equal[Char] 32[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a >= ' ';
endcode
varvalue r True

code auto:3905 greater-equal[compile-time] 32[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' >= ' ';
endcode
varvalue r True

$overflow on
code auto:3906 greater-equal[Char] 32[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r False

code auto:3907 greater-equal[Char] 32[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := ' ' >= b;
endcode
varvalue r False

code auto:3908 greater-equal[Char] 32[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a >= #255;
endcode
varvalue r False

code auto:3909 greater-equal[compile-time] 32[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' >= #255;
endcode
varvalue r False

$overflow on
code auto:3910 greater-equal[Char] 255[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #0;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3911 greater-equal[Char] 255[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #255 >= b;
endcode
varvalue r True

code auto:3912 greater-equal[Char] 255[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a >= #0;
endcode
varvalue r True

code auto:3913 greater-equal[compile-time] 255[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 >= #0;
endcode
varvalue r True

$overflow on
code auto:3914 greater-equal[Char] 255[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #31;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3915 greater-equal[Char] 255[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #255 >= b;
endcode
varvalue r True

code auto:3916 greater-equal[Char] 255[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a >= #31;
endcode
varvalue r True

code auto:3917 greater-equal[compile-time] 255[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 >= #31;
endcode
varvalue r True

$overflow on
code auto:3918 greater-equal[Char] 255[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3919 greater-equal[Char] 255[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #255 >= b;
endcode
varvalue r True

code auto:3920 greater-equal[Char] 255[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a >= ' ';
endcode
varvalue r True

code auto:3921 greater-equal[compile-time] 255[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 >= ' ';
endcode
varvalue r True

$overflow on
code auto:3922 greater-equal[Char] 255[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #255;
  var  r: Boolean;
  r := a >= b;
endcode
varvalue r True

code auto:3923 greater-equal[Char] 255[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #255 >= b;
endcode
varvalue r True

code auto:3924 greater-equal[Char] 255[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a >= #255;
endcode
varvalue r True

code auto:3925 greater-equal[compile-time] 255[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 >= #255;
endcode
varvalue r True

