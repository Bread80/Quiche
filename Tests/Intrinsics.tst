;Basic operators/primitives/intrinsics;==================Intrinsics;-----Mathscode abs  var a:=abs(100)  var b:=abs(-100)  var c:= abs(32767)  var d:= abs(-32767)    var i:Integer=100  var e:=abs(i)  i:=-100  var f:=abs(i)  i:=32767  var h:= abs(i)  i:=-32767  var j:= abs(i)  i:=0  var k:=abs(i)  i:=10  var l:=abs(i+i)endcodevarvalue a 100varvalue b 100varvalue c 32767varvalue d 32767varvalue e 100varvalue f 100varvalue h 32767varvalue j 32767varvalue k 0varvalue l 20code abs overflow  var a:=-32768  var b:=abs(a)endcoderuntime overflowcode inc byte  var a:byte=10  inc(a)  var b:byte=20  inc(b,2)  var c:byte=30  inc(c,30)  var d:byte=40  inc(d,-1)  var e:byte=50  inc(e,-10)  var f:byte=255  inc(f)endcodevarvalue a 11varvalue b 22varvalue c 60varvalue d 39varvalue e 40varvalue f 0code inc int8  var a:int8=10  inc(a)  var b:int8=20  inc(b,2)  var c:int8=-40  inc(c,-70)  var d:int8=40  inc(d,-1)  var e:int8=50  inc(e,-10)  var f:int8=127  inc(f)endcodevarvalue a 11varvalue b 22varvalue c -110varvalue d 39varvalue e 40varvalue f -128code inc word  var a:word=10  inc(a)  var b:pointer=20  inc(b,2)  var c:word=30  inc(c,30)  var d:pointer=40000  inc(d,-1)  var e:word=50  inc(e,-10)  var f:pointer=65535  inc(f)endcodevarvalue a 11varvalue b 22varvalue c 60varvalue d 39999varvalue e 40varvalue f 0code inc integer  var a:integer=10  inc(a)  var b:integer=20  inc(b,2)  var c:integer=-4000  inc(c,-70)  var d:integer=40  inc(d,-1)  var e:integer=50  inc(e,-10)  var f:integer=32767  inc(f)endcodevarvalue a 11varvalue b 22varvalue c -4070varvalue d 39varvalue e 40varvalue f -32768code dec byte  var a:byte=10  dec(a)  var b:byte=20  dec(b,2)  var c:byte=30  dec(c,30)  var d:byte=40  dec(d,-1)  var e:byte=50  dec(e,-10)  var f:byte=0  dec(f)endcodevarvalue a 9varvalue b 18varvalue c 0varvalue d 41varvalue e 60varvalue f 255code dec int8  var a:int8=10  dec(a)  var b:int8=20  dec(b,2)  var c:int8=-40  dec(c,-70)  var d:int8=40  dec(d,-1)  var e:int8=50  dec(e,-10)  var f:int8=-128  dec(f)endcodevarvalue a 9varvalue b 18varvalue c 30varvalue d 41varvalue e 60varvalue f 127code dec word  var a:word=10  dec(a)  var b:pointer=20  dec(b,2)  var c:word=30  dec(c,30)  var d:pointer=40000  dec(d,-1)  var e:word=50  dec(e,-10)  var f:pointer=0  dec(f)endcodevarvalue a 9varvalue b 18varvalue c 0varvalue d 40001varvalue e 60varvalue f 65535code dec integer  var a:integer=10  dec(a)  var b:integer=20  dec(b,2)  var c:integer=-4000  dec(c,-70)  var d:integer=40  dec(d,-1)  var e:integer=50  dec(e,-10)  var f:integer=-32768  dec(f)endcodevarvalue a 9varvalue b 18varvalue c -3930varvalue d 41varvalue e 60varvalue f 32767code odd  var a:=100  var ax:=odd(a)  var b:byte=101  var bx:=odd(b)  var c:int8=-100  var cx:=odd(c)  var d:word=$80ff  var dx:=odd(d)  var dy:=not odd(d)endcodevarvalue ax falsevarvalue bx truevarvalue cx falsevarvalue dx truevarvalue dy falsecode odd branch  var a:=101  var ax:boolean  if odd(a) then    ax:=true  else    ax:=false  var ay:boolean  if not odd(a) then    ay:=true  else    ay:=falseendcodevarvalue ax truevarvalue ay true