;Pointers;==================@ (ADDRESS OF)parsetype codecode At Static Variable  var x: Integer = 2000;  var a: Pointer  a := @x  var i:Integer  i:=peek(a, Integer)endcodevarvalue i 2000code At Static Variable Argument  var x: Integer = 2000;  var i:Integer  i:=peek(@x, Integer)endcodevarvalue i 2000  parsetype declarationscode At Register as Argument  function Get(a: Pointer): Integer;register;  begin    Result := peek(a, Integer)  end  var x:Integer= 2000  var i:Integer=0;  begin    i := Get(@x);  end.endcodevarvalue i 2000code At Stack Argument  function Get(x: Integer): Integer;stack;  var a: Pointer  begin    a := @x    Result := peek(a, Integer)  end  var i:Integer=0;  begin    i := Get(2000);  end.endcodevarvalue i 2000code At Stack Argument Argument  function Get(x: Integer): Integer;stack;  begin    Result := peek(@x, Integer)  end  var i:Integer=0;  begin    i := Get(2000);  end.endcodevarvalue i 2000code At Stack as Argument  function Get(a: Pointer): Integer;stack;  begin    Result := peek(a, Integer)  end  var x:Integer= 2000  var i:Integer=0;  begin    i := Get(@x);  end.endcodevarvalue i 2000code At Stack Arguments  function Get(x, y, z: Integer): Integer;stack;  var a: Pointer  begin    a := @x    Result := peek(a, Integer)  end  var i:Integer=0;  begin    i := Get(2000, 1000, 500);  end.endcodevarvalue i 2000code At Stack Variable  function Get: Integer;stack;  var x:Integer = 2000  var y: Integer  var z: Integer  var a: Pointer  begin    a := @ x    Result := peek(a, Integer)  end  var i:Integer=0;  begin    i := Get;  end.endcodevarvalue i 2000code At Stack Variables  function Get: Integer;stack;  var a: Pointer  var y:Integer  var z:Integer  var x:Integer = 2000  begin    a := @ (x)    Result := peek(a, Integer)  end  var i:Integer=0;  begin    i := Get;  end.endcodevarvalue i 2000