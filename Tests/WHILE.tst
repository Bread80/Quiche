code Bare WHILE Loop  var x%  while x <= 10 do    inc(x)endcodevarvalue x 11code WHILE Loop  var tot%:=0  var x%  while x <= 10 do  begin    tot := tot + x    inc(x)  endendcodevarvalue tot 55parsetype declarationscode Empty 1  var x:Integer = 0  function f(a: Integer): Boolean  begin    Result := x < 10    x := a+1  end    begin    while f(x) do      ;  end.endcodevarvalue x 11parsetype declarationscode Empty 2  var x:Integer = 0  function f(a: Integer): Boolean  begin    Result := x < 10    x := a+1  end    begin    while f(x) do ;  end.endcodevarvalue x 11parsetype codecode Inline WHILE Loop  var x%  while x <= 10 do inc(x)endcodevarvalue x 11code Optional DO  var x%  while x <= 10     inc(x)endcodevarvalue x 11code Optional DO with block  var tot%:=0  var x%  while x <= 10  begin    tot := tot + x    inc(x)  endendcodevarvalue tot 55parsetype declarationscode Optional DO empty  var x:Integer = 0  function f(a: Integer): Boolean  begin	Result := x < 10    x := a+1  end    begin    while f(x)      ;  end.endcodevarvalue x 11;============VAR DECLARATIONSparsetype codecode VAR block scope 1  var tot%:=0  var x%:=1  while x<11    var y:Integer=100  y:=y+1endcodecompile VariableNotFoundcode VAR block scope 2  var tot%:=0  var x%:=1  while x<11 do var y:Integer=100  y:=y+1endcodecompile VariableNotFoundcode VAR block scope 3  var tot%:=0  var x%:=1  while x<11  begin    var y:Integer=100  end  y:=y+1endcodecompile VariableNotFound;===================LINE BREAKScode Break at WHILE  var x%  while     x <= 10 do    inc(x)endcodecompile noerrorcode Missing DO  var x%  while x <= 10 inc(x)endcodecompile DOExpectedcode Break DO  var x%  while x <= 10     do	inc(x)endcodecompile InvalidKeyword