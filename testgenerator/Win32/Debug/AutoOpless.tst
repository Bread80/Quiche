;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 less[Integer] -128[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3 less[Integer] -128[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:4 less[Integer] -128[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:5 less[compile-time] -128[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -128;
endcode
varvalue r False

$overflow on
code auto:6 less[Integer] -128[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:7 less[Integer] -128[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:8 less[Integer] -128[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r True

code auto:9 less[compile-time] -128[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -127;
endcode
varvalue r True

$overflow on
code auto:10 less[Integer] -128[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:11 less[Integer] -128[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:12 less[Integer] -128[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:13 less[compile-time] -128[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -1;
endcode
varvalue r True

$overflow on
code auto:14 less[Integer] -128[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:15 less[Integer] -128[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:16 less[Integer] -128[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:17 less[compile-time] -128[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:18 less[Integer] -128[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:19 less[Integer] -128[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:20 less[Integer] -128[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:21 less[compile-time] -128[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:22 less[Integer] -128[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:23 less[Integer] -128[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:24 less[Integer] -128[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:25 less[compile-time] -128[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:26 less[Integer] -127[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:27 less[Integer] -127[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:28 less[Integer] -127[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:29 less[compile-time] -127[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -128;
endcode
varvalue r False

$overflow on
code auto:30 less[Integer] -127[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:31 less[Integer] -127[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:32 less[Integer] -127[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:33 less[compile-time] -127[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -127;
endcode
varvalue r False

$overflow on
code auto:34 less[Integer] -127[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:35 less[Integer] -127[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:36 less[Integer] -127[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:37 less[compile-time] -127[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -1;
endcode
varvalue r True

$overflow on
code auto:38 less[Integer] -127[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:39 less[Integer] -127[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:40 less[Integer] -127[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:41 less[compile-time] -127[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 0;
endcode
varvalue r True

$overflow on
code auto:42 less[Integer] -127[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:43 less[Integer] -127[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:44 less[Integer] -127[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:45 less[compile-time] -127[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 1;
endcode
varvalue r True

$overflow on
code auto:46 less[Integer] -127[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:47 less[Integer] -127[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:48 less[Integer] -127[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:49 less[compile-time] -127[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 127;
endcode
varvalue r True

$overflow on
code auto:50 less[Integer] -1[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:51 less[Integer] -1[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:52 less[Integer] -1[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:53 less[compile-time] -1[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -128;
endcode
varvalue r False

$overflow on
code auto:54 less[Integer] -1[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:55 less[Integer] -1[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:56 less[Integer] -1[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:57 less[compile-time] -1[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -127;
endcode
varvalue r False

$overflow on
code auto:58 less[Integer] -1[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:59 less[Integer] -1[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:60 less[Integer] -1[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:61 less[compile-time] -1[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -1;
endcode
varvalue r False

$overflow on
code auto:62 less[Integer] -1[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:63 less[Integer] -1[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:64 less[Integer] -1[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:65 less[compile-time] -1[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:66 less[Integer] -1[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:67 less[Integer] -1[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:68 less[Integer] -1[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:69 less[compile-time] -1[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:70 less[Integer] -1[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:71 less[Integer] -1[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:72 less[Integer] -1[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:73 less[compile-time] -1[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:74 less[Integer] 0[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:75 less[Integer] 0[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:76 less[Integer] 0[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:77 less[compile-time] 0[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:78 less[Integer] 0[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:79 less[Integer] 0[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:80 less[Integer] 0[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:81 less[compile-time] 0[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -127;
endcode
varvalue r False

$overflow on
code auto:82 less[Integer] 0[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:83 less[Integer] 0[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:84 less[Integer] 0[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:85 less[compile-time] 0[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:86 less[Integer] 0[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:87 less[Integer] 0[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:88 less[Integer] 0[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:89 less[compile-time] 0[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:90 less[Integer] 0[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:91 less[Integer] 0[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:92 less[Integer] 0[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:93 less[compile-time] 0[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:94 less[Integer] 0[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:95 less[Integer] 0[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:96 less[Integer] 0[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:97 less[compile-time] 0[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:98 less[Integer] 1[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:99 less[Integer] 1[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:100 less[Integer] 1[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:101 less[compile-time] 1[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:102 less[Integer] 1[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:103 less[Integer] 1[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:104 less[Integer] 1[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:105 less[compile-time] 1[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -127;
endcode
varvalue r False

$overflow on
code auto:106 less[Integer] 1[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:107 less[Integer] 1[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:108 less[Integer] 1[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:109 less[compile-time] 1[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:110 less[Integer] 1[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:111 less[Integer] 1[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:112 less[Integer] 1[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:113 less[compile-time] 1[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:114 less[Integer] 1[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:115 less[Integer] 1[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:116 less[Integer] 1[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:117 less[compile-time] 1[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:118 less[Integer] 1[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:119 less[Integer] 1[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:120 less[Integer] 1[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:121 less[compile-time] 1[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:122 less[Integer] 127[Int8], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:123 less[Integer] 127[Int8], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:124 less[Integer] 127[Int8], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:125 less[compile-time] 127[Int8], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:126 less[Integer] 127[Int8], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:127 less[Integer] 127[Int8], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:128 less[Integer] 127[Int8], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:129 less[compile-time] 127[Int8], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -127;
endcode
varvalue r False

$overflow on
code auto:130 less[Integer] 127[Int8], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:131 less[Integer] 127[Int8], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:132 less[Integer] 127[Int8], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:133 less[compile-time] 127[Int8], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:134 less[Integer] 127[Int8], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:135 less[Integer] 127[Int8], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:136 less[Integer] 127[Int8], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:137 less[compile-time] 127[Int8], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:138 less[Integer] 127[Int8], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:139 less[Integer] 127[Int8], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:140 less[Integer] 127[Int8], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:141 less[compile-time] 127[Int8], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:142 less[Integer] 127[Int8], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:143 less[Integer] 127[Int8], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:144 less[Integer] 127[Int8], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:145 less[compile-time] 127[Int8], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:146 less[Integer] -128[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:147 less[Integer] -128[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:148 less[Integer] -128[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:149 less[compile-time] -128[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -32768;
endcode
varvalue r False

$overflow on
code auto:150 less[Integer] -128[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:151 less[Integer] -128[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:152 less[Integer] -128[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:153 less[compile-time] -128[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -32767;
endcode
varvalue r False

$overflow on
code auto:154 less[Integer] -128[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:155 less[Integer] -128[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:156 less[Integer] -128[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:157 less[compile-time] -128[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -129;
endcode
varvalue r False

$overflow on
code auto:158 less[Integer] -128[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:159 less[Integer] -128[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:160 less[Integer] -128[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:161 less[compile-time] -128[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -128;
endcode
varvalue r False

$overflow on
code auto:162 less[Integer] -128[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:163 less[Integer] -128[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:164 less[Integer] -128[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:165 less[compile-time] -128[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -1;
endcode
varvalue r True

$overflow on
code auto:166 less[Integer] -128[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:167 less[Integer] -128[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:168 less[Integer] -128[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:169 less[compile-time] -128[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:170 less[Integer] -128[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:171 less[Integer] -128[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:172 less[Integer] -128[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:173 less[compile-time] -128[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:174 less[Integer] -128[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:175 less[Integer] -128[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:176 less[Integer] -128[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:177 less[compile-time] -128[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:178 less[Integer] -128[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:179 less[Integer] -128[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:180 less[Integer] -128[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:181 less[compile-time] -128[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 128;
endcode
varvalue r True

$overflow on
code auto:182 less[Integer] -128[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:183 less[Integer] -128[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:184 less[Integer] -128[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:185 less[compile-time] -128[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:186 less[Integer] -127[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:187 less[Integer] -127[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:188 less[Integer] -127[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:189 less[compile-time] -127[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -32768;
endcode
varvalue r False

$overflow on
code auto:190 less[Integer] -127[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:191 less[Integer] -127[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:192 less[Integer] -127[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:193 less[compile-time] -127[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -32767;
endcode
varvalue r False

$overflow on
code auto:194 less[Integer] -127[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:195 less[Integer] -127[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:196 less[Integer] -127[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:197 less[compile-time] -127[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -129;
endcode
varvalue r False

$overflow on
code auto:198 less[Integer] -127[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:199 less[Integer] -127[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r False

code auto:200 less[Integer] -127[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:201 less[compile-time] -127[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -128;
endcode
varvalue r False

$overflow on
code auto:202 less[Integer] -127[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:203 less[Integer] -127[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:204 less[Integer] -127[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:205 less[compile-time] -127[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < -1;
endcode
varvalue r True

$overflow on
code auto:206 less[Integer] -127[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:207 less[Integer] -127[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:208 less[Integer] -127[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:209 less[compile-time] -127[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 0;
endcode
varvalue r True

$overflow on
code auto:210 less[Integer] -127[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:211 less[Integer] -127[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:212 less[Integer] -127[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:213 less[compile-time] -127[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 1;
endcode
varvalue r True

$overflow on
code auto:214 less[Integer] -127[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:215 less[Integer] -127[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:216 less[Integer] -127[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:217 less[compile-time] -127[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 127;
endcode
varvalue r True

$overflow on
code auto:218 less[Integer] -127[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:219 less[Integer] -127[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:220 less[Integer] -127[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:221 less[compile-time] -127[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 128;
endcode
varvalue r True

$overflow on
code auto:222 less[Integer] -127[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:223 less[Integer] -127[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:224 less[Integer] -127[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:225 less[compile-time] -127[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 32767;
endcode
varvalue r True

$overflow on
code auto:226 less[Integer] -1[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:227 less[Integer] -1[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:228 less[Integer] -1[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:229 less[compile-time] -1[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -32768;
endcode
varvalue r False

$overflow on
code auto:230 less[Integer] -1[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:231 less[Integer] -1[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:232 less[Integer] -1[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:233 less[compile-time] -1[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -32767;
endcode
varvalue r False

$overflow on
code auto:234 less[Integer] -1[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:235 less[Integer] -1[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:236 less[Integer] -1[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:237 less[compile-time] -1[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -129;
endcode
varvalue r False

$overflow on
code auto:238 less[Integer] -1[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:239 less[Integer] -1[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:240 less[Integer] -1[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:241 less[compile-time] -1[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -128;
endcode
varvalue r False

$overflow on
code auto:242 less[Integer] -1[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:243 less[Integer] -1[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:244 less[Integer] -1[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:245 less[compile-time] -1[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -1;
endcode
varvalue r False

$overflow on
code auto:246 less[Integer] -1[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:247 less[Integer] -1[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:248 less[Integer] -1[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:249 less[compile-time] -1[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:250 less[Integer] -1[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:251 less[Integer] -1[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:252 less[Integer] -1[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:253 less[compile-time] -1[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:254 less[Integer] -1[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:255 less[Integer] -1[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:256 less[Integer] -1[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:257 less[compile-time] -1[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:258 less[Integer] -1[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:259 less[Integer] -1[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:260 less[Integer] -1[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:261 less[compile-time] -1[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 128;
endcode
varvalue r True

$overflow on
code auto:262 less[Integer] -1[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:263 less[Integer] -1[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:264 less[Integer] -1[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:265 less[compile-time] -1[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:266 less[Integer] 0[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:267 less[Integer] 0[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:268 less[Integer] 0[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:269 less[compile-time] 0[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32768;
endcode
varvalue r False

$overflow on
code auto:270 less[Integer] 0[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:271 less[Integer] 0[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:272 less[Integer] 0[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:273 less[compile-time] 0[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32767;
endcode
varvalue r False

$overflow on
code auto:274 less[Integer] 0[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:275 less[Integer] 0[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:276 less[Integer] 0[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:277 less[compile-time] 0[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -129;
endcode
varvalue r False

$overflow on
code auto:278 less[Integer] 0[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:279 less[Integer] 0[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:280 less[Integer] 0[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:281 less[compile-time] 0[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:282 less[Integer] 0[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:283 less[Integer] 0[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:284 less[Integer] 0[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:285 less[compile-time] 0[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:286 less[Integer] 0[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:287 less[Integer] 0[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:288 less[Integer] 0[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:289 less[compile-time] 0[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:290 less[Integer] 0[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:291 less[Integer] 0[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:292 less[Integer] 0[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:293 less[compile-time] 0[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:294 less[Integer] 0[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:295 less[Integer] 0[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:296 less[Integer] 0[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:297 less[compile-time] 0[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:298 less[Integer] 0[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:299 less[Integer] 0[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:300 less[Integer] 0[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:301 less[compile-time] 0[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:302 less[Integer] 0[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:303 less[Integer] 0[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:304 less[Integer] 0[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:305 less[compile-time] 0[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:306 less[Integer] 1[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:307 less[Integer] 1[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:308 less[Integer] 1[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:309 less[compile-time] 1[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32768;
endcode
varvalue r False

$overflow on
code auto:310 less[Integer] 1[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:311 less[Integer] 1[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:312 less[Integer] 1[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:313 less[compile-time] 1[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32767;
endcode
varvalue r False

$overflow on
code auto:314 less[Integer] 1[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:315 less[Integer] 1[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:316 less[Integer] 1[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:317 less[compile-time] 1[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -129;
endcode
varvalue r False

$overflow on
code auto:318 less[Integer] 1[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:319 less[Integer] 1[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:320 less[Integer] 1[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:321 less[compile-time] 1[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:322 less[Integer] 1[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:323 less[Integer] 1[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:324 less[Integer] 1[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:325 less[compile-time] 1[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:326 less[Integer] 1[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:327 less[Integer] 1[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:328 less[Integer] 1[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:329 less[compile-time] 1[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:330 less[Integer] 1[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:331 less[Integer] 1[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:332 less[Integer] 1[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:333 less[compile-time] 1[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:334 less[Integer] 1[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:335 less[Integer] 1[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:336 less[Integer] 1[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:337 less[compile-time] 1[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:338 less[Integer] 1[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:339 less[Integer] 1[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:340 less[Integer] 1[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:341 less[compile-time] 1[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:342 less[Integer] 1[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:343 less[Integer] 1[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:344 less[Integer] 1[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:345 less[compile-time] 1[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:346 less[Integer] 127[Int8], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:347 less[Integer] 127[Int8], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:348 less[Integer] 127[Int8], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:349 less[compile-time] 127[Int8], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32768;
endcode
varvalue r False

$overflow on
code auto:350 less[Integer] 127[Int8], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:351 less[Integer] 127[Int8], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:352 less[Integer] 127[Int8], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:353 less[compile-time] 127[Int8], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32767;
endcode
varvalue r False

$overflow on
code auto:354 less[Integer] 127[Int8], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:355 less[Integer] 127[Int8], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:356 less[Integer] 127[Int8], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:357 less[compile-time] 127[Int8], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -129;
endcode
varvalue r False

$overflow on
code auto:358 less[Integer] 127[Int8], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:359 less[Integer] 127[Int8], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:360 less[Integer] 127[Int8], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:361 less[compile-time] 127[Int8], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:362 less[Integer] 127[Int8], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:363 less[Integer] 127[Int8], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:364 less[Integer] 127[Int8], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:365 less[compile-time] 127[Int8], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:366 less[Integer] 127[Int8], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:367 less[Integer] 127[Int8], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:368 less[Integer] 127[Int8], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:369 less[compile-time] 127[Int8], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:370 less[Integer] 127[Int8], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:371 less[Integer] 127[Int8], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:372 less[Integer] 127[Int8], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:373 less[compile-time] 127[Int8], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:374 less[Integer] 127[Int8], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:375 less[Integer] 127[Int8], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:376 less[Integer] 127[Int8], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:377 less[compile-time] 127[Int8], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:378 less[Integer] 127[Int8], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:379 less[Integer] 127[Int8], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:380 less[Integer] 127[Int8], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:381 less[compile-time] 127[Int8], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:382 less[Integer] 127[Int8], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:383 less[Integer] 127[Int8], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:384 less[Integer] 127[Int8], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:385 less[compile-time] 127[Int8], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:386 less[Integer] -128[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:387 less[Integer] -128[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:388 less[Integer] -128[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:389 less[compile-time] -128[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:390 less[Integer] -128[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:391 less[Integer] -128[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:392 less[Integer] -128[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:393 less[compile-time] -128[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:394 less[Integer] -128[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:395 less[Integer] -128[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:396 less[Integer] -128[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:397 less[compile-time] -128[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:398 less[Integer] -128[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:399 less[Integer] -128[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:400 less[Integer] -128[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:401 less[compile-time] -128[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 128;
endcode
varvalue r True

$overflow on
code auto:402 less[Integer] -128[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:403 less[Integer] -128[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:404 less[Integer] -128[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:405 less[compile-time] -128[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:406 less[Integer] -127[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:407 less[Integer] -127[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:408 less[Integer] -127[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:409 less[compile-time] -127[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 0;
endcode
varvalue r True

$overflow on
code auto:410 less[Integer] -127[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:411 less[Integer] -127[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:412 less[Integer] -127[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:413 less[compile-time] -127[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 1;
endcode
varvalue r True

$overflow on
code auto:414 less[Integer] -127[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:415 less[Integer] -127[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:416 less[Integer] -127[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:417 less[compile-time] -127[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 127;
endcode
varvalue r True

$overflow on
code auto:418 less[Integer] -127[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:419 less[Integer] -127[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:420 less[Integer] -127[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:421 less[compile-time] -127[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 128;
endcode
varvalue r True

$overflow on
code auto:422 less[Integer] -127[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:423 less[Integer] -127[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:424 less[Integer] -127[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:425 less[compile-time] -127[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 255;
endcode
varvalue r True

$overflow on
code auto:426 less[Integer] -1[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:427 less[Integer] -1[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:428 less[Integer] -1[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:429 less[compile-time] -1[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:430 less[Integer] -1[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:431 less[Integer] -1[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:432 less[Integer] -1[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:433 less[compile-time] -1[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:434 less[Integer] -1[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:435 less[Integer] -1[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:436 less[Integer] -1[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:437 less[compile-time] -1[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:438 less[Integer] -1[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:439 less[Integer] -1[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:440 less[Integer] -1[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:441 less[compile-time] -1[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 128;
endcode
varvalue r True

$overflow on
code auto:442 less[Integer] -1[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:443 less[Integer] -1[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:444 less[Integer] -1[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:445 less[compile-time] -1[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:446 less[Integer] 0[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:447 less[Integer] 0[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:448 less[Integer] 0[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:449 less[compile-time] 0[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:450 less[Integer] 0[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:451 less[Integer] 0[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:452 less[Integer] 0[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:453 less[compile-time] 0[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:454 less[Integer] 0[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:455 less[Integer] 0[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:456 less[Integer] 0[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:457 less[compile-time] 0[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:458 less[Integer] 0[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:459 less[Integer] 0[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:460 less[Integer] 0[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:461 less[compile-time] 0[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:462 less[Integer] 0[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:463 less[Integer] 0[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:464 less[Integer] 0[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:465 less[compile-time] 0[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:466 less[Integer] 1[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:467 less[Integer] 1[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:468 less[Integer] 1[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:469 less[compile-time] 1[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:470 less[Integer] 1[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:471 less[Integer] 1[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:472 less[Integer] 1[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:473 less[compile-time] 1[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:474 less[Integer] 1[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:475 less[Integer] 1[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:476 less[Integer] 1[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:477 less[compile-time] 1[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:478 less[Integer] 1[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:479 less[Integer] 1[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:480 less[Integer] 1[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:481 less[compile-time] 1[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:482 less[Integer] 1[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:483 less[Integer] 1[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:484 less[Integer] 1[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:485 less[compile-time] 1[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:486 less[Integer] 127[Int8], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:487 less[Integer] 127[Int8], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:488 less[Integer] 127[Int8], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:489 less[compile-time] 127[Int8], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:490 less[Integer] 127[Int8], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:491 less[Integer] 127[Int8], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:492 less[Integer] 127[Int8], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:493 less[compile-time] 127[Int8], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:494 less[Integer] 127[Int8], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:495 less[Integer] 127[Int8], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:496 less[Integer] 127[Int8], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:497 less[compile-time] 127[Int8], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:498 less[Integer] 127[Int8], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:499 less[Integer] 127[Int8], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:500 less[Integer] 127[Int8], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:501 less[compile-time] 127[Int8], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:502 less[Integer] 127[Int8], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:503 less[Integer] 127[Int8], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:504 less[Integer] 127[Int8], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:505 less[compile-time] 127[Int8], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:506 less[Integer] -128[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:507 less[Integer] -128[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:508 less[Integer] -128[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:509 less[compile-time] -128[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:510 less[Integer] -128[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:511 less[Integer] -128[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:512 less[Integer] -128[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:513 less[compile-time] -128[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:514 less[Integer] -128[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:515 less[Integer] -128[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:516 less[Integer] -128[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:517 less[compile-time] -128[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:518 less[Integer] -128[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:519 less[Integer] -128[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:520 less[Integer] -128[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:521 less[compile-time] -128[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32768;
endcode
varvalue r True

$overflow on
code auto:522 less[Integer] -128[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:523 less[Integer] -128[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:524 less[Integer] -128[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:525 less[compile-time] -128[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 65535;
endcode
varvalue r True

$overflow on
code auto:526 less[Integer] -127[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:527 less[Integer] -127[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:528 less[Integer] -127[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:529 less[compile-time] -127[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 0;
endcode
varvalue r True

$overflow on
code auto:530 less[Integer] -127[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:531 less[Integer] -127[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:532 less[Integer] -127[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:533 less[compile-time] -127[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 255;
endcode
varvalue r True

$overflow on
code auto:534 less[Integer] -127[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:535 less[Integer] -127[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:536 less[Integer] -127[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:537 less[compile-time] -127[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 32767;
endcode
varvalue r True

$overflow on
code auto:538 less[Integer] -127[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:539 less[Integer] -127[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:540 less[Integer] -127[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:541 less[compile-time] -127[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 32768;
endcode
varvalue r True

$overflow on
code auto:542 less[Integer] -127[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:543 less[Integer] -127[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:544 less[Integer] -127[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:545 less[compile-time] -127[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 65535;
endcode
varvalue r True

$overflow on
code auto:546 less[Integer] -1[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:547 less[Integer] -1[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:548 less[Integer] -1[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:549 less[compile-time] -1[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:550 less[Integer] -1[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:551 less[Integer] -1[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:552 less[Integer] -1[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:553 less[compile-time] -1[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:554 less[Integer] -1[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:555 less[Integer] -1[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:556 less[Integer] -1[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:557 less[compile-time] -1[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:558 less[Integer] -1[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:559 less[Integer] -1[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:560 less[Integer] -1[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:561 less[compile-time] -1[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32768;
endcode
varvalue r True

$overflow on
code auto:562 less[Integer] -1[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:563 less[Integer] -1[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:564 less[Integer] -1[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:565 less[compile-time] -1[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 65535;
endcode
varvalue r True

$overflow on
code auto:566 less[Integer] 0[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:567 less[Integer] 0[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:568 less[Integer] 0[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:569 less[compile-time] 0[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:570 less[Integer] 0[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:571 less[Integer] 0[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:572 less[Integer] 0[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:573 less[compile-time] 0[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:574 less[Integer] 0[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:575 less[Integer] 0[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:576 less[Integer] 0[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:577 less[compile-time] 0[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:578 less[Integer] 0[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:579 less[Integer] 0[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:580 less[Integer] 0[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:581 less[compile-time] 0[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:582 less[Integer] 0[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:583 less[Integer] 0[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:584 less[Integer] 0[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:585 less[compile-time] 0[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:586 less[Integer] 1[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:587 less[Integer] 1[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:588 less[Integer] 1[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:589 less[compile-time] 1[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:590 less[Integer] 1[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:591 less[Integer] 1[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:592 less[Integer] 1[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:593 less[compile-time] 1[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:594 less[Integer] 1[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:595 less[Integer] 1[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:596 less[Integer] 1[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:597 less[compile-time] 1[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:598 less[Integer] 1[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:599 less[Integer] 1[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:600 less[Integer] 1[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:601 less[compile-time] 1[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:602 less[Integer] 1[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:603 less[Integer] 1[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:604 less[Integer] 1[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:605 less[compile-time] 1[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:606 less[Integer] 127[Int8], 0[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:607 less[Integer] 127[Int8], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:608 less[Integer] 127[Int8], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:609 less[compile-time] 127[Int8], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:610 less[Integer] 127[Int8], 255[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:611 less[Integer] 127[Int8], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:612 less[Integer] 127[Int8], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:613 less[compile-time] 127[Int8], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:614 less[Integer] 127[Int8], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:615 less[Integer] 127[Int8], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:616 less[Integer] 127[Int8], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:617 less[compile-time] 127[Int8], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:618 less[Integer] 127[Int8], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:619 less[Integer] 127[Int8], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:620 less[Integer] 127[Int8], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:621 less[compile-time] 127[Int8], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:622 less[Integer] 127[Int8], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:623 less[Integer] 127[Int8], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:624 less[Integer] 127[Int8], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:625 less[compile-time] 127[Int8], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:626 less[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:627 less[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:628 less[Pointer] -128[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:629 less[compile-time] -128[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:630 less[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:631 less[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:632 less[Pointer] -128[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:633 less[compile-time] -128[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:634 less[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:635 less[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:636 less[Pointer] -128[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:637 less[compile-time] -128[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:638 less[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:639 less[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:640 less[Pointer] -128[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:641 less[compile-time] -128[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32768;
endcode
varvalue r True

$overflow on
code auto:642 less[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:643 less[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:644 less[Pointer] -128[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:645 less[compile-time] -128[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 65535;
endcode
varvalue r True

$overflow on
code auto:646 less[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:647 less[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:648 less[Pointer] -127[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:649 less[compile-time] -127[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 0;
endcode
varvalue r True

$overflow on
code auto:650 less[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:651 less[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:652 less[Pointer] -127[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:653 less[compile-time] -127[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 255;
endcode
varvalue r True

$overflow on
code auto:654 less[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:655 less[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:656 less[Pointer] -127[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:657 less[compile-time] -127[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 32767;
endcode
varvalue r True

$overflow on
code auto:658 less[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:659 less[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:660 less[Pointer] -127[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:661 less[compile-time] -127[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 32768;
endcode
varvalue r True

$overflow on
code auto:662 less[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:663 less[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -127 < b;
endcode
varvalue r True

code auto:664 less[Pointer] -127[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:665 less[compile-time] -127[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -127 < 65535;
endcode
varvalue r True

$overflow on
code auto:666 less[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:667 less[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:668 less[Pointer] -1[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:669 less[compile-time] -1[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:670 less[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:671 less[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:672 less[Pointer] -1[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:673 less[compile-time] -1[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:674 less[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:675 less[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:676 less[Pointer] -1[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:677 less[compile-time] -1[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:678 less[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:679 less[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:680 less[Pointer] -1[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:681 less[compile-time] -1[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32768;
endcode
varvalue r True

$overflow on
code auto:682 less[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:683 less[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:684 less[Pointer] -1[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = -1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:685 less[compile-time] -1[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 65535;
endcode
varvalue r True

$overflow on
code auto:686 less[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:687 less[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:688 less[Pointer] 0[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:689 less[compile-time] 0[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:690 less[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:691 less[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:692 less[Pointer] 0[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:693 less[compile-time] 0[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:694 less[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:695 less[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:696 less[Pointer] 0[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:697 less[compile-time] 0[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:698 less[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:699 less[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:700 less[Pointer] 0[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:701 less[compile-time] 0[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:702 less[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:703 less[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:704 less[Pointer] 0[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:705 less[compile-time] 0[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:706 less[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:707 less[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:708 less[Pointer] 1[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:709 less[compile-time] 1[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:710 less[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:711 less[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:712 less[Pointer] 1[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:713 less[compile-time] 1[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:714 less[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:715 less[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:716 less[Pointer] 1[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:717 less[compile-time] 1[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:718 less[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:719 less[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:720 less[Pointer] 1[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:721 less[compile-time] 1[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:722 less[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:723 less[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:724 less[Pointer] 1[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:725 less[compile-time] 1[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:726 less[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:727 less[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:728 less[Pointer] 127[Int8], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:729 less[compile-time] 127[Int8], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:730 less[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:731 less[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:732 less[Pointer] 127[Int8], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:733 less[compile-time] 127[Int8], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:734 less[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:735 less[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:736 less[Pointer] 127[Int8], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:737 less[compile-time] 127[Int8], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:738 less[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:739 less[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:740 less[Pointer] 127[Int8], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:741 less[compile-time] 127[Int8], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:742 less[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:743 less[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:744 less[Pointer] 127[Int8], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Int8 = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:745 less[compile-time] 127[Int8], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:746 less[Integer] -32768[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:747 less[Integer] -32768[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:748 less[Integer] -32768[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:749 less[compile-time] -32768[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -128;
endcode
varvalue r True

$overflow on
code auto:750 less[Integer] -32768[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:751 less[Integer] -32768[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:752 less[Integer] -32768[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r True

code auto:753 less[compile-time] -32768[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -127;
endcode
varvalue r True

$overflow on
code auto:754 less[Integer] -32768[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:755 less[Integer] -32768[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:756 less[Integer] -32768[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:757 less[compile-time] -32768[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -1;
endcode
varvalue r True

$overflow on
code auto:758 less[Integer] -32768[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:759 less[Integer] -32768[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:760 less[Integer] -32768[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:761 less[compile-time] -32768[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 0;
endcode
varvalue r True

$overflow on
code auto:762 less[Integer] -32768[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:763 less[Integer] -32768[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:764 less[Integer] -32768[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:765 less[compile-time] -32768[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 1;
endcode
varvalue r True

$overflow on
code auto:766 less[Integer] -32768[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:767 less[Integer] -32768[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:768 less[Integer] -32768[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:769 less[compile-time] -32768[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 127;
endcode
varvalue r True

$overflow on
code auto:770 less[Integer] -32767[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:771 less[Integer] -32767[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:772 less[Integer] -32767[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:773 less[compile-time] -32767[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -128;
endcode
varvalue r True

$overflow on
code auto:774 less[Integer] -32767[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:775 less[Integer] -32767[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:776 less[Integer] -32767[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r True

code auto:777 less[compile-time] -32767[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -127;
endcode
varvalue r True

$overflow on
code auto:778 less[Integer] -32767[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:779 less[Integer] -32767[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:780 less[Integer] -32767[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:781 less[compile-time] -32767[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -1;
endcode
varvalue r True

$overflow on
code auto:782 less[Integer] -32767[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:783 less[Integer] -32767[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:784 less[Integer] -32767[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:785 less[compile-time] -32767[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 0;
endcode
varvalue r True

$overflow on
code auto:786 less[Integer] -32767[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:787 less[Integer] -32767[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:788 less[Integer] -32767[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:789 less[compile-time] -32767[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 1;
endcode
varvalue r True

$overflow on
code auto:790 less[Integer] -32767[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:791 less[Integer] -32767[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:792 less[Integer] -32767[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:793 less[compile-time] -32767[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 127;
endcode
varvalue r True

$overflow on
code auto:794 less[Integer] -129[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:795 less[Integer] -129[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:796 less[Integer] -129[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:797 less[compile-time] -129[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -128;
endcode
varvalue r True

$overflow on
code auto:798 less[Integer] -129[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:799 less[Integer] -129[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:800 less[Integer] -129[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r True

code auto:801 less[compile-time] -129[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -127;
endcode
varvalue r True

$overflow on
code auto:802 less[Integer] -129[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:803 less[Integer] -129[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:804 less[Integer] -129[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:805 less[compile-time] -129[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -1;
endcode
varvalue r True

$overflow on
code auto:806 less[Integer] -129[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:807 less[Integer] -129[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:808 less[Integer] -129[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:809 less[compile-time] -129[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 0;
endcode
varvalue r True

$overflow on
code auto:810 less[Integer] -129[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:811 less[Integer] -129[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:812 less[Integer] -129[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:813 less[compile-time] -129[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 1;
endcode
varvalue r True

$overflow on
code auto:814 less[Integer] -129[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:815 less[Integer] -129[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:816 less[Integer] -129[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:817 less[compile-time] -129[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 127;
endcode
varvalue r True

$overflow on
code auto:818 less[Integer] -128[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:819 less[Integer] -128[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:820 less[Integer] -128[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:821 less[compile-time] -128[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -128;
endcode
varvalue r False

$overflow on
code auto:822 less[Integer] -128[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:823 less[Integer] -128[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:824 less[Integer] -128[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r True

code auto:825 less[compile-time] -128[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -127;
endcode
varvalue r True

$overflow on
code auto:826 less[Integer] -128[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:827 less[Integer] -128[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:828 less[Integer] -128[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:829 less[compile-time] -128[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -1;
endcode
varvalue r True

$overflow on
code auto:830 less[Integer] -128[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:831 less[Integer] -128[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:832 less[Integer] -128[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:833 less[compile-time] -128[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:834 less[Integer] -128[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:835 less[Integer] -128[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:836 less[Integer] -128[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:837 less[compile-time] -128[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:838 less[Integer] -128[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:839 less[Integer] -128[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:840 less[Integer] -128[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:841 less[compile-time] -128[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:842 less[Integer] -1[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:843 less[Integer] -1[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:844 less[Integer] -1[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:845 less[compile-time] -1[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -128;
endcode
varvalue r False

$overflow on
code auto:846 less[Integer] -1[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:847 less[Integer] -1[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:848 less[Integer] -1[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:849 less[compile-time] -1[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -127;
endcode
varvalue r False

$overflow on
code auto:850 less[Integer] -1[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:851 less[Integer] -1[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:852 less[Integer] -1[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:853 less[compile-time] -1[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -1;
endcode
varvalue r False

$overflow on
code auto:854 less[Integer] -1[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:855 less[Integer] -1[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:856 less[Integer] -1[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:857 less[compile-time] -1[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:858 less[Integer] -1[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:859 less[Integer] -1[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:860 less[Integer] -1[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:861 less[compile-time] -1[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:862 less[Integer] -1[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:863 less[Integer] -1[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:864 less[Integer] -1[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:865 less[compile-time] -1[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:866 less[Integer] 0[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:867 less[Integer] 0[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:868 less[Integer] 0[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:869 less[compile-time] 0[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:870 less[Integer] 0[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:871 less[Integer] 0[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:872 less[Integer] 0[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:873 less[compile-time] 0[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -127;
endcode
varvalue r False

$overflow on
code auto:874 less[Integer] 0[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:875 less[Integer] 0[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:876 less[Integer] 0[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:877 less[compile-time] 0[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:878 less[Integer] 0[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:879 less[Integer] 0[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:880 less[Integer] 0[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:881 less[compile-time] 0[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:882 less[Integer] 0[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:883 less[Integer] 0[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:884 less[Integer] 0[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:885 less[compile-time] 0[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:886 less[Integer] 0[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:887 less[Integer] 0[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:888 less[Integer] 0[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:889 less[compile-time] 0[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:890 less[Integer] 1[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:891 less[Integer] 1[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:892 less[Integer] 1[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:893 less[compile-time] 1[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:894 less[Integer] 1[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:895 less[Integer] 1[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:896 less[Integer] 1[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:897 less[compile-time] 1[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -127;
endcode
varvalue r False

$overflow on
code auto:898 less[Integer] 1[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:899 less[Integer] 1[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:900 less[Integer] 1[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:901 less[compile-time] 1[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:902 less[Integer] 1[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:903 less[Integer] 1[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:904 less[Integer] 1[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:905 less[compile-time] 1[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:906 less[Integer] 1[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:907 less[Integer] 1[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:908 less[Integer] 1[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:909 less[compile-time] 1[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:910 less[Integer] 1[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:911 less[Integer] 1[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:912 less[Integer] 1[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:913 less[compile-time] 1[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:914 less[Integer] 127[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:915 less[Integer] 127[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:916 less[Integer] 127[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:917 less[compile-time] 127[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:918 less[Integer] 127[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:919 less[Integer] 127[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:920 less[Integer] 127[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:921 less[compile-time] 127[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -127;
endcode
varvalue r False

$overflow on
code auto:922 less[Integer] 127[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:923 less[Integer] 127[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:924 less[Integer] 127[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:925 less[compile-time] 127[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:926 less[Integer] 127[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:927 less[Integer] 127[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:928 less[Integer] 127[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:929 less[compile-time] 127[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:930 less[Integer] 127[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:931 less[Integer] 127[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:932 less[Integer] 127[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:933 less[compile-time] 127[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:934 less[Integer] 127[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:935 less[Integer] 127[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:936 less[Integer] 127[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:937 less[compile-time] 127[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:938 less[Integer] 128[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:939 less[Integer] 128[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:940 less[Integer] 128[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:941 less[compile-time] 128[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -128;
endcode
varvalue r False

$overflow on
code auto:942 less[Integer] 128[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:943 less[Integer] 128[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:944 less[Integer] 128[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:945 less[compile-time] 128[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -127;
endcode
varvalue r False

$overflow on
code auto:946 less[Integer] 128[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:947 less[Integer] 128[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:948 less[Integer] 128[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:949 less[compile-time] 128[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -1;
endcode
varvalue r False

$overflow on
code auto:950 less[Integer] 128[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:951 less[Integer] 128[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:952 less[Integer] 128[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:953 less[compile-time] 128[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:954 less[Integer] 128[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:955 less[Integer] 128[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:956 less[Integer] 128[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:957 less[compile-time] 128[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:958 less[Integer] 128[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:959 less[Integer] 128[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:960 less[Integer] 128[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:961 less[compile-time] 128[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:962 less[Integer] 32767[Integer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:963 less[Integer] 32767[Integer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:964 less[Integer] 32767[Integer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:965 less[compile-time] 32767[Integer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:966 less[Integer] 32767[Integer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:967 less[Integer] 32767[Integer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:968 less[Integer] 32767[Integer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:969 less[compile-time] 32767[Integer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -127;
endcode
varvalue r False

$overflow on
code auto:970 less[Integer] 32767[Integer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:971 less[Integer] 32767[Integer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:972 less[Integer] 32767[Integer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:973 less[compile-time] 32767[Integer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:974 less[Integer] 32767[Integer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:975 less[Integer] 32767[Integer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:976 less[Integer] 32767[Integer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:977 less[compile-time] 32767[Integer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:978 less[Integer] 32767[Integer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:979 less[Integer] 32767[Integer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:980 less[Integer] 32767[Integer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:981 less[compile-time] 32767[Integer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:982 less[Integer] 32767[Integer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:983 less[Integer] 32767[Integer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:984 less[Integer] 32767[Integer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:985 less[compile-time] 32767[Integer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:986 less[Integer] -32768[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:987 less[Integer] -32768[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r False

code auto:988 less[Integer] -32768[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:989 less[compile-time] -32768[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -32768;
endcode
varvalue r False

$overflow on
code auto:990 less[Integer] -32768[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:991 less[Integer] -32768[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:992 less[Integer] -32768[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r True

code auto:993 less[compile-time] -32768[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -32767;
endcode
varvalue r True

$overflow on
code auto:994 less[Integer] -32768[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:995 less[Integer] -32768[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:996 less[Integer] -32768[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r True

code auto:997 less[compile-time] -32768[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -129;
endcode
varvalue r True

$overflow on
code auto:998 less[Integer] -32768[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:999 less[Integer] -32768[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1000 less[Integer] -32768[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:1001 less[compile-time] -32768[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -128;
endcode
varvalue r True

$overflow on
code auto:1002 less[Integer] -32768[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1003 less[Integer] -32768[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1004 less[Integer] -32768[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:1005 less[compile-time] -32768[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < -1;
endcode
varvalue r True

$overflow on
code auto:1006 less[Integer] -32768[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1007 less[Integer] -32768[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1008 less[Integer] -32768[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1009 less[compile-time] -32768[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 0;
endcode
varvalue r True

$overflow on
code auto:1010 less[Integer] -32768[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1011 less[Integer] -32768[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1012 less[Integer] -32768[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1013 less[compile-time] -32768[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 1;
endcode
varvalue r True

$overflow on
code auto:1014 less[Integer] -32768[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1015 less[Integer] -32768[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1016 less[Integer] -32768[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1017 less[compile-time] -32768[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 127;
endcode
varvalue r True

$overflow on
code auto:1018 less[Integer] -32768[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1019 less[Integer] -32768[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1020 less[Integer] -32768[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1021 less[compile-time] -32768[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 128;
endcode
varvalue r True

$overflow on
code auto:1022 less[Integer] -32768[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1023 less[Integer] -32768[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1024 less[Integer] -32768[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1025 less[compile-time] -32768[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 32767;
endcode
varvalue r True

$overflow on
code auto:1026 less[Integer] -32767[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1027 less[Integer] -32767[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r False

code auto:1028 less[Integer] -32767[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1029 less[compile-time] -32767[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -32768;
endcode
varvalue r False

$overflow on
code auto:1030 less[Integer] -32767[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1031 less[Integer] -32767[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r False

code auto:1032 less[Integer] -32767[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1033 less[compile-time] -32767[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -32767;
endcode
varvalue r False

$overflow on
code auto:1034 less[Integer] -32767[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1035 less[Integer] -32767[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1036 less[Integer] -32767[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r True

code auto:1037 less[compile-time] -32767[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -129;
endcode
varvalue r True

$overflow on
code auto:1038 less[Integer] -32767[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1039 less[Integer] -32767[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1040 less[Integer] -32767[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:1041 less[compile-time] -32767[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -128;
endcode
varvalue r True

$overflow on
code auto:1042 less[Integer] -32767[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1043 less[Integer] -32767[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1044 less[Integer] -32767[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:1045 less[compile-time] -32767[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < -1;
endcode
varvalue r True

$overflow on
code auto:1046 less[Integer] -32767[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1047 less[Integer] -32767[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1048 less[Integer] -32767[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1049 less[compile-time] -32767[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 0;
endcode
varvalue r True

$overflow on
code auto:1050 less[Integer] -32767[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1051 less[Integer] -32767[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1052 less[Integer] -32767[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1053 less[compile-time] -32767[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 1;
endcode
varvalue r True

$overflow on
code auto:1054 less[Integer] -32767[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1055 less[Integer] -32767[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1056 less[Integer] -32767[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1057 less[compile-time] -32767[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 127;
endcode
varvalue r True

$overflow on
code auto:1058 less[Integer] -32767[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1059 less[Integer] -32767[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1060 less[Integer] -32767[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1061 less[compile-time] -32767[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 128;
endcode
varvalue r True

$overflow on
code auto:1062 less[Integer] -32767[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1063 less[Integer] -32767[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1064 less[Integer] -32767[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1065 less[compile-time] -32767[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 32767;
endcode
varvalue r True

$overflow on
code auto:1066 less[Integer] -129[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1067 less[Integer] -129[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r False

code auto:1068 less[Integer] -129[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1069 less[compile-time] -129[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -32768;
endcode
varvalue r False

$overflow on
code auto:1070 less[Integer] -129[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1071 less[Integer] -129[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r False

code auto:1072 less[Integer] -129[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1073 less[compile-time] -129[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -32767;
endcode
varvalue r False

$overflow on
code auto:1074 less[Integer] -129[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1075 less[Integer] -129[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r False

code auto:1076 less[Integer] -129[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1077 less[compile-time] -129[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -129;
endcode
varvalue r False

$overflow on
code auto:1078 less[Integer] -129[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1079 less[Integer] -129[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1080 less[Integer] -129[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r True

code auto:1081 less[compile-time] -129[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -128;
endcode
varvalue r True

$overflow on
code auto:1082 less[Integer] -129[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1083 less[Integer] -129[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1084 less[Integer] -129[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:1085 less[compile-time] -129[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < -1;
endcode
varvalue r True

$overflow on
code auto:1086 less[Integer] -129[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1087 less[Integer] -129[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1088 less[Integer] -129[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1089 less[compile-time] -129[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 0;
endcode
varvalue r True

$overflow on
code auto:1090 less[Integer] -129[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1091 less[Integer] -129[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1092 less[Integer] -129[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1093 less[compile-time] -129[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 1;
endcode
varvalue r True

$overflow on
code auto:1094 less[Integer] -129[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1095 less[Integer] -129[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1096 less[Integer] -129[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1097 less[compile-time] -129[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 127;
endcode
varvalue r True

$overflow on
code auto:1098 less[Integer] -129[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1099 less[Integer] -129[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1100 less[Integer] -129[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1101 less[compile-time] -129[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 128;
endcode
varvalue r True

$overflow on
code auto:1102 less[Integer] -129[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1103 less[Integer] -129[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1104 less[Integer] -129[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1105 less[compile-time] -129[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 32767;
endcode
varvalue r True

$overflow on
code auto:1106 less[Integer] -128[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1107 less[Integer] -128[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:1108 less[Integer] -128[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1109 less[compile-time] -128[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -32768;
endcode
varvalue r False

$overflow on
code auto:1110 less[Integer] -128[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1111 less[Integer] -128[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:1112 less[Integer] -128[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1113 less[compile-time] -128[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -32767;
endcode
varvalue r False

$overflow on
code auto:1114 less[Integer] -128[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1115 less[Integer] -128[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:1116 less[Integer] -128[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1117 less[compile-time] -128[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -129;
endcode
varvalue r False

$overflow on
code auto:1118 less[Integer] -128[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1119 less[Integer] -128[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r False

code auto:1120 less[Integer] -128[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1121 less[compile-time] -128[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -128;
endcode
varvalue r False

$overflow on
code auto:1122 less[Integer] -128[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1123 less[Integer] -128[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1124 less[Integer] -128[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r True

code auto:1125 less[compile-time] -128[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < -1;
endcode
varvalue r True

$overflow on
code auto:1126 less[Integer] -128[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1127 less[Integer] -128[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1128 less[Integer] -128[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1129 less[compile-time] -128[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:1130 less[Integer] -128[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1131 less[Integer] -128[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1132 less[Integer] -128[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1133 less[compile-time] -128[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:1134 less[Integer] -128[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1135 less[Integer] -128[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1136 less[Integer] -128[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1137 less[compile-time] -128[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:1138 less[Integer] -128[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1139 less[Integer] -128[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1140 less[Integer] -128[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1141 less[compile-time] -128[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 128;
endcode
varvalue r True

$overflow on
code auto:1142 less[Integer] -128[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1143 less[Integer] -128[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1144 less[Integer] -128[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1145 less[compile-time] -128[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1146 less[Integer] -1[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1147 less[Integer] -1[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:1148 less[Integer] -1[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1149 less[compile-time] -1[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -32768;
endcode
varvalue r False

$overflow on
code auto:1150 less[Integer] -1[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1151 less[Integer] -1[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:1152 less[Integer] -1[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1153 less[compile-time] -1[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -32767;
endcode
varvalue r False

$overflow on
code auto:1154 less[Integer] -1[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1155 less[Integer] -1[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:1156 less[Integer] -1[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1157 less[compile-time] -1[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -129;
endcode
varvalue r False

$overflow on
code auto:1158 less[Integer] -1[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1159 less[Integer] -1[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:1160 less[Integer] -1[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1161 less[compile-time] -1[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -128;
endcode
varvalue r False

$overflow on
code auto:1162 less[Integer] -1[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1163 less[Integer] -1[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r False

code auto:1164 less[Integer] -1[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1165 less[compile-time] -1[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < -1;
endcode
varvalue r False

$overflow on
code auto:1166 less[Integer] -1[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1167 less[Integer] -1[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1168 less[Integer] -1[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1169 less[compile-time] -1[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:1170 less[Integer] -1[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1171 less[Integer] -1[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1172 less[Integer] -1[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1173 less[compile-time] -1[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:1174 less[Integer] -1[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1175 less[Integer] -1[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1176 less[Integer] -1[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1177 less[compile-time] -1[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:1178 less[Integer] -1[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1179 less[Integer] -1[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1180 less[Integer] -1[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1181 less[compile-time] -1[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 128;
endcode
varvalue r True

$overflow on
code auto:1182 less[Integer] -1[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1183 less[Integer] -1[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1184 less[Integer] -1[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1185 less[compile-time] -1[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1186 less[Integer] 0[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1187 less[Integer] 0[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1188 less[Integer] 0[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1189 less[compile-time] 0[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32768;
endcode
varvalue r False

$overflow on
code auto:1190 less[Integer] 0[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1191 less[Integer] 0[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1192 less[Integer] 0[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1193 less[compile-time] 0[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32767;
endcode
varvalue r False

$overflow on
code auto:1194 less[Integer] 0[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1195 less[Integer] 0[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1196 less[Integer] 0[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1197 less[compile-time] 0[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -129;
endcode
varvalue r False

$overflow on
code auto:1198 less[Integer] 0[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1199 less[Integer] 0[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1200 less[Integer] 0[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1201 less[compile-time] 0[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:1202 less[Integer] 0[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1203 less[Integer] 0[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1204 less[Integer] 0[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1205 less[compile-time] 0[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:1206 less[Integer] 0[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1207 less[Integer] 0[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1208 less[Integer] 0[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1209 less[compile-time] 0[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:1210 less[Integer] 0[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1211 less[Integer] 0[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1212 less[Integer] 0[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1213 less[compile-time] 0[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:1214 less[Integer] 0[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1215 less[Integer] 0[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1216 less[Integer] 0[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1217 less[compile-time] 0[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:1218 less[Integer] 0[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1219 less[Integer] 0[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1220 less[Integer] 0[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1221 less[compile-time] 0[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:1222 less[Integer] 0[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1223 less[Integer] 0[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1224 less[Integer] 0[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1225 less[compile-time] 0[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:1226 less[Integer] 1[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1227 less[Integer] 1[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1228 less[Integer] 1[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1229 less[compile-time] 1[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32768;
endcode
varvalue r False

$overflow on
code auto:1230 less[Integer] 1[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1231 less[Integer] 1[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1232 less[Integer] 1[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1233 less[compile-time] 1[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32767;
endcode
varvalue r False

$overflow on
code auto:1234 less[Integer] 1[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1235 less[Integer] 1[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1236 less[Integer] 1[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1237 less[compile-time] 1[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -129;
endcode
varvalue r False

$overflow on
code auto:1238 less[Integer] 1[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1239 less[Integer] 1[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1240 less[Integer] 1[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1241 less[compile-time] 1[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:1242 less[Integer] 1[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1243 less[Integer] 1[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1244 less[Integer] 1[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1245 less[compile-time] 1[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:1246 less[Integer] 1[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1247 less[Integer] 1[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1248 less[Integer] 1[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1249 less[compile-time] 1[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:1250 less[Integer] 1[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1251 less[Integer] 1[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1252 less[Integer] 1[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1253 less[compile-time] 1[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:1254 less[Integer] 1[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1255 less[Integer] 1[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1256 less[Integer] 1[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1257 less[compile-time] 1[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:1258 less[Integer] 1[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1259 less[Integer] 1[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1260 less[Integer] 1[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1261 less[compile-time] 1[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:1262 less[Integer] 1[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1263 less[Integer] 1[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1264 less[Integer] 1[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1265 less[compile-time] 1[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1266 less[Integer] 127[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1267 less[Integer] 127[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1268 less[Integer] 127[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1269 less[compile-time] 127[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32768;
endcode
varvalue r False

$overflow on
code auto:1270 less[Integer] 127[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1271 less[Integer] 127[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1272 less[Integer] 127[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1273 less[compile-time] 127[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32767;
endcode
varvalue r False

$overflow on
code auto:1274 less[Integer] 127[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1275 less[Integer] 127[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1276 less[Integer] 127[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1277 less[compile-time] 127[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -129;
endcode
varvalue r False

$overflow on
code auto:1278 less[Integer] 127[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1279 less[Integer] 127[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1280 less[Integer] 127[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1281 less[compile-time] 127[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:1282 less[Integer] 127[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1283 less[Integer] 127[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1284 less[Integer] 127[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1285 less[compile-time] 127[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:1286 less[Integer] 127[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1287 less[Integer] 127[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1288 less[Integer] 127[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1289 less[compile-time] 127[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:1290 less[Integer] 127[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1291 less[Integer] 127[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1292 less[Integer] 127[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1293 less[compile-time] 127[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:1294 less[Integer] 127[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1295 less[Integer] 127[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1296 less[Integer] 127[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1297 less[compile-time] 127[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:1298 less[Integer] 127[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1299 less[Integer] 127[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1300 less[Integer] 127[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1301 less[compile-time] 127[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:1302 less[Integer] 127[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1303 less[Integer] 127[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1304 less[Integer] 127[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1305 less[compile-time] 127[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:1306 less[Integer] 128[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1307 less[Integer] 128[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1308 less[Integer] 128[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1309 less[compile-time] 128[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -32768;
endcode
varvalue r False

$overflow on
code auto:1310 less[Integer] 128[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1311 less[Integer] 128[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1312 less[Integer] 128[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1313 less[compile-time] 128[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -32767;
endcode
varvalue r False

$overflow on
code auto:1314 less[Integer] 128[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1315 less[Integer] 128[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1316 less[Integer] 128[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1317 less[compile-time] 128[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -129;
endcode
varvalue r False

$overflow on
code auto:1318 less[Integer] 128[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1319 less[Integer] 128[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1320 less[Integer] 128[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1321 less[compile-time] 128[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -128;
endcode
varvalue r False

$overflow on
code auto:1322 less[Integer] 128[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1323 less[Integer] 128[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1324 less[Integer] 128[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1325 less[compile-time] 128[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -1;
endcode
varvalue r False

$overflow on
code auto:1326 less[Integer] 128[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1327 less[Integer] 128[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1328 less[Integer] 128[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1329 less[compile-time] 128[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:1330 less[Integer] 128[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1331 less[Integer] 128[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1332 less[Integer] 128[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1333 less[compile-time] 128[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:1334 less[Integer] 128[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1335 less[Integer] 128[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1336 less[Integer] 128[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1337 less[compile-time] 128[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:1338 less[Integer] 128[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1339 less[Integer] 128[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1340 less[Integer] 128[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:1341 less[compile-time] 128[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 128;
endcode
varvalue r False

$overflow on
code auto:1342 less[Integer] 128[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1343 less[Integer] 128[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1344 less[Integer] 128[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1345 less[compile-time] 128[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1346 less[Integer] 32767[Integer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1347 less[Integer] 32767[Integer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1348 less[Integer] 32767[Integer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:1349 less[compile-time] 32767[Integer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32768;
endcode
varvalue r False

$overflow on
code auto:1350 less[Integer] 32767[Integer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1351 less[Integer] 32767[Integer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1352 less[Integer] 32767[Integer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:1353 less[compile-time] 32767[Integer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32767;
endcode
varvalue r False

$overflow on
code auto:1354 less[Integer] 32767[Integer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1355 less[Integer] 32767[Integer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1356 less[Integer] 32767[Integer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:1357 less[compile-time] 32767[Integer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -129;
endcode
varvalue r False

$overflow on
code auto:1358 less[Integer] 32767[Integer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1359 less[Integer] 32767[Integer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1360 less[Integer] 32767[Integer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1361 less[compile-time] 32767[Integer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:1362 less[Integer] 32767[Integer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1363 less[Integer] 32767[Integer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1364 less[Integer] 32767[Integer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1365 less[compile-time] 32767[Integer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:1366 less[Integer] 32767[Integer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1367 less[Integer] 32767[Integer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1368 less[Integer] 32767[Integer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1369 less[compile-time] 32767[Integer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:1370 less[Integer] 32767[Integer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1371 less[Integer] 32767[Integer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1372 less[Integer] 32767[Integer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1373 less[compile-time] 32767[Integer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:1374 less[Integer] 32767[Integer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1375 less[Integer] 32767[Integer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1376 less[Integer] 32767[Integer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1377 less[compile-time] 32767[Integer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:1378 less[Integer] 32767[Integer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1379 less[Integer] 32767[Integer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1380 less[Integer] 32767[Integer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:1381 less[compile-time] 32767[Integer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:1382 less[Integer] 32767[Integer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1383 less[Integer] 32767[Integer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1384 less[Integer] 32767[Integer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:1385 less[compile-time] 32767[Integer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:1386 less[Integer] -32768[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1387 less[Integer] -32768[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1388 less[Integer] -32768[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1389 less[compile-time] -32768[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 0;
endcode
varvalue r True

$overflow on
code auto:1390 less[Integer] -32768[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1391 less[Integer] -32768[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1392 less[Integer] -32768[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1393 less[compile-time] -32768[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 1;
endcode
varvalue r True

$overflow on
code auto:1394 less[Integer] -32768[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1395 less[Integer] -32768[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1396 less[Integer] -32768[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1397 less[compile-time] -32768[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 127;
endcode
varvalue r True

$overflow on
code auto:1398 less[Integer] -32768[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1399 less[Integer] -32768[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1400 less[Integer] -32768[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1401 less[compile-time] -32768[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 128;
endcode
varvalue r True

$overflow on
code auto:1402 less[Integer] -32768[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1403 less[Integer] -32768[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1404 less[Integer] -32768[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1405 less[compile-time] -32768[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 255;
endcode
varvalue r True

$overflow on
code auto:1406 less[Integer] -32767[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1407 less[Integer] -32767[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1408 less[Integer] -32767[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1409 less[compile-time] -32767[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 0;
endcode
varvalue r True

$overflow on
code auto:1410 less[Integer] -32767[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1411 less[Integer] -32767[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1412 less[Integer] -32767[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1413 less[compile-time] -32767[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 1;
endcode
varvalue r True

$overflow on
code auto:1414 less[Integer] -32767[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1415 less[Integer] -32767[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1416 less[Integer] -32767[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1417 less[compile-time] -32767[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 127;
endcode
varvalue r True

$overflow on
code auto:1418 less[Integer] -32767[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1419 less[Integer] -32767[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1420 less[Integer] -32767[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1421 less[compile-time] -32767[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 128;
endcode
varvalue r True

$overflow on
code auto:1422 less[Integer] -32767[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1423 less[Integer] -32767[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1424 less[Integer] -32767[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1425 less[compile-time] -32767[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 255;
endcode
varvalue r True

$overflow on
code auto:1426 less[Integer] -129[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1427 less[Integer] -129[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1428 less[Integer] -129[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1429 less[compile-time] -129[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 0;
endcode
varvalue r True

$overflow on
code auto:1430 less[Integer] -129[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1431 less[Integer] -129[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1432 less[Integer] -129[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1433 less[compile-time] -129[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 1;
endcode
varvalue r True

$overflow on
code auto:1434 less[Integer] -129[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1435 less[Integer] -129[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1436 less[Integer] -129[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1437 less[compile-time] -129[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 127;
endcode
varvalue r True

$overflow on
code auto:1438 less[Integer] -129[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1439 less[Integer] -129[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1440 less[Integer] -129[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1441 less[compile-time] -129[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 128;
endcode
varvalue r True

$overflow on
code auto:1442 less[Integer] -129[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1443 less[Integer] -129[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1444 less[Integer] -129[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1445 less[compile-time] -129[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 255;
endcode
varvalue r True

$overflow on
code auto:1446 less[Integer] -128[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1447 less[Integer] -128[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1448 less[Integer] -128[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1449 less[compile-time] -128[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:1450 less[Integer] -128[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1451 less[Integer] -128[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1452 less[Integer] -128[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1453 less[compile-time] -128[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 1;
endcode
varvalue r True

$overflow on
code auto:1454 less[Integer] -128[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1455 less[Integer] -128[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1456 less[Integer] -128[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1457 less[compile-time] -128[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 127;
endcode
varvalue r True

$overflow on
code auto:1458 less[Integer] -128[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1459 less[Integer] -128[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1460 less[Integer] -128[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1461 less[compile-time] -128[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 128;
endcode
varvalue r True

$overflow on
code auto:1462 less[Integer] -128[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1463 less[Integer] -128[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1464 less[Integer] -128[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1465 less[compile-time] -128[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:1466 less[Integer] -1[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1467 less[Integer] -1[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1468 less[Integer] -1[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1469 less[compile-time] -1[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:1470 less[Integer] -1[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1471 less[Integer] -1[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1472 less[Integer] -1[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1473 less[compile-time] -1[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 1;
endcode
varvalue r True

$overflow on
code auto:1474 less[Integer] -1[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1475 less[Integer] -1[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1476 less[Integer] -1[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1477 less[compile-time] -1[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 127;
endcode
varvalue r True

$overflow on
code auto:1478 less[Integer] -1[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1479 less[Integer] -1[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1480 less[Integer] -1[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1481 less[compile-time] -1[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 128;
endcode
varvalue r True

$overflow on
code auto:1482 less[Integer] -1[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1483 less[Integer] -1[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1484 less[Integer] -1[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1485 less[compile-time] -1[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:1486 less[Integer] 0[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1487 less[Integer] 0[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1488 less[Integer] 0[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1489 less[compile-time] 0[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:1490 less[Integer] 0[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1491 less[Integer] 0[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1492 less[Integer] 0[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:1493 less[compile-time] 0[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:1494 less[Integer] 0[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1495 less[Integer] 0[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1496 less[Integer] 0[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1497 less[compile-time] 0[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:1498 less[Integer] 0[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1499 less[Integer] 0[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1500 less[Integer] 0[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1501 less[compile-time] 0[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:1502 less[Integer] 0[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1503 less[Integer] 0[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1504 less[Integer] 0[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1505 less[compile-time] 0[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:1506 less[Integer] 1[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1507 less[Integer] 1[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1508 less[Integer] 1[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1509 less[compile-time] 1[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:1510 less[Integer] 1[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1511 less[Integer] 1[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1512 less[Integer] 1[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1513 less[compile-time] 1[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:1514 less[Integer] 1[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1515 less[Integer] 1[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1516 less[Integer] 1[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:1517 less[compile-time] 1[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:1518 less[Integer] 1[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1519 less[Integer] 1[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1520 less[Integer] 1[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1521 less[compile-time] 1[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:1522 less[Integer] 1[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1523 less[Integer] 1[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1524 less[Integer] 1[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1525 less[compile-time] 1[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:1526 less[Integer] 127[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1527 less[Integer] 127[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1528 less[Integer] 127[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1529 less[compile-time] 127[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:1530 less[Integer] 127[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1531 less[Integer] 127[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1532 less[Integer] 127[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1533 less[compile-time] 127[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:1534 less[Integer] 127[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1535 less[Integer] 127[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1536 less[Integer] 127[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1537 less[compile-time] 127[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:1538 less[Integer] 127[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1539 less[Integer] 127[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1540 less[Integer] 127[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:1541 less[compile-time] 127[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:1542 less[Integer] 127[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1543 less[Integer] 127[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1544 less[Integer] 127[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1545 less[compile-time] 127[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:1546 less[Integer] 128[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1547 less[Integer] 128[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1548 less[Integer] 128[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1549 less[compile-time] 128[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:1550 less[Integer] 128[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1551 less[Integer] 128[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1552 less[Integer] 128[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1553 less[compile-time] 128[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:1554 less[Integer] 128[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1555 less[Integer] 128[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1556 less[Integer] 128[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1557 less[compile-time] 128[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:1558 less[Integer] 128[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1559 less[Integer] 128[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1560 less[Integer] 128[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:1561 less[compile-time] 128[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 128;
endcode
varvalue r False

$overflow on
code auto:1562 less[Integer] 128[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1563 less[Integer] 128[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1564 less[Integer] 128[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1565 less[compile-time] 128[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:1566 less[Integer] 32767[Integer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1567 less[Integer] 32767[Integer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1568 less[Integer] 32767[Integer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1569 less[compile-time] 32767[Integer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:1570 less[Integer] 32767[Integer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1571 less[Integer] 32767[Integer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1572 less[Integer] 32767[Integer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:1573 less[compile-time] 32767[Integer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:1574 less[Integer] 32767[Integer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1575 less[Integer] 32767[Integer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1576 less[Integer] 32767[Integer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:1577 less[compile-time] 32767[Integer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:1578 less[Integer] 32767[Integer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1579 less[Integer] 32767[Integer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1580 less[Integer] 32767[Integer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:1581 less[compile-time] 32767[Integer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:1582 less[Integer] 32767[Integer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1583 less[Integer] 32767[Integer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1584 less[Integer] 32767[Integer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:1585 less[compile-time] 32767[Integer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:1586 less[Integer] -32768[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1587 less[Integer] -32768[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1588 less[Integer] -32768[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1589 less[compile-time] -32768[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 0;
endcode
varvalue r True

$overflow on
code auto:1590 less[Integer] -32768[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1591 less[Integer] -32768[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1592 less[Integer] -32768[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1593 less[compile-time] -32768[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 255;
endcode
varvalue r True

$overflow on
code auto:1594 less[Integer] -32768[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1595 less[Integer] -32768[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1596 less[Integer] -32768[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1597 less[compile-time] -32768[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 32767;
endcode
varvalue r True

$overflow on
code auto:1598 less[Integer] -32768[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1599 less[Integer] -32768[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1600 less[Integer] -32768[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1601 less[compile-time] -32768[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 32768;
endcode
varvalue r True

$overflow on
code auto:1602 less[Integer] -32768[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1603 less[Integer] -32768[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1604 less[Integer] -32768[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1605 less[compile-time] -32768[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:1606 less[Integer] -32767[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1607 less[Integer] -32767[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1608 less[Integer] -32767[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1609 less[compile-time] -32767[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 0;
endcode
varvalue r True

$overflow on
code auto:1610 less[Integer] -32767[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1611 less[Integer] -32767[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1612 less[Integer] -32767[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1613 less[compile-time] -32767[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 255;
endcode
varvalue r True

$overflow on
code auto:1614 less[Integer] -32767[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1615 less[Integer] -32767[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1616 less[Integer] -32767[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1617 less[compile-time] -32767[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 32767;
endcode
varvalue r True

$overflow on
code auto:1618 less[Integer] -32767[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1619 less[Integer] -32767[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1620 less[Integer] -32767[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1621 less[compile-time] -32767[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:1622 less[Integer] -32767[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1623 less[Integer] -32767[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1624 less[Integer] -32767[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1625 less[compile-time] -32767[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:1626 less[Integer] -129[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1627 less[Integer] -129[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1628 less[Integer] -129[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1629 less[compile-time] -129[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 0;
endcode
varvalue r True

$overflow on
code auto:1630 less[Integer] -129[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1631 less[Integer] -129[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1632 less[Integer] -129[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1633 less[compile-time] -129[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 255;
endcode
varvalue r True

$overflow on
code auto:1634 less[Integer] -129[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1635 less[Integer] -129[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1636 less[Integer] -129[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1637 less[compile-time] -129[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 32767;
endcode
varvalue r True

$overflow on
code auto:1638 less[Integer] -129[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1639 less[Integer] -129[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1640 less[Integer] -129[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1641 less[compile-time] -129[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 32768;
endcode
varvalue r True

$overflow on
code auto:1642 less[Integer] -129[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1643 less[Integer] -129[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1644 less[Integer] -129[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1645 less[compile-time] -129[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 65535;
endcode
varvalue r True

$overflow on
code auto:1646 less[Integer] -128[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1647 less[Integer] -128[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1648 less[Integer] -128[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1649 less[compile-time] -128[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:1650 less[Integer] -128[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1651 less[Integer] -128[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1652 less[Integer] -128[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1653 less[compile-time] -128[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:1654 less[Integer] -128[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1655 less[Integer] -128[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1656 less[Integer] -128[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1657 less[compile-time] -128[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1658 less[Integer] -128[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1659 less[Integer] -128[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1660 less[Integer] -128[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1661 less[compile-time] -128[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32768;
endcode
varvalue r True

$overflow on
code auto:1662 less[Integer] -128[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1663 less[Integer] -128[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1664 less[Integer] -128[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1665 less[compile-time] -128[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 65535;
endcode
varvalue r True

$overflow on
code auto:1666 less[Integer] -1[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1667 less[Integer] -1[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1668 less[Integer] -1[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1669 less[compile-time] -1[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:1670 less[Integer] -1[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1671 less[Integer] -1[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1672 less[Integer] -1[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1673 less[compile-time] -1[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:1674 less[Integer] -1[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1675 less[Integer] -1[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1676 less[Integer] -1[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1677 less[compile-time] -1[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1678 less[Integer] -1[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1679 less[Integer] -1[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1680 less[Integer] -1[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1681 less[compile-time] -1[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32768;
endcode
varvalue r True

$overflow on
code auto:1682 less[Integer] -1[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1683 less[Integer] -1[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1684 less[Integer] -1[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1685 less[compile-time] -1[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 65535;
endcode
varvalue r True

$overflow on
code auto:1686 less[Integer] 0[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1687 less[Integer] 0[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1688 less[Integer] 0[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1689 less[compile-time] 0[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:1690 less[Integer] 0[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1691 less[Integer] 0[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1692 less[Integer] 0[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1693 less[compile-time] 0[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:1694 less[Integer] 0[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1695 less[Integer] 0[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1696 less[Integer] 0[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1697 less[compile-time] 0[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:1698 less[Integer] 0[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1699 less[Integer] 0[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1700 less[Integer] 0[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1701 less[compile-time] 0[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:1702 less[Integer] 0[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1703 less[Integer] 0[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1704 less[Integer] 0[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1705 less[compile-time] 0[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:1706 less[Integer] 1[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1707 less[Integer] 1[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1708 less[Integer] 1[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1709 less[compile-time] 1[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:1710 less[Integer] 1[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1711 less[Integer] 1[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1712 less[Integer] 1[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1713 less[compile-time] 1[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:1714 less[Integer] 1[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1715 less[Integer] 1[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1716 less[Integer] 1[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1717 less[compile-time] 1[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1718 less[Integer] 1[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1719 less[Integer] 1[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1720 less[Integer] 1[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1721 less[compile-time] 1[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:1722 less[Integer] 1[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1723 less[Integer] 1[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1724 less[Integer] 1[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1725 less[compile-time] 1[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:1726 less[Integer] 127[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1727 less[Integer] 127[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1728 less[Integer] 127[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1729 less[compile-time] 127[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:1730 less[Integer] 127[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1731 less[Integer] 127[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1732 less[Integer] 127[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1733 less[compile-time] 127[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:1734 less[Integer] 127[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1735 less[Integer] 127[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1736 less[Integer] 127[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1737 less[compile-time] 127[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:1738 less[Integer] 127[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1739 less[Integer] 127[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1740 less[Integer] 127[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1741 less[compile-time] 127[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:1742 less[Integer] 127[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1743 less[Integer] 127[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1744 less[Integer] 127[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1745 less[compile-time] 127[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:1746 less[Integer] 128[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1747 less[Integer] 128[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1748 less[Integer] 128[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1749 less[compile-time] 128[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:1750 less[Integer] 128[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1751 less[Integer] 128[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1752 less[Integer] 128[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1753 less[compile-time] 128[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:1754 less[Integer] 128[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1755 less[Integer] 128[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1756 less[Integer] 128[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1757 less[compile-time] 128[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1758 less[Integer] 128[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1759 less[Integer] 128[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1760 less[Integer] 128[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1761 less[compile-time] 128[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32768;
endcode
varvalue r True

$overflow on
code auto:1762 less[Integer] 128[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1763 less[Integer] 128[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1764 less[Integer] 128[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1765 less[compile-time] 128[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 65535;
endcode
varvalue r True

$overflow on
code auto:1766 less[Integer] 32767[Integer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1767 less[Integer] 32767[Integer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1768 less[Integer] 32767[Integer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1769 less[compile-time] 32767[Integer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:1770 less[Integer] 32767[Integer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1771 less[Integer] 32767[Integer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1772 less[Integer] 32767[Integer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:1773 less[compile-time] 32767[Integer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:1774 less[Integer] 32767[Integer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1775 less[Integer] 32767[Integer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1776 less[Integer] 32767[Integer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:1777 less[compile-time] 32767[Integer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:1778 less[Integer] 32767[Integer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1779 less[Integer] 32767[Integer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:1780 less[Integer] 32767[Integer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1781 less[compile-time] 32767[Integer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:1782 less[Integer] 32767[Integer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1783 less[Integer] 32767[Integer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:1784 less[Integer] 32767[Integer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1785 less[compile-time] 32767[Integer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:1786 less[Pointer] -32768[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1787 less[Pointer] -32768[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1788 less[Pointer] -32768[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1789 less[compile-time] -32768[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 0;
endcode
varvalue r True

$overflow on
code auto:1790 less[Pointer] -32768[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1791 less[Pointer] -32768[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1792 less[Pointer] -32768[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1793 less[compile-time] -32768[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 255;
endcode
varvalue r True

$overflow on
code auto:1794 less[Pointer] -32768[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1795 less[Pointer] -32768[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1796 less[Pointer] -32768[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1797 less[compile-time] -32768[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 32767;
endcode
varvalue r True

$overflow on
code auto:1798 less[Pointer] -32768[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1799 less[Pointer] -32768[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1800 less[Pointer] -32768[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1801 less[compile-time] -32768[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 32768;
endcode
varvalue r True

$overflow on
code auto:1802 less[Pointer] -32768[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1803 less[Pointer] -32768[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -32768 < b;
endcode
varvalue r True

code auto:1804 less[Pointer] -32768[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1805 less[compile-time] -32768[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:1806 less[Pointer] -32767[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1807 less[Pointer] -32767[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1808 less[Pointer] -32767[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1809 less[compile-time] -32767[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 0;
endcode
varvalue r True

$overflow on
code auto:1810 less[Pointer] -32767[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1811 less[Pointer] -32767[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1812 less[Pointer] -32767[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1813 less[compile-time] -32767[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 255;
endcode
varvalue r True

$overflow on
code auto:1814 less[Pointer] -32767[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1815 less[Pointer] -32767[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1816 less[Pointer] -32767[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1817 less[compile-time] -32767[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 32767;
endcode
varvalue r True

$overflow on
code auto:1818 less[Pointer] -32767[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1819 less[Pointer] -32767[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1820 less[Pointer] -32767[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1821 less[compile-time] -32767[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:1822 less[Pointer] -32767[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1823 less[Pointer] -32767[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -32767 < b;
endcode
varvalue r True

code auto:1824 less[Pointer] -32767[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1825 less[compile-time] -32767[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:1826 less[Pointer] -129[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1827 less[Pointer] -129[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1828 less[Pointer] -129[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1829 less[compile-time] -129[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 0;
endcode
varvalue r True

$overflow on
code auto:1830 less[Pointer] -129[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1831 less[Pointer] -129[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1832 less[Pointer] -129[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1833 less[compile-time] -129[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 255;
endcode
varvalue r True

$overflow on
code auto:1834 less[Pointer] -129[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1835 less[Pointer] -129[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1836 less[Pointer] -129[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1837 less[compile-time] -129[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 32767;
endcode
varvalue r True

$overflow on
code auto:1838 less[Pointer] -129[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1839 less[Pointer] -129[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1840 less[Pointer] -129[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1841 less[compile-time] -129[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 32768;
endcode
varvalue r True

$overflow on
code auto:1842 less[Pointer] -129[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1843 less[Pointer] -129[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -129 < b;
endcode
varvalue r True

code auto:1844 less[Pointer] -129[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -129;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1845 less[compile-time] -129[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -129 < 65535;
endcode
varvalue r True

$overflow on
code auto:1846 less[Pointer] -128[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1847 less[Pointer] -128[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1848 less[Pointer] -128[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1849 less[compile-time] -128[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 0;
endcode
varvalue r True

$overflow on
code auto:1850 less[Pointer] -128[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1851 less[Pointer] -128[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1852 less[Pointer] -128[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1853 less[compile-time] -128[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 255;
endcode
varvalue r True

$overflow on
code auto:1854 less[Pointer] -128[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1855 less[Pointer] -128[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1856 less[Pointer] -128[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1857 less[compile-time] -128[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1858 less[Pointer] -128[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1859 less[Pointer] -128[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1860 less[Pointer] -128[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1861 less[compile-time] -128[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 32768;
endcode
varvalue r True

$overflow on
code auto:1862 less[Pointer] -128[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1863 less[Pointer] -128[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -128 < b;
endcode
varvalue r True

code auto:1864 less[Pointer] -128[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1865 less[compile-time] -128[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -128 < 65535;
endcode
varvalue r True

$overflow on
code auto:1866 less[Pointer] -1[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1867 less[Pointer] -1[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1868 less[Pointer] -1[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r True

code auto:1869 less[compile-time] -1[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 0;
endcode
varvalue r True

$overflow on
code auto:1870 less[Pointer] -1[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1871 less[Pointer] -1[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1872 less[Pointer] -1[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1873 less[compile-time] -1[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 255;
endcode
varvalue r True

$overflow on
code auto:1874 less[Pointer] -1[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1875 less[Pointer] -1[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1876 less[Pointer] -1[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1877 less[compile-time] -1[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1878 less[Pointer] -1[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1879 less[Pointer] -1[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1880 less[Pointer] -1[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1881 less[compile-time] -1[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 32768;
endcode
varvalue r True

$overflow on
code auto:1882 less[Pointer] -1[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1883 less[Pointer] -1[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := -1 < b;
endcode
varvalue r True

code auto:1884 less[Pointer] -1[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = -1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1885 less[compile-time] -1[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := -1 < 65535;
endcode
varvalue r True

$overflow on
code auto:1886 less[Pointer] 0[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1887 less[Pointer] 0[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1888 less[Pointer] 0[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1889 less[compile-time] 0[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:1890 less[Pointer] 0[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1891 less[Pointer] 0[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1892 less[Pointer] 0[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1893 less[compile-time] 0[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:1894 less[Pointer] 0[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1895 less[Pointer] 0[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1896 less[Pointer] 0[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1897 less[compile-time] 0[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:1898 less[Pointer] 0[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1899 less[Pointer] 0[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1900 less[Pointer] 0[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1901 less[compile-time] 0[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:1902 less[Pointer] 0[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1903 less[Pointer] 0[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:1904 less[Pointer] 0[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1905 less[compile-time] 0[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:1906 less[Pointer] 1[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1907 less[Pointer] 1[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:1908 less[Pointer] 1[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1909 less[compile-time] 1[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:1910 less[Pointer] 1[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1911 less[Pointer] 1[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1912 less[Pointer] 1[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1913 less[compile-time] 1[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:1914 less[Pointer] 1[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1915 less[Pointer] 1[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1916 less[Pointer] 1[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1917 less[compile-time] 1[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:1918 less[Pointer] 1[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1919 less[Pointer] 1[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1920 less[Pointer] 1[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1921 less[compile-time] 1[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:1922 less[Pointer] 1[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1923 less[Pointer] 1[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:1924 less[Pointer] 1[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1925 less[compile-time] 1[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:1926 less[Pointer] 127[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1927 less[Pointer] 127[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:1928 less[Pointer] 127[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1929 less[compile-time] 127[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:1930 less[Pointer] 127[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1931 less[Pointer] 127[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1932 less[Pointer] 127[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1933 less[compile-time] 127[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:1934 less[Pointer] 127[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1935 less[Pointer] 127[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1936 less[Pointer] 127[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1937 less[compile-time] 127[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:1938 less[Pointer] 127[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1939 less[Pointer] 127[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1940 less[Pointer] 127[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1941 less[compile-time] 127[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:1942 less[Pointer] 127[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1943 less[Pointer] 127[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:1944 less[Pointer] 127[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1945 less[compile-time] 127[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:1946 less[Pointer] 128[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1947 less[Pointer] 128[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:1948 less[Pointer] 128[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1949 less[compile-time] 128[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:1950 less[Pointer] 128[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1951 less[Pointer] 128[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1952 less[Pointer] 128[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:1953 less[compile-time] 128[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:1954 less[Pointer] 128[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1955 less[Pointer] 128[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1956 less[Pointer] 128[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:1957 less[compile-time] 128[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:1958 less[Pointer] 128[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1959 less[Pointer] 128[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1960 less[Pointer] 128[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1961 less[compile-time] 128[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32768;
endcode
varvalue r True

$overflow on
code auto:1962 less[Pointer] 128[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1963 less[Pointer] 128[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:1964 less[Pointer] 128[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1965 less[compile-time] 128[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 65535;
endcode
varvalue r True

$overflow on
code auto:1966 less[Pointer] 32767[Integer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1967 less[Pointer] 32767[Integer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1968 less[Pointer] 32767[Integer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:1969 less[compile-time] 32767[Integer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:1970 less[Pointer] 32767[Integer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1971 less[Pointer] 32767[Integer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1972 less[Pointer] 32767[Integer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:1973 less[compile-time] 32767[Integer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:1974 less[Pointer] 32767[Integer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1975 less[Pointer] 32767[Integer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:1976 less[Pointer] 32767[Integer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:1977 less[compile-time] 32767[Integer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:1978 less[Pointer] 32767[Integer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1979 less[Pointer] 32767[Integer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:1980 less[Pointer] 32767[Integer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:1981 less[compile-time] 32767[Integer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:1982 less[Pointer] 32767[Integer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:1983 less[Pointer] 32767[Integer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:1984 less[Pointer] 32767[Integer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Integer = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:1985 less[compile-time] 32767[Integer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:1986 less[Integer] 0[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1987 less[Integer] 0[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1988 less[Integer] 0[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:1989 less[compile-time] 0[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:1990 less[Integer] 0[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1991 less[Integer] 0[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1992 less[Integer] 0[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:1993 less[compile-time] 0[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -127;
endcode
varvalue r False

$overflow on
code auto:1994 less[Integer] 0[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1995 less[Integer] 0[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:1996 less[Integer] 0[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:1997 less[compile-time] 0[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:1998 less[Integer] 0[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:1999 less[Integer] 0[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2000 less[Integer] 0[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2001 less[compile-time] 0[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2002 less[Integer] 0[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2003 less[Integer] 0[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2004 less[Integer] 0[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2005 less[compile-time] 0[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2006 less[Integer] 0[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2007 less[Integer] 0[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2008 less[Integer] 0[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2009 less[compile-time] 0[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2010 less[Integer] 1[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2011 less[Integer] 1[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2012 less[Integer] 1[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2013 less[compile-time] 1[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:2014 less[Integer] 1[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2015 less[Integer] 1[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2016 less[Integer] 1[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2017 less[compile-time] 1[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -127;
endcode
varvalue r False

$overflow on
code auto:2018 less[Integer] 1[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2019 less[Integer] 1[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2020 less[Integer] 1[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2021 less[compile-time] 1[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:2022 less[Integer] 1[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2023 less[Integer] 1[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2024 less[Integer] 1[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2025 less[compile-time] 1[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:2026 less[Integer] 1[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2027 less[Integer] 1[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2028 less[Integer] 1[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2029 less[compile-time] 1[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:2030 less[Integer] 1[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2031 less[Integer] 1[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2032 less[Integer] 1[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2033 less[compile-time] 1[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:2034 less[Integer] 127[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2035 less[Integer] 127[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2036 less[Integer] 127[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2037 less[compile-time] 127[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:2038 less[Integer] 127[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2039 less[Integer] 127[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2040 less[Integer] 127[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2041 less[compile-time] 127[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -127;
endcode
varvalue r False

$overflow on
code auto:2042 less[Integer] 127[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2043 less[Integer] 127[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2044 less[Integer] 127[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2045 less[compile-time] 127[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:2046 less[Integer] 127[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2047 less[Integer] 127[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2048 less[Integer] 127[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2049 less[compile-time] 127[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:2050 less[Integer] 127[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2051 less[Integer] 127[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2052 less[Integer] 127[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2053 less[compile-time] 127[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:2054 less[Integer] 127[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2055 less[Integer] 127[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2056 less[Integer] 127[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2057 less[compile-time] 127[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:2058 less[Integer] 128[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2059 less[Integer] 128[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2060 less[Integer] 128[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2061 less[compile-time] 128[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -128;
endcode
varvalue r False

$overflow on
code auto:2062 less[Integer] 128[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2063 less[Integer] 128[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2064 less[Integer] 128[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2065 less[compile-time] 128[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -127;
endcode
varvalue r False

$overflow on
code auto:2066 less[Integer] 128[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2067 less[Integer] 128[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2068 less[Integer] 128[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2069 less[compile-time] 128[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -1;
endcode
varvalue r False

$overflow on
code auto:2070 less[Integer] 128[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2071 less[Integer] 128[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2072 less[Integer] 128[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2073 less[compile-time] 128[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:2074 less[Integer] 128[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2075 less[Integer] 128[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2076 less[Integer] 128[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2077 less[compile-time] 128[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:2078 less[Integer] 128[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2079 less[Integer] 128[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2080 less[Integer] 128[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2081 less[compile-time] 128[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:2082 less[Integer] 255[Byte], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2083 less[Integer] 255[Byte], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2084 less[Integer] 255[Byte], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2085 less[compile-time] 255[Byte], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:2086 less[Integer] 255[Byte], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2087 less[Integer] 255[Byte], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2088 less[Integer] 255[Byte], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2089 less[compile-time] 255[Byte], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -127;
endcode
varvalue r False

$overflow on
code auto:2090 less[Integer] 255[Byte], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2091 less[Integer] 255[Byte], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2092 less[Integer] 255[Byte], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2093 less[compile-time] 255[Byte], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:2094 less[Integer] 255[Byte], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2095 less[Integer] 255[Byte], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2096 less[Integer] 255[Byte], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2097 less[compile-time] 255[Byte], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2098 less[Integer] 255[Byte], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2099 less[Integer] 255[Byte], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2100 less[Integer] 255[Byte], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2101 less[compile-time] 255[Byte], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2102 less[Integer] 255[Byte], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2103 less[Integer] 255[Byte], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2104 less[Integer] 255[Byte], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2105 less[compile-time] 255[Byte], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2106 less[Integer] 0[Byte], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2107 less[Integer] 0[Byte], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2108 less[Integer] 0[Byte], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2109 less[compile-time] 0[Byte], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32768;
endcode
varvalue r False

$overflow on
code auto:2110 less[Integer] 0[Byte], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2111 less[Integer] 0[Byte], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2112 less[Integer] 0[Byte], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2113 less[compile-time] 0[Byte], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32767;
endcode
varvalue r False

$overflow on
code auto:2114 less[Integer] 0[Byte], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2115 less[Integer] 0[Byte], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2116 less[Integer] 0[Byte], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2117 less[compile-time] 0[Byte], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -129;
endcode
varvalue r False

$overflow on
code auto:2118 less[Integer] 0[Byte], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2119 less[Integer] 0[Byte], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2120 less[Integer] 0[Byte], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2121 less[compile-time] 0[Byte], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:2122 less[Integer] 0[Byte], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2123 less[Integer] 0[Byte], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2124 less[Integer] 0[Byte], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2125 less[compile-time] 0[Byte], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:2126 less[Integer] 0[Byte], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2127 less[Integer] 0[Byte], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2128 less[Integer] 0[Byte], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2129 less[compile-time] 0[Byte], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2130 less[Integer] 0[Byte], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2131 less[Integer] 0[Byte], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2132 less[Integer] 0[Byte], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2133 less[compile-time] 0[Byte], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2134 less[Integer] 0[Byte], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2135 less[Integer] 0[Byte], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2136 less[Integer] 0[Byte], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2137 less[compile-time] 0[Byte], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2138 less[Integer] 0[Byte], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2139 less[Integer] 0[Byte], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2140 less[Integer] 0[Byte], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2141 less[compile-time] 0[Byte], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:2142 less[Integer] 0[Byte], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2143 less[Integer] 0[Byte], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2144 less[Integer] 0[Byte], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2145 less[compile-time] 0[Byte], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:2146 less[Integer] 1[Byte], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2147 less[Integer] 1[Byte], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2148 less[Integer] 1[Byte], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2149 less[compile-time] 1[Byte], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32768;
endcode
varvalue r False

$overflow on
code auto:2150 less[Integer] 1[Byte], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2151 less[Integer] 1[Byte], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2152 less[Integer] 1[Byte], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2153 less[compile-time] 1[Byte], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -32767;
endcode
varvalue r False

$overflow on
code auto:2154 less[Integer] 1[Byte], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2155 less[Integer] 1[Byte], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2156 less[Integer] 1[Byte], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2157 less[compile-time] 1[Byte], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -129;
endcode
varvalue r False

$overflow on
code auto:2158 less[Integer] 1[Byte], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2159 less[Integer] 1[Byte], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2160 less[Integer] 1[Byte], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2161 less[compile-time] 1[Byte], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -128;
endcode
varvalue r False

$overflow on
code auto:2162 less[Integer] 1[Byte], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2163 less[Integer] 1[Byte], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2164 less[Integer] 1[Byte], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2165 less[compile-time] 1[Byte], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < -1;
endcode
varvalue r False

$overflow on
code auto:2166 less[Integer] 1[Byte], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2167 less[Integer] 1[Byte], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2168 less[Integer] 1[Byte], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2169 less[compile-time] 1[Byte], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:2170 less[Integer] 1[Byte], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2171 less[Integer] 1[Byte], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2172 less[Integer] 1[Byte], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2173 less[compile-time] 1[Byte], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:2174 less[Integer] 1[Byte], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2175 less[Integer] 1[Byte], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2176 less[Integer] 1[Byte], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2177 less[compile-time] 1[Byte], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:2178 less[Integer] 1[Byte], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2179 less[Integer] 1[Byte], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2180 less[Integer] 1[Byte], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2181 less[compile-time] 1[Byte], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:2182 less[Integer] 1[Byte], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2183 less[Integer] 1[Byte], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2184 less[Integer] 1[Byte], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2185 less[compile-time] 1[Byte], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:2186 less[Integer] 127[Byte], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2187 less[Integer] 127[Byte], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2188 less[Integer] 127[Byte], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2189 less[compile-time] 127[Byte], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32768;
endcode
varvalue r False

$overflow on
code auto:2190 less[Integer] 127[Byte], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2191 less[Integer] 127[Byte], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2192 less[Integer] 127[Byte], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2193 less[compile-time] 127[Byte], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -32767;
endcode
varvalue r False

$overflow on
code auto:2194 less[Integer] 127[Byte], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2195 less[Integer] 127[Byte], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2196 less[Integer] 127[Byte], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2197 less[compile-time] 127[Byte], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -129;
endcode
varvalue r False

$overflow on
code auto:2198 less[Integer] 127[Byte], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2199 less[Integer] 127[Byte], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2200 less[Integer] 127[Byte], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2201 less[compile-time] 127[Byte], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -128;
endcode
varvalue r False

$overflow on
code auto:2202 less[Integer] 127[Byte], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2203 less[Integer] 127[Byte], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2204 less[Integer] 127[Byte], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2205 less[compile-time] 127[Byte], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < -1;
endcode
varvalue r False

$overflow on
code auto:2206 less[Integer] 127[Byte], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2207 less[Integer] 127[Byte], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2208 less[Integer] 127[Byte], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2209 less[compile-time] 127[Byte], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:2210 less[Integer] 127[Byte], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2211 less[Integer] 127[Byte], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2212 less[Integer] 127[Byte], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2213 less[compile-time] 127[Byte], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:2214 less[Integer] 127[Byte], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2215 less[Integer] 127[Byte], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2216 less[Integer] 127[Byte], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2217 less[compile-time] 127[Byte], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:2218 less[Integer] 127[Byte], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2219 less[Integer] 127[Byte], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2220 less[Integer] 127[Byte], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2221 less[compile-time] 127[Byte], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:2222 less[Integer] 127[Byte], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2223 less[Integer] 127[Byte], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2224 less[Integer] 127[Byte], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2225 less[compile-time] 127[Byte], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:2226 less[Integer] 128[Byte], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2227 less[Integer] 128[Byte], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2228 less[Integer] 128[Byte], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2229 less[compile-time] 128[Byte], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -32768;
endcode
varvalue r False

$overflow on
code auto:2230 less[Integer] 128[Byte], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2231 less[Integer] 128[Byte], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2232 less[Integer] 128[Byte], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2233 less[compile-time] 128[Byte], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -32767;
endcode
varvalue r False

$overflow on
code auto:2234 less[Integer] 128[Byte], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2235 less[Integer] 128[Byte], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2236 less[Integer] 128[Byte], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2237 less[compile-time] 128[Byte], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -129;
endcode
varvalue r False

$overflow on
code auto:2238 less[Integer] 128[Byte], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2239 less[Integer] 128[Byte], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2240 less[Integer] 128[Byte], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2241 less[compile-time] 128[Byte], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -128;
endcode
varvalue r False

$overflow on
code auto:2242 less[Integer] 128[Byte], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2243 less[Integer] 128[Byte], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2244 less[Integer] 128[Byte], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2245 less[compile-time] 128[Byte], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < -1;
endcode
varvalue r False

$overflow on
code auto:2246 less[Integer] 128[Byte], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2247 less[Integer] 128[Byte], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2248 less[Integer] 128[Byte], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2249 less[compile-time] 128[Byte], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:2250 less[Integer] 128[Byte], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2251 less[Integer] 128[Byte], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2252 less[Integer] 128[Byte], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2253 less[compile-time] 128[Byte], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:2254 less[Integer] 128[Byte], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2255 less[Integer] 128[Byte], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2256 less[Integer] 128[Byte], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2257 less[compile-time] 128[Byte], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:2258 less[Integer] 128[Byte], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2259 less[Integer] 128[Byte], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2260 less[Integer] 128[Byte], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2261 less[compile-time] 128[Byte], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 128;
endcode
varvalue r False

$overflow on
code auto:2262 less[Integer] 128[Byte], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2263 less[Integer] 128[Byte], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2264 less[Integer] 128[Byte], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2265 less[compile-time] 128[Byte], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:2266 less[Integer] 255[Byte], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2267 less[Integer] 255[Byte], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2268 less[Integer] 255[Byte], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2269 less[compile-time] 255[Byte], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32768;
endcode
varvalue r False

$overflow on
code auto:2270 less[Integer] 255[Byte], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2271 less[Integer] 255[Byte], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2272 less[Integer] 255[Byte], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2273 less[compile-time] 255[Byte], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32767;
endcode
varvalue r False

$overflow on
code auto:2274 less[Integer] 255[Byte], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2275 less[Integer] 255[Byte], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2276 less[Integer] 255[Byte], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2277 less[compile-time] 255[Byte], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -129;
endcode
varvalue r False

$overflow on
code auto:2278 less[Integer] 255[Byte], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2279 less[Integer] 255[Byte], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2280 less[Integer] 255[Byte], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2281 less[compile-time] 255[Byte], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:2282 less[Integer] 255[Byte], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2283 less[Integer] 255[Byte], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2284 less[Integer] 255[Byte], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2285 less[compile-time] 255[Byte], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:2286 less[Integer] 255[Byte], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2287 less[Integer] 255[Byte], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2288 less[Integer] 255[Byte], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2289 less[compile-time] 255[Byte], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2290 less[Integer] 255[Byte], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2291 less[Integer] 255[Byte], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2292 less[Integer] 255[Byte], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2293 less[compile-time] 255[Byte], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2294 less[Integer] 255[Byte], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2295 less[Integer] 255[Byte], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2296 less[Integer] 255[Byte], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2297 less[compile-time] 255[Byte], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2298 less[Integer] 255[Byte], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2299 less[Integer] 255[Byte], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2300 less[Integer] 255[Byte], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2301 less[compile-time] 255[Byte], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:2302 less[Integer] 255[Byte], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2303 less[Integer] 255[Byte], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2304 less[Integer] 255[Byte], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2305 less[compile-time] 255[Byte], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:2306 less[Byte] 0[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2307 less[Byte] 0[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2308 less[Byte] 0[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2309 less[compile-time] 0[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2310 less[Byte] 0[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2311 less[Byte] 0[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2312 less[Byte] 0[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2313 less[compile-time] 0[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2314 less[Byte] 0[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2315 less[Byte] 0[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2316 less[Byte] 0[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2317 less[compile-time] 0[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2318 less[Byte] 0[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2319 less[Byte] 0[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2320 less[Byte] 0[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2321 less[compile-time] 0[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:2322 less[Byte] 0[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2323 less[Byte] 0[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2324 less[Byte] 0[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2325 less[compile-time] 0[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:2326 less[Byte] 1[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2327 less[Byte] 1[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2328 less[Byte] 1[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2329 less[compile-time] 1[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:2330 less[Byte] 1[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2331 less[Byte] 1[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2332 less[Byte] 1[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2333 less[compile-time] 1[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 1;
endcode
varvalue r False

$overflow on
code auto:2334 less[Byte] 1[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2335 less[Byte] 1[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2336 less[Byte] 1[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2337 less[compile-time] 1[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 127;
endcode
varvalue r True

$overflow on
code auto:2338 less[Byte] 1[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2339 less[Byte] 1[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2340 less[Byte] 1[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2341 less[compile-time] 1[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 128;
endcode
varvalue r True

$overflow on
code auto:2342 less[Byte] 1[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2343 less[Byte] 1[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2344 less[Byte] 1[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2345 less[compile-time] 1[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:2346 less[Byte] 127[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2347 less[Byte] 127[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2348 less[Byte] 127[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2349 less[compile-time] 127[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:2350 less[Byte] 127[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2351 less[Byte] 127[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2352 less[Byte] 127[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2353 less[compile-time] 127[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 1;
endcode
varvalue r False

$overflow on
code auto:2354 less[Byte] 127[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2355 less[Byte] 127[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2356 less[Byte] 127[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2357 less[compile-time] 127[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 127;
endcode
varvalue r False

$overflow on
code auto:2358 less[Byte] 127[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2359 less[Byte] 127[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2360 less[Byte] 127[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2361 less[compile-time] 127[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 128;
endcode
varvalue r True

$overflow on
code auto:2362 less[Byte] 127[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2363 less[Byte] 127[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2364 less[Byte] 127[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2365 less[compile-time] 127[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:2366 less[Byte] 128[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2367 less[Byte] 128[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2368 less[Byte] 128[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2369 less[compile-time] 128[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:2370 less[Byte] 128[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2371 less[Byte] 128[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2372 less[Byte] 128[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2373 less[compile-time] 128[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 1;
endcode
varvalue r False

$overflow on
code auto:2374 less[Byte] 128[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2375 less[Byte] 128[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2376 less[Byte] 128[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2377 less[compile-time] 128[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 127;
endcode
varvalue r False

$overflow on
code auto:2378 less[Byte] 128[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2379 less[Byte] 128[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2380 less[Byte] 128[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2381 less[compile-time] 128[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 128;
endcode
varvalue r False

$overflow on
code auto:2382 less[Byte] 128[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2383 less[Byte] 128[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2384 less[Byte] 128[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2385 less[compile-time] 128[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:2386 less[Byte] 255[Byte], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2387 less[Byte] 255[Byte], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2388 less[Byte] 255[Byte], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2389 less[compile-time] 255[Byte], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2390 less[Byte] 255[Byte], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2391 less[Byte] 255[Byte], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2392 less[Byte] 255[Byte], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2393 less[compile-time] 255[Byte], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2394 less[Byte] 255[Byte], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2395 less[Byte] 255[Byte], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2396 less[Byte] 255[Byte], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2397 less[compile-time] 255[Byte], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2398 less[Byte] 255[Byte], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2399 less[Byte] 255[Byte], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2400 less[Byte] 255[Byte], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2401 less[compile-time] 255[Byte], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:2402 less[Byte] 255[Byte], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2403 less[Byte] 255[Byte], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2404 less[Byte] 255[Byte], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:2405 less[compile-time] 255[Byte], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:2406 less[Word] 0[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2407 less[Word] 0[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2408 less[Word] 0[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2409 less[compile-time] 0[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2410 less[Word] 0[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2411 less[Word] 0[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2412 less[Word] 0[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2413 less[compile-time] 0[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:2414 less[Word] 0[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2415 less[Word] 0[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2416 less[Word] 0[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2417 less[compile-time] 0[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:2418 less[Word] 0[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2419 less[Word] 0[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2420 less[Word] 0[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2421 less[compile-time] 0[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:2422 less[Word] 0[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2423 less[Word] 0[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2424 less[Word] 0[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2425 less[compile-time] 0[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:2426 less[Word] 1[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2427 less[Word] 1[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2428 less[Word] 1[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2429 less[compile-time] 1[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:2430 less[Word] 1[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2431 less[Word] 1[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2432 less[Word] 1[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2433 less[compile-time] 1[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:2434 less[Word] 1[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2435 less[Word] 1[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2436 less[Word] 1[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2437 less[compile-time] 1[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:2438 less[Word] 1[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2439 less[Word] 1[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2440 less[Word] 1[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2441 less[compile-time] 1[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:2442 less[Word] 1[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2443 less[Word] 1[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2444 less[Word] 1[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2445 less[compile-time] 1[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:2446 less[Word] 127[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2447 less[Word] 127[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2448 less[Word] 127[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2449 less[compile-time] 127[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:2450 less[Word] 127[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2451 less[Word] 127[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2452 less[Word] 127[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2453 less[compile-time] 127[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:2454 less[Word] 127[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2455 less[Word] 127[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2456 less[Word] 127[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2457 less[compile-time] 127[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:2458 less[Word] 127[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2459 less[Word] 127[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2460 less[Word] 127[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2461 less[compile-time] 127[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:2462 less[Word] 127[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2463 less[Word] 127[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2464 less[Word] 127[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2465 less[compile-time] 127[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:2466 less[Word] 128[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2467 less[Word] 128[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2468 less[Word] 128[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2469 less[compile-time] 128[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:2470 less[Word] 128[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2471 less[Word] 128[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2472 less[Word] 128[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2473 less[compile-time] 128[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:2474 less[Word] 128[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2475 less[Word] 128[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2476 less[Word] 128[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2477 less[compile-time] 128[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:2478 less[Word] 128[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2479 less[Word] 128[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2480 less[Word] 128[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2481 less[compile-time] 128[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32768;
endcode
varvalue r True

$overflow on
code auto:2482 less[Word] 128[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2483 less[Word] 128[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2484 less[Word] 128[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2485 less[compile-time] 128[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 65535;
endcode
varvalue r True

$overflow on
code auto:2486 less[Word] 255[Byte], 0[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2487 less[Word] 255[Byte], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2488 less[Word] 255[Byte], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2489 less[compile-time] 255[Byte], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2490 less[Word] 255[Byte], 255[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2491 less[Word] 255[Byte], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2492 less[Word] 255[Byte], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:2493 less[compile-time] 255[Byte], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:2494 less[Word] 255[Byte], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2495 less[Word] 255[Byte], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2496 less[Word] 255[Byte], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2497 less[compile-time] 255[Byte], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:2498 less[Word] 255[Byte], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2499 less[Word] 255[Byte], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2500 less[Word] 255[Byte], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2501 less[compile-time] 255[Byte], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:2502 less[Word] 255[Byte], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2503 less[Word] 255[Byte], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2504 less[Word] 255[Byte], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2505 less[compile-time] 255[Byte], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:2506 less[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2507 less[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2508 less[Pointer] 0[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2509 less[compile-time] 0[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2510 less[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2511 less[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2512 less[Pointer] 0[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2513 less[compile-time] 0[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:2514 less[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2515 less[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2516 less[Pointer] 0[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2517 less[compile-time] 0[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:2518 less[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2519 less[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2520 less[Pointer] 0[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2521 less[compile-time] 0[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:2522 less[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2523 less[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2524 less[Pointer] 0[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2525 less[compile-time] 0[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:2526 less[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2527 less[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r False

code auto:2528 less[Pointer] 1[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2529 less[compile-time] 1[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 0;
endcode
varvalue r False

$overflow on
code auto:2530 less[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2531 less[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2532 less[Pointer] 1[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2533 less[compile-time] 1[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 255;
endcode
varvalue r True

$overflow on
code auto:2534 less[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2535 less[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2536 less[Pointer] 1[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2537 less[compile-time] 1[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32767;
endcode
varvalue r True

$overflow on
code auto:2538 less[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2539 less[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2540 less[Pointer] 1[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2541 less[compile-time] 1[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 32768;
endcode
varvalue r True

$overflow on
code auto:2542 less[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2543 less[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 1 < b;
endcode
varvalue r True

code auto:2544 less[Pointer] 1[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2545 less[compile-time] 1[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 1 < 65535;
endcode
varvalue r True

$overflow on
code auto:2546 less[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2547 less[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r False

code auto:2548 less[Pointer] 127[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2549 less[compile-time] 127[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 0;
endcode
varvalue r False

$overflow on
code auto:2550 less[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2551 less[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2552 less[Pointer] 127[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2553 less[compile-time] 127[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 255;
endcode
varvalue r True

$overflow on
code auto:2554 less[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2555 less[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2556 less[Pointer] 127[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2557 less[compile-time] 127[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32767;
endcode
varvalue r True

$overflow on
code auto:2558 less[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2559 less[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2560 less[Pointer] 127[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2561 less[compile-time] 127[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 32768;
endcode
varvalue r True

$overflow on
code auto:2562 less[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2563 less[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 127 < b;
endcode
varvalue r True

code auto:2564 less[Pointer] 127[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2565 less[compile-time] 127[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 127 < 65535;
endcode
varvalue r True

$overflow on
code auto:2566 less[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2567 less[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r False

code auto:2568 less[Pointer] 128[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2569 less[compile-time] 128[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 0;
endcode
varvalue r False

$overflow on
code auto:2570 less[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2571 less[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2572 less[Pointer] 128[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2573 less[compile-time] 128[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 255;
endcode
varvalue r True

$overflow on
code auto:2574 less[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2575 less[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2576 less[Pointer] 128[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2577 less[compile-time] 128[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32767;
endcode
varvalue r True

$overflow on
code auto:2578 less[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2579 less[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2580 less[Pointer] 128[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2581 less[compile-time] 128[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 32768;
endcode
varvalue r True

$overflow on
code auto:2582 less[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2583 less[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 128 < b;
endcode
varvalue r True

code auto:2584 less[Pointer] 128[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2585 less[compile-time] 128[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 128 < 65535;
endcode
varvalue r True

$overflow on
code auto:2586 less[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2587 less[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2588 less[Pointer] 255[Byte], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2589 less[compile-time] 255[Byte], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2590 less[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2591 less[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2592 less[Pointer] 255[Byte], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:2593 less[compile-time] 255[Byte], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:2594 less[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2595 less[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2596 less[Pointer] 255[Byte], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2597 less[compile-time] 255[Byte], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:2598 less[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2599 less[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2600 less[Pointer] 255[Byte], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:2601 less[compile-time] 255[Byte], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:2602 less[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2603 less[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2604 less[Pointer] 255[Byte], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:2605 less[compile-time] 255[Byte], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:2606 less[Integer] 0[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2607 less[Integer] 0[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2608 less[Integer] 0[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2609 less[compile-time] 0[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:2610 less[Integer] 0[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2611 less[Integer] 0[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2612 less[Integer] 0[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2613 less[compile-time] 0[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -127;
endcode
varvalue r False

$overflow on
code auto:2614 less[Integer] 0[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2615 less[Integer] 0[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2616 less[Integer] 0[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2617 less[compile-time] 0[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:2618 less[Integer] 0[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2619 less[Integer] 0[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2620 less[Integer] 0[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2621 less[compile-time] 0[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2622 less[Integer] 0[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2623 less[Integer] 0[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2624 less[Integer] 0[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2625 less[compile-time] 0[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2626 less[Integer] 0[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2627 less[Integer] 0[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2628 less[Integer] 0[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2629 less[compile-time] 0[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2630 less[Integer] 255[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2631 less[Integer] 255[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2632 less[Integer] 255[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2633 less[compile-time] 255[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:2634 less[Integer] 255[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2635 less[Integer] 255[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2636 less[Integer] 255[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2637 less[compile-time] 255[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -127;
endcode
varvalue r False

$overflow on
code auto:2638 less[Integer] 255[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2639 less[Integer] 255[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2640 less[Integer] 255[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2641 less[compile-time] 255[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:2642 less[Integer] 255[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2643 less[Integer] 255[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2644 less[Integer] 255[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2645 less[compile-time] 255[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2646 less[Integer] 255[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2647 less[Integer] 255[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2648 less[Integer] 255[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2649 less[compile-time] 255[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2650 less[Integer] 255[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2651 less[Integer] 255[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2652 less[Integer] 255[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2653 less[compile-time] 255[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2654 less[Integer] 32767[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2655 less[Integer] 32767[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2656 less[Integer] 32767[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2657 less[compile-time] 32767[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:2658 less[Integer] 32767[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2659 less[Integer] 32767[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2660 less[Integer] 32767[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2661 less[compile-time] 32767[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -127;
endcode
varvalue r False

$overflow on
code auto:2662 less[Integer] 32767[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2663 less[Integer] 32767[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2664 less[Integer] 32767[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2665 less[compile-time] 32767[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:2666 less[Integer] 32767[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2667 less[Integer] 32767[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2668 less[Integer] 32767[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2669 less[compile-time] 32767[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:2670 less[Integer] 32767[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2671 less[Integer] 32767[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2672 less[Integer] 32767[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2673 less[compile-time] 32767[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:2674 less[Integer] 32767[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2675 less[Integer] 32767[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2676 less[Integer] 32767[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2677 less[compile-time] 32767[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:2678 less[Integer] 32768[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2679 less[Integer] 32768[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2680 less[Integer] 32768[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2681 less[compile-time] 32768[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -128;
endcode
varvalue r False

$overflow on
code auto:2682 less[Integer] 32768[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2683 less[Integer] 32768[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2684 less[Integer] 32768[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2685 less[compile-time] 32768[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -127;
endcode
varvalue r False

$overflow on
code auto:2686 less[Integer] 32768[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2687 less[Integer] 32768[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2688 less[Integer] 32768[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2689 less[compile-time] 32768[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -1;
endcode
varvalue r False

$overflow on
code auto:2690 less[Integer] 32768[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2691 less[Integer] 32768[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2692 less[Integer] 32768[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2693 less[compile-time] 32768[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:2694 less[Integer] 32768[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2695 less[Integer] 32768[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2696 less[Integer] 32768[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2697 less[compile-time] 32768[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:2698 less[Integer] 32768[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2699 less[Integer] 32768[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2700 less[Integer] 32768[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2701 less[compile-time] 32768[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:2702 less[Integer] 65535[Word], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2703 less[Integer] 65535[Word], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2704 less[Integer] 65535[Word], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2705 less[compile-time] 65535[Word], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -128;
endcode
varvalue r False

$overflow on
code auto:2706 less[Integer] 65535[Word], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2707 less[Integer] 65535[Word], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2708 less[Integer] 65535[Word], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:2709 less[compile-time] 65535[Word], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -127;
endcode
varvalue r False

$overflow on
code auto:2710 less[Integer] 65535[Word], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2711 less[Integer] 65535[Word], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2712 less[Integer] 65535[Word], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2713 less[compile-time] 65535[Word], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -1;
endcode
varvalue r False

$overflow on
code auto:2714 less[Integer] 65535[Word], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2715 less[Integer] 65535[Word], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2716 less[Integer] 65535[Word], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2717 less[compile-time] 65535[Word], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:2718 less[Integer] 65535[Word], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2719 less[Integer] 65535[Word], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2720 less[Integer] 65535[Word], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2721 less[compile-time] 65535[Word], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:2722 less[Integer] 65535[Word], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2723 less[Integer] 65535[Word], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2724 less[Integer] 65535[Word], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2725 less[compile-time] 65535[Word], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:2726 less[Integer] 0[Word], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2727 less[Integer] 0[Word], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2728 less[Integer] 0[Word], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2729 less[compile-time] 0[Word], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32768;
endcode
varvalue r False

$overflow on
code auto:2730 less[Integer] 0[Word], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2731 less[Integer] 0[Word], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2732 less[Integer] 0[Word], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2733 less[compile-time] 0[Word], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32767;
endcode
varvalue r False

$overflow on
code auto:2734 less[Integer] 0[Word], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2735 less[Integer] 0[Word], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2736 less[Integer] 0[Word], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2737 less[compile-time] 0[Word], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -129;
endcode
varvalue r False

$overflow on
code auto:2738 less[Integer] 0[Word], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2739 less[Integer] 0[Word], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2740 less[Integer] 0[Word], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2741 less[compile-time] 0[Word], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:2742 less[Integer] 0[Word], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2743 less[Integer] 0[Word], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2744 less[Integer] 0[Word], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2745 less[compile-time] 0[Word], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:2746 less[Integer] 0[Word], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2747 less[Integer] 0[Word], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2748 less[Integer] 0[Word], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2749 less[compile-time] 0[Word], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2750 less[Integer] 0[Word], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2751 less[Integer] 0[Word], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2752 less[Integer] 0[Word], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2753 less[compile-time] 0[Word], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2754 less[Integer] 0[Word], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2755 less[Integer] 0[Word], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2756 less[Integer] 0[Word], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2757 less[compile-time] 0[Word], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2758 less[Integer] 0[Word], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2759 less[Integer] 0[Word], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2760 less[Integer] 0[Word], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2761 less[compile-time] 0[Word], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:2762 less[Integer] 0[Word], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2763 less[Integer] 0[Word], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2764 less[Integer] 0[Word], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2765 less[compile-time] 0[Word], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:2766 less[Integer] 255[Word], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2767 less[Integer] 255[Word], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2768 less[Integer] 255[Word], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2769 less[compile-time] 255[Word], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32768;
endcode
varvalue r False

$overflow on
code auto:2770 less[Integer] 255[Word], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2771 less[Integer] 255[Word], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2772 less[Integer] 255[Word], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2773 less[compile-time] 255[Word], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32767;
endcode
varvalue r False

$overflow on
code auto:2774 less[Integer] 255[Word], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2775 less[Integer] 255[Word], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2776 less[Integer] 255[Word], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2777 less[compile-time] 255[Word], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -129;
endcode
varvalue r False

$overflow on
code auto:2778 less[Integer] 255[Word], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2779 less[Integer] 255[Word], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2780 less[Integer] 255[Word], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2781 less[compile-time] 255[Word], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:2782 less[Integer] 255[Word], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2783 less[Integer] 255[Word], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2784 less[Integer] 255[Word], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2785 less[compile-time] 255[Word], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:2786 less[Integer] 255[Word], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2787 less[Integer] 255[Word], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2788 less[Integer] 255[Word], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2789 less[compile-time] 255[Word], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2790 less[Integer] 255[Word], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2791 less[Integer] 255[Word], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2792 less[Integer] 255[Word], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2793 less[compile-time] 255[Word], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2794 less[Integer] 255[Word], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2795 less[Integer] 255[Word], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2796 less[Integer] 255[Word], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2797 less[compile-time] 255[Word], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2798 less[Integer] 255[Word], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2799 less[Integer] 255[Word], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2800 less[Integer] 255[Word], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2801 less[compile-time] 255[Word], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:2802 less[Integer] 255[Word], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2803 less[Integer] 255[Word], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:2804 less[Integer] 255[Word], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:2805 less[compile-time] 255[Word], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:2806 less[Integer] 32767[Word], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2807 less[Integer] 32767[Word], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2808 less[Integer] 32767[Word], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2809 less[compile-time] 32767[Word], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32768;
endcode
varvalue r False

$overflow on
code auto:2810 less[Integer] 32767[Word], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2811 less[Integer] 32767[Word], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2812 less[Integer] 32767[Word], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2813 less[compile-time] 32767[Word], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32767;
endcode
varvalue r False

$overflow on
code auto:2814 less[Integer] 32767[Word], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2815 less[Integer] 32767[Word], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2816 less[Integer] 32767[Word], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2817 less[compile-time] 32767[Word], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -129;
endcode
varvalue r False

$overflow on
code auto:2818 less[Integer] 32767[Word], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2819 less[Integer] 32767[Word], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2820 less[Integer] 32767[Word], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2821 less[compile-time] 32767[Word], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:2822 less[Integer] 32767[Word], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2823 less[Integer] 32767[Word], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2824 less[Integer] 32767[Word], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2825 less[compile-time] 32767[Word], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:2826 less[Integer] 32767[Word], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2827 less[Integer] 32767[Word], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2828 less[Integer] 32767[Word], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2829 less[compile-time] 32767[Word], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:2830 less[Integer] 32767[Word], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2831 less[Integer] 32767[Word], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2832 less[Integer] 32767[Word], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2833 less[compile-time] 32767[Word], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:2834 less[Integer] 32767[Word], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2835 less[Integer] 32767[Word], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2836 less[Integer] 32767[Word], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2837 less[compile-time] 32767[Word], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:2838 less[Integer] 32767[Word], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2839 less[Integer] 32767[Word], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2840 less[Integer] 32767[Word], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2841 less[compile-time] 32767[Word], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:2842 less[Integer] 32767[Word], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2843 less[Integer] 32767[Word], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2844 less[Integer] 32767[Word], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:2845 less[compile-time] 32767[Word], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:2846 less[Integer] 32768[Word], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2847 less[Integer] 32768[Word], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2848 less[Integer] 32768[Word], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2849 less[compile-time] 32768[Word], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -32768;
endcode
varvalue r False

$overflow on
code auto:2850 less[Integer] 32768[Word], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2851 less[Integer] 32768[Word], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2852 less[Integer] 32768[Word], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2853 less[compile-time] 32768[Word], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -32767;
endcode
varvalue r False

$overflow on
code auto:2854 less[Integer] 32768[Word], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2855 less[Integer] 32768[Word], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2856 less[Integer] 32768[Word], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2857 less[compile-time] 32768[Word], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -129;
endcode
varvalue r False

$overflow on
code auto:2858 less[Integer] 32768[Word], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2859 less[Integer] 32768[Word], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2860 less[Integer] 32768[Word], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2861 less[compile-time] 32768[Word], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -128;
endcode
varvalue r False

$overflow on
code auto:2862 less[Integer] 32768[Word], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2863 less[Integer] 32768[Word], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2864 less[Integer] 32768[Word], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2865 less[compile-time] 32768[Word], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -1;
endcode
varvalue r False

$overflow on
code auto:2866 less[Integer] 32768[Word], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2867 less[Integer] 32768[Word], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2868 less[Integer] 32768[Word], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2869 less[compile-time] 32768[Word], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:2870 less[Integer] 32768[Word], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2871 less[Integer] 32768[Word], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2872 less[Integer] 32768[Word], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2873 less[compile-time] 32768[Word], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:2874 less[Integer] 32768[Word], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2875 less[Integer] 32768[Word], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2876 less[Integer] 32768[Word], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2877 less[compile-time] 32768[Word], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:2878 less[Integer] 32768[Word], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2879 less[Integer] 32768[Word], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2880 less[Integer] 32768[Word], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2881 less[compile-time] 32768[Word], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 128;
endcode
varvalue r False

$overflow on
code auto:2882 less[Integer] 32768[Word], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2883 less[Integer] 32768[Word], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2884 less[Integer] 32768[Word], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:2885 less[compile-time] 32768[Word], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:2886 less[Integer] 65535[Word], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2887 less[Integer] 65535[Word], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2888 less[Integer] 65535[Word], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:2889 less[compile-time] 65535[Word], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -32768;
endcode
varvalue r False

$overflow on
code auto:2890 less[Integer] 65535[Word], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2891 less[Integer] 65535[Word], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2892 less[Integer] 65535[Word], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:2893 less[compile-time] 65535[Word], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -32767;
endcode
varvalue r False

$overflow on
code auto:2894 less[Integer] 65535[Word], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2895 less[Integer] 65535[Word], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2896 less[Integer] 65535[Word], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:2897 less[compile-time] 65535[Word], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -129;
endcode
varvalue r False

$overflow on
code auto:2898 less[Integer] 65535[Word], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2899 less[Integer] 65535[Word], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2900 less[Integer] 65535[Word], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:2901 less[compile-time] 65535[Word], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -128;
endcode
varvalue r False

$overflow on
code auto:2902 less[Integer] 65535[Word], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2903 less[Integer] 65535[Word], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2904 less[Integer] 65535[Word], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:2905 less[compile-time] 65535[Word], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -1;
endcode
varvalue r False

$overflow on
code auto:2906 less[Integer] 65535[Word], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2907 less[Integer] 65535[Word], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2908 less[Integer] 65535[Word], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2909 less[compile-time] 65535[Word], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:2910 less[Integer] 65535[Word], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2911 less[Integer] 65535[Word], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2912 less[Integer] 65535[Word], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2913 less[compile-time] 65535[Word], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:2914 less[Integer] 65535[Word], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2915 less[Integer] 65535[Word], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2916 less[Integer] 65535[Word], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2917 less[compile-time] 65535[Word], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:2918 less[Integer] 65535[Word], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2919 less[Integer] 65535[Word], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2920 less[Integer] 65535[Word], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2921 less[compile-time] 65535[Word], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 128;
endcode
varvalue r False

$overflow on
code auto:2922 less[Integer] 65535[Word], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2923 less[Integer] 65535[Word], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:2924 less[Integer] 65535[Word], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:2925 less[compile-time] 65535[Word], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:2926 less[Word] 0[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2927 less[Word] 0[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:2928 less[Word] 0[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2929 less[compile-time] 0[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:2930 less[Word] 0[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2931 less[Word] 0[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2932 less[Word] 0[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:2933 less[compile-time] 0[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:2934 less[Word] 0[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2935 less[Word] 0[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2936 less[Word] 0[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:2937 less[compile-time] 0[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:2938 less[Word] 0[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2939 less[Word] 0[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2940 less[Word] 0[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:2941 less[compile-time] 0[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:2942 less[Word] 0[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:2943 less[Word] 0[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:2944 less[Word] 0[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:2945 less[compile-time] 0[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:2946 less[Word] 255[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2947 less[Word] 255[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2948 less[Word] 255[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2949 less[compile-time] 255[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:2950 less[Word] 255[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2951 less[Word] 255[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2952 less[Word] 255[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2953 less[compile-time] 255[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:2954 less[Word] 255[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2955 less[Word] 255[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2956 less[Word] 255[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2957 less[compile-time] 255[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:2958 less[Word] 255[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2959 less[Word] 255[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2960 less[Word] 255[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2961 less[compile-time] 255[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:2962 less[Word] 255[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2963 less[Word] 255[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:2964 less[Word] 255[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:2965 less[compile-time] 255[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:2966 less[Word] 32767[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2967 less[Word] 32767[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2968 less[Word] 32767[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2969 less[compile-time] 32767[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:2970 less[Word] 32767[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2971 less[Word] 32767[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2972 less[Word] 32767[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2973 less[compile-time] 32767[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:2974 less[Word] 32767[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2975 less[Word] 32767[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2976 less[Word] 32767[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2977 less[compile-time] 32767[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:2978 less[Word] 32767[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2979 less[Word] 32767[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2980 less[Word] 32767[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:2981 less[compile-time] 32767[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:2982 less[Word] 32767[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2983 less[Word] 32767[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:2984 less[Word] 32767[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:2985 less[compile-time] 32767[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:2986 less[Word] 32768[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2987 less[Word] 32768[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2988 less[Word] 32768[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:2989 less[compile-time] 32768[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:2990 less[Word] 32768[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2991 less[Word] 32768[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2992 less[Word] 32768[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:2993 less[compile-time] 32768[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:2994 less[Word] 32768[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2995 less[Word] 32768[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:2996 less[Word] 32768[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:2997 less[compile-time] 32768[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:2998 less[Word] 32768[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:2999 less[Word] 32768[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3000 less[Word] 32768[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3001 less[compile-time] 32768[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 128;
endcode
varvalue r False

$overflow on
code auto:3002 less[Word] 32768[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3003 less[Word] 32768[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3004 less[Word] 32768[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3005 less[compile-time] 32768[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3006 less[Word] 65535[Word], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3007 less[Word] 65535[Word], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3008 less[Word] 65535[Word], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3009 less[compile-time] 65535[Word], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3010 less[Word] 65535[Word], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3011 less[Word] 65535[Word], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3012 less[Word] 65535[Word], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3013 less[compile-time] 65535[Word], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:3014 less[Word] 65535[Word], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3015 less[Word] 65535[Word], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3016 less[Word] 65535[Word], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3017 less[compile-time] 65535[Word], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:3018 less[Word] 65535[Word], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3019 less[Word] 65535[Word], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3020 less[Word] 65535[Word], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3021 less[compile-time] 65535[Word], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 128;
endcode
varvalue r False

$overflow on
code auto:3022 less[Word] 65535[Word], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3023 less[Word] 65535[Word], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3024 less[Word] 65535[Word], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3025 less[compile-time] 65535[Word], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3026 less[Word] 0[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3027 less[Word] 0[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3028 less[Word] 0[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3029 less[compile-time] 0[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3030 less[Word] 0[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3031 less[Word] 0[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3032 less[Word] 0[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:3033 less[compile-time] 0[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:3034 less[Word] 0[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3035 less[Word] 0[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3036 less[Word] 0[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3037 less[compile-time] 0[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:3038 less[Word] 0[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3039 less[Word] 0[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3040 less[Word] 0[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3041 less[compile-time] 0[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:3042 less[Word] 0[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3043 less[Word] 0[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3044 less[Word] 0[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3045 less[compile-time] 0[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:3046 less[Word] 255[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3047 less[Word] 255[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3048 less[Word] 255[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3049 less[compile-time] 255[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3050 less[Word] 255[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3051 less[Word] 255[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3052 less[Word] 255[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3053 less[compile-time] 255[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:3054 less[Word] 255[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3055 less[Word] 255[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3056 less[Word] 255[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3057 less[compile-time] 255[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:3058 less[Word] 255[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3059 less[Word] 255[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3060 less[Word] 255[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3061 less[compile-time] 255[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:3062 less[Word] 255[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3063 less[Word] 255[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3064 less[Word] 255[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3065 less[compile-time] 255[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:3066 less[Word] 32767[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3067 less[Word] 32767[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3068 less[Word] 32767[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3069 less[compile-time] 32767[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3070 less[Word] 32767[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3071 less[Word] 32767[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3072 less[Word] 32767[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3073 less[compile-time] 32767[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:3074 less[Word] 32767[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3075 less[Word] 32767[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3076 less[Word] 32767[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3077 less[compile-time] 32767[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:3078 less[Word] 32767[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3079 less[Word] 32767[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3080 less[Word] 32767[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3081 less[compile-time] 32767[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:3082 less[Word] 32767[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3083 less[Word] 32767[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3084 less[Word] 32767[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3085 less[compile-time] 32767[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:3086 less[Word] 32768[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3087 less[Word] 32768[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3088 less[Word] 32768[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3089 less[compile-time] 32768[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3090 less[Word] 32768[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3091 less[Word] 32768[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3092 less[Word] 32768[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3093 less[compile-time] 32768[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3094 less[Word] 32768[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3095 less[Word] 32768[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3096 less[Word] 32768[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3097 less[compile-time] 32768[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:3098 less[Word] 32768[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3099 less[Word] 32768[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3100 less[Word] 32768[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3101 less[compile-time] 32768[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32768;
endcode
varvalue r False

$overflow on
code auto:3102 less[Word] 32768[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3103 less[Word] 32768[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r True

code auto:3104 less[Word] 32768[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3105 less[compile-time] 32768[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:3106 less[Word] 65535[Word], 0[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3107 less[Word] 65535[Word], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3108 less[Word] 65535[Word], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3109 less[compile-time] 65535[Word], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3110 less[Word] 65535[Word], 255[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3111 less[Word] 65535[Word], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3112 less[Word] 65535[Word], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3113 less[compile-time] 65535[Word], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3114 less[Word] 65535[Word], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3115 less[Word] 65535[Word], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3116 less[Word] 65535[Word], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3117 less[compile-time] 65535[Word], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:3118 less[Word] 65535[Word], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3119 less[Word] 65535[Word], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3120 less[Word] 65535[Word], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3121 less[compile-time] 65535[Word], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32768;
endcode
varvalue r False

$overflow on
code auto:3122 less[Word] 65535[Word], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3123 less[Word] 65535[Word], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3124 less[Word] 65535[Word], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r False

code auto:3125 less[compile-time] 65535[Word], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 65535;
endcode
varvalue r False

$overflow on
code auto:3126 less[Pointer] 0[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3127 less[Pointer] 0[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3128 less[Pointer] 0[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3129 less[compile-time] 0[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3130 less[Pointer] 0[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3131 less[Pointer] 0[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3132 less[Pointer] 0[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:3133 less[compile-time] 0[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:3134 less[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3135 less[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3136 less[Pointer] 0[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3137 less[compile-time] 0[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:3138 less[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3139 less[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3140 less[Pointer] 0[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3141 less[compile-time] 0[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:3142 less[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3143 less[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3144 less[Pointer] 0[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3145 less[compile-time] 0[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:3146 less[Pointer] 255[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3147 less[Pointer] 255[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3148 less[Pointer] 255[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3149 less[compile-time] 255[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3150 less[Pointer] 255[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3151 less[Pointer] 255[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3152 less[Pointer] 255[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3153 less[compile-time] 255[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:3154 less[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3155 less[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3156 less[Pointer] 255[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3157 less[compile-time] 255[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:3158 less[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3159 less[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3160 less[Pointer] 255[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3161 less[compile-time] 255[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:3162 less[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3163 less[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3164 less[Pointer] 255[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3165 less[compile-time] 255[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:3166 less[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3167 less[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3168 less[Pointer] 32767[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3169 less[compile-time] 32767[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3170 less[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3171 less[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3172 less[Pointer] 32767[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3173 less[compile-time] 32767[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:3174 less[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3175 less[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3176 less[Pointer] 32767[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3177 less[compile-time] 32767[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:3178 less[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3179 less[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3180 less[Pointer] 32767[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3181 less[compile-time] 32767[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:3182 less[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3183 less[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3184 less[Pointer] 32767[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3185 less[compile-time] 32767[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:3186 less[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3187 less[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3188 less[Pointer] 32768[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3189 less[compile-time] 32768[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3190 less[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3191 less[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3192 less[Pointer] 32768[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3193 less[compile-time] 32768[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3194 less[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3195 less[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3196 less[Pointer] 32768[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3197 less[compile-time] 32768[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:3198 less[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3199 less[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3200 less[Pointer] 32768[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3201 less[compile-time] 32768[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32768;
endcode
varvalue r False

$overflow on
code auto:3202 less[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3203 less[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r True

code auto:3204 less[Pointer] 32768[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3205 less[compile-time] 32768[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:3206 less[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3207 less[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3208 less[Pointer] 65535[Word], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3209 less[compile-time] 65535[Word], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3210 less[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3211 less[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3212 less[Pointer] 65535[Word], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3213 less[compile-time] 65535[Word], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3214 less[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3215 less[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3216 less[Pointer] 65535[Word], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3217 less[compile-time] 65535[Word], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:3218 less[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3219 less[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3220 less[Pointer] 65535[Word], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3221 less[compile-time] 65535[Word], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32768;
endcode
varvalue r False

$overflow on
code auto:3222 less[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3223 less[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3224 less[Pointer] 65535[Word], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r False

code auto:3225 less[compile-time] 65535[Word], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 65535;
endcode
varvalue r False

$overflow on
code auto:3226 less[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3227 less[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3228 less[Pointer] 0[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3229 less[compile-time] 0[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:3230 less[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3231 less[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3232 less[Pointer] 0[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:3233 less[compile-time] 0[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -127;
endcode
varvalue r False

$overflow on
code auto:3234 less[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3235 less[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3236 less[Pointer] 0[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3237 less[compile-time] 0[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:3238 less[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3239 less[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3240 less[Pointer] 0[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3241 less[compile-time] 0[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3242 less[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3243 less[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3244 less[Pointer] 0[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:3245 less[compile-time] 0[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:3246 less[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3247 less[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3248 less[Pointer] 0[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:3249 less[compile-time] 0[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:3250 less[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3251 less[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3252 less[Pointer] 255[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3253 less[compile-time] 255[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:3254 less[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3255 less[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3256 less[Pointer] 255[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:3257 less[compile-time] 255[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -127;
endcode
varvalue r False

$overflow on
code auto:3258 less[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3259 less[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3260 less[Pointer] 255[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3261 less[compile-time] 255[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:3262 less[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3263 less[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3264 less[Pointer] 255[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3265 less[compile-time] 255[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3266 less[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3267 less[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3268 less[Pointer] 255[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3269 less[compile-time] 255[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:3270 less[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3271 less[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3272 less[Pointer] 255[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3273 less[compile-time] 255[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:3274 less[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3275 less[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3276 less[Pointer] 32767[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3277 less[compile-time] 32767[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:3278 less[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3279 less[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3280 less[Pointer] 32767[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:3281 less[compile-time] 32767[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -127;
endcode
varvalue r False

$overflow on
code auto:3282 less[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3283 less[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3284 less[Pointer] 32767[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3285 less[compile-time] 32767[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:3286 less[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3287 less[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3288 less[Pointer] 32767[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3289 less[compile-time] 32767[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3290 less[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3291 less[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3292 less[Pointer] 32767[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3293 less[compile-time] 32767[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:3294 less[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3295 less[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3296 less[Pointer] 32767[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3297 less[compile-time] 32767[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:3298 less[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3299 less[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3300 less[Pointer] 32768[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3301 less[compile-time] 32768[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -128;
endcode
varvalue r False

$overflow on
code auto:3302 less[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3303 less[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3304 less[Pointer] 32768[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:3305 less[compile-time] 32768[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -127;
endcode
varvalue r False

$overflow on
code auto:3306 less[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3307 less[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3308 less[Pointer] 32768[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3309 less[compile-time] 32768[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -1;
endcode
varvalue r False

$overflow on
code auto:3310 less[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3311 less[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3312 less[Pointer] 32768[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3313 less[compile-time] 32768[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3314 less[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3315 less[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3316 less[Pointer] 32768[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3317 less[compile-time] 32768[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:3318 less[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3319 less[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3320 less[Pointer] 32768[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3321 less[compile-time] 32768[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:3322 less[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3323 less[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3324 less[Pointer] 65535[Pointer], -128[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3325 less[compile-time] 65535[Pointer], -128[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -128;
endcode
varvalue r False

$overflow on
code auto:3326 less[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3327 less[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3328 less[Pointer] 65535[Pointer], -127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -127;
endcode
varvalue r False

code auto:3329 less[compile-time] 65535[Pointer], -127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -127;
endcode
varvalue r False

$overflow on
code auto:3330 less[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3331 less[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = -1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3332 less[Pointer] 65535[Pointer], -1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3333 less[compile-time] 65535[Pointer], -1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -1;
endcode
varvalue r False

$overflow on
code auto:3334 less[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3335 less[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3336 less[Pointer] 65535[Pointer], 0[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3337 less[compile-time] 65535[Pointer], 0[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3338 less[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3339 less[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3340 less[Pointer] 65535[Pointer], 1[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3341 less[compile-time] 65535[Pointer], 1[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:3342 less[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3343 less[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Left immediate $overflow on
  var  b: Int8 = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3344 less[Pointer] 65535[Pointer], 127[Int8] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3345 less[compile-time] 65535[Pointer], 127[Int8] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:3346 less[Pointer] 0[Pointer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3347 less[Pointer] 0[Pointer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3348 less[Pointer] 0[Pointer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:3349 less[compile-time] 0[Pointer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32768;
endcode
varvalue r False

$overflow on
code auto:3350 less[Pointer] 0[Pointer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3351 less[Pointer] 0[Pointer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3352 less[Pointer] 0[Pointer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:3353 less[compile-time] 0[Pointer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -32767;
endcode
varvalue r False

$overflow on
code auto:3354 less[Pointer] 0[Pointer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3355 less[Pointer] 0[Pointer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3356 less[Pointer] 0[Pointer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:3357 less[compile-time] 0[Pointer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -129;
endcode
varvalue r False

$overflow on
code auto:3358 less[Pointer] 0[Pointer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3359 less[Pointer] 0[Pointer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3360 less[Pointer] 0[Pointer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3361 less[compile-time] 0[Pointer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -128;
endcode
varvalue r False

$overflow on
code auto:3362 less[Pointer] 0[Pointer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3363 less[Pointer] 0[Pointer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3364 less[Pointer] 0[Pointer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3365 less[compile-time] 0[Pointer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < -1;
endcode
varvalue r False

$overflow on
code auto:3366 less[Pointer] 0[Pointer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3367 less[Pointer] 0[Pointer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3368 less[Pointer] 0[Pointer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3369 less[compile-time] 0[Pointer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3370 less[Pointer] 0[Pointer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3371 less[Pointer] 0[Pointer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3372 less[Pointer] 0[Pointer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:3373 less[compile-time] 0[Pointer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:3374 less[Pointer] 0[Pointer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3375 less[Pointer] 0[Pointer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3376 less[Pointer] 0[Pointer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:3377 less[compile-time] 0[Pointer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:3378 less[Pointer] 0[Pointer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3379 less[Pointer] 0[Pointer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3380 less[Pointer] 0[Pointer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:3381 less[compile-time] 0[Pointer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:3382 less[Pointer] 0[Pointer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3383 less[Pointer] 0[Pointer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3384 less[Pointer] 0[Pointer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3385 less[compile-time] 0[Pointer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:3386 less[Pointer] 255[Pointer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3387 less[Pointer] 255[Pointer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3388 less[Pointer] 255[Pointer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:3389 less[compile-time] 255[Pointer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32768;
endcode
varvalue r False

$overflow on
code auto:3390 less[Pointer] 255[Pointer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3391 less[Pointer] 255[Pointer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3392 less[Pointer] 255[Pointer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:3393 less[compile-time] 255[Pointer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -32767;
endcode
varvalue r False

$overflow on
code auto:3394 less[Pointer] 255[Pointer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3395 less[Pointer] 255[Pointer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3396 less[Pointer] 255[Pointer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:3397 less[compile-time] 255[Pointer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -129;
endcode
varvalue r False

$overflow on
code auto:3398 less[Pointer] 255[Pointer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3399 less[Pointer] 255[Pointer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3400 less[Pointer] 255[Pointer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3401 less[compile-time] 255[Pointer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -128;
endcode
varvalue r False

$overflow on
code auto:3402 less[Pointer] 255[Pointer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3403 less[Pointer] 255[Pointer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3404 less[Pointer] 255[Pointer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3405 less[compile-time] 255[Pointer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < -1;
endcode
varvalue r False

$overflow on
code auto:3406 less[Pointer] 255[Pointer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3407 less[Pointer] 255[Pointer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3408 less[Pointer] 255[Pointer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3409 less[compile-time] 255[Pointer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3410 less[Pointer] 255[Pointer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3411 less[Pointer] 255[Pointer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3412 less[Pointer] 255[Pointer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3413 less[compile-time] 255[Pointer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:3414 less[Pointer] 255[Pointer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3415 less[Pointer] 255[Pointer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3416 less[Pointer] 255[Pointer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3417 less[compile-time] 255[Pointer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:3418 less[Pointer] 255[Pointer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3419 less[Pointer] 255[Pointer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3420 less[Pointer] 255[Pointer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3421 less[compile-time] 255[Pointer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:3422 less[Pointer] 255[Pointer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3423 less[Pointer] 255[Pointer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3424 less[Pointer] 255[Pointer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3425 less[compile-time] 255[Pointer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:3426 less[Pointer] 32767[Pointer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3427 less[Pointer] 32767[Pointer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3428 less[Pointer] 32767[Pointer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:3429 less[compile-time] 32767[Pointer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32768;
endcode
varvalue r False

$overflow on
code auto:3430 less[Pointer] 32767[Pointer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3431 less[Pointer] 32767[Pointer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3432 less[Pointer] 32767[Pointer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:3433 less[compile-time] 32767[Pointer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -32767;
endcode
varvalue r False

$overflow on
code auto:3434 less[Pointer] 32767[Pointer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3435 less[Pointer] 32767[Pointer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3436 less[Pointer] 32767[Pointer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:3437 less[compile-time] 32767[Pointer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -129;
endcode
varvalue r False

$overflow on
code auto:3438 less[Pointer] 32767[Pointer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3439 less[Pointer] 32767[Pointer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3440 less[Pointer] 32767[Pointer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3441 less[compile-time] 32767[Pointer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -128;
endcode
varvalue r False

$overflow on
code auto:3442 less[Pointer] 32767[Pointer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3443 less[Pointer] 32767[Pointer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3444 less[Pointer] 32767[Pointer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3445 less[compile-time] 32767[Pointer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < -1;
endcode
varvalue r False

$overflow on
code auto:3446 less[Pointer] 32767[Pointer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3447 less[Pointer] 32767[Pointer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3448 less[Pointer] 32767[Pointer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3449 less[compile-time] 32767[Pointer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3450 less[Pointer] 32767[Pointer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3451 less[Pointer] 32767[Pointer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3452 less[Pointer] 32767[Pointer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3453 less[compile-time] 32767[Pointer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:3454 less[Pointer] 32767[Pointer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3455 less[Pointer] 32767[Pointer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3456 less[Pointer] 32767[Pointer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3457 less[compile-time] 32767[Pointer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:3458 less[Pointer] 32767[Pointer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3459 less[Pointer] 32767[Pointer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3460 less[Pointer] 32767[Pointer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3461 less[compile-time] 32767[Pointer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:3462 less[Pointer] 32767[Pointer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3463 less[Pointer] 32767[Pointer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3464 less[Pointer] 32767[Pointer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3465 less[compile-time] 32767[Pointer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:3466 less[Pointer] 32768[Pointer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3467 less[Pointer] 32768[Pointer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3468 less[Pointer] 32768[Pointer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:3469 less[compile-time] 32768[Pointer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -32768;
endcode
varvalue r False

$overflow on
code auto:3470 less[Pointer] 32768[Pointer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3471 less[Pointer] 32768[Pointer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3472 less[Pointer] 32768[Pointer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:3473 less[compile-time] 32768[Pointer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -32767;
endcode
varvalue r False

$overflow on
code auto:3474 less[Pointer] 32768[Pointer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3475 less[Pointer] 32768[Pointer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3476 less[Pointer] 32768[Pointer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:3477 less[compile-time] 32768[Pointer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -129;
endcode
varvalue r False

$overflow on
code auto:3478 less[Pointer] 32768[Pointer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3479 less[Pointer] 32768[Pointer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3480 less[Pointer] 32768[Pointer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3481 less[compile-time] 32768[Pointer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -128;
endcode
varvalue r False

$overflow on
code auto:3482 less[Pointer] 32768[Pointer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3483 less[Pointer] 32768[Pointer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3484 less[Pointer] 32768[Pointer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3485 less[compile-time] 32768[Pointer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < -1;
endcode
varvalue r False

$overflow on
code auto:3486 less[Pointer] 32768[Pointer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3487 less[Pointer] 32768[Pointer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3488 less[Pointer] 32768[Pointer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3489 less[compile-time] 32768[Pointer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3490 less[Pointer] 32768[Pointer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3491 less[Pointer] 32768[Pointer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3492 less[Pointer] 32768[Pointer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3493 less[compile-time] 32768[Pointer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:3494 less[Pointer] 32768[Pointer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3495 less[Pointer] 32768[Pointer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3496 less[Pointer] 32768[Pointer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3497 less[compile-time] 32768[Pointer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:3498 less[Pointer] 32768[Pointer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3499 less[Pointer] 32768[Pointer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3500 less[Pointer] 32768[Pointer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3501 less[compile-time] 32768[Pointer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 128;
endcode
varvalue r False

$overflow on
code auto:3502 less[Pointer] 32768[Pointer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3503 less[Pointer] 32768[Pointer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3504 less[Pointer] 32768[Pointer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3505 less[compile-time] 32768[Pointer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:3506 less[Pointer] 65535[Pointer], -32768[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3507 less[Pointer] 65535[Pointer], -32768[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3508 less[Pointer] 65535[Pointer], -32768[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -32768;
endcode
varvalue r False

code auto:3509 less[compile-time] 65535[Pointer], -32768[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -32768;
endcode
varvalue r False

$overflow on
code auto:3510 less[Pointer] 65535[Pointer], -32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3511 less[Pointer] 65535[Pointer], -32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3512 less[Pointer] 65535[Pointer], -32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -32767;
endcode
varvalue r False

code auto:3513 less[compile-time] 65535[Pointer], -32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -32767;
endcode
varvalue r False

$overflow on
code auto:3514 less[Pointer] 65535[Pointer], -129[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3515 less[Pointer] 65535[Pointer], -129[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -129;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3516 less[Pointer] 65535[Pointer], -129[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -129;
endcode
varvalue r False

code auto:3517 less[compile-time] 65535[Pointer], -129[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -129;
endcode
varvalue r False

$overflow on
code auto:3518 less[Pointer] 65535[Pointer], -128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3519 less[Pointer] 65535[Pointer], -128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3520 less[Pointer] 65535[Pointer], -128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -128;
endcode
varvalue r False

code auto:3521 less[compile-time] 65535[Pointer], -128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -128;
endcode
varvalue r False

$overflow on
code auto:3522 less[Pointer] 65535[Pointer], -1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3523 less[Pointer] 65535[Pointer], -1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = -1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3524 less[Pointer] 65535[Pointer], -1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < -1;
endcode
varvalue r False

code auto:3525 less[compile-time] 65535[Pointer], -1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < -1;
endcode
varvalue r False

$overflow on
code auto:3526 less[Pointer] 65535[Pointer], 0[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3527 less[Pointer] 65535[Pointer], 0[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3528 less[Pointer] 65535[Pointer], 0[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3529 less[compile-time] 65535[Pointer], 0[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3530 less[Pointer] 65535[Pointer], 1[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3531 less[Pointer] 65535[Pointer], 1[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3532 less[Pointer] 65535[Pointer], 1[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3533 less[compile-time] 65535[Pointer], 1[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:3534 less[Pointer] 65535[Pointer], 127[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3535 less[Pointer] 65535[Pointer], 127[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3536 less[Pointer] 65535[Pointer], 127[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3537 less[compile-time] 65535[Pointer], 127[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:3538 less[Pointer] 65535[Pointer], 128[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3539 less[Pointer] 65535[Pointer], 128[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3540 less[Pointer] 65535[Pointer], 128[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3541 less[compile-time] 65535[Pointer], 128[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 128;
endcode
varvalue r False

$overflow on
code auto:3542 less[Pointer] 65535[Pointer], 32767[Integer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3543 less[Pointer] 65535[Pointer], 32767[Integer] -> [Boolean] Left immediate $overflow on
  var  b: Integer = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3544 less[Pointer] 65535[Pointer], 32767[Integer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3545 less[compile-time] 65535[Pointer], 32767[Integer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:3546 less[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3547 less[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3548 less[Pointer] 0[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3549 less[compile-time] 0[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3550 less[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3551 less[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3552 less[Pointer] 0[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r True

code auto:3553 less[compile-time] 0[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 1;
endcode
varvalue r True

$overflow on
code auto:3554 less[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3555 less[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3556 less[Pointer] 0[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r True

code auto:3557 less[compile-time] 0[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 127;
endcode
varvalue r True

$overflow on
code auto:3558 less[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3559 less[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3560 less[Pointer] 0[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r True

code auto:3561 less[compile-time] 0[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 128;
endcode
varvalue r True

$overflow on
code auto:3562 less[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3563 less[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3564 less[Pointer] 0[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:3565 less[compile-time] 0[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:3566 less[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3567 less[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3568 less[Pointer] 255[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3569 less[compile-time] 255[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3570 less[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3571 less[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3572 less[Pointer] 255[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3573 less[compile-time] 255[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 1;
endcode
varvalue r False

$overflow on
code auto:3574 less[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3575 less[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3576 less[Pointer] 255[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3577 less[compile-time] 255[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 127;
endcode
varvalue r False

$overflow on
code auto:3578 less[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3579 less[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3580 less[Pointer] 255[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3581 less[compile-time] 255[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 128;
endcode
varvalue r False

$overflow on
code auto:3582 less[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3583 less[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3584 less[Pointer] 255[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3585 less[compile-time] 255[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:3586 less[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3587 less[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3588 less[Pointer] 32767[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3589 less[compile-time] 32767[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3590 less[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3591 less[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3592 less[Pointer] 32767[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3593 less[compile-time] 32767[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 1;
endcode
varvalue r False

$overflow on
code auto:3594 less[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3595 less[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3596 less[Pointer] 32767[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3597 less[compile-time] 32767[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 127;
endcode
varvalue r False

$overflow on
code auto:3598 less[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3599 less[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3600 less[Pointer] 32767[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3601 less[compile-time] 32767[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 128;
endcode
varvalue r False

$overflow on
code auto:3602 less[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3603 less[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3604 less[Pointer] 32767[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3605 less[compile-time] 32767[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:3606 less[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3607 less[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3608 less[Pointer] 32768[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3609 less[compile-time] 32768[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3610 less[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3611 less[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3612 less[Pointer] 32768[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3613 less[compile-time] 32768[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 1;
endcode
varvalue r False

$overflow on
code auto:3614 less[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3615 less[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3616 less[Pointer] 32768[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3617 less[compile-time] 32768[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 127;
endcode
varvalue r False

$overflow on
code auto:3618 less[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3619 less[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3620 less[Pointer] 32768[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3621 less[compile-time] 32768[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 128;
endcode
varvalue r False

$overflow on
code auto:3622 less[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3623 less[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3624 less[Pointer] 32768[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3625 less[compile-time] 32768[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3626 less[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3627 less[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3628 less[Pointer] 65535[Pointer], 0[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3629 less[compile-time] 65535[Pointer], 0[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3630 less[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3631 less[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3632 less[Pointer] 65535[Pointer], 1[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 1;
endcode
varvalue r False

code auto:3633 less[compile-time] 65535[Pointer], 1[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 1;
endcode
varvalue r False

$overflow on
code auto:3634 less[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3635 less[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3636 less[Pointer] 65535[Pointer], 127[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 127;
endcode
varvalue r False

code auto:3637 less[compile-time] 65535[Pointer], 127[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 127;
endcode
varvalue r False

$overflow on
code auto:3638 less[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3639 less[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3640 less[Pointer] 65535[Pointer], 128[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 128;
endcode
varvalue r False

code auto:3641 less[compile-time] 65535[Pointer], 128[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 128;
endcode
varvalue r False

$overflow on
code auto:3642 less[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3643 less[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3644 less[Pointer] 65535[Pointer], 255[Byte] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3645 less[compile-time] 65535[Pointer], 255[Byte] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3646 less[Pointer] 0[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3647 less[Pointer] 0[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3648 less[Pointer] 0[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3649 less[compile-time] 0[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3650 less[Pointer] 0[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3651 less[Pointer] 0[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3652 less[Pointer] 0[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:3653 less[compile-time] 0[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:3654 less[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3655 less[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3656 less[Pointer] 0[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3657 less[compile-time] 0[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:3658 less[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3659 less[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3660 less[Pointer] 0[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3661 less[compile-time] 0[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:3662 less[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3663 less[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3664 less[Pointer] 0[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3665 less[compile-time] 0[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:3666 less[Pointer] 255[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3667 less[Pointer] 255[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3668 less[Pointer] 255[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3669 less[compile-time] 255[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3670 less[Pointer] 255[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3671 less[Pointer] 255[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3672 less[Pointer] 255[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3673 less[compile-time] 255[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:3674 less[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3675 less[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3676 less[Pointer] 255[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3677 less[compile-time] 255[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:3678 less[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3679 less[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3680 less[Pointer] 255[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3681 less[compile-time] 255[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:3682 less[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3683 less[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3684 less[Pointer] 255[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3685 less[compile-time] 255[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:3686 less[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3687 less[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3688 less[Pointer] 32767[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3689 less[compile-time] 32767[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3690 less[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3691 less[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3692 less[Pointer] 32767[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3693 less[compile-time] 32767[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:3694 less[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3695 less[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3696 less[Pointer] 32767[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3697 less[compile-time] 32767[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:3698 less[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3699 less[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3700 less[Pointer] 32767[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3701 less[compile-time] 32767[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:3702 less[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3703 less[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3704 less[Pointer] 32767[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3705 less[compile-time] 32767[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:3706 less[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3707 less[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3708 less[Pointer] 32768[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3709 less[compile-time] 32768[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3710 less[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3711 less[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3712 less[Pointer] 32768[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3713 less[compile-time] 32768[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3714 less[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3715 less[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3716 less[Pointer] 32768[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3717 less[compile-time] 32768[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:3718 less[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3719 less[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3720 less[Pointer] 32768[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3721 less[compile-time] 32768[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32768;
endcode
varvalue r False

$overflow on
code auto:3722 less[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3723 less[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r True

code auto:3724 less[Pointer] 32768[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3725 less[compile-time] 32768[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:3726 less[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3727 less[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3728 less[Pointer] 65535[Pointer], 0[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3729 less[compile-time] 65535[Pointer], 0[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3730 less[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3731 less[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3732 less[Pointer] 65535[Pointer], 255[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3733 less[compile-time] 65535[Pointer], 255[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3734 less[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3735 less[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3736 less[Pointer] 65535[Pointer], 32767[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3737 less[compile-time] 65535[Pointer], 32767[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:3738 less[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3739 less[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3740 less[Pointer] 65535[Pointer], 32768[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3741 less[compile-time] 65535[Pointer], 32768[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32768;
endcode
varvalue r False

$overflow on
code auto:3742 less[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3743 less[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3744 less[Pointer] 65535[Pointer], 65535[Word] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r False

code auto:3745 less[compile-time] 65535[Pointer], 65535[Word] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 65535;
endcode
varvalue r False

$overflow on
code auto:3746 less[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3747 less[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r False

code auto:3748 less[Pointer] 0[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3749 less[compile-time] 0[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 0;
endcode
varvalue r False

$overflow on
code auto:3750 less[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3751 less[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3752 less[Pointer] 0[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r True

code auto:3753 less[compile-time] 0[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 255;
endcode
varvalue r True

$overflow on
code auto:3754 less[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3755 less[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3756 less[Pointer] 0[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3757 less[compile-time] 0[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32767;
endcode
varvalue r True

$overflow on
code auto:3758 less[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3759 less[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3760 less[Pointer] 0[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3761 less[compile-time] 0[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 32768;
endcode
varvalue r True

$overflow on
code auto:3762 less[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3763 less[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 0 < b;
endcode
varvalue r True

code auto:3764 less[Pointer] 0[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 0;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3765 less[compile-time] 0[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 0 < 65535;
endcode
varvalue r True

$overflow on
code auto:3766 less[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3767 less[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3768 less[Pointer] 255[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3769 less[compile-time] 255[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 0;
endcode
varvalue r False

$overflow on
code auto:3770 less[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3771 less[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r False

code auto:3772 less[Pointer] 255[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3773 less[compile-time] 255[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 255;
endcode
varvalue r False

$overflow on
code auto:3774 less[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3775 less[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3776 less[Pointer] 255[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r True

code auto:3777 less[compile-time] 255[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32767;
endcode
varvalue r True

$overflow on
code auto:3778 less[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3779 less[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3780 less[Pointer] 255[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3781 less[compile-time] 255[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 32768;
endcode
varvalue r True

$overflow on
code auto:3782 less[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3783 less[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 255 < b;
endcode
varvalue r True

code auto:3784 less[Pointer] 255[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 255;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3785 less[compile-time] 255[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 255 < 65535;
endcode
varvalue r True

$overflow on
code auto:3786 less[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3787 less[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3788 less[Pointer] 32767[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3789 less[compile-time] 32767[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 0;
endcode
varvalue r False

$overflow on
code auto:3790 less[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3791 less[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3792 less[Pointer] 32767[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3793 less[compile-time] 32767[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 255;
endcode
varvalue r False

$overflow on
code auto:3794 less[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3795 less[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r False

code auto:3796 less[Pointer] 32767[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3797 less[compile-time] 32767[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32767;
endcode
varvalue r False

$overflow on
code auto:3798 less[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3799 less[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3800 less[Pointer] 32767[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r True

code auto:3801 less[compile-time] 32767[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 32768;
endcode
varvalue r True

$overflow on
code auto:3802 less[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3803 less[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32767 < b;
endcode
varvalue r True

code auto:3804 less[Pointer] 32767[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32767;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3805 less[compile-time] 32767[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32767 < 65535;
endcode
varvalue r True

$overflow on
code auto:3806 less[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3807 less[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3808 less[Pointer] 32768[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3809 less[compile-time] 32768[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 0;
endcode
varvalue r False

$overflow on
code auto:3810 less[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3811 less[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3812 less[Pointer] 32768[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3813 less[compile-time] 32768[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 255;
endcode
varvalue r False

$overflow on
code auto:3814 less[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3815 less[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3816 less[Pointer] 32768[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3817 less[compile-time] 32768[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32767;
endcode
varvalue r False

$overflow on
code auto:3818 less[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3819 less[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r False

code auto:3820 less[Pointer] 32768[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3821 less[compile-time] 32768[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 32768;
endcode
varvalue r False

$overflow on
code auto:3822 less[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3823 less[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 32768 < b;
endcode
varvalue r True

code auto:3824 less[Pointer] 32768[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 32768;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r True

code auto:3825 less[compile-time] 32768[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 32768 < 65535;
endcode
varvalue r True

$overflow on
code auto:3826 less[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3827 less[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 0;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3828 less[Pointer] 65535[Pointer], 0[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 0;
endcode
varvalue r False

code auto:3829 less[compile-time] 65535[Pointer], 0[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 0;
endcode
varvalue r False

$overflow on
code auto:3830 less[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3831 less[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 255;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3832 less[Pointer] 65535[Pointer], 255[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 255;
endcode
varvalue r False

code auto:3833 less[compile-time] 65535[Pointer], 255[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 255;
endcode
varvalue r False

$overflow on
code auto:3834 less[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3835 less[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32767;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3836 less[Pointer] 65535[Pointer], 32767[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 32767;
endcode
varvalue r False

code auto:3837 less[compile-time] 65535[Pointer], 32767[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32767;
endcode
varvalue r False

$overflow on
code auto:3838 less[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3839 less[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 32768;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3840 less[Pointer] 65535[Pointer], 32768[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 32768;
endcode
varvalue r False

code auto:3841 less[compile-time] 65535[Pointer], 32768[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 32768;
endcode
varvalue r False

$overflow on
code auto:3842 less[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3843 less[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Left immediate $overflow on
  var  b: Pointer = 65535;
  var  r: Boolean;
  r := 65535 < b;
endcode
varvalue r False

code auto:3844 less[Pointer] 65535[Pointer], 65535[Pointer] -> [Boolean] Right immediate $overflow on
  var  a: Pointer = 65535;
  var  r: Boolean;
  r := a < 65535;
endcode
varvalue r False

code auto:3845 less[compile-time] 65535[Pointer], 65535[Pointer] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := 65535 < 65535;
endcode
varvalue r False

$overflow on
code auto:3846 less[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3847 less[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := False < b;
endcode
varvalue r False

code auto:3848 less[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a < False;
endcode
varvalue r False

code auto:3849 less[compile-time] 0[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False < False;
endcode
varvalue r False

$overflow on
code auto:3850 less[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3851 less[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := False < b;
endcode
varvalue r True

code auto:3852 less[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a < True;
endcode
varvalue r True

code auto:3853 less[compile-time] 0[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False < True;
endcode
varvalue r True

$overflow on
code auto:3854 less[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3855 less[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := True < b;
endcode
varvalue r False

code auto:3856 less[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a < False;
endcode
varvalue r False

code auto:3857 less[compile-time] 255[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True < False;
endcode
varvalue r False

$overflow on
code auto:3858 less[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3859 less[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := True < b;
endcode
varvalue r False

code auto:3860 less[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a < True;
endcode
varvalue r False

code auto:3861 less[compile-time] 255[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True < True;
endcode
varvalue r False

$overflow on
code auto:3862 less[Char] 0[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3863 less[Char] 0[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #0 < b;
endcode
varvalue r False

code auto:3864 less[Char] 0[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a < #0;
endcode
varvalue r False

code auto:3865 less[compile-time] 0[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 < #0;
endcode
varvalue r False

$overflow on
code auto:3866 less[Char] 0[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #31;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3867 less[Char] 0[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #0 < b;
endcode
varvalue r True

code auto:3868 less[Char] 0[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a < #31;
endcode
varvalue r True

code auto:3869 less[compile-time] 0[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 < #31;
endcode
varvalue r True

$overflow on
code auto:3870 less[Char] 0[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3871 less[Char] 0[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #0 < b;
endcode
varvalue r True

code auto:3872 less[Char] 0[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a < ' ';
endcode
varvalue r True

code auto:3873 less[compile-time] 0[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 < ' ';
endcode
varvalue r True

$overflow on
code auto:3874 less[Char] 0[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #0;
  var  b: Char = #255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3875 less[Char] 0[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #0 < b;
endcode
varvalue r True

code auto:3876 less[Char] 0[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #0;
  var  r: Boolean;
  r := a < #255;
endcode
varvalue r True

code auto:3877 less[compile-time] 0[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #0 < #255;
endcode
varvalue r True

$overflow on
code auto:3878 less[Char] 31[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3879 less[Char] 31[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #31 < b;
endcode
varvalue r False

code auto:3880 less[Char] 31[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a < #0;
endcode
varvalue r False

code auto:3881 less[compile-time] 31[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 < #0;
endcode
varvalue r False

$overflow on
code auto:3882 less[Char] 31[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #31;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3883 less[Char] 31[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #31 < b;
endcode
varvalue r False

code auto:3884 less[Char] 31[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a < #31;
endcode
varvalue r False

code auto:3885 less[compile-time] 31[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 < #31;
endcode
varvalue r False

$overflow on
code auto:3886 less[Char] 31[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3887 less[Char] 31[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #31 < b;
endcode
varvalue r True

code auto:3888 less[Char] 31[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a < ' ';
endcode
varvalue r True

code auto:3889 less[compile-time] 31[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 < ' ';
endcode
varvalue r True

$overflow on
code auto:3890 less[Char] 31[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #31;
  var  b: Char = #255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3891 less[Char] 31[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #31 < b;
endcode
varvalue r True

code auto:3892 less[Char] 31[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #31;
  var  r: Boolean;
  r := a < #255;
endcode
varvalue r True

code auto:3893 less[compile-time] 31[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #31 < #255;
endcode
varvalue r True

$overflow on
code auto:3894 less[Char] 32[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3895 less[Char] 32[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := ' ' < b;
endcode
varvalue r False

code auto:3896 less[Char] 32[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a < #0;
endcode
varvalue r False

code auto:3897 less[compile-time] 32[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' < #0;
endcode
varvalue r False

$overflow on
code auto:3898 less[Char] 32[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #31;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3899 less[Char] 32[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := ' ' < b;
endcode
varvalue r False

code auto:3900 less[Char] 32[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a < #31;
endcode
varvalue r False

code auto:3901 less[compile-time] 32[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' < #31;
endcode
varvalue r False

$overflow on
code auto:3902 less[Char] 32[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = ' ';
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3903 less[Char] 32[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := ' ' < b;
endcode
varvalue r False

code auto:3904 less[Char] 32[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a < ' ';
endcode
varvalue r False

code auto:3905 less[compile-time] 32[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' < ' ';
endcode
varvalue r False

$overflow on
code auto:3906 less[Char] 32[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = ' ';
  var  b: Char = #255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r True

code auto:3907 less[Char] 32[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := ' ' < b;
endcode
varvalue r True

code auto:3908 less[Char] 32[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = ' ';
  var  r: Boolean;
  r := a < #255;
endcode
varvalue r True

code auto:3909 less[compile-time] 32[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := ' ' < #255;
endcode
varvalue r True

$overflow on
code auto:3910 less[Char] 255[Char], 0[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #0;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3911 less[Char] 255[Char], 0[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #0;
  var  r: Boolean;
  r := #255 < b;
endcode
varvalue r False

code auto:3912 less[Char] 255[Char], 0[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a < #0;
endcode
varvalue r False

code auto:3913 less[compile-time] 255[Char], 0[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 < #0;
endcode
varvalue r False

$overflow on
code auto:3914 less[Char] 255[Char], 31[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #31;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3915 less[Char] 255[Char], 31[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #31;
  var  r: Boolean;
  r := #255 < b;
endcode
varvalue r False

code auto:3916 less[Char] 255[Char], 31[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a < #31;
endcode
varvalue r False

code auto:3917 less[compile-time] 255[Char], 31[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 < #31;
endcode
varvalue r False

$overflow on
code auto:3918 less[Char] 255[Char], 32[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = ' ';
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3919 less[Char] 255[Char], 32[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = ' ';
  var  r: Boolean;
  r := #255 < b;
endcode
varvalue r False

code auto:3920 less[Char] 255[Char], 32[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a < ' ';
endcode
varvalue r False

code auto:3921 less[compile-time] 255[Char], 32[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 < ' ';
endcode
varvalue r False

$overflow on
code auto:3922 less[Char] 255[Char], 255[Char] -> [Boolean] Var $overflow on
  var  a: Char = #255;
  var  b: Char = #255;
  var  r: Boolean;
  r := a < b;
endcode
varvalue r False

code auto:3923 less[Char] 255[Char], 255[Char] -> [Boolean] Left immediate $overflow on
  var  b: Char = #255;
  var  r: Boolean;
  r := #255 < b;
endcode
varvalue r False

code auto:3924 less[Char] 255[Char], 255[Char] -> [Boolean] Right immediate $overflow on
  var  a: Char = #255;
  var  r: Boolean;
  r := a < #255;
endcode
varvalue r False

code auto:3925 less[compile-time] 255[Char], 255[Char] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := #255 < #255;
endcode
varvalue r False

