;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 shl[Int8] -128[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3 shl[compile-time] -128[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:4 shl[Int8] -128[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5 shl[compile-time] -128[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6 shl[Int8] -128[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7 shl[compile-time] -128[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8 shl[Int8] -128[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:9 shl[compile-time] -128[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:10 shl[Int8] -128[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:11 shl[compile-time] -128[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:12 shl[Int8] -128[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:13 shl[compile-time] -128[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:14 shl[Int8] -127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:15 shl[compile-time] -127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:16 shl[Int8] -127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:17 shl[compile-time] -127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:18 shl[Int8] -127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:19 shl[compile-time] -127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:20 shl[Int8] -127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -127

code auto:21 shl[compile-time] -127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:22 shl[Int8] -127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:23 shl[compile-time] -127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:24 shl[Int8] -127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:25 shl[compile-time] -127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:26 shl[Int8] -1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:27 shl[compile-time] -1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:28 shl[Int8] -1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:29 shl[compile-time] -1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:30 shl[Int8] -1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:31 shl[compile-time] -1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:32 shl[Int8] -1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:33 shl[compile-time] -1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:34 shl[Int8] -1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:35 shl[compile-time] -1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:36 shl[Int8] -1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:37 shl[compile-time] -1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:38 shl[Int8] 0[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:39 shl[compile-time] 0[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:40 shl[Int8] 0[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:41 shl[compile-time] 0[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:42 shl[Int8] 0[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:43 shl[compile-time] 0[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:44 shl[Int8] 0[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:45 shl[compile-time] 0[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:46 shl[Int8] 0[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:47 shl[compile-time] 0[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:48 shl[Int8] 0[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:49 shl[compile-time] 0[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:50 shl[Int8] 1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:51 shl[compile-time] 1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:52 shl[Int8] 1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:53 shl[compile-time] 1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:54 shl[Int8] 1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:55 shl[compile-time] 1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:56 shl[Int8] 1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:57 shl[compile-time] 1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:58 shl[Int8] 1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:59 shl[compile-time] 1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:60 shl[Int8] 1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:61 shl[compile-time] 1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:62 shl[Int8] 127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:63 shl[compile-time] 127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:64 shl[Int8] 127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:65 shl[compile-time] 127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:66 shl[Int8] 127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:67 shl[compile-time] 127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:68 shl[Int8] 127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:69 shl[compile-time] 127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:70 shl[Int8] 127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:71 shl[compile-time] 127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:72 shl[Int8] 127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:73 shl[compile-time] 127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:74 shl[Int8] -128[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:75 shl[compile-time] -128[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:76 shl[Int8] -128[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:77 shl[compile-time] -128[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:78 shl[Int8] -128[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:79 shl[compile-time] -128[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:80 shl[Int8] -128[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:81 shl[compile-time] -128[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:82 shl[Int8] -128[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:83 shl[compile-time] -128[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:84 shl[Int8] -128[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:85 shl[compile-time] -128[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:86 shl[Int8] -127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:87 shl[compile-time] -127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:88 shl[Int8] -127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:89 shl[compile-time] -127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:90 shl[Int8] -127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:91 shl[compile-time] -127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:92 shl[Int8] -127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -127

code auto:93 shl[compile-time] -127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:94 shl[Int8] -127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:95 shl[compile-time] -127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 1;
endcode
varvalue r -254

$overflow on
code auto:96 shl[Int8] -127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:97 shl[compile-time] -127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:98 shl[Int8] -1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:99 shl[compile-time] -1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:100 shl[Int8] -1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:101 shl[compile-time] -1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:102 shl[Int8] -1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:103 shl[compile-time] -1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:104 shl[Int8] -1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:105 shl[compile-time] -1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:106 shl[Int8] -1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:107 shl[compile-time] -1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:108 shl[Int8] -1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:109 shl[compile-time] -1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:110 shl[Int8] 0[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:111 shl[compile-time] 0[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:112 shl[Int8] 0[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:113 shl[compile-time] 0[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:114 shl[Int8] 0[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:115 shl[compile-time] 0[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:116 shl[Int8] 0[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:117 shl[compile-time] 0[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:118 shl[Int8] 0[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:119 shl[compile-time] 0[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:120 shl[Int8] 0[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:121 shl[compile-time] 0[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:122 shl[Int8] 1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:123 shl[compile-time] 1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:124 shl[Int8] 1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:125 shl[compile-time] 1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:126 shl[Int8] 1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:127 shl[compile-time] 1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:128 shl[Int8] 1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:129 shl[compile-time] 1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:130 shl[Int8] 1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:131 shl[compile-time] 1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:132 shl[Int8] 1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:133 shl[compile-time] 1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:134 shl[Int8] 127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:135 shl[compile-time] 127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:136 shl[Int8] 127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:137 shl[compile-time] 127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:138 shl[Int8] 127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:139 shl[compile-time] 127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:140 shl[Int8] 127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:141 shl[compile-time] 127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:142 shl[Int8] 127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:143 shl[compile-time] 127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:144 shl[Int8] 127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:145 shl[compile-time] 127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:146 shl[Int8] -128[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:147 shl[compile-time] -128[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:148 shl[Int8] -128[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:149 shl[compile-time] -128[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:150 shl[Int8] -128[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:151 shl[compile-time] -128[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:152 shl[Int8] -128[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:153 shl[compile-time] -128[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:154 shl[Int8] -128[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:155 shl[compile-time] -128[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:156 shl[Int8] -128[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:157 shl[compile-time] -128[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:158 shl[Int8] -127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:159 shl[compile-time] -127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:160 shl[Int8] -127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:161 shl[compile-time] -127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:162 shl[Int8] -127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:163 shl[compile-time] -127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:164 shl[Int8] -127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:165 shl[compile-time] -127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:166 shl[Int8] -127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:167 shl[compile-time] -127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:168 shl[Int8] -127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:169 shl[compile-time] -127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:170 shl[Int8] -1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:171 shl[compile-time] -1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:172 shl[Int8] -1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:173 shl[compile-time] -1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:174 shl[Int8] -1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:175 shl[compile-time] -1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:176 shl[Int8] -1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:177 shl[compile-time] -1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:178 shl[Int8] -1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:179 shl[compile-time] -1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:180 shl[Int8] -1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:181 shl[compile-time] -1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:182 shl[Int8] 0[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:183 shl[compile-time] 0[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:184 shl[Int8] 0[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:185 shl[compile-time] 0[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:186 shl[Int8] 0[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:187 shl[compile-time] 0[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:188 shl[Int8] 0[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:189 shl[compile-time] 0[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:190 shl[Int8] 0[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:191 shl[compile-time] 0[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:192 shl[Int8] 0[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:193 shl[compile-time] 0[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:194 shl[Int8] 1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:195 shl[compile-time] 1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:196 shl[Int8] 1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:197 shl[compile-time] 1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:198 shl[Int8] 1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:199 shl[compile-time] 1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:200 shl[Int8] 1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:201 shl[compile-time] 1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:202 shl[Int8] 1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:203 shl[compile-time] 1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:204 shl[Int8] 1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:205 shl[compile-time] 1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:206 shl[Int8] 127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:207 shl[compile-time] 127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:208 shl[Int8] 127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:209 shl[compile-time] 127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:210 shl[Int8] 127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:211 shl[compile-time] 127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:212 shl[Int8] 127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:213 shl[compile-time] 127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:214 shl[Int8] 127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:215 shl[compile-time] 127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:216 shl[Int8] 127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:217 shl[compile-time] 127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:218 shl[Int8] -128[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:219 shl[compile-time] -128[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:220 shl[Int8] -128[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:221 shl[compile-time] -128[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:222 shl[Int8] -128[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:223 shl[compile-time] -128[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:224 shl[Int8] -128[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:225 shl[compile-time] -128[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:226 shl[Int8] -128[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:227 shl[compile-time] -128[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:228 shl[Int8] -128[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:229 shl[compile-time] -128[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:230 shl[Int8] -127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:231 shl[compile-time] -127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:232 shl[Int8] -127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:233 shl[compile-time] -127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:234 shl[Int8] -127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:235 shl[compile-time] -127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:236 shl[Int8] -127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:237 shl[compile-time] -127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:238 shl[Int8] -127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:239 shl[compile-time] -127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:240 shl[Int8] -127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:241 shl[compile-time] -127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:242 shl[Int8] -1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:243 shl[compile-time] -1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:244 shl[Int8] -1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:245 shl[compile-time] -1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:246 shl[Int8] -1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:247 shl[compile-time] -1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:248 shl[Int8] -1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:249 shl[compile-time] -1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:250 shl[Int8] -1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:251 shl[compile-time] -1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:252 shl[Int8] -1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:253 shl[compile-time] -1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:254 shl[Int8] 0[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:255 shl[compile-time] 0[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:256 shl[Int8] 0[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:257 shl[compile-time] 0[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:258 shl[Int8] 0[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:259 shl[compile-time] 0[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:260 shl[Int8] 0[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:261 shl[compile-time] 0[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:262 shl[Int8] 0[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:263 shl[compile-time] 0[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:264 shl[Int8] 0[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:265 shl[compile-time] 0[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:266 shl[Int8] 1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:267 shl[compile-time] 1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:268 shl[Int8] 1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:269 shl[compile-time] 1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:270 shl[Int8] 1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:271 shl[compile-time] 1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:272 shl[Int8] 1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:273 shl[compile-time] 1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:274 shl[Int8] 1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:275 shl[compile-time] 1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:276 shl[Int8] 1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:277 shl[compile-time] 1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:278 shl[Int8] 127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:279 shl[compile-time] 127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:280 shl[Int8] 127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:281 shl[compile-time] 127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:282 shl[Int8] 127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:283 shl[compile-time] 127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:284 shl[Int8] 127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:285 shl[compile-time] 127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:286 shl[Int8] 127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:287 shl[compile-time] 127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:288 shl[Int8] 127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:289 shl[compile-time] 127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:290 shl[Int8] -128[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:291 shl[compile-time] -128[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:292 shl[Int8] -128[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:293 shl[compile-time] -128[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:294 shl[Int8] -128[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:295 shl[compile-time] -128[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:296 shl[Int8] -128[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:297 shl[compile-time] -128[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:298 shl[Int8] -128[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:299 shl[compile-time] -128[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:300 shl[Int8] -128[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:301 shl[compile-time] -128[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:302 shl[Int8] -127[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:303 shl[compile-time] -127[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:304 shl[Int8] -127[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:305 shl[compile-time] -127[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:306 shl[Int8] -127[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:307 shl[compile-time] -127[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:308 shl[Int8] -127[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:309 shl[compile-time] -127[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:310 shl[Int8] -127[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:311 shl[compile-time] -127[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:312 shl[Int8] -127[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:313 shl[compile-time] -127[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:314 shl[Int8] -1[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:315 shl[compile-time] -1[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:316 shl[Int8] -1[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:317 shl[compile-time] -1[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:318 shl[Int8] -1[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:319 shl[compile-time] -1[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:320 shl[Int8] -1[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:321 shl[compile-time] -1[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:322 shl[Int8] -1[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:323 shl[compile-time] -1[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:324 shl[Int8] -1[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:325 shl[compile-time] -1[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:326 shl[Int8] 0[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:327 shl[compile-time] 0[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:328 shl[Int8] 0[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:329 shl[compile-time] 0[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:330 shl[Int8] 0[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:331 shl[compile-time] 0[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:332 shl[Int8] 0[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:333 shl[compile-time] 0[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:334 shl[Int8] 0[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:335 shl[compile-time] 0[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:336 shl[Int8] 0[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:337 shl[compile-time] 0[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:338 shl[Int8] 1[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:339 shl[compile-time] 1[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:340 shl[Int8] 1[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:341 shl[compile-time] 1[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:342 shl[Int8] 1[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:343 shl[compile-time] 1[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:344 shl[Int8] 1[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:345 shl[compile-time] 1[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:346 shl[Int8] 1[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:347 shl[compile-time] 1[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:348 shl[Int8] 1[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:349 shl[compile-time] 1[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:350 shl[Int8] 127[Int8], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:351 shl[compile-time] 127[Int8], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:352 shl[Int8] 127[Int8], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:353 shl[compile-time] 127[Int8], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:354 shl[Int8] 127[Int8], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:355 shl[compile-time] 127[Int8], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:356 shl[Int8] 127[Int8], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:357 shl[compile-time] 127[Int8], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:358 shl[Int8] 127[Int8], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:359 shl[compile-time] 127[Int8], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:360 shl[Int8] 127[Int8], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:361 shl[compile-time] 127[Int8], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:362 shl[Int8] -128[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:363 shl[compile-time] -128[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:364 shl[Int8] -128[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:365 shl[compile-time] -128[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:366 shl[Int8] -128[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:367 shl[compile-time] -128[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:368 shl[Int8] -128[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:369 shl[compile-time] -128[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:370 shl[Int8] -128[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:371 shl[compile-time] -128[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:372 shl[Int8] -128[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:373 shl[compile-time] -128[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:374 shl[Int8] -128[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:375 shl[compile-time] -128[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:376 shl[Int8] -128[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:377 shl[compile-time] -128[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:378 shl[Int8] -128[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:379 shl[compile-time] -128[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:380 shl[Int8] -128[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:381 shl[compile-time] -128[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:382 shl[Int8] -127[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:383 shl[compile-time] -127[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:384 shl[Int8] -127[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:385 shl[compile-time] -127[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:386 shl[Int8] -127[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:387 shl[compile-time] -127[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:388 shl[Int8] -127[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:389 shl[compile-time] -127[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:390 shl[Int8] -127[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:391 shl[compile-time] -127[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:392 shl[Int8] -127[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -127

code auto:393 shl[compile-time] -127[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:394 shl[Int8] -127[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:395 shl[compile-time] -127[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:396 shl[Int8] -127[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:397 shl[compile-time] -127[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:398 shl[Int8] -127[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:399 shl[compile-time] -127[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:400 shl[Int8] -127[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:401 shl[compile-time] -127[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:402 shl[Int8] -1[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:403 shl[compile-time] -1[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:404 shl[Int8] -1[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:405 shl[compile-time] -1[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:406 shl[Int8] -1[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:407 shl[compile-time] -1[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:408 shl[Int8] -1[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:409 shl[compile-time] -1[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:410 shl[Int8] -1[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:411 shl[compile-time] -1[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:412 shl[Int8] -1[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:413 shl[compile-time] -1[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:414 shl[Int8] -1[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:415 shl[compile-time] -1[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:416 shl[Int8] -1[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:417 shl[compile-time] -1[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:418 shl[Int8] -1[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:419 shl[compile-time] -1[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:420 shl[Int8] -1[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:421 shl[compile-time] -1[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:422 shl[Int8] 0[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:423 shl[compile-time] 0[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:424 shl[Int8] 0[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:425 shl[compile-time] 0[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:426 shl[Int8] 0[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:427 shl[compile-time] 0[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:428 shl[Int8] 0[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:429 shl[compile-time] 0[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:430 shl[Int8] 0[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:431 shl[compile-time] 0[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:432 shl[Int8] 0[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:433 shl[compile-time] 0[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:434 shl[Int8] 0[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:435 shl[compile-time] 0[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:436 shl[Int8] 0[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:437 shl[compile-time] 0[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:438 shl[Int8] 0[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:439 shl[compile-time] 0[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:440 shl[Int8] 0[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:441 shl[compile-time] 0[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:442 shl[Int8] 1[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:443 shl[compile-time] 1[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:444 shl[Int8] 1[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:445 shl[compile-time] 1[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:446 shl[Int8] 1[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:447 shl[compile-time] 1[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:448 shl[Int8] 1[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:449 shl[compile-time] 1[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:450 shl[Int8] 1[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:451 shl[compile-time] 1[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:452 shl[Int8] 1[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:453 shl[compile-time] 1[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:454 shl[Int8] 1[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:455 shl[compile-time] 1[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:456 shl[Int8] 1[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:457 shl[compile-time] 1[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:458 shl[Int8] 1[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:459 shl[compile-time] 1[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:460 shl[Int8] 1[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:461 shl[compile-time] 1[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:462 shl[Int8] 127[Int8], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:463 shl[compile-time] 127[Int8], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:464 shl[Int8] 127[Int8], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:465 shl[compile-time] 127[Int8], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:466 shl[Int8] 127[Int8], -129[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:467 shl[compile-time] 127[Int8], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:468 shl[Int8] 127[Int8], -128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:469 shl[compile-time] 127[Int8], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:470 shl[Int8] 127[Int8], -1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:471 shl[compile-time] 127[Int8], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:472 shl[Int8] 127[Int8], 0[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:473 shl[compile-time] 127[Int8], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:474 shl[Int8] 127[Int8], 1[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:475 shl[compile-time] 127[Int8], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:476 shl[Int8] 127[Int8], 127[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:477 shl[compile-time] 127[Int8], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:478 shl[Int8] 127[Int8], 128[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:479 shl[compile-time] 127[Int8], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:480 shl[Int8] 127[Int8], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:481 shl[compile-time] 127[Int8], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:482 shl[Int8] -128[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:483 shl[compile-time] -128[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:484 shl[Int8] -128[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:485 shl[compile-time] -128[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:486 shl[Int8] -128[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:487 shl[compile-time] -128[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:488 shl[Int8] -128[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:489 shl[compile-time] -128[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:490 shl[Int8] -128[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:491 shl[compile-time] -128[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:492 shl[Int8] -128[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:493 shl[compile-time] -128[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:494 shl[Int8] -128[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:495 shl[compile-time] -128[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:496 shl[Int8] -128[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:497 shl[compile-time] -128[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:498 shl[Int8] -128[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:499 shl[compile-time] -128[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:500 shl[Int8] -128[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:501 shl[compile-time] -128[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:502 shl[Int8] -127[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:503 shl[compile-time] -127[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:504 shl[Int8] -127[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:505 shl[compile-time] -127[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:506 shl[Int8] -127[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:507 shl[compile-time] -127[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:508 shl[Int8] -127[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:509 shl[compile-time] -127[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:510 shl[Int8] -127[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:511 shl[compile-time] -127[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:512 shl[Int8] -127[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -127

code auto:513 shl[compile-time] -127[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:514 shl[Int8] -127[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:515 shl[compile-time] -127[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 1;
endcode
varvalue r -254

$overflow on
code auto:516 shl[Int8] -127[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:517 shl[compile-time] -127[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:518 shl[Int8] -127[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:519 shl[compile-time] -127[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:520 shl[Int8] -127[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:521 shl[compile-time] -127[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:522 shl[Int8] -1[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:523 shl[compile-time] -1[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:524 shl[Int8] -1[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:525 shl[compile-time] -1[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:526 shl[Int8] -1[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:527 shl[compile-time] -1[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:528 shl[Int8] -1[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:529 shl[compile-time] -1[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:530 shl[Int8] -1[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:531 shl[compile-time] -1[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:532 shl[Int8] -1[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:533 shl[compile-time] -1[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:534 shl[Int8] -1[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:535 shl[compile-time] -1[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:536 shl[Int8] -1[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:537 shl[compile-time] -1[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:538 shl[Int8] -1[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:539 shl[compile-time] -1[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:540 shl[Int8] -1[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:541 shl[compile-time] -1[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:542 shl[Int8] 0[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:543 shl[compile-time] 0[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:544 shl[Int8] 0[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:545 shl[compile-time] 0[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:546 shl[Int8] 0[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:547 shl[compile-time] 0[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:548 shl[Int8] 0[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:549 shl[compile-time] 0[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:550 shl[Int8] 0[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:551 shl[compile-time] 0[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:552 shl[Int8] 0[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:553 shl[compile-time] 0[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:554 shl[Int8] 0[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:555 shl[compile-time] 0[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:556 shl[Int8] 0[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:557 shl[compile-time] 0[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:558 shl[Int8] 0[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:559 shl[compile-time] 0[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:560 shl[Int8] 0[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:561 shl[compile-time] 0[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:562 shl[Int8] 1[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:563 shl[compile-time] 1[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:564 shl[Int8] 1[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:565 shl[compile-time] 1[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:566 shl[Int8] 1[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:567 shl[compile-time] 1[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:568 shl[Int8] 1[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:569 shl[compile-time] 1[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:570 shl[Int8] 1[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:571 shl[compile-time] 1[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:572 shl[Int8] 1[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:573 shl[compile-time] 1[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:574 shl[Int8] 1[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:575 shl[compile-time] 1[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:576 shl[Int8] 1[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:577 shl[compile-time] 1[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:578 shl[Int8] 1[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:579 shl[compile-time] 1[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:580 shl[Int8] 1[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:581 shl[compile-time] 1[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:582 shl[Int8] 127[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:583 shl[compile-time] 127[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:584 shl[Int8] 127[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:585 shl[compile-time] 127[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:586 shl[Int8] 127[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:587 shl[compile-time] 127[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:588 shl[Int8] 127[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:589 shl[compile-time] 127[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:590 shl[Int8] 127[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:591 shl[compile-time] 127[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:592 shl[Int8] 127[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:593 shl[compile-time] 127[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:594 shl[Int8] 127[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:595 shl[compile-time] 127[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:596 shl[Int8] 127[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:597 shl[compile-time] 127[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:598 shl[Int8] 127[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:599 shl[compile-time] 127[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:600 shl[Int8] 127[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:601 shl[compile-time] 127[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:602 shl[Int8] -128[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:603 shl[compile-time] -128[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:604 shl[Int8] -128[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:605 shl[compile-time] -128[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:606 shl[Int8] -128[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:607 shl[compile-time] -128[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:608 shl[Int8] -128[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:609 shl[compile-time] -128[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:610 shl[Int8] -128[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:611 shl[compile-time] -128[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:612 shl[Int8] -128[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:613 shl[compile-time] -128[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:614 shl[Int8] -128[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:615 shl[compile-time] -128[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:616 shl[Int8] -128[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:617 shl[compile-time] -128[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:618 shl[Int8] -128[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:619 shl[compile-time] -128[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:620 shl[Int8] -128[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:621 shl[compile-time] -128[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:622 shl[Int8] -127[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:623 shl[compile-time] -127[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:624 shl[Int8] -127[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:625 shl[compile-time] -127[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:626 shl[Int8] -127[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:627 shl[compile-time] -127[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:628 shl[Int8] -127[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:629 shl[compile-time] -127[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:630 shl[Int8] -127[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:631 shl[compile-time] -127[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:632 shl[Int8] -127[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:633 shl[compile-time] -127[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:634 shl[Int8] -127[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:635 shl[compile-time] -127[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:636 shl[Int8] -127[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:637 shl[compile-time] -127[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:638 shl[Int8] -127[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:639 shl[compile-time] -127[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:640 shl[Int8] -127[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:641 shl[compile-time] -127[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:642 shl[Int8] -1[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:643 shl[compile-time] -1[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:644 shl[Int8] -1[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:645 shl[compile-time] -1[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:646 shl[Int8] -1[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:647 shl[compile-time] -1[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:648 shl[Int8] -1[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:649 shl[compile-time] -1[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:650 shl[Int8] -1[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:651 shl[compile-time] -1[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:652 shl[Int8] -1[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:653 shl[compile-time] -1[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:654 shl[Int8] -1[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:655 shl[compile-time] -1[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:656 shl[Int8] -1[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:657 shl[compile-time] -1[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:658 shl[Int8] -1[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:659 shl[compile-time] -1[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:660 shl[Int8] -1[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:661 shl[compile-time] -1[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:662 shl[Int8] 0[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:663 shl[compile-time] 0[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:664 shl[Int8] 0[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:665 shl[compile-time] 0[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:666 shl[Int8] 0[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:667 shl[compile-time] 0[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:668 shl[Int8] 0[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:669 shl[compile-time] 0[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:670 shl[Int8] 0[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:671 shl[compile-time] 0[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:672 shl[Int8] 0[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:673 shl[compile-time] 0[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:674 shl[Int8] 0[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:675 shl[compile-time] 0[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:676 shl[Int8] 0[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:677 shl[compile-time] 0[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:678 shl[Int8] 0[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:679 shl[compile-time] 0[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:680 shl[Int8] 0[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:681 shl[compile-time] 0[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:682 shl[Int8] 1[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:683 shl[compile-time] 1[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:684 shl[Int8] 1[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:685 shl[compile-time] 1[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:686 shl[Int8] 1[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:687 shl[compile-time] 1[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:688 shl[Int8] 1[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:689 shl[compile-time] 1[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:690 shl[Int8] 1[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:691 shl[compile-time] 1[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:692 shl[Int8] 1[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:693 shl[compile-time] 1[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:694 shl[Int8] 1[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:695 shl[compile-time] 1[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:696 shl[Int8] 1[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:697 shl[compile-time] 1[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:698 shl[Int8] 1[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:699 shl[compile-time] 1[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:700 shl[Int8] 1[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:701 shl[compile-time] 1[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:702 shl[Int8] 127[Int8], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:703 shl[compile-time] 127[Int8], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:704 shl[Int8] 127[Int8], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:705 shl[compile-time] 127[Int8], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:706 shl[Int8] 127[Int8], -129[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:707 shl[compile-time] 127[Int8], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:708 shl[Int8] 127[Int8], -128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:709 shl[compile-time] 127[Int8], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:710 shl[Int8] 127[Int8], -1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:711 shl[compile-time] 127[Int8], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:712 shl[Int8] 127[Int8], 0[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:713 shl[compile-time] 127[Int8], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:714 shl[Int8] 127[Int8], 1[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:715 shl[compile-time] 127[Int8], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:716 shl[Int8] 127[Int8], 127[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:717 shl[compile-time] 127[Int8], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:718 shl[Int8] 127[Int8], 128[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:719 shl[compile-time] 127[Int8], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:720 shl[Int8] 127[Int8], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:721 shl[compile-time] 127[Int8], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:722 shl[Int8] -128[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:723 shl[compile-time] -128[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:724 shl[Int8] -128[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:725 shl[compile-time] -128[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:726 shl[Int8] -128[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:727 shl[compile-time] -128[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:728 shl[Int8] -128[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:729 shl[compile-time] -128[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:730 shl[Int8] -128[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:731 shl[compile-time] -128[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:732 shl[Int8] -128[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:733 shl[compile-time] -128[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:734 shl[Int8] -128[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:735 shl[compile-time] -128[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:736 shl[Int8] -128[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:737 shl[compile-time] -128[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:738 shl[Int8] -128[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:739 shl[compile-time] -128[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:740 shl[Int8] -128[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:741 shl[compile-time] -128[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:742 shl[Int8] -127[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:743 shl[compile-time] -127[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:744 shl[Int8] -127[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:745 shl[compile-time] -127[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:746 shl[Int8] -127[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:747 shl[compile-time] -127[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:748 shl[Int8] -127[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:749 shl[compile-time] -127[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:750 shl[Int8] -127[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:751 shl[compile-time] -127[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:752 shl[Int8] -127[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:753 shl[compile-time] -127[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:754 shl[Int8] -127[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:755 shl[compile-time] -127[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:756 shl[Int8] -127[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:757 shl[compile-time] -127[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:758 shl[Int8] -127[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:759 shl[compile-time] -127[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:760 shl[Int8] -127[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:761 shl[compile-time] -127[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:762 shl[Int8] -1[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:763 shl[compile-time] -1[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:764 shl[Int8] -1[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:765 shl[compile-time] -1[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:766 shl[Int8] -1[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:767 shl[compile-time] -1[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:768 shl[Int8] -1[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:769 shl[compile-time] -1[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:770 shl[Int8] -1[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:771 shl[compile-time] -1[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:772 shl[Int8] -1[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:773 shl[compile-time] -1[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:774 shl[Int8] -1[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:775 shl[compile-time] -1[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:776 shl[Int8] -1[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:777 shl[compile-time] -1[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:778 shl[Int8] -1[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:779 shl[compile-time] -1[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:780 shl[Int8] -1[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:781 shl[compile-time] -1[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:782 shl[Int8] 0[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:783 shl[compile-time] 0[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:784 shl[Int8] 0[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:785 shl[compile-time] 0[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:786 shl[Int8] 0[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:787 shl[compile-time] 0[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:788 shl[Int8] 0[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:789 shl[compile-time] 0[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:790 shl[Int8] 0[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:791 shl[compile-time] 0[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:792 shl[Int8] 0[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:793 shl[compile-time] 0[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:794 shl[Int8] 0[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:795 shl[compile-time] 0[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:796 shl[Int8] 0[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:797 shl[compile-time] 0[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:798 shl[Int8] 0[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:799 shl[compile-time] 0[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:800 shl[Int8] 0[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:801 shl[compile-time] 0[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:802 shl[Int8] 1[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:803 shl[compile-time] 1[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:804 shl[Int8] 1[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:805 shl[compile-time] 1[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:806 shl[Int8] 1[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:807 shl[compile-time] 1[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:808 shl[Int8] 1[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:809 shl[compile-time] 1[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:810 shl[Int8] 1[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:811 shl[compile-time] 1[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:812 shl[Int8] 1[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:813 shl[compile-time] 1[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:814 shl[Int8] 1[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:815 shl[compile-time] 1[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:816 shl[Int8] 1[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:817 shl[compile-time] 1[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:818 shl[Int8] 1[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:819 shl[compile-time] 1[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:820 shl[Int8] 1[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:821 shl[compile-time] 1[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:822 shl[Int8] 127[Int8], -32768[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:823 shl[compile-time] 127[Int8], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:824 shl[Int8] 127[Int8], -32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:825 shl[compile-time] 127[Int8], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:826 shl[Int8] 127[Int8], -129[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:827 shl[compile-time] 127[Int8], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:828 shl[Int8] 127[Int8], -128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:829 shl[compile-time] 127[Int8], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:830 shl[Int8] 127[Int8], -1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:831 shl[compile-time] 127[Int8], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:832 shl[Int8] 127[Int8], 0[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:833 shl[compile-time] 127[Int8], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:834 shl[Int8] 127[Int8], 1[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:835 shl[compile-time] 127[Int8], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:836 shl[Int8] 127[Int8], 127[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:837 shl[compile-time] 127[Int8], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:838 shl[Int8] 127[Int8], 128[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:839 shl[compile-time] 127[Int8], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:840 shl[Int8] 127[Int8], 32767[Integer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:841 shl[compile-time] 127[Int8], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:842 shl[Int8] -128[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:843 shl[compile-time] -128[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:844 shl[Int8] -128[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:845 shl[compile-time] -128[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:846 shl[Int8] -128[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:847 shl[compile-time] -128[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:848 shl[Int8] -128[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:849 shl[compile-time] -128[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:850 shl[Int8] -128[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:851 shl[compile-time] -128[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:852 shl[Int8] -128[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:853 shl[compile-time] -128[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:854 shl[Int8] -128[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:855 shl[compile-time] -128[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:856 shl[Int8] -128[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:857 shl[compile-time] -128[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:858 shl[Int8] -128[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:859 shl[compile-time] -128[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:860 shl[Int8] -128[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:861 shl[compile-time] -128[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:862 shl[Int8] -127[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:863 shl[compile-time] -127[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:864 shl[Int8] -127[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:865 shl[compile-time] -127[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:866 shl[Int8] -127[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:867 shl[compile-time] -127[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:868 shl[Int8] -127[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:869 shl[compile-time] -127[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:870 shl[Int8] -127[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:871 shl[compile-time] -127[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:872 shl[Int8] -127[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:873 shl[compile-time] -127[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:874 shl[Int8] -127[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:875 shl[compile-time] -127[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:876 shl[Int8] -127[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:877 shl[compile-time] -127[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:878 shl[Int8] -127[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:879 shl[compile-time] -127[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:880 shl[Int8] -127[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:881 shl[compile-time] -127[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:882 shl[Int8] -1[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:883 shl[compile-time] -1[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:884 shl[Int8] -1[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:885 shl[compile-time] -1[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:886 shl[Int8] -1[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:887 shl[compile-time] -1[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:888 shl[Int8] -1[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:889 shl[compile-time] -1[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:890 shl[Int8] -1[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:891 shl[compile-time] -1[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:892 shl[Int8] -1[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:893 shl[compile-time] -1[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:894 shl[Int8] -1[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:895 shl[compile-time] -1[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:896 shl[Int8] -1[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:897 shl[compile-time] -1[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:898 shl[Int8] -1[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:899 shl[compile-time] -1[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:900 shl[Int8] -1[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:901 shl[compile-time] -1[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:902 shl[Int8] 0[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:903 shl[compile-time] 0[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:904 shl[Int8] 0[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:905 shl[compile-time] 0[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:906 shl[Int8] 0[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:907 shl[compile-time] 0[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:908 shl[Int8] 0[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:909 shl[compile-time] 0[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:910 shl[Int8] 0[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:911 shl[compile-time] 0[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:912 shl[Int8] 0[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:913 shl[compile-time] 0[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:914 shl[Int8] 0[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:915 shl[compile-time] 0[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:916 shl[Int8] 0[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:917 shl[compile-time] 0[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:918 shl[Int8] 0[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:919 shl[compile-time] 0[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:920 shl[Int8] 0[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:921 shl[compile-time] 0[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:922 shl[Int8] 1[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:923 shl[compile-time] 1[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:924 shl[Int8] 1[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:925 shl[compile-time] 1[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:926 shl[Int8] 1[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:927 shl[compile-time] 1[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:928 shl[Int8] 1[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:929 shl[compile-time] 1[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:930 shl[Int8] 1[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:931 shl[compile-time] 1[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:932 shl[Int8] 1[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:933 shl[compile-time] 1[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:934 shl[Int8] 1[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:935 shl[compile-time] 1[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:936 shl[Int8] 1[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:937 shl[compile-time] 1[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:938 shl[Int8] 1[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:939 shl[compile-time] 1[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:940 shl[Int8] 1[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:941 shl[compile-time] 1[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:942 shl[Int8] 127[Int8], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:943 shl[compile-time] 127[Int8], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:944 shl[Int8] 127[Int8], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:945 shl[compile-time] 127[Int8], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:946 shl[Int8] 127[Int8], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:947 shl[compile-time] 127[Int8], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:948 shl[Int8] 127[Int8], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:949 shl[compile-time] 127[Int8], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:950 shl[Int8] 127[Int8], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:951 shl[compile-time] 127[Int8], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:952 shl[Int8] 127[Int8], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:953 shl[compile-time] 127[Int8], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:954 shl[Int8] 127[Int8], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:955 shl[compile-time] 127[Int8], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:956 shl[Int8] 127[Int8], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:957 shl[compile-time] 127[Int8], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:958 shl[Int8] 127[Int8], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:959 shl[compile-time] 127[Int8], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:960 shl[Int8] 127[Int8], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:961 shl[compile-time] 127[Int8], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:962 shl[Int8] -128[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:963 shl[compile-time] -128[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:964 shl[Int8] -128[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:965 shl[compile-time] -128[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:966 shl[Int8] -128[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:967 shl[compile-time] -128[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:968 shl[Int8] -128[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:969 shl[compile-time] -128[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:970 shl[Int8] -128[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:971 shl[compile-time] -128[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:972 shl[Int8] -127[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -127

code auto:973 shl[compile-time] -127[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:974 shl[Int8] -127[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:975 shl[compile-time] -127[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:976 shl[Int8] -127[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:977 shl[compile-time] -127[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:978 shl[Int8] -127[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:979 shl[compile-time] -127[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:980 shl[Int8] -127[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:981 shl[compile-time] -127[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:982 shl[Int8] -1[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:983 shl[compile-time] -1[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:984 shl[Int8] -1[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:985 shl[compile-time] -1[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:986 shl[Int8] -1[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:987 shl[compile-time] -1[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:988 shl[Int8] -1[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:989 shl[compile-time] -1[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:990 shl[Int8] -1[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:991 shl[compile-time] -1[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:992 shl[Int8] 0[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:993 shl[compile-time] 0[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:994 shl[Int8] 0[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:995 shl[compile-time] 0[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:996 shl[Int8] 0[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:997 shl[compile-time] 0[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:998 shl[Int8] 0[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:999 shl[compile-time] 0[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1000 shl[Int8] 0[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1001 shl[compile-time] 0[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1002 shl[Int8] 1[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:1003 shl[compile-time] 1[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1004 shl[Int8] 1[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:1005 shl[compile-time] 1[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1006 shl[Int8] 1[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1007 shl[compile-time] 1[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1008 shl[Int8] 1[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1009 shl[compile-time] 1[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1010 shl[Int8] 1[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1011 shl[compile-time] 1[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1012 shl[Int8] 127[Int8], 0[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:1013 shl[compile-time] 127[Int8], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1014 shl[Int8] 127[Int8], 1[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:1015 shl[compile-time] 127[Int8], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:1016 shl[Int8] 127[Int8], 127[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1017 shl[compile-time] 127[Int8], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1018 shl[Int8] 127[Int8], 128[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1019 shl[compile-time] 127[Int8], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1020 shl[Int8] 127[Int8], 255[Byte] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1021 shl[compile-time] 127[Int8], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1022 shl[Int8] -128[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:1023 shl[compile-time] -128[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1024 shl[Int8] -128[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1025 shl[compile-time] -128[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:1026 shl[Int8] -128[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1027 shl[compile-time] -128[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1028 shl[Int8] -128[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1029 shl[compile-time] -128[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1030 shl[Int8] -128[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1031 shl[compile-time] -128[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1032 shl[Int8] -127[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -127

code auto:1033 shl[compile-time] -127[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:1034 shl[Int8] -127[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:1035 shl[compile-time] -127[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 1;
endcode
varvalue r -254

$overflow on
code auto:1036 shl[Int8] -127[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1037 shl[compile-time] -127[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1038 shl[Int8] -127[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1039 shl[compile-time] -127[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1040 shl[Int8] -127[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1041 shl[compile-time] -127[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1042 shl[Int8] -1[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:1043 shl[compile-time] -1[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1044 shl[Int8] -1[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:1045 shl[compile-time] -1[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:1046 shl[Int8] -1[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1047 shl[compile-time] -1[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1048 shl[Int8] -1[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1049 shl[compile-time] -1[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1050 shl[Int8] -1[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1051 shl[compile-time] -1[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1052 shl[Int8] 0[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1053 shl[compile-time] 0[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1054 shl[Int8] 0[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1055 shl[compile-time] 0[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:1056 shl[Int8] 0[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1057 shl[compile-time] 0[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1058 shl[Int8] 0[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1059 shl[compile-time] 0[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1060 shl[Int8] 0[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1061 shl[compile-time] 0[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1062 shl[Int8] 1[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:1063 shl[compile-time] 1[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1064 shl[Int8] 1[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:1065 shl[compile-time] 1[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1066 shl[Int8] 1[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1067 shl[compile-time] 1[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1068 shl[Int8] 1[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1069 shl[compile-time] 1[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1070 shl[Int8] 1[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1071 shl[compile-time] 1[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1072 shl[Int8] 127[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:1073 shl[compile-time] 127[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1074 shl[Int8] 127[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:1075 shl[compile-time] 127[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:1076 shl[Int8] 127[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1077 shl[compile-time] 127[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1078 shl[Int8] 127[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1079 shl[compile-time] 127[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1080 shl[Int8] 127[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1081 shl[compile-time] 127[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1082 shl[Int8] -128[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1083 shl[compile-time] -128[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1084 shl[Int8] -128[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1085 shl[compile-time] -128[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:1086 shl[Int8] -128[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1087 shl[compile-time] -128[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1088 shl[Int8] -128[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1089 shl[compile-time] -128[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1090 shl[Int8] -128[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1091 shl[compile-time] -128[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1092 shl[Int8] -127[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1093 shl[compile-time] -127[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1094 shl[Int8] -127[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:1095 shl[compile-time] -127[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:1096 shl[Int8] -127[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1097 shl[compile-time] -127[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1098 shl[Int8] -127[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1099 shl[compile-time] -127[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1100 shl[Int8] -127[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1101 shl[compile-time] -127[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1102 shl[Int8] -1[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1103 shl[compile-time] -1[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1104 shl[Int8] -1[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1105 shl[compile-time] -1[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:1106 shl[Int8] -1[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1107 shl[compile-time] -1[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1108 shl[Int8] -1[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1109 shl[compile-time] -1[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1110 shl[Int8] -1[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1111 shl[compile-time] -1[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1112 shl[Int8] 0[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1113 shl[compile-time] 0[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1114 shl[Int8] 0[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1115 shl[compile-time] 0[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:1116 shl[Int8] 0[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1117 shl[compile-time] 0[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1118 shl[Int8] 0[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1119 shl[compile-time] 0[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1120 shl[Int8] 0[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1121 shl[compile-time] 0[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1122 shl[Int8] 1[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:1123 shl[compile-time] 1[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1124 shl[Int8] 1[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:1125 shl[compile-time] 1[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1126 shl[Int8] 1[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1127 shl[compile-time] 1[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1128 shl[Int8] 1[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1129 shl[compile-time] 1[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1130 shl[Int8] 1[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1131 shl[compile-time] 1[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1132 shl[Int8] 127[Int8], 0[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:1133 shl[compile-time] 127[Int8], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1134 shl[Int8] 127[Int8], 1[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1135 shl[compile-time] 127[Int8], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:1136 shl[Int8] 127[Int8], 127[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1137 shl[compile-time] 127[Int8], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1138 shl[Int8] 127[Int8], 128[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1139 shl[compile-time] 127[Int8], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1140 shl[Int8] 127[Int8], 255[Byte] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1141 shl[compile-time] 127[Int8], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1142 shl[Int8] -128[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1143 shl[compile-time] -128[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1144 shl[Int8] -128[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1145 shl[compile-time] -128[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:1146 shl[Int8] -128[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1147 shl[compile-time] -128[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1148 shl[Int8] -128[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1149 shl[compile-time] -128[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1150 shl[Int8] -128[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1151 shl[compile-time] -128[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1152 shl[Int8] -127[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1153 shl[compile-time] -127[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1154 shl[Int8] -127[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:1155 shl[compile-time] -127[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:1156 shl[Int8] -127[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1157 shl[compile-time] -127[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1158 shl[Int8] -127[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1159 shl[compile-time] -127[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1160 shl[Int8] -127[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1161 shl[compile-time] -127[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1162 shl[Int8] -1[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1163 shl[compile-time] -1[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1164 shl[Int8] -1[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1165 shl[compile-time] -1[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:1166 shl[Int8] -1[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1167 shl[compile-time] -1[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1168 shl[Int8] -1[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1169 shl[compile-time] -1[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1170 shl[Int8] -1[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1171 shl[compile-time] -1[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1172 shl[Int8] 0[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1173 shl[compile-time] 0[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1174 shl[Int8] 0[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1175 shl[compile-time] 0[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:1176 shl[Int8] 0[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1177 shl[compile-time] 0[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1178 shl[Int8] 0[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1179 shl[compile-time] 0[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1180 shl[Int8] 0[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1181 shl[compile-time] 0[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1182 shl[Int8] 1[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:1183 shl[compile-time] 1[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1184 shl[Int8] 1[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:1185 shl[compile-time] 1[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1186 shl[Int8] 1[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1187 shl[compile-time] 1[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1188 shl[Int8] 1[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1189 shl[compile-time] 1[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1190 shl[Int8] 1[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1191 shl[compile-time] 1[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1192 shl[Int8] 127[Int8], 0[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:1193 shl[compile-time] 127[Int8], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1194 shl[Int8] 127[Int8], 1[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1195 shl[compile-time] 127[Int8], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:1196 shl[Int8] 127[Int8], 127[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1197 shl[compile-time] 127[Int8], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1198 shl[Int8] 127[Int8], 128[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1199 shl[compile-time] 127[Int8], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1200 shl[Int8] 127[Int8], 255[Byte] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1201 shl[compile-time] 127[Int8], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1202 shl[Int8] -128[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1203 shl[compile-time] -128[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1204 shl[Int8] -128[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1205 shl[compile-time] -128[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:1206 shl[Int8] -128[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1207 shl[compile-time] -128[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1208 shl[Int8] -128[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1209 shl[compile-time] -128[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1210 shl[Int8] -128[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1211 shl[compile-time] -128[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1212 shl[Int8] -127[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1213 shl[compile-time] -127[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1214 shl[Int8] -127[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:1215 shl[compile-time] -127[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 1;
endcode
compile error

$overflow on
code auto:1216 shl[Int8] -127[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1217 shl[compile-time] -127[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1218 shl[Int8] -127[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1219 shl[compile-time] -127[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1220 shl[Int8] -127[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1221 shl[compile-time] -127[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1222 shl[Int8] -1[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1223 shl[compile-time] -1[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1224 shl[Int8] -1[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1225 shl[compile-time] -1[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:1226 shl[Int8] -1[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1227 shl[compile-time] -1[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1228 shl[Int8] -1[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1229 shl[compile-time] -1[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1230 shl[Int8] -1[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1231 shl[compile-time] -1[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1232 shl[Int8] 0[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1233 shl[compile-time] 0[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1234 shl[Int8] 0[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1235 shl[compile-time] 0[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:1236 shl[Int8] 0[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1237 shl[compile-time] 0[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1238 shl[Int8] 0[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1239 shl[compile-time] 0[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1240 shl[Int8] 0[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1241 shl[compile-time] 0[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1242 shl[Int8] 1[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:1243 shl[compile-time] 1[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1244 shl[Int8] 1[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:1245 shl[compile-time] 1[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1246 shl[Int8] 1[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1247 shl[compile-time] 1[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1248 shl[Int8] 1[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1249 shl[compile-time] 1[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1250 shl[Int8] 1[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1251 shl[compile-time] 1[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1252 shl[Int8] 127[Int8], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:1253 shl[compile-time] 127[Int8], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1254 shl[Int8] 127[Int8], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1255 shl[compile-time] 127[Int8], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:1256 shl[Int8] 127[Int8], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1257 shl[compile-time] 127[Int8], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1258 shl[Int8] 127[Int8], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1259 shl[compile-time] 127[Int8], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:1260 shl[Int8] 127[Int8], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1261 shl[compile-time] 127[Int8], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1262 shl[Int8] -128[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:1263 shl[compile-time] -128[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1264 shl[Int8] -128[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1265 shl[compile-time] -128[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1266 shl[Int8] -128[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1267 shl[compile-time] -128[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1268 shl[Int8] -128[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1269 shl[compile-time] -128[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1270 shl[Int8] -128[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1271 shl[compile-time] -128[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1272 shl[Int8] -127[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -127

code auto:1273 shl[compile-time] -127[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:1274 shl[Int8] -127[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1275 shl[compile-time] -127[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1276 shl[Int8] -127[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1277 shl[compile-time] -127[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1278 shl[Int8] -127[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1279 shl[compile-time] -127[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1280 shl[Int8] -127[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1281 shl[compile-time] -127[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1282 shl[Int8] -1[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:1283 shl[compile-time] -1[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1284 shl[Int8] -1[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1285 shl[compile-time] -1[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1286 shl[Int8] -1[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1287 shl[compile-time] -1[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1288 shl[Int8] -1[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1289 shl[compile-time] -1[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1290 shl[Int8] -1[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1291 shl[compile-time] -1[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1292 shl[Int8] 0[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1293 shl[compile-time] 0[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1294 shl[Int8] 0[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1295 shl[compile-time] 0[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1296 shl[Int8] 0[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1297 shl[compile-time] 0[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1298 shl[Int8] 0[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1299 shl[compile-time] 0[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1300 shl[Int8] 0[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1301 shl[compile-time] 0[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1302 shl[Int8] 1[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:1303 shl[compile-time] 1[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1304 shl[Int8] 1[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1305 shl[compile-time] 1[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1306 shl[Int8] 1[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1307 shl[compile-time] 1[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1308 shl[Int8] 1[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1309 shl[compile-time] 1[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1310 shl[Int8] 1[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1311 shl[compile-time] 1[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1312 shl[Int8] 127[Int8], 0[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:1313 shl[compile-time] 127[Int8], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1314 shl[Int8] 127[Int8], 255[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1315 shl[compile-time] 127[Int8], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1316 shl[Int8] 127[Int8], 32767[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1317 shl[compile-time] 127[Int8], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1318 shl[Int8] 127[Int8], 32768[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1319 shl[compile-time] 127[Int8], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1320 shl[Int8] 127[Int8], 65535[Word] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1321 shl[compile-time] 127[Int8], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1322 shl[Int8] -128[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:1323 shl[compile-time] -128[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1324 shl[Int8] -128[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1325 shl[compile-time] -128[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1326 shl[Int8] -128[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1327 shl[compile-time] -128[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1328 shl[Int8] -128[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1329 shl[compile-time] -128[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1330 shl[Int8] -128[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1331 shl[compile-time] -128[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1332 shl[Int8] -127[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -127

code auto:1333 shl[compile-time] -127[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:1334 shl[Int8] -127[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1335 shl[compile-time] -127[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1336 shl[Int8] -127[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1337 shl[compile-time] -127[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1338 shl[Int8] -127[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1339 shl[compile-time] -127[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1340 shl[Int8] -127[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1341 shl[compile-time] -127[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1342 shl[Int8] -1[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:1343 shl[compile-time] -1[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1344 shl[Int8] -1[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1345 shl[compile-time] -1[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1346 shl[Int8] -1[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1347 shl[compile-time] -1[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1348 shl[Int8] -1[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1349 shl[compile-time] -1[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1350 shl[Int8] -1[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1351 shl[compile-time] -1[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1352 shl[Int8] 0[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1353 shl[compile-time] 0[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1354 shl[Int8] 0[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1355 shl[compile-time] 0[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1356 shl[Int8] 0[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1357 shl[compile-time] 0[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1358 shl[Int8] 0[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1359 shl[compile-time] 0[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1360 shl[Int8] 0[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1361 shl[compile-time] 0[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1362 shl[Int8] 1[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:1363 shl[compile-time] 1[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1364 shl[Int8] 1[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1365 shl[compile-time] 1[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1366 shl[Int8] 1[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1367 shl[compile-time] 1[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1368 shl[Int8] 1[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1369 shl[compile-time] 1[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1370 shl[Int8] 1[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1371 shl[compile-time] 1[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1372 shl[Int8] 127[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:1373 shl[compile-time] 127[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1374 shl[Int8] 127[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1375 shl[compile-time] 127[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1376 shl[Int8] 127[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1377 shl[compile-time] 127[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1378 shl[Int8] 127[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1379 shl[compile-time] 127[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1380 shl[Int8] 127[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1381 shl[compile-time] 127[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1382 shl[Int8] -128[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1383 shl[compile-time] -128[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1384 shl[Int8] -128[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1385 shl[compile-time] -128[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1386 shl[Int8] -128[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1387 shl[compile-time] -128[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1388 shl[Int8] -128[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1389 shl[compile-time] -128[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1390 shl[Int8] -128[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1391 shl[compile-time] -128[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1392 shl[Int8] -127[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1393 shl[compile-time] -127[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1394 shl[Int8] -127[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1395 shl[compile-time] -127[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1396 shl[Int8] -127[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1397 shl[compile-time] -127[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1398 shl[Int8] -127[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1399 shl[compile-time] -127[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1400 shl[Int8] -127[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1401 shl[compile-time] -127[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1402 shl[Int8] -1[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1403 shl[compile-time] -1[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1404 shl[Int8] -1[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1405 shl[compile-time] -1[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1406 shl[Int8] -1[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1407 shl[compile-time] -1[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1408 shl[Int8] -1[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1409 shl[compile-time] -1[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1410 shl[Int8] -1[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1411 shl[compile-time] -1[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1412 shl[Int8] 0[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1413 shl[compile-time] 0[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1414 shl[Int8] 0[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1415 shl[compile-time] 0[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1416 shl[Int8] 0[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1417 shl[compile-time] 0[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1418 shl[Int8] 0[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1419 shl[compile-time] 0[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1420 shl[Int8] 0[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1421 shl[compile-time] 0[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1422 shl[Int8] 1[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:1423 shl[compile-time] 1[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1424 shl[Int8] 1[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1425 shl[compile-time] 1[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1426 shl[Int8] 1[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1427 shl[compile-time] 1[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1428 shl[Int8] 1[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1429 shl[compile-time] 1[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1430 shl[Int8] 1[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1431 shl[compile-time] 1[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1432 shl[Int8] 127[Int8], 0[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:1433 shl[compile-time] 127[Int8], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1434 shl[Int8] 127[Int8], 255[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1435 shl[compile-time] 127[Int8], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1436 shl[Int8] 127[Int8], 32767[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1437 shl[compile-time] 127[Int8], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1438 shl[Int8] 127[Int8], 32768[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1439 shl[compile-time] 127[Int8], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1440 shl[Int8] 127[Int8], 65535[Word] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1441 shl[compile-time] 127[Int8], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1442 shl[Int8] -128[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1443 shl[compile-time] -128[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1444 shl[Int8] -128[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1445 shl[compile-time] -128[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1446 shl[Int8] -128[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1447 shl[compile-time] -128[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1448 shl[Int8] -128[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1449 shl[compile-time] -128[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1450 shl[Int8] -128[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1451 shl[compile-time] -128[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1452 shl[Int8] -127[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1453 shl[compile-time] -127[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1454 shl[Int8] -127[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1455 shl[compile-time] -127[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1456 shl[Int8] -127[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1457 shl[compile-time] -127[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1458 shl[Int8] -127[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1459 shl[compile-time] -127[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1460 shl[Int8] -127[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1461 shl[compile-time] -127[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1462 shl[Int8] -1[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1463 shl[compile-time] -1[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1464 shl[Int8] -1[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1465 shl[compile-time] -1[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1466 shl[Int8] -1[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1467 shl[compile-time] -1[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1468 shl[Int8] -1[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1469 shl[compile-time] -1[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1470 shl[Int8] -1[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1471 shl[compile-time] -1[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1472 shl[Int8] 0[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1473 shl[compile-time] 0[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1474 shl[Int8] 0[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1475 shl[compile-time] 0[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1476 shl[Int8] 0[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1477 shl[compile-time] 0[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1478 shl[Int8] 0[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1479 shl[compile-time] 0[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1480 shl[Int8] 0[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1481 shl[compile-time] 0[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1482 shl[Int8] 1[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:1483 shl[compile-time] 1[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1484 shl[Int8] 1[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1485 shl[compile-time] 1[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1486 shl[Int8] 1[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1487 shl[compile-time] 1[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1488 shl[Int8] 1[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1489 shl[compile-time] 1[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1490 shl[Int8] 1[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1491 shl[compile-time] 1[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1492 shl[Int8] 127[Int8], 0[Word] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:1493 shl[compile-time] 127[Int8], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1494 shl[Int8] 127[Int8], 255[Word] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1495 shl[compile-time] 127[Int8], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1496 shl[Int8] 127[Int8], 32767[Word] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1497 shl[compile-time] 127[Int8], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1498 shl[Int8] 127[Int8], 32768[Word] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1499 shl[compile-time] 127[Int8], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1500 shl[Int8] 127[Int8], 65535[Word] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1501 shl[compile-time] 127[Int8], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1502 shl[Int8] -128[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1503 shl[compile-time] -128[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1504 shl[Int8] -128[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1505 shl[compile-time] -128[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1506 shl[Int8] -128[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1507 shl[compile-time] -128[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1508 shl[Int8] -128[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1509 shl[compile-time] -128[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1510 shl[Int8] -128[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1511 shl[compile-time] -128[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1512 shl[Int8] -127[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1513 shl[compile-time] -127[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1514 shl[Int8] -127[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1515 shl[compile-time] -127[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1516 shl[Int8] -127[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1517 shl[compile-time] -127[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1518 shl[Int8] -127[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1519 shl[compile-time] -127[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1520 shl[Int8] -127[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1521 shl[compile-time] -127[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1522 shl[Int8] -1[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1523 shl[compile-time] -1[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1524 shl[Int8] -1[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1525 shl[compile-time] -1[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1526 shl[Int8] -1[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1527 shl[compile-time] -1[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1528 shl[Int8] -1[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1529 shl[compile-time] -1[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1530 shl[Int8] -1[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1531 shl[compile-time] -1[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1532 shl[Int8] 0[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1533 shl[compile-time] 0[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1534 shl[Int8] 0[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1535 shl[compile-time] 0[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1536 shl[Int8] 0[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1537 shl[compile-time] 0[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1538 shl[Int8] 0[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1539 shl[compile-time] 0[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1540 shl[Int8] 0[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1541 shl[compile-time] 0[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1542 shl[Int8] 1[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:1543 shl[compile-time] 1[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1544 shl[Int8] 1[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1545 shl[compile-time] 1[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1546 shl[Int8] 1[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1547 shl[compile-time] 1[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1548 shl[Int8] 1[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1549 shl[compile-time] 1[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1550 shl[Int8] 1[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1551 shl[compile-time] 1[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1552 shl[Int8] 127[Int8], 0[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:1553 shl[compile-time] 127[Int8], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1554 shl[Int8] 127[Int8], 255[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1555 shl[compile-time] 127[Int8], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1556 shl[Int8] 127[Int8], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1557 shl[compile-time] 127[Int8], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1558 shl[Int8] 127[Int8], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1559 shl[compile-time] 127[Int8], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1560 shl[Int8] 127[Int8], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1561 shl[compile-time] 127[Int8], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1562 shl[Int8] -128[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:1563 shl[compile-time] -128[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1564 shl[Int8] -128[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1565 shl[compile-time] -128[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1566 shl[Int8] -128[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1567 shl[compile-time] -128[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1568 shl[Int8] -128[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1569 shl[compile-time] -128[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1570 shl[Int8] -128[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1571 shl[compile-time] -128[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1572 shl[Int8] -127[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -127

code auto:1573 shl[compile-time] -127[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:1574 shl[Int8] -127[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1575 shl[compile-time] -127[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1576 shl[Int8] -127[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1577 shl[compile-time] -127[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1578 shl[Int8] -127[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1579 shl[compile-time] -127[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1580 shl[Int8] -127[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1581 shl[compile-time] -127[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1582 shl[Int8] -1[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:1583 shl[compile-time] -1[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1584 shl[Int8] -1[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1585 shl[compile-time] -1[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1586 shl[Int8] -1[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1587 shl[compile-time] -1[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1588 shl[Int8] -1[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1589 shl[compile-time] -1[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1590 shl[Int8] -1[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1591 shl[compile-time] -1[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1592 shl[Int8] 0[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1593 shl[compile-time] 0[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1594 shl[Int8] 0[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1595 shl[compile-time] 0[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1596 shl[Int8] 0[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1597 shl[compile-time] 0[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1598 shl[Int8] 0[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1599 shl[compile-time] 0[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1600 shl[Int8] 0[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1601 shl[compile-time] 0[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1602 shl[Int8] 1[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:1603 shl[compile-time] 1[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1604 shl[Int8] 1[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1605 shl[compile-time] 1[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1606 shl[Int8] 1[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1607 shl[compile-time] 1[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1608 shl[Int8] 1[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1609 shl[compile-time] 1[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1610 shl[Int8] 1[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1611 shl[compile-time] 1[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1612 shl[Int8] 127[Int8], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:1613 shl[compile-time] 127[Int8], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1614 shl[Int8] 127[Int8], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1615 shl[compile-time] 127[Int8], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1616 shl[Int8] 127[Int8], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1617 shl[compile-time] 127[Int8], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1618 shl[Int8] 127[Int8], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1619 shl[compile-time] 127[Int8], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1620 shl[Int8] 127[Int8], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1621 shl[compile-time] 127[Int8], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1622 shl[Int8] -128[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:1623 shl[compile-time] -128[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1624 shl[Int8] -128[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1625 shl[compile-time] -128[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1626 shl[Int8] -128[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1627 shl[compile-time] -128[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1628 shl[Int8] -128[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1629 shl[compile-time] -128[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1630 shl[Int8] -128[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1631 shl[compile-time] -128[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1632 shl[Int8] -127[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -127

code auto:1633 shl[compile-time] -127[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 0;
endcode
varvalue r -127

$overflow on
code auto:1634 shl[Int8] -127[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1635 shl[compile-time] -127[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1636 shl[Int8] -127[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1637 shl[compile-time] -127[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1638 shl[Int8] -127[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1639 shl[compile-time] -127[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1640 shl[Int8] -127[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1641 shl[compile-time] -127[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1642 shl[Int8] -1[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:1643 shl[compile-time] -1[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1644 shl[Int8] -1[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1645 shl[compile-time] -1[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1646 shl[Int8] -1[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1647 shl[compile-time] -1[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1648 shl[Int8] -1[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1649 shl[compile-time] -1[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1650 shl[Int8] -1[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1651 shl[compile-time] -1[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1652 shl[Int8] 0[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1653 shl[compile-time] 0[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1654 shl[Int8] 0[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1655 shl[compile-time] 0[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1656 shl[Int8] 0[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1657 shl[compile-time] 0[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1658 shl[Int8] 0[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1659 shl[compile-time] 0[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1660 shl[Int8] 0[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1661 shl[compile-time] 0[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1662 shl[Int8] 1[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:1663 shl[compile-time] 1[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1664 shl[Int8] 1[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1665 shl[compile-time] 1[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1666 shl[Int8] 1[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1667 shl[compile-time] 1[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1668 shl[Int8] 1[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1669 shl[compile-time] 1[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1670 shl[Int8] 1[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1671 shl[compile-time] 1[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1672 shl[Int8] 127[Int8], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:1673 shl[compile-time] 127[Int8], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1674 shl[Int8] 127[Int8], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1675 shl[compile-time] 127[Int8], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1676 shl[Int8] 127[Int8], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1677 shl[compile-time] 127[Int8], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1678 shl[Int8] 127[Int8], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1679 shl[compile-time] 127[Int8], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1680 shl[Int8] 127[Int8], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1681 shl[compile-time] 127[Int8], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1682 shl[Int8] -128[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1683 shl[compile-time] -128[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1684 shl[Int8] -128[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1685 shl[compile-time] -128[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1686 shl[Int8] -128[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1687 shl[compile-time] -128[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1688 shl[Int8] -128[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1689 shl[compile-time] -128[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1690 shl[Int8] -128[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1691 shl[compile-time] -128[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1692 shl[Int8] -127[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1693 shl[compile-time] -127[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1694 shl[Int8] -127[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1695 shl[compile-time] -127[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1696 shl[Int8] -127[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1697 shl[compile-time] -127[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1698 shl[Int8] -127[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1699 shl[compile-time] -127[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1700 shl[Int8] -127[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1701 shl[compile-time] -127[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1702 shl[Int8] -1[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:1703 shl[compile-time] -1[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1704 shl[Int8] -1[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1705 shl[compile-time] -1[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1706 shl[Int8] -1[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1707 shl[compile-time] -1[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1708 shl[Int8] -1[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1709 shl[compile-time] -1[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1710 shl[Int8] -1[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1711 shl[compile-time] -1[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1712 shl[Int8] 0[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1713 shl[compile-time] 0[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1714 shl[Int8] 0[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1715 shl[compile-time] 0[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1716 shl[Int8] 0[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1717 shl[compile-time] 0[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1718 shl[Int8] 0[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1719 shl[compile-time] 0[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1720 shl[Int8] 0[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1721 shl[compile-time] 0[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1722 shl[Int8] 1[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:1723 shl[compile-time] 1[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1724 shl[Int8] 1[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1725 shl[compile-time] 1[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1726 shl[Int8] 1[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1727 shl[compile-time] 1[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1728 shl[Int8] 1[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1729 shl[compile-time] 1[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1730 shl[Int8] 1[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1731 shl[compile-time] 1[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1732 shl[Int8] 127[Int8], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:1733 shl[compile-time] 127[Int8], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1734 shl[Int8] 127[Int8], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1735 shl[compile-time] 127[Int8], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1736 shl[Int8] 127[Int8], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1737 shl[compile-time] 127[Int8], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1738 shl[Int8] 127[Int8], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1739 shl[compile-time] 127[Int8], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1740 shl[Int8] 127[Int8], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:1741 shl[compile-time] 127[Int8], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1742 shl[Int8] -128[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1743 shl[compile-time] -128[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1744 shl[Int8] -128[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1745 shl[compile-time] -128[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1746 shl[Int8] -128[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1747 shl[compile-time] -128[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1748 shl[Int8] -128[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1749 shl[compile-time] -128[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1750 shl[Int8] -128[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1751 shl[compile-time] -128[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1752 shl[Int8] -127[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1753 shl[compile-time] -127[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1754 shl[Int8] -127[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1755 shl[compile-time] -127[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1756 shl[Int8] -127[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1757 shl[compile-time] -127[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1758 shl[Int8] -127[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1759 shl[compile-time] -127[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1760 shl[Int8] -127[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1761 shl[compile-time] -127[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1762 shl[Int8] -1[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:1763 shl[compile-time] -1[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1764 shl[Int8] -1[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1765 shl[compile-time] -1[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1766 shl[Int8] -1[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1767 shl[compile-time] -1[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1768 shl[Int8] -1[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1769 shl[compile-time] -1[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1770 shl[Int8] -1[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1771 shl[compile-time] -1[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1772 shl[Int8] 0[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1773 shl[compile-time] 0[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1774 shl[Int8] 0[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1775 shl[compile-time] 0[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1776 shl[Int8] 0[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1777 shl[compile-time] 0[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1778 shl[Int8] 0[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1779 shl[compile-time] 0[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1780 shl[Int8] 0[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1781 shl[compile-time] 0[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1782 shl[Int8] 1[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:1783 shl[compile-time] 1[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1784 shl[Int8] 1[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1785 shl[compile-time] 1[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1786 shl[Int8] 1[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1787 shl[compile-time] 1[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1788 shl[Int8] 1[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1789 shl[compile-time] 1[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1790 shl[Int8] 1[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1791 shl[compile-time] 1[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1792 shl[Int8] 127[Int8], 0[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:1793 shl[compile-time] 127[Int8], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1794 shl[Int8] 127[Int8], 255[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1795 shl[compile-time] 127[Int8], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1796 shl[Int8] 127[Int8], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1797 shl[compile-time] 127[Int8], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1798 shl[Int8] 127[Int8], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1799 shl[compile-time] 127[Int8], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1800 shl[Int8] 127[Int8], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:1801 shl[compile-time] 127[Int8], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1802 shl[Int8] -128[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1803 shl[compile-time] -128[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:1804 shl[Int8] -128[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1805 shl[compile-time] -128[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1806 shl[Int8] -128[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1807 shl[compile-time] -128[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1808 shl[Int8] -128[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1809 shl[compile-time] -128[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1810 shl[Int8] -128[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1811 shl[compile-time] -128[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1812 shl[Int8] -127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1813 shl[compile-time] -127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 0;
endcode
compile error

$overflow on
code auto:1814 shl[Int8] -127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1815 shl[compile-time] -127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1816 shl[Int8] -127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1817 shl[compile-time] -127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1818 shl[Int8] -127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1819 shl[compile-time] -127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1820 shl[Int8] -127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1821 shl[compile-time] -127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1822 shl[Int8] -1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:1823 shl[compile-time] -1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:1824 shl[Int8] -1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1825 shl[compile-time] -1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1826 shl[Int8] -1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1827 shl[compile-time] -1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1828 shl[Int8] -1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1829 shl[compile-time] -1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1830 shl[Int8] -1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1831 shl[compile-time] -1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1832 shl[Int8] 0[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1833 shl[compile-time] 0[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1834 shl[Int8] 0[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1835 shl[compile-time] 0[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1836 shl[Int8] 0[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1837 shl[compile-time] 0[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1838 shl[Int8] 0[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1839 shl[compile-time] 0[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1840 shl[Int8] 0[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1841 shl[compile-time] 0[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1842 shl[Int8] 1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:1843 shl[compile-time] 1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1844 shl[Int8] 1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1845 shl[compile-time] 1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1846 shl[Int8] 1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1847 shl[compile-time] 1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1848 shl[Int8] 1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1849 shl[compile-time] 1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1850 shl[Int8] 1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1851 shl[compile-time] 1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1852 shl[Int8] 127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:1853 shl[compile-time] 127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1854 shl[Int8] 127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1855 shl[compile-time] 127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:1856 shl[Int8] 127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1857 shl[compile-time] 127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:1858 shl[Int8] 127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1859 shl[compile-time] 127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:1860 shl[Int8] 127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:1861 shl[compile-time] 127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:1862 shl[Integer] -32768[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1863 shl[compile-time] -32768[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1864 shl[Integer] -32768[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1865 shl[compile-time] -32768[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1866 shl[Integer] -32768[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1867 shl[compile-time] -32768[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1868 shl[Integer] -32768[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1869 shl[compile-time] -32768[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:1870 shl[Integer] -32768[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1871 shl[compile-time] -32768[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:1872 shl[Integer] -32768[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1873 shl[compile-time] -32768[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1874 shl[Integer] -32767[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1875 shl[compile-time] -32767[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1876 shl[Integer] -32767[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1877 shl[compile-time] -32767[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1878 shl[Integer] -32767[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1879 shl[compile-time] -32767[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1880 shl[Integer] -32767[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1881 shl[compile-time] -32767[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:1882 shl[Integer] -32767[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:1883 shl[compile-time] -32767[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:1884 shl[Integer] -32767[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1885 shl[compile-time] -32767[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1886 shl[Integer] -129[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1887 shl[compile-time] -129[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1888 shl[Integer] -129[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1889 shl[compile-time] -129[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1890 shl[Integer] -129[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1891 shl[compile-time] -129[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1892 shl[Integer] -129[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1893 shl[compile-time] -129[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:1894 shl[Integer] -129[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1895 shl[compile-time] -129[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:1896 shl[Integer] -129[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1897 shl[compile-time] -129[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1898 shl[Integer] -128[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1899 shl[compile-time] -128[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1900 shl[Integer] -128[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1901 shl[compile-time] -128[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1902 shl[Integer] -128[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1903 shl[compile-time] -128[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1904 shl[Integer] -128[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:1905 shl[compile-time] -128[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:1906 shl[Integer] -128[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1907 shl[compile-time] -128[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:1908 shl[Integer] -128[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1909 shl[compile-time] -128[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1910 shl[Integer] -1[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1911 shl[compile-time] -1[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1912 shl[Integer] -1[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1913 shl[compile-time] -1[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1914 shl[Integer] -1[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1915 shl[compile-time] -1[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1916 shl[Integer] -1[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:1917 shl[compile-time] -1[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:1918 shl[Integer] -1[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:1919 shl[compile-time] -1[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:1920 shl[Integer] -1[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1921 shl[compile-time] -1[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1922 shl[Integer] 0[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1923 shl[compile-time] 0[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1924 shl[Integer] 0[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1925 shl[compile-time] 0[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1926 shl[Integer] 0[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1927 shl[compile-time] 0[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1928 shl[Integer] 0[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1929 shl[compile-time] 0[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:1930 shl[Integer] 0[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1931 shl[compile-time] 0[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:1932 shl[Integer] 0[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1933 shl[compile-time] 0[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1934 shl[Integer] 1[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1935 shl[compile-time] 1[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1936 shl[Integer] 1[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1937 shl[compile-time] 1[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1938 shl[Integer] 1[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1939 shl[compile-time] 1[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1940 shl[Integer] 1[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:1941 shl[compile-time] 1[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:1942 shl[Integer] 1[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:1943 shl[compile-time] 1[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:1944 shl[Integer] 1[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1945 shl[compile-time] 1[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1946 shl[Integer] 127[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1947 shl[compile-time] 127[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1948 shl[Integer] 127[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1949 shl[compile-time] 127[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1950 shl[Integer] 127[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1951 shl[compile-time] 127[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1952 shl[Integer] 127[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:1953 shl[compile-time] 127[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:1954 shl[Integer] 127[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1955 shl[compile-time] 127[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:1956 shl[Integer] 127[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1957 shl[compile-time] 127[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1958 shl[Integer] 128[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1959 shl[compile-time] 128[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1960 shl[Integer] 128[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1961 shl[compile-time] 128[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1962 shl[Integer] 128[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1963 shl[compile-time] 128[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1964 shl[Integer] 128[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1965 shl[compile-time] 128[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:1966 shl[Integer] 128[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1967 shl[compile-time] 128[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:1968 shl[Integer] 128[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1969 shl[compile-time] 128[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1970 shl[Integer] 32767[Integer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1971 shl[compile-time] 32767[Integer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1972 shl[Integer] 32767[Integer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1973 shl[compile-time] 32767[Integer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1974 shl[Integer] 32767[Integer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1975 shl[compile-time] 32767[Integer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1976 shl[Integer] 32767[Integer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:1977 shl[compile-time] 32767[Integer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:1978 shl[Integer] 32767[Integer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:1979 shl[compile-time] 32767[Integer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:1980 shl[Integer] 32767[Integer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:1981 shl[compile-time] 32767[Integer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1982 shl[Integer] -32768[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1983 shl[compile-time] -32768[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1984 shl[Integer] -32768[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1985 shl[compile-time] -32768[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1986 shl[Integer] -32768[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1987 shl[compile-time] -32768[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:1988 shl[Integer] -32768[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32768

code auto:1989 shl[compile-time] -32768[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 0;
endcode
varvalue r -32768

$overflow on
code auto:1990 shl[Integer] -32768[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1991 shl[compile-time] -32768[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:1992 shl[Integer] -32768[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1993 shl[compile-time] -32768[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:1994 shl[Integer] -32767[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1995 shl[compile-time] -32767[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:1996 shl[Integer] -32767[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1997 shl[compile-time] -32767[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:1998 shl[Integer] -32767[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:1999 shl[compile-time] -32767[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2000 shl[Integer] -32767[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32767

code auto:2001 shl[compile-time] -32767[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 0;
endcode
varvalue r -32767

$overflow on
code auto:2002 shl[Integer] -32767[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:2003 shl[compile-time] -32767[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2004 shl[Integer] -32767[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2005 shl[compile-time] -32767[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2006 shl[Integer] -129[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2007 shl[compile-time] -129[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2008 shl[Integer] -129[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2009 shl[compile-time] -129[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2010 shl[Integer] -129[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2011 shl[compile-time] -129[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2012 shl[Integer] -129[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -129

code auto:2013 shl[compile-time] -129[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 0;
endcode
varvalue r -129

$overflow on
code auto:2014 shl[Integer] -129[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -258

code auto:2015 shl[compile-time] -129[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 1;
endcode
varvalue r -258

$overflow on
code auto:2016 shl[Integer] -129[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2017 shl[compile-time] -129[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2018 shl[Integer] -128[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2019 shl[compile-time] -128[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2020 shl[Integer] -128[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2021 shl[compile-time] -128[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2022 shl[Integer] -128[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2023 shl[compile-time] -128[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2024 shl[Integer] -128[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:2025 shl[compile-time] -128[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:2026 shl[Integer] -128[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -256

code auto:2027 shl[compile-time] -128[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:2028 shl[Integer] -128[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2029 shl[compile-time] -128[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2030 shl[Integer] -1[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2031 shl[compile-time] -1[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2032 shl[Integer] -1[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2033 shl[compile-time] -1[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2034 shl[Integer] -1[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2035 shl[compile-time] -1[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2036 shl[Integer] -1[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:2037 shl[compile-time] -1[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:2038 shl[Integer] -1[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:2039 shl[compile-time] -1[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:2040 shl[Integer] -1[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2041 shl[compile-time] -1[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2042 shl[Integer] 0[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2043 shl[compile-time] 0[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2044 shl[Integer] 0[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2045 shl[compile-time] 0[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2046 shl[Integer] 0[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2047 shl[compile-time] 0[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2048 shl[Integer] 0[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2049 shl[compile-time] 0[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2050 shl[Integer] 0[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2051 shl[compile-time] 0[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2052 shl[Integer] 0[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2053 shl[compile-time] 0[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2054 shl[Integer] 1[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2055 shl[compile-time] 1[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2056 shl[Integer] 1[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2057 shl[compile-time] 1[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2058 shl[Integer] 1[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2059 shl[compile-time] 1[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2060 shl[Integer] 1[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:2061 shl[compile-time] 1[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2062 shl[Integer] 1[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:2063 shl[compile-time] 1[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2064 shl[Integer] 1[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2065 shl[compile-time] 1[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2066 shl[Integer] 127[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2067 shl[compile-time] 127[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2068 shl[Integer] 127[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2069 shl[compile-time] 127[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2070 shl[Integer] 127[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2071 shl[compile-time] 127[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2072 shl[Integer] 127[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:2073 shl[compile-time] 127[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2074 shl[Integer] 127[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:2075 shl[compile-time] 127[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:2076 shl[Integer] 127[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2077 shl[compile-time] 127[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2078 shl[Integer] 128[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2079 shl[compile-time] 128[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2080 shl[Integer] 128[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2081 shl[compile-time] 128[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2082 shl[Integer] 128[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2083 shl[compile-time] 128[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2084 shl[Integer] 128[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:2085 shl[compile-time] 128[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:2086 shl[Integer] 128[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 256

code auto:2087 shl[compile-time] 128[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:2088 shl[Integer] 128[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2089 shl[compile-time] 128[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2090 shl[Integer] 32767[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2091 shl[compile-time] 32767[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2092 shl[Integer] 32767[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2093 shl[compile-time] 32767[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2094 shl[Integer] 32767[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2095 shl[compile-time] 32767[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2096 shl[Integer] 32767[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:2097 shl[compile-time] 32767[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:2098 shl[Integer] 32767[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:2099 shl[compile-time] 32767[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:2100 shl[Integer] 32767[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2101 shl[compile-time] 32767[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2102 shl[Integer] -32768[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2103 shl[compile-time] -32768[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2104 shl[Integer] -32768[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2105 shl[compile-time] -32768[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2106 shl[Integer] -32768[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2107 shl[compile-time] -32768[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2108 shl[Integer] -32768[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2109 shl[compile-time] -32768[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:2110 shl[Integer] -32768[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2111 shl[compile-time] -32768[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2112 shl[Integer] -32768[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2113 shl[compile-time] -32768[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2114 shl[Integer] -32767[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2115 shl[compile-time] -32767[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2116 shl[Integer] -32767[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2117 shl[compile-time] -32767[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2118 shl[Integer] -32767[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2119 shl[compile-time] -32767[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2120 shl[Integer] -32767[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2121 shl[compile-time] -32767[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:2122 shl[Integer] -32767[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:2123 shl[compile-time] -32767[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2124 shl[Integer] -32767[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2125 shl[compile-time] -32767[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2126 shl[Integer] -129[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2127 shl[compile-time] -129[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2128 shl[Integer] -129[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2129 shl[compile-time] -129[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2130 shl[Integer] -129[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2131 shl[compile-time] -129[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2132 shl[Integer] -129[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2133 shl[compile-time] -129[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:2134 shl[Integer] -129[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2135 shl[compile-time] -129[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:2136 shl[Integer] -129[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2137 shl[compile-time] -129[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2138 shl[Integer] -128[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2139 shl[compile-time] -128[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2140 shl[Integer] -128[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2141 shl[compile-time] -128[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2142 shl[Integer] -128[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2143 shl[compile-time] -128[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2144 shl[Integer] -128[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2145 shl[compile-time] -128[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:2146 shl[Integer] -128[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2147 shl[compile-time] -128[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:2148 shl[Integer] -128[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2149 shl[compile-time] -128[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2150 shl[Integer] -1[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2151 shl[compile-time] -1[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2152 shl[Integer] -1[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2153 shl[compile-time] -1[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2154 shl[Integer] -1[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2155 shl[compile-time] -1[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2156 shl[Integer] -1[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2157 shl[compile-time] -1[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:2158 shl[Integer] -1[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2159 shl[compile-time] -1[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:2160 shl[Integer] -1[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2161 shl[compile-time] -1[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2162 shl[Integer] 0[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2163 shl[compile-time] 0[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2164 shl[Integer] 0[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2165 shl[compile-time] 0[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2166 shl[Integer] 0[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2167 shl[compile-time] 0[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2168 shl[Integer] 0[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2169 shl[compile-time] 0[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2170 shl[Integer] 0[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2171 shl[compile-time] 0[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2172 shl[Integer] 0[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2173 shl[compile-time] 0[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2174 shl[Integer] 1[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2175 shl[compile-time] 1[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2176 shl[Integer] 1[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2177 shl[compile-time] 1[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2178 shl[Integer] 1[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2179 shl[compile-time] 1[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2180 shl[Integer] 1[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:2181 shl[compile-time] 1[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2182 shl[Integer] 1[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:2183 shl[compile-time] 1[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2184 shl[Integer] 1[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2185 shl[compile-time] 1[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2186 shl[Integer] 127[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2187 shl[compile-time] 127[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2188 shl[Integer] 127[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2189 shl[compile-time] 127[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2190 shl[Integer] 127[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2191 shl[compile-time] 127[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2192 shl[Integer] 127[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:2193 shl[compile-time] 127[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2194 shl[Integer] 127[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:2195 shl[compile-time] 127[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:2196 shl[Integer] 127[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2197 shl[compile-time] 127[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2198 shl[Integer] 128[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2199 shl[compile-time] 128[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2200 shl[Integer] 128[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2201 shl[compile-time] 128[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2202 shl[Integer] 128[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2203 shl[compile-time] 128[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2204 shl[Integer] 128[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:2205 shl[compile-time] 128[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:2206 shl[Integer] 128[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2207 shl[compile-time] 128[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:2208 shl[Integer] 128[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2209 shl[compile-time] 128[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2210 shl[Integer] 32767[Integer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2211 shl[compile-time] 32767[Integer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2212 shl[Integer] 32767[Integer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2213 shl[compile-time] 32767[Integer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2214 shl[Integer] 32767[Integer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2215 shl[compile-time] 32767[Integer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2216 shl[Integer] 32767[Integer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2217 shl[compile-time] 32767[Integer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:2218 shl[Integer] 32767[Integer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2219 shl[compile-time] 32767[Integer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:2220 shl[Integer] 32767[Integer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2221 shl[compile-time] 32767[Integer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2222 shl[Integer] -32768[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2223 shl[compile-time] -32768[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2224 shl[Integer] -32768[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2225 shl[compile-time] -32768[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2226 shl[Integer] -32768[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2227 shl[compile-time] -32768[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2228 shl[Integer] -32768[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2229 shl[compile-time] -32768[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:2230 shl[Integer] -32768[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2231 shl[compile-time] -32768[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2232 shl[Integer] -32768[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2233 shl[compile-time] -32768[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2234 shl[Integer] -32767[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2235 shl[compile-time] -32767[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2236 shl[Integer] -32767[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2237 shl[compile-time] -32767[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2238 shl[Integer] -32767[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2239 shl[compile-time] -32767[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2240 shl[Integer] -32767[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2241 shl[compile-time] -32767[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:2242 shl[Integer] -32767[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:2243 shl[compile-time] -32767[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2244 shl[Integer] -32767[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2245 shl[compile-time] -32767[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2246 shl[Integer] -129[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2247 shl[compile-time] -129[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2248 shl[Integer] -129[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2249 shl[compile-time] -129[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2250 shl[Integer] -129[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2251 shl[compile-time] -129[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2252 shl[Integer] -129[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2253 shl[compile-time] -129[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:2254 shl[Integer] -129[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2255 shl[compile-time] -129[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:2256 shl[Integer] -129[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2257 shl[compile-time] -129[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2258 shl[Integer] -128[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2259 shl[compile-time] -128[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2260 shl[Integer] -128[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2261 shl[compile-time] -128[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2262 shl[Integer] -128[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2263 shl[compile-time] -128[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2264 shl[Integer] -128[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2265 shl[compile-time] -128[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:2266 shl[Integer] -128[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2267 shl[compile-time] -128[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:2268 shl[Integer] -128[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2269 shl[compile-time] -128[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2270 shl[Integer] -1[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2271 shl[compile-time] -1[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2272 shl[Integer] -1[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2273 shl[compile-time] -1[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2274 shl[Integer] -1[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2275 shl[compile-time] -1[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2276 shl[Integer] -1[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2277 shl[compile-time] -1[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:2278 shl[Integer] -1[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2279 shl[compile-time] -1[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:2280 shl[Integer] -1[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2281 shl[compile-time] -1[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2282 shl[Integer] 0[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2283 shl[compile-time] 0[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2284 shl[Integer] 0[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2285 shl[compile-time] 0[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2286 shl[Integer] 0[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2287 shl[compile-time] 0[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2288 shl[Integer] 0[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2289 shl[compile-time] 0[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2290 shl[Integer] 0[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2291 shl[compile-time] 0[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2292 shl[Integer] 0[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2293 shl[compile-time] 0[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2294 shl[Integer] 1[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2295 shl[compile-time] 1[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2296 shl[Integer] 1[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2297 shl[compile-time] 1[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2298 shl[Integer] 1[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2299 shl[compile-time] 1[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2300 shl[Integer] 1[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:2301 shl[compile-time] 1[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2302 shl[Integer] 1[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:2303 shl[compile-time] 1[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2304 shl[Integer] 1[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2305 shl[compile-time] 1[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2306 shl[Integer] 127[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2307 shl[compile-time] 127[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2308 shl[Integer] 127[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2309 shl[compile-time] 127[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2310 shl[Integer] 127[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2311 shl[compile-time] 127[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2312 shl[Integer] 127[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:2313 shl[compile-time] 127[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2314 shl[Integer] 127[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:2315 shl[compile-time] 127[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:2316 shl[Integer] 127[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2317 shl[compile-time] 127[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2318 shl[Integer] 128[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2319 shl[compile-time] 128[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2320 shl[Integer] 128[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2321 shl[compile-time] 128[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2322 shl[Integer] 128[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2323 shl[compile-time] 128[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2324 shl[Integer] 128[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:2325 shl[compile-time] 128[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:2326 shl[Integer] 128[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 256

code auto:2327 shl[compile-time] 128[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:2328 shl[Integer] 128[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2329 shl[compile-time] 128[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2330 shl[Integer] 32767[Integer], -128[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2331 shl[compile-time] 32767[Integer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2332 shl[Integer] 32767[Integer], -127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2333 shl[compile-time] 32767[Integer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2334 shl[Integer] 32767[Integer], -1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2335 shl[compile-time] 32767[Integer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2336 shl[Integer] 32767[Integer], 0[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:2337 shl[compile-time] 32767[Integer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:2338 shl[Integer] 32767[Integer], 1[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:2339 shl[compile-time] 32767[Integer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:2340 shl[Integer] 32767[Integer], 127[Int8] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:2341 shl[compile-time] 32767[Integer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2342 shl[Integer] -32768[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2343 shl[compile-time] -32768[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2344 shl[Integer] -32768[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2345 shl[compile-time] -32768[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2346 shl[Integer] -32768[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2347 shl[compile-time] -32768[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2348 shl[Integer] -32768[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2349 shl[compile-time] -32768[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:2350 shl[Integer] -32768[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2351 shl[compile-time] -32768[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2352 shl[Integer] -32768[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2353 shl[compile-time] -32768[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2354 shl[Integer] -32767[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2355 shl[compile-time] -32767[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2356 shl[Integer] -32767[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2357 shl[compile-time] -32767[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2358 shl[Integer] -32767[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2359 shl[compile-time] -32767[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2360 shl[Integer] -32767[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2361 shl[compile-time] -32767[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:2362 shl[Integer] -32767[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:2363 shl[compile-time] -32767[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2364 shl[Integer] -32767[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2365 shl[compile-time] -32767[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2366 shl[Integer] -129[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2367 shl[compile-time] -129[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2368 shl[Integer] -129[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2369 shl[compile-time] -129[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2370 shl[Integer] -129[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2371 shl[compile-time] -129[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2372 shl[Integer] -129[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2373 shl[compile-time] -129[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:2374 shl[Integer] -129[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2375 shl[compile-time] -129[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:2376 shl[Integer] -129[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2377 shl[compile-time] -129[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2378 shl[Integer] -128[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2379 shl[compile-time] -128[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2380 shl[Integer] -128[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2381 shl[compile-time] -128[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2382 shl[Integer] -128[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2383 shl[compile-time] -128[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2384 shl[Integer] -128[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2385 shl[compile-time] -128[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:2386 shl[Integer] -128[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2387 shl[compile-time] -128[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:2388 shl[Integer] -128[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2389 shl[compile-time] -128[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2390 shl[Integer] -1[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2391 shl[compile-time] -1[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2392 shl[Integer] -1[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2393 shl[compile-time] -1[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2394 shl[Integer] -1[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2395 shl[compile-time] -1[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2396 shl[Integer] -1[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2397 shl[compile-time] -1[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:2398 shl[Integer] -1[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2399 shl[compile-time] -1[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:2400 shl[Integer] -1[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2401 shl[compile-time] -1[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2402 shl[Integer] 0[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2403 shl[compile-time] 0[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2404 shl[Integer] 0[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2405 shl[compile-time] 0[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2406 shl[Integer] 0[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2407 shl[compile-time] 0[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2408 shl[Integer] 0[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2409 shl[compile-time] 0[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2410 shl[Integer] 0[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2411 shl[compile-time] 0[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2412 shl[Integer] 0[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2413 shl[compile-time] 0[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2414 shl[Integer] 1[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2415 shl[compile-time] 1[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2416 shl[Integer] 1[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2417 shl[compile-time] 1[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2418 shl[Integer] 1[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2419 shl[compile-time] 1[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2420 shl[Integer] 1[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:2421 shl[compile-time] 1[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2422 shl[Integer] 1[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:2423 shl[compile-time] 1[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2424 shl[Integer] 1[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2425 shl[compile-time] 1[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2426 shl[Integer] 127[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2427 shl[compile-time] 127[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2428 shl[Integer] 127[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2429 shl[compile-time] 127[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2430 shl[Integer] 127[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2431 shl[compile-time] 127[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2432 shl[Integer] 127[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:2433 shl[compile-time] 127[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2434 shl[Integer] 127[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:2435 shl[compile-time] 127[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:2436 shl[Integer] 127[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2437 shl[compile-time] 127[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2438 shl[Integer] 128[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2439 shl[compile-time] 128[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2440 shl[Integer] 128[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2441 shl[compile-time] 128[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2442 shl[Integer] 128[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2443 shl[compile-time] 128[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2444 shl[Integer] 128[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:2445 shl[compile-time] 128[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:2446 shl[Integer] 128[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 256

code auto:2447 shl[compile-time] 128[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:2448 shl[Integer] 128[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2449 shl[compile-time] 128[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2450 shl[Integer] 32767[Integer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2451 shl[compile-time] 32767[Integer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2452 shl[Integer] 32767[Integer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2453 shl[compile-time] 32767[Integer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:2454 shl[Integer] 32767[Integer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2455 shl[compile-time] 32767[Integer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2456 shl[Integer] 32767[Integer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:2457 shl[compile-time] 32767[Integer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:2458 shl[Integer] 32767[Integer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:2459 shl[compile-time] 32767[Integer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:2460 shl[Integer] 32767[Integer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:2461 shl[compile-time] 32767[Integer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2462 shl[Integer] -32768[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2463 shl[compile-time] -32768[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2464 shl[Integer] -32768[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2465 shl[compile-time] -32768[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2466 shl[Integer] -32768[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2467 shl[compile-time] -32768[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2468 shl[Integer] -32768[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2469 shl[compile-time] -32768[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2470 shl[Integer] -32768[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2471 shl[compile-time] -32768[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2472 shl[Integer] -32768[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2473 shl[compile-time] -32768[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:2474 shl[Integer] -32768[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2475 shl[compile-time] -32768[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2476 shl[Integer] -32768[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2477 shl[compile-time] -32768[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2478 shl[Integer] -32768[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2479 shl[compile-time] -32768[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2480 shl[Integer] -32768[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2481 shl[compile-time] -32768[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2482 shl[Integer] -32767[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2483 shl[compile-time] -32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2484 shl[Integer] -32767[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2485 shl[compile-time] -32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2486 shl[Integer] -32767[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2487 shl[compile-time] -32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2488 shl[Integer] -32767[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2489 shl[compile-time] -32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2490 shl[Integer] -32767[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2491 shl[compile-time] -32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2492 shl[Integer] -32767[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2493 shl[compile-time] -32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:2494 shl[Integer] -32767[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:2495 shl[compile-time] -32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2496 shl[Integer] -32767[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2497 shl[compile-time] -32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2498 shl[Integer] -32767[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2499 shl[compile-time] -32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2500 shl[Integer] -32767[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2501 shl[compile-time] -32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2502 shl[Integer] -129[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2503 shl[compile-time] -129[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2504 shl[Integer] -129[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2505 shl[compile-time] -129[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2506 shl[Integer] -129[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2507 shl[compile-time] -129[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2508 shl[Integer] -129[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2509 shl[compile-time] -129[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2510 shl[Integer] -129[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2511 shl[compile-time] -129[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2512 shl[Integer] -129[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2513 shl[compile-time] -129[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:2514 shl[Integer] -129[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2515 shl[compile-time] -129[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:2516 shl[Integer] -129[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2517 shl[compile-time] -129[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2518 shl[Integer] -129[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2519 shl[compile-time] -129[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2520 shl[Integer] -129[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2521 shl[compile-time] -129[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2522 shl[Integer] -128[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2523 shl[compile-time] -128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2524 shl[Integer] -128[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2525 shl[compile-time] -128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2526 shl[Integer] -128[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2527 shl[compile-time] -128[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2528 shl[Integer] -128[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2529 shl[compile-time] -128[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2530 shl[Integer] -128[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2531 shl[compile-time] -128[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2532 shl[Integer] -128[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:2533 shl[compile-time] -128[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:2534 shl[Integer] -128[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2535 shl[compile-time] -128[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:2536 shl[Integer] -128[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2537 shl[compile-time] -128[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2538 shl[Integer] -128[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2539 shl[compile-time] -128[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2540 shl[Integer] -128[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2541 shl[compile-time] -128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2542 shl[Integer] -1[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2543 shl[compile-time] -1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2544 shl[Integer] -1[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2545 shl[compile-time] -1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2546 shl[Integer] -1[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2547 shl[compile-time] -1[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2548 shl[Integer] -1[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2549 shl[compile-time] -1[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2550 shl[Integer] -1[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2551 shl[compile-time] -1[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2552 shl[Integer] -1[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:2553 shl[compile-time] -1[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:2554 shl[Integer] -1[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:2555 shl[compile-time] -1[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:2556 shl[Integer] -1[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2557 shl[compile-time] -1[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2558 shl[Integer] -1[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2559 shl[compile-time] -1[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2560 shl[Integer] -1[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2561 shl[compile-time] -1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2562 shl[Integer] 0[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2563 shl[compile-time] 0[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2564 shl[Integer] 0[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2565 shl[compile-time] 0[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2566 shl[Integer] 0[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2567 shl[compile-time] 0[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2568 shl[Integer] 0[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2569 shl[compile-time] 0[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2570 shl[Integer] 0[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2571 shl[compile-time] 0[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2572 shl[Integer] 0[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2573 shl[compile-time] 0[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2574 shl[Integer] 0[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2575 shl[compile-time] 0[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2576 shl[Integer] 0[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2577 shl[compile-time] 0[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2578 shl[Integer] 0[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2579 shl[compile-time] 0[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2580 shl[Integer] 0[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2581 shl[compile-time] 0[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2582 shl[Integer] 1[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2583 shl[compile-time] 1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2584 shl[Integer] 1[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2585 shl[compile-time] 1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2586 shl[Integer] 1[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2587 shl[compile-time] 1[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2588 shl[Integer] 1[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2589 shl[compile-time] 1[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2590 shl[Integer] 1[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2591 shl[compile-time] 1[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2592 shl[Integer] 1[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:2593 shl[compile-time] 1[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2594 shl[Integer] 1[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:2595 shl[compile-time] 1[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2596 shl[Integer] 1[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2597 shl[compile-time] 1[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2598 shl[Integer] 1[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2599 shl[compile-time] 1[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2600 shl[Integer] 1[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2601 shl[compile-time] 1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2602 shl[Integer] 127[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2603 shl[compile-time] 127[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2604 shl[Integer] 127[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2605 shl[compile-time] 127[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2606 shl[Integer] 127[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2607 shl[compile-time] 127[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2608 shl[Integer] 127[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2609 shl[compile-time] 127[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2610 shl[Integer] 127[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2611 shl[compile-time] 127[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2612 shl[Integer] 127[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:2613 shl[compile-time] 127[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2614 shl[Integer] 127[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2615 shl[compile-time] 127[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:2616 shl[Integer] 127[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2617 shl[compile-time] 127[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2618 shl[Integer] 127[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2619 shl[compile-time] 127[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2620 shl[Integer] 127[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2621 shl[compile-time] 127[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2622 shl[Integer] 128[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2623 shl[compile-time] 128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2624 shl[Integer] 128[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2625 shl[compile-time] 128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2626 shl[Integer] 128[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2627 shl[compile-time] 128[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2628 shl[Integer] 128[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2629 shl[compile-time] 128[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2630 shl[Integer] 128[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2631 shl[compile-time] 128[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2632 shl[Integer] 128[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2633 shl[compile-time] 128[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:2634 shl[Integer] 128[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2635 shl[compile-time] 128[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:2636 shl[Integer] 128[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2637 shl[compile-time] 128[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2638 shl[Integer] 128[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2639 shl[compile-time] 128[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2640 shl[Integer] 128[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2641 shl[compile-time] 128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2642 shl[Integer] 32767[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2643 shl[compile-time] 32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2644 shl[Integer] 32767[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2645 shl[compile-time] 32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2646 shl[Integer] 32767[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2647 shl[compile-time] 32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2648 shl[Integer] 32767[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2649 shl[compile-time] 32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2650 shl[Integer] 32767[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2651 shl[compile-time] 32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2652 shl[Integer] 32767[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:2653 shl[compile-time] 32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:2654 shl[Integer] 32767[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:2655 shl[compile-time] 32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:2656 shl[Integer] 32767[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2657 shl[compile-time] 32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2658 shl[Integer] 32767[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2659 shl[compile-time] 32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2660 shl[Integer] 32767[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:2661 shl[compile-time] 32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2662 shl[Integer] -32768[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2663 shl[compile-time] -32768[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2664 shl[Integer] -32768[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2665 shl[compile-time] -32768[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2666 shl[Integer] -32768[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2667 shl[compile-time] -32768[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2668 shl[Integer] -32768[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2669 shl[compile-time] -32768[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2670 shl[Integer] -32768[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2671 shl[compile-time] -32768[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2672 shl[Integer] -32768[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32768

code auto:2673 shl[compile-time] -32768[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 0;
endcode
varvalue r -32768

$overflow on
code auto:2674 shl[Integer] -32768[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2675 shl[compile-time] -32768[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2676 shl[Integer] -32768[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2677 shl[compile-time] -32768[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2678 shl[Integer] -32768[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2679 shl[compile-time] -32768[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2680 shl[Integer] -32768[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2681 shl[compile-time] -32768[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2682 shl[Integer] -32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2683 shl[compile-time] -32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2684 shl[Integer] -32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2685 shl[compile-time] -32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2686 shl[Integer] -32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2687 shl[compile-time] -32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2688 shl[Integer] -32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2689 shl[compile-time] -32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2690 shl[Integer] -32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2691 shl[compile-time] -32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2692 shl[Integer] -32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32767

code auto:2693 shl[compile-time] -32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 0;
endcode
varvalue r -32767

$overflow on
code auto:2694 shl[Integer] -32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:2695 shl[compile-time] -32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2696 shl[Integer] -32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2697 shl[compile-time] -32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2698 shl[Integer] -32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2699 shl[compile-time] -32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2700 shl[Integer] -32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2701 shl[compile-time] -32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2702 shl[Integer] -129[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2703 shl[compile-time] -129[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2704 shl[Integer] -129[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2705 shl[compile-time] -129[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2706 shl[Integer] -129[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2707 shl[compile-time] -129[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2708 shl[Integer] -129[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2709 shl[compile-time] -129[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2710 shl[Integer] -129[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2711 shl[compile-time] -129[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2712 shl[Integer] -129[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -129

code auto:2713 shl[compile-time] -129[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 0;
endcode
varvalue r -129

$overflow on
code auto:2714 shl[Integer] -129[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -258

code auto:2715 shl[compile-time] -129[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 1;
endcode
varvalue r -258

$overflow on
code auto:2716 shl[Integer] -129[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2717 shl[compile-time] -129[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2718 shl[Integer] -129[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2719 shl[compile-time] -129[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2720 shl[Integer] -129[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2721 shl[compile-time] -129[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2722 shl[Integer] -128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2723 shl[compile-time] -128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2724 shl[Integer] -128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2725 shl[compile-time] -128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2726 shl[Integer] -128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2727 shl[compile-time] -128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2728 shl[Integer] -128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2729 shl[compile-time] -128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2730 shl[Integer] -128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2731 shl[compile-time] -128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2732 shl[Integer] -128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:2733 shl[compile-time] -128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:2734 shl[Integer] -128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -256

code auto:2735 shl[compile-time] -128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:2736 shl[Integer] -128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2737 shl[compile-time] -128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2738 shl[Integer] -128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2739 shl[compile-time] -128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2740 shl[Integer] -128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2741 shl[compile-time] -128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2742 shl[Integer] -1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2743 shl[compile-time] -1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2744 shl[Integer] -1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2745 shl[compile-time] -1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2746 shl[Integer] -1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2747 shl[compile-time] -1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2748 shl[Integer] -1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2749 shl[compile-time] -1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2750 shl[Integer] -1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2751 shl[compile-time] -1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2752 shl[Integer] -1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:2753 shl[compile-time] -1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:2754 shl[Integer] -1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:2755 shl[compile-time] -1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:2756 shl[Integer] -1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2757 shl[compile-time] -1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2758 shl[Integer] -1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2759 shl[compile-time] -1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2760 shl[Integer] -1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2761 shl[compile-time] -1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2762 shl[Integer] 0[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2763 shl[compile-time] 0[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2764 shl[Integer] 0[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2765 shl[compile-time] 0[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2766 shl[Integer] 0[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2767 shl[compile-time] 0[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2768 shl[Integer] 0[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2769 shl[compile-time] 0[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2770 shl[Integer] 0[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2771 shl[compile-time] 0[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2772 shl[Integer] 0[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2773 shl[compile-time] 0[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2774 shl[Integer] 0[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2775 shl[compile-time] 0[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2776 shl[Integer] 0[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2777 shl[compile-time] 0[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2778 shl[Integer] 0[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2779 shl[compile-time] 0[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2780 shl[Integer] 0[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2781 shl[compile-time] 0[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2782 shl[Integer] 1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2783 shl[compile-time] 1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2784 shl[Integer] 1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2785 shl[compile-time] 1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2786 shl[Integer] 1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2787 shl[compile-time] 1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2788 shl[Integer] 1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2789 shl[compile-time] 1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2790 shl[Integer] 1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2791 shl[compile-time] 1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2792 shl[Integer] 1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:2793 shl[compile-time] 1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2794 shl[Integer] 1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:2795 shl[compile-time] 1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2796 shl[Integer] 1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2797 shl[compile-time] 1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2798 shl[Integer] 1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2799 shl[compile-time] 1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2800 shl[Integer] 1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2801 shl[compile-time] 1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2802 shl[Integer] 127[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2803 shl[compile-time] 127[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2804 shl[Integer] 127[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2805 shl[compile-time] 127[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2806 shl[Integer] 127[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2807 shl[compile-time] 127[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2808 shl[Integer] 127[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2809 shl[compile-time] 127[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2810 shl[Integer] 127[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2811 shl[compile-time] 127[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2812 shl[Integer] 127[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:2813 shl[compile-time] 127[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:2814 shl[Integer] 127[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:2815 shl[compile-time] 127[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:2816 shl[Integer] 127[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2817 shl[compile-time] 127[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2818 shl[Integer] 127[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2819 shl[compile-time] 127[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2820 shl[Integer] 127[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2821 shl[compile-time] 127[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2822 shl[Integer] 128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2823 shl[compile-time] 128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2824 shl[Integer] 128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2825 shl[compile-time] 128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2826 shl[Integer] 128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2827 shl[compile-time] 128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2828 shl[Integer] 128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2829 shl[compile-time] 128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2830 shl[Integer] 128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2831 shl[compile-time] 128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2832 shl[Integer] 128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:2833 shl[compile-time] 128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:2834 shl[Integer] 128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 256

code auto:2835 shl[compile-time] 128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:2836 shl[Integer] 128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2837 shl[compile-time] 128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2838 shl[Integer] 128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2839 shl[compile-time] 128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2840 shl[Integer] 128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2841 shl[compile-time] 128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2842 shl[Integer] 32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2843 shl[compile-time] 32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2844 shl[Integer] 32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2845 shl[compile-time] 32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2846 shl[Integer] 32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2847 shl[compile-time] 32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2848 shl[Integer] 32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2849 shl[compile-time] 32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2850 shl[Integer] 32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2851 shl[compile-time] 32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2852 shl[Integer] 32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:2853 shl[compile-time] 32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:2854 shl[Integer] 32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:2855 shl[compile-time] 32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:2856 shl[Integer] 32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2857 shl[compile-time] 32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2858 shl[Integer] 32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2859 shl[compile-time] 32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2860 shl[Integer] 32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:2861 shl[compile-time] 32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2862 shl[Integer] -32768[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2863 shl[compile-time] -32768[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2864 shl[Integer] -32768[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2865 shl[compile-time] -32768[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2866 shl[Integer] -32768[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2867 shl[compile-time] -32768[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2868 shl[Integer] -32768[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2869 shl[compile-time] -32768[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2870 shl[Integer] -32768[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2871 shl[compile-time] -32768[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2872 shl[Integer] -32768[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2873 shl[compile-time] -32768[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:2874 shl[Integer] -32768[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2875 shl[compile-time] -32768[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:2876 shl[Integer] -32768[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2877 shl[compile-time] -32768[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2878 shl[Integer] -32768[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2879 shl[compile-time] -32768[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2880 shl[Integer] -32768[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2881 shl[compile-time] -32768[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2882 shl[Integer] -32767[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2883 shl[compile-time] -32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2884 shl[Integer] -32767[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2885 shl[compile-time] -32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2886 shl[Integer] -32767[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2887 shl[compile-time] -32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2888 shl[Integer] -32767[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2889 shl[compile-time] -32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2890 shl[Integer] -32767[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2891 shl[compile-time] -32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2892 shl[Integer] -32767[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2893 shl[compile-time] -32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:2894 shl[Integer] -32767[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:2895 shl[compile-time] -32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:2896 shl[Integer] -32767[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2897 shl[compile-time] -32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2898 shl[Integer] -32767[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2899 shl[compile-time] -32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2900 shl[Integer] -32767[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2901 shl[compile-time] -32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2902 shl[Integer] -129[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2903 shl[compile-time] -129[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2904 shl[Integer] -129[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2905 shl[compile-time] -129[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2906 shl[Integer] -129[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2907 shl[compile-time] -129[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2908 shl[Integer] -129[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2909 shl[compile-time] -129[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2910 shl[Integer] -129[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2911 shl[compile-time] -129[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2912 shl[Integer] -129[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2913 shl[compile-time] -129[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:2914 shl[Integer] -129[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2915 shl[compile-time] -129[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:2916 shl[Integer] -129[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2917 shl[compile-time] -129[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2918 shl[Integer] -129[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2919 shl[compile-time] -129[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2920 shl[Integer] -129[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2921 shl[compile-time] -129[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2922 shl[Integer] -128[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2923 shl[compile-time] -128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2924 shl[Integer] -128[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2925 shl[compile-time] -128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2926 shl[Integer] -128[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2927 shl[compile-time] -128[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2928 shl[Integer] -128[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2929 shl[compile-time] -128[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2930 shl[Integer] -128[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2931 shl[compile-time] -128[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2932 shl[Integer] -128[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2933 shl[compile-time] -128[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:2934 shl[Integer] -128[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2935 shl[compile-time] -128[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:2936 shl[Integer] -128[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2937 shl[compile-time] -128[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2938 shl[Integer] -128[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2939 shl[compile-time] -128[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2940 shl[Integer] -128[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2941 shl[compile-time] -128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2942 shl[Integer] -1[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2943 shl[compile-time] -1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2944 shl[Integer] -1[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2945 shl[compile-time] -1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2946 shl[Integer] -1[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2947 shl[compile-time] -1[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2948 shl[Integer] -1[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2949 shl[compile-time] -1[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2950 shl[Integer] -1[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2951 shl[compile-time] -1[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2952 shl[Integer] -1[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2953 shl[compile-time] -1[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:2954 shl[Integer] -1[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:2955 shl[compile-time] -1[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:2956 shl[Integer] -1[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2957 shl[compile-time] -1[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2958 shl[Integer] -1[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2959 shl[compile-time] -1[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2960 shl[Integer] -1[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2961 shl[compile-time] -1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2962 shl[Integer] 0[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2963 shl[compile-time] 0[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2964 shl[Integer] 0[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2965 shl[compile-time] 0[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2966 shl[Integer] 0[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2967 shl[compile-time] 0[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2968 shl[Integer] 0[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2969 shl[compile-time] 0[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2970 shl[Integer] 0[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2971 shl[compile-time] 0[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2972 shl[Integer] 0[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2973 shl[compile-time] 0[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:2974 shl[Integer] 0[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2975 shl[compile-time] 0[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:2976 shl[Integer] 0[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2977 shl[compile-time] 0[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2978 shl[Integer] 0[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2979 shl[compile-time] 0[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:2980 shl[Integer] 0[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2981 shl[compile-time] 0[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:2982 shl[Integer] 1[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2983 shl[compile-time] 1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:2984 shl[Integer] 1[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2985 shl[compile-time] 1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:2986 shl[Integer] 1[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2987 shl[compile-time] 1[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:2988 shl[Integer] 1[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2989 shl[compile-time] 1[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:2990 shl[Integer] 1[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2991 shl[compile-time] 1[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:2992 shl[Integer] 1[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:2993 shl[compile-time] 1[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:2994 shl[Integer] 1[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:2995 shl[compile-time] 1[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:2996 shl[Integer] 1[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2997 shl[compile-time] 1[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:2998 shl[Integer] 1[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:2999 shl[compile-time] 1[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3000 shl[Integer] 1[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3001 shl[compile-time] 1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3002 shl[Integer] 127[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3003 shl[compile-time] 127[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3004 shl[Integer] 127[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3005 shl[compile-time] 127[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3006 shl[Integer] 127[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3007 shl[compile-time] 127[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3008 shl[Integer] 127[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3009 shl[compile-time] 127[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3010 shl[Integer] 127[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3011 shl[compile-time] 127[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3012 shl[Integer] 127[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:3013 shl[compile-time] 127[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3014 shl[Integer] 127[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:3015 shl[compile-time] 127[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3016 shl[Integer] 127[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3017 shl[compile-time] 127[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3018 shl[Integer] 127[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3019 shl[compile-time] 127[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3020 shl[Integer] 127[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3021 shl[compile-time] 127[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3022 shl[Integer] 128[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3023 shl[compile-time] 128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3024 shl[Integer] 128[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3025 shl[compile-time] 128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3026 shl[Integer] 128[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3027 shl[compile-time] 128[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3028 shl[Integer] 128[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3029 shl[compile-time] 128[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3030 shl[Integer] 128[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3031 shl[compile-time] 128[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3032 shl[Integer] 128[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:3033 shl[compile-time] 128[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3034 shl[Integer] 128[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3035 shl[compile-time] 128[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:3036 shl[Integer] 128[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3037 shl[compile-time] 128[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3038 shl[Integer] 128[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3039 shl[compile-time] 128[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3040 shl[Integer] 128[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3041 shl[compile-time] 128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3042 shl[Integer] 32767[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3043 shl[compile-time] 32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3044 shl[Integer] 32767[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3045 shl[compile-time] 32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3046 shl[Integer] 32767[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3047 shl[compile-time] 32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3048 shl[Integer] 32767[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3049 shl[compile-time] 32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3050 shl[Integer] 32767[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3051 shl[compile-time] 32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3052 shl[Integer] 32767[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3053 shl[compile-time] 32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:3054 shl[Integer] 32767[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3055 shl[compile-time] 32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:3056 shl[Integer] 32767[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3057 shl[compile-time] 32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3058 shl[Integer] 32767[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3059 shl[compile-time] 32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3060 shl[Integer] 32767[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3061 shl[compile-time] 32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3062 shl[Integer] -32768[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3063 shl[compile-time] -32768[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3064 shl[Integer] -32768[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3065 shl[compile-time] -32768[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3066 shl[Integer] -32768[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3067 shl[compile-time] -32768[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3068 shl[Integer] -32768[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3069 shl[compile-time] -32768[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3070 shl[Integer] -32768[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3071 shl[compile-time] -32768[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3072 shl[Integer] -32768[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3073 shl[compile-time] -32768[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3074 shl[Integer] -32768[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3075 shl[compile-time] -32768[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3076 shl[Integer] -32768[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3077 shl[compile-time] -32768[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3078 shl[Integer] -32768[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3079 shl[compile-time] -32768[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3080 shl[Integer] -32768[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3081 shl[compile-time] -32768[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3082 shl[Integer] -32767[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3083 shl[compile-time] -32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3084 shl[Integer] -32767[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3085 shl[compile-time] -32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3086 shl[Integer] -32767[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3087 shl[compile-time] -32767[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3088 shl[Integer] -32767[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3089 shl[compile-time] -32767[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3090 shl[Integer] -32767[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3091 shl[compile-time] -32767[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3092 shl[Integer] -32767[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3093 shl[compile-time] -32767[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3094 shl[Integer] -32767[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:3095 shl[compile-time] -32767[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3096 shl[Integer] -32767[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3097 shl[compile-time] -32767[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3098 shl[Integer] -32767[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3099 shl[compile-time] -32767[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3100 shl[Integer] -32767[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3101 shl[compile-time] -32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3102 shl[Integer] -129[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3103 shl[compile-time] -129[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3104 shl[Integer] -129[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3105 shl[compile-time] -129[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3106 shl[Integer] -129[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3107 shl[compile-time] -129[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3108 shl[Integer] -129[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3109 shl[compile-time] -129[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3110 shl[Integer] -129[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3111 shl[compile-time] -129[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3112 shl[Integer] -129[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3113 shl[compile-time] -129[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3114 shl[Integer] -129[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3115 shl[compile-time] -129[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3116 shl[Integer] -129[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3117 shl[compile-time] -129[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3118 shl[Integer] -129[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3119 shl[compile-time] -129[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3120 shl[Integer] -129[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3121 shl[compile-time] -129[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3122 shl[Integer] -128[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3123 shl[compile-time] -128[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3124 shl[Integer] -128[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3125 shl[compile-time] -128[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3126 shl[Integer] -128[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3127 shl[compile-time] -128[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3128 shl[Integer] -128[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3129 shl[compile-time] -128[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3130 shl[Integer] -128[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3131 shl[compile-time] -128[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3132 shl[Integer] -128[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3133 shl[compile-time] -128[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:3134 shl[Integer] -128[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3135 shl[compile-time] -128[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3136 shl[Integer] -128[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3137 shl[compile-time] -128[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3138 shl[Integer] -128[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3139 shl[compile-time] -128[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3140 shl[Integer] -128[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3141 shl[compile-time] -128[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3142 shl[Integer] -1[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3143 shl[compile-time] -1[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3144 shl[Integer] -1[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3145 shl[compile-time] -1[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3146 shl[Integer] -1[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3147 shl[compile-time] -1[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3148 shl[Integer] -1[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3149 shl[compile-time] -1[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3150 shl[Integer] -1[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3151 shl[compile-time] -1[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3152 shl[Integer] -1[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3153 shl[compile-time] -1[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:3154 shl[Integer] -1[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3155 shl[compile-time] -1[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:3156 shl[Integer] -1[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3157 shl[compile-time] -1[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3158 shl[Integer] -1[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3159 shl[compile-time] -1[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3160 shl[Integer] -1[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3161 shl[compile-time] -1[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3162 shl[Integer] 0[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3163 shl[compile-time] 0[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3164 shl[Integer] 0[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3165 shl[compile-time] 0[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3166 shl[Integer] 0[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3167 shl[compile-time] 0[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3168 shl[Integer] 0[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3169 shl[compile-time] 0[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3170 shl[Integer] 0[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3171 shl[compile-time] 0[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3172 shl[Integer] 0[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3173 shl[compile-time] 0[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3174 shl[Integer] 0[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3175 shl[compile-time] 0[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3176 shl[Integer] 0[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3177 shl[compile-time] 0[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3178 shl[Integer] 0[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3179 shl[compile-time] 0[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3180 shl[Integer] 0[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3181 shl[compile-time] 0[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3182 shl[Integer] 1[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3183 shl[compile-time] 1[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3184 shl[Integer] 1[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3185 shl[compile-time] 1[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3186 shl[Integer] 1[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3187 shl[compile-time] 1[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3188 shl[Integer] 1[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3189 shl[compile-time] 1[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3190 shl[Integer] 1[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3191 shl[compile-time] 1[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3192 shl[Integer] 1[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:3193 shl[compile-time] 1[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3194 shl[Integer] 1[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:3195 shl[compile-time] 1[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3196 shl[Integer] 1[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3197 shl[compile-time] 1[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3198 shl[Integer] 1[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3199 shl[compile-time] 1[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3200 shl[Integer] 1[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3201 shl[compile-time] 1[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3202 shl[Integer] 127[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3203 shl[compile-time] 127[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3204 shl[Integer] 127[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3205 shl[compile-time] 127[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3206 shl[Integer] 127[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3207 shl[compile-time] 127[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3208 shl[Integer] 127[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3209 shl[compile-time] 127[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3210 shl[Integer] 127[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3211 shl[compile-time] 127[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3212 shl[Integer] 127[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:3213 shl[compile-time] 127[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3214 shl[Integer] 127[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:3215 shl[compile-time] 127[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3216 shl[Integer] 127[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3217 shl[compile-time] 127[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3218 shl[Integer] 127[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3219 shl[compile-time] 127[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3220 shl[Integer] 127[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3221 shl[compile-time] 127[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3222 shl[Integer] 128[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3223 shl[compile-time] 128[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3224 shl[Integer] 128[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3225 shl[compile-time] 128[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3226 shl[Integer] 128[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3227 shl[compile-time] 128[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3228 shl[Integer] 128[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3229 shl[compile-time] 128[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3230 shl[Integer] 128[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3231 shl[compile-time] 128[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3232 shl[Integer] 128[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:3233 shl[compile-time] 128[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3234 shl[Integer] 128[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 256

code auto:3235 shl[compile-time] 128[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:3236 shl[Integer] 128[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3237 shl[compile-time] 128[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3238 shl[Integer] 128[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3239 shl[compile-time] 128[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3240 shl[Integer] 128[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3241 shl[compile-time] 128[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3242 shl[Integer] 32767[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3243 shl[compile-time] 32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3244 shl[Integer] 32767[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3245 shl[compile-time] 32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3246 shl[Integer] 32767[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3247 shl[compile-time] 32767[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3248 shl[Integer] 32767[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3249 shl[compile-time] 32767[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3250 shl[Integer] 32767[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3251 shl[compile-time] 32767[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3252 shl[Integer] 32767[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:3253 shl[compile-time] 32767[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:3254 shl[Integer] 32767[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3255 shl[compile-time] 32767[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:3256 shl[Integer] 32767[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3257 shl[compile-time] 32767[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3258 shl[Integer] 32767[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3259 shl[compile-time] 32767[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3260 shl[Integer] 32767[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3261 shl[compile-time] 32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3262 shl[Integer] -32768[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3263 shl[compile-time] -32768[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3264 shl[Integer] -32768[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3265 shl[compile-time] -32768[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3266 shl[Integer] -32768[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3267 shl[compile-time] -32768[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3268 shl[Integer] -32768[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3269 shl[compile-time] -32768[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3270 shl[Integer] -32768[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3271 shl[compile-time] -32768[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3272 shl[Integer] -32768[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3273 shl[compile-time] -32768[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3274 shl[Integer] -32768[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3275 shl[compile-time] -32768[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3276 shl[Integer] -32768[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3277 shl[compile-time] -32768[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3278 shl[Integer] -32768[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3279 shl[compile-time] -32768[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3280 shl[Integer] -32768[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3281 shl[compile-time] -32768[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3282 shl[Integer] -32767[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3283 shl[compile-time] -32767[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3284 shl[Integer] -32767[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3285 shl[compile-time] -32767[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3286 shl[Integer] -32767[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3287 shl[compile-time] -32767[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3288 shl[Integer] -32767[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3289 shl[compile-time] -32767[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3290 shl[Integer] -32767[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3291 shl[compile-time] -32767[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3292 shl[Integer] -32767[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3293 shl[compile-time] -32767[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3294 shl[Integer] -32767[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:3295 shl[compile-time] -32767[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3296 shl[Integer] -32767[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3297 shl[compile-time] -32767[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3298 shl[Integer] -32767[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3299 shl[compile-time] -32767[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3300 shl[Integer] -32767[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3301 shl[compile-time] -32767[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3302 shl[Integer] -129[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3303 shl[compile-time] -129[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3304 shl[Integer] -129[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3305 shl[compile-time] -129[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3306 shl[Integer] -129[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3307 shl[compile-time] -129[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3308 shl[Integer] -129[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3309 shl[compile-time] -129[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3310 shl[Integer] -129[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3311 shl[compile-time] -129[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3312 shl[Integer] -129[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3313 shl[compile-time] -129[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3314 shl[Integer] -129[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3315 shl[compile-time] -129[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3316 shl[Integer] -129[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3317 shl[compile-time] -129[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3318 shl[Integer] -129[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3319 shl[compile-time] -129[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3320 shl[Integer] -129[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3321 shl[compile-time] -129[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3322 shl[Integer] -128[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3323 shl[compile-time] -128[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3324 shl[Integer] -128[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3325 shl[compile-time] -128[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3326 shl[Integer] -128[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3327 shl[compile-time] -128[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3328 shl[Integer] -128[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3329 shl[compile-time] -128[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3330 shl[Integer] -128[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3331 shl[compile-time] -128[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3332 shl[Integer] -128[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3333 shl[compile-time] -128[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:3334 shl[Integer] -128[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3335 shl[compile-time] -128[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3336 shl[Integer] -128[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3337 shl[compile-time] -128[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3338 shl[Integer] -128[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3339 shl[compile-time] -128[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3340 shl[Integer] -128[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3341 shl[compile-time] -128[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3342 shl[Integer] -1[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3343 shl[compile-time] -1[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3344 shl[Integer] -1[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3345 shl[compile-time] -1[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3346 shl[Integer] -1[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3347 shl[compile-time] -1[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3348 shl[Integer] -1[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3349 shl[compile-time] -1[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3350 shl[Integer] -1[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3351 shl[compile-time] -1[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3352 shl[Integer] -1[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3353 shl[compile-time] -1[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:3354 shl[Integer] -1[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3355 shl[compile-time] -1[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:3356 shl[Integer] -1[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3357 shl[compile-time] -1[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3358 shl[Integer] -1[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3359 shl[compile-time] -1[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3360 shl[Integer] -1[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3361 shl[compile-time] -1[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3362 shl[Integer] 0[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3363 shl[compile-time] 0[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3364 shl[Integer] 0[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3365 shl[compile-time] 0[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3366 shl[Integer] 0[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3367 shl[compile-time] 0[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3368 shl[Integer] 0[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3369 shl[compile-time] 0[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3370 shl[Integer] 0[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3371 shl[compile-time] 0[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3372 shl[Integer] 0[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3373 shl[compile-time] 0[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3374 shl[Integer] 0[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3375 shl[compile-time] 0[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3376 shl[Integer] 0[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3377 shl[compile-time] 0[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3378 shl[Integer] 0[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3379 shl[compile-time] 0[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3380 shl[Integer] 0[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3381 shl[compile-time] 0[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3382 shl[Integer] 1[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3383 shl[compile-time] 1[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3384 shl[Integer] 1[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3385 shl[compile-time] 1[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3386 shl[Integer] 1[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3387 shl[compile-time] 1[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3388 shl[Integer] 1[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3389 shl[compile-time] 1[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3390 shl[Integer] 1[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3391 shl[compile-time] 1[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3392 shl[Integer] 1[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:3393 shl[compile-time] 1[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3394 shl[Integer] 1[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:3395 shl[compile-time] 1[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3396 shl[Integer] 1[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3397 shl[compile-time] 1[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3398 shl[Integer] 1[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3399 shl[compile-time] 1[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3400 shl[Integer] 1[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3401 shl[compile-time] 1[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3402 shl[Integer] 127[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3403 shl[compile-time] 127[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3404 shl[Integer] 127[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3405 shl[compile-time] 127[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3406 shl[Integer] 127[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3407 shl[compile-time] 127[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3408 shl[Integer] 127[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3409 shl[compile-time] 127[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3410 shl[Integer] 127[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3411 shl[compile-time] 127[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3412 shl[Integer] 127[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:3413 shl[compile-time] 127[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3414 shl[Integer] 127[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:3415 shl[compile-time] 127[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3416 shl[Integer] 127[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3417 shl[compile-time] 127[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3418 shl[Integer] 127[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3419 shl[compile-time] 127[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3420 shl[Integer] 127[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3421 shl[compile-time] 127[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3422 shl[Integer] 128[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3423 shl[compile-time] 128[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3424 shl[Integer] 128[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3425 shl[compile-time] 128[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3426 shl[Integer] 128[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3427 shl[compile-time] 128[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3428 shl[Integer] 128[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3429 shl[compile-time] 128[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3430 shl[Integer] 128[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3431 shl[compile-time] 128[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3432 shl[Integer] 128[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:3433 shl[compile-time] 128[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3434 shl[Integer] 128[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 256

code auto:3435 shl[compile-time] 128[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:3436 shl[Integer] 128[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3437 shl[compile-time] 128[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3438 shl[Integer] 128[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3439 shl[compile-time] 128[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3440 shl[Integer] 128[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3441 shl[compile-time] 128[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3442 shl[Integer] 32767[Integer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3443 shl[compile-time] 32767[Integer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:3444 shl[Integer] 32767[Integer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3445 shl[compile-time] 32767[Integer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:3446 shl[Integer] 32767[Integer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3447 shl[compile-time] 32767[Integer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:3448 shl[Integer] 32767[Integer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3449 shl[compile-time] 32767[Integer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:3450 shl[Integer] 32767[Integer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3451 shl[compile-time] 32767[Integer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:3452 shl[Integer] 32767[Integer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:3453 shl[compile-time] 32767[Integer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:3454 shl[Integer] 32767[Integer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3455 shl[compile-time] 32767[Integer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:3456 shl[Integer] 32767[Integer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3457 shl[compile-time] 32767[Integer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3458 shl[Integer] 32767[Integer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3459 shl[compile-time] 32767[Integer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3460 shl[Integer] 32767[Integer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3461 shl[compile-time] 32767[Integer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3462 shl[Integer] -32768[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3463 shl[compile-time] -32768[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3464 shl[Integer] -32768[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3465 shl[compile-time] -32768[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3466 shl[Integer] -32768[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3467 shl[compile-time] -32768[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3468 shl[Integer] -32768[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3469 shl[compile-time] -32768[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3470 shl[Integer] -32768[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3471 shl[compile-time] -32768[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3472 shl[Integer] -32767[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3473 shl[compile-time] -32767[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3474 shl[Integer] -32767[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:3475 shl[compile-time] -32767[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3476 shl[Integer] -32767[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3477 shl[compile-time] -32767[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3478 shl[Integer] -32767[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3479 shl[compile-time] -32767[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3480 shl[Integer] -32767[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3481 shl[compile-time] -32767[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3482 shl[Integer] -129[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3483 shl[compile-time] -129[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3484 shl[Integer] -129[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3485 shl[compile-time] -129[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3486 shl[Integer] -129[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3487 shl[compile-time] -129[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3488 shl[Integer] -129[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3489 shl[compile-time] -129[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3490 shl[Integer] -129[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3491 shl[compile-time] -129[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3492 shl[Integer] -128[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:3493 shl[compile-time] -128[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:3494 shl[Integer] -128[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3495 shl[compile-time] -128[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3496 shl[Integer] -128[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3497 shl[compile-time] -128[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3498 shl[Integer] -128[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3499 shl[compile-time] -128[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3500 shl[Integer] -128[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3501 shl[compile-time] -128[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3502 shl[Integer] -1[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:3503 shl[compile-time] -1[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:3504 shl[Integer] -1[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:3505 shl[compile-time] -1[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:3506 shl[Integer] -1[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3507 shl[compile-time] -1[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3508 shl[Integer] -1[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3509 shl[compile-time] -1[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3510 shl[Integer] -1[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3511 shl[compile-time] -1[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3512 shl[Integer] 0[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3513 shl[compile-time] 0[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3514 shl[Integer] 0[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3515 shl[compile-time] 0[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3516 shl[Integer] 0[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3517 shl[compile-time] 0[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3518 shl[Integer] 0[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3519 shl[compile-time] 0[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3520 shl[Integer] 0[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3521 shl[compile-time] 0[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3522 shl[Integer] 1[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:3523 shl[compile-time] 1[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3524 shl[Integer] 1[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:3525 shl[compile-time] 1[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3526 shl[Integer] 1[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3527 shl[compile-time] 1[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3528 shl[Integer] 1[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3529 shl[compile-time] 1[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3530 shl[Integer] 1[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3531 shl[compile-time] 1[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3532 shl[Integer] 127[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:3533 shl[compile-time] 127[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3534 shl[Integer] 127[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3535 shl[compile-time] 127[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:3536 shl[Integer] 127[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3537 shl[compile-time] 127[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3538 shl[Integer] 127[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3539 shl[compile-time] 127[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3540 shl[Integer] 127[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3541 shl[compile-time] 127[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3542 shl[Integer] 128[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3543 shl[compile-time] 128[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:3544 shl[Integer] 128[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3545 shl[compile-time] 128[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:3546 shl[Integer] 128[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3547 shl[compile-time] 128[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3548 shl[Integer] 128[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3549 shl[compile-time] 128[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3550 shl[Integer] 128[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3551 shl[compile-time] 128[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3552 shl[Integer] 32767[Integer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3553 shl[compile-time] 32767[Integer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:3554 shl[Integer] 32767[Integer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -2

code auto:3555 shl[compile-time] 32767[Integer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:3556 shl[Integer] 32767[Integer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3557 shl[compile-time] 32767[Integer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3558 shl[Integer] 32767[Integer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3559 shl[compile-time] 32767[Integer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3560 shl[Integer] 32767[Integer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3561 shl[compile-time] 32767[Integer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3562 shl[Integer] -32768[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32768

code auto:3563 shl[compile-time] -32768[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 0;
endcode
varvalue r -32768

$overflow on
code auto:3564 shl[Integer] -32768[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3565 shl[compile-time] -32768[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3566 shl[Integer] -32768[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3567 shl[compile-time] -32768[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3568 shl[Integer] -32768[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3569 shl[compile-time] -32768[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3570 shl[Integer] -32768[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3571 shl[compile-time] -32768[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3572 shl[Integer] -32767[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32767

code auto:3573 shl[compile-time] -32767[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 0;
endcode
varvalue r -32767

$overflow on
code auto:3574 shl[Integer] -32767[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:3575 shl[compile-time] -32767[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3576 shl[Integer] -32767[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3577 shl[compile-time] -32767[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3578 shl[Integer] -32767[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3579 shl[compile-time] -32767[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3580 shl[Integer] -32767[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3581 shl[compile-time] -32767[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3582 shl[Integer] -129[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -129

code auto:3583 shl[compile-time] -129[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 0;
endcode
varvalue r -129

$overflow on
code auto:3584 shl[Integer] -129[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -258

code auto:3585 shl[compile-time] -129[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 1;
endcode
varvalue r -258

$overflow on
code auto:3586 shl[Integer] -129[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3587 shl[compile-time] -129[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3588 shl[Integer] -129[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3589 shl[compile-time] -129[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3590 shl[Integer] -129[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3591 shl[compile-time] -129[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3592 shl[Integer] -128[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:3593 shl[compile-time] -128[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:3594 shl[Integer] -128[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -256

code auto:3595 shl[compile-time] -128[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 1;
endcode
varvalue r -256

$overflow on
code auto:3596 shl[Integer] -128[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3597 shl[compile-time] -128[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3598 shl[Integer] -128[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3599 shl[compile-time] -128[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3600 shl[Integer] -128[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3601 shl[compile-time] -128[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3602 shl[Integer] -1[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:3603 shl[compile-time] -1[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:3604 shl[Integer] -1[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:3605 shl[compile-time] -1[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 1;
endcode
varvalue r -2

$overflow on
code auto:3606 shl[Integer] -1[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3607 shl[compile-time] -1[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3608 shl[Integer] -1[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3609 shl[compile-time] -1[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3610 shl[Integer] -1[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3611 shl[compile-time] -1[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3612 shl[Integer] 0[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3613 shl[compile-time] 0[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3614 shl[Integer] 0[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3615 shl[compile-time] 0[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3616 shl[Integer] 0[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3617 shl[compile-time] 0[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3618 shl[Integer] 0[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3619 shl[compile-time] 0[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3620 shl[Integer] 0[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3621 shl[compile-time] 0[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3622 shl[Integer] 1[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:3623 shl[compile-time] 1[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3624 shl[Integer] 1[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:3625 shl[compile-time] 1[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3626 shl[Integer] 1[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3627 shl[compile-time] 1[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3628 shl[Integer] 1[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3629 shl[compile-time] 1[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3630 shl[Integer] 1[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3631 shl[compile-time] 1[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3632 shl[Integer] 127[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:3633 shl[compile-time] 127[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3634 shl[Integer] 127[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:3635 shl[compile-time] 127[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3636 shl[Integer] 127[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3637 shl[compile-time] 127[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3638 shl[Integer] 127[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3639 shl[compile-time] 127[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3640 shl[Integer] 127[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3641 shl[compile-time] 127[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3642 shl[Integer] 128[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:3643 shl[compile-time] 128[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3644 shl[Integer] 128[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 256

code auto:3645 shl[compile-time] 128[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:3646 shl[Integer] 128[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3647 shl[compile-time] 128[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3648 shl[Integer] 128[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3649 shl[compile-time] 128[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3650 shl[Integer] 128[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3651 shl[compile-time] 128[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3652 shl[Integer] 32767[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:3653 shl[compile-time] 32767[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:3654 shl[Integer] 32767[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -2

code auto:3655 shl[compile-time] 32767[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:3656 shl[Integer] 32767[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3657 shl[compile-time] 32767[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3658 shl[Integer] 32767[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3659 shl[compile-time] 32767[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3660 shl[Integer] 32767[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:3661 shl[compile-time] 32767[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3662 shl[Integer] -32768[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3663 shl[compile-time] -32768[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3664 shl[Integer] -32768[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3665 shl[compile-time] -32768[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3666 shl[Integer] -32768[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3667 shl[compile-time] -32768[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3668 shl[Integer] -32768[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3669 shl[compile-time] -32768[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3670 shl[Integer] -32768[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3671 shl[compile-time] -32768[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3672 shl[Integer] -32767[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3673 shl[compile-time] -32767[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3674 shl[Integer] -32767[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:3675 shl[compile-time] -32767[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3676 shl[Integer] -32767[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3677 shl[compile-time] -32767[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3678 shl[Integer] -32767[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3679 shl[compile-time] -32767[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3680 shl[Integer] -32767[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3681 shl[compile-time] -32767[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3682 shl[Integer] -129[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3683 shl[compile-time] -129[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3684 shl[Integer] -129[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3685 shl[compile-time] -129[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3686 shl[Integer] -129[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3687 shl[compile-time] -129[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3688 shl[Integer] -129[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3689 shl[compile-time] -129[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3690 shl[Integer] -129[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3691 shl[compile-time] -129[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3692 shl[Integer] -128[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3693 shl[compile-time] -128[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:3694 shl[Integer] -128[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3695 shl[compile-time] -128[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3696 shl[Integer] -128[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3697 shl[compile-time] -128[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3698 shl[Integer] -128[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3699 shl[compile-time] -128[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3700 shl[Integer] -128[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3701 shl[compile-time] -128[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3702 shl[Integer] -1[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3703 shl[compile-time] -1[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:3704 shl[Integer] -1[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3705 shl[compile-time] -1[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:3706 shl[Integer] -1[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3707 shl[compile-time] -1[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3708 shl[Integer] -1[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3709 shl[compile-time] -1[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3710 shl[Integer] -1[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3711 shl[compile-time] -1[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3712 shl[Integer] 0[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3713 shl[compile-time] 0[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3714 shl[Integer] 0[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3715 shl[compile-time] 0[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3716 shl[Integer] 0[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3717 shl[compile-time] 0[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3718 shl[Integer] 0[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3719 shl[compile-time] 0[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3720 shl[Integer] 0[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3721 shl[compile-time] 0[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3722 shl[Integer] 1[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:3723 shl[compile-time] 1[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3724 shl[Integer] 1[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:3725 shl[compile-time] 1[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3726 shl[Integer] 1[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3727 shl[compile-time] 1[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3728 shl[Integer] 1[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3729 shl[compile-time] 1[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3730 shl[Integer] 1[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3731 shl[compile-time] 1[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3732 shl[Integer] 127[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:3733 shl[compile-time] 127[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3734 shl[Integer] 127[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:3735 shl[compile-time] 127[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3736 shl[Integer] 127[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3737 shl[compile-time] 127[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3738 shl[Integer] 127[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3739 shl[compile-time] 127[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3740 shl[Integer] 127[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3741 shl[compile-time] 127[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3742 shl[Integer] 128[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:3743 shl[compile-time] 128[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3744 shl[Integer] 128[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3745 shl[compile-time] 128[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:3746 shl[Integer] 128[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3747 shl[compile-time] 128[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3748 shl[Integer] 128[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3749 shl[compile-time] 128[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3750 shl[Integer] 128[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3751 shl[compile-time] 128[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3752 shl[Integer] 32767[Integer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3753 shl[compile-time] 32767[Integer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:3754 shl[Integer] 32767[Integer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:3755 shl[compile-time] 32767[Integer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:3756 shl[Integer] 32767[Integer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3757 shl[compile-time] 32767[Integer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3758 shl[Integer] 32767[Integer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3759 shl[compile-time] 32767[Integer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3760 shl[Integer] 32767[Integer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:3761 shl[compile-time] 32767[Integer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3762 shl[Integer] -32768[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3763 shl[compile-time] -32768[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3764 shl[Integer] -32768[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3765 shl[compile-time] -32768[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3766 shl[Integer] -32768[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3767 shl[compile-time] -32768[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3768 shl[Integer] -32768[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3769 shl[compile-time] -32768[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3770 shl[Integer] -32768[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3771 shl[compile-time] -32768[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3772 shl[Integer] -32767[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3773 shl[compile-time] -32767[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3774 shl[Integer] -32767[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:3775 shl[compile-time] -32767[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3776 shl[Integer] -32767[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3777 shl[compile-time] -32767[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3778 shl[Integer] -32767[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3779 shl[compile-time] -32767[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3780 shl[Integer] -32767[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3781 shl[compile-time] -32767[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3782 shl[Integer] -129[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3783 shl[compile-time] -129[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3784 shl[Integer] -129[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3785 shl[compile-time] -129[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3786 shl[Integer] -129[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3787 shl[compile-time] -129[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3788 shl[Integer] -129[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3789 shl[compile-time] -129[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3790 shl[Integer] -129[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3791 shl[compile-time] -129[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3792 shl[Integer] -128[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3793 shl[compile-time] -128[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:3794 shl[Integer] -128[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3795 shl[compile-time] -128[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3796 shl[Integer] -128[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3797 shl[compile-time] -128[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3798 shl[Integer] -128[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3799 shl[compile-time] -128[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3800 shl[Integer] -128[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3801 shl[compile-time] -128[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3802 shl[Integer] -1[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3803 shl[compile-time] -1[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:3804 shl[Integer] -1[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3805 shl[compile-time] -1[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:3806 shl[Integer] -1[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3807 shl[compile-time] -1[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3808 shl[Integer] -1[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3809 shl[compile-time] -1[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3810 shl[Integer] -1[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3811 shl[compile-time] -1[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3812 shl[Integer] 0[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3813 shl[compile-time] 0[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3814 shl[Integer] 0[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3815 shl[compile-time] 0[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3816 shl[Integer] 0[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3817 shl[compile-time] 0[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3818 shl[Integer] 0[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3819 shl[compile-time] 0[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3820 shl[Integer] 0[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3821 shl[compile-time] 0[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3822 shl[Integer] 1[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:3823 shl[compile-time] 1[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3824 shl[Integer] 1[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:3825 shl[compile-time] 1[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3826 shl[Integer] 1[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3827 shl[compile-time] 1[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3828 shl[Integer] 1[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3829 shl[compile-time] 1[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3830 shl[Integer] 1[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3831 shl[compile-time] 1[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3832 shl[Integer] 127[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:3833 shl[compile-time] 127[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3834 shl[Integer] 127[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:3835 shl[compile-time] 127[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3836 shl[Integer] 127[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3837 shl[compile-time] 127[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3838 shl[Integer] 127[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3839 shl[compile-time] 127[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3840 shl[Integer] 127[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3841 shl[compile-time] 127[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3842 shl[Integer] 128[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:3843 shl[compile-time] 128[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3844 shl[Integer] 128[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 256

code auto:3845 shl[compile-time] 128[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:3846 shl[Integer] 128[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3847 shl[compile-time] 128[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3848 shl[Integer] 128[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3849 shl[compile-time] 128[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3850 shl[Integer] 128[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3851 shl[compile-time] 128[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3852 shl[Integer] 32767[Integer], 0[Byte] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:3853 shl[compile-time] 32767[Integer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:3854 shl[Integer] 32767[Integer], 1[Byte] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:3855 shl[compile-time] 32767[Integer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:3856 shl[Integer] 32767[Integer], 127[Byte] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3857 shl[compile-time] 32767[Integer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3858 shl[Integer] 32767[Integer], 128[Byte] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3859 shl[compile-time] 32767[Integer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3860 shl[Integer] 32767[Integer], 255[Byte] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:3861 shl[compile-time] 32767[Integer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3862 shl[Integer] -32768[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3863 shl[compile-time] -32768[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3864 shl[Integer] -32768[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3865 shl[compile-time] -32768[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 1;
endcode
compile error

$overflow on
code auto:3866 shl[Integer] -32768[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3867 shl[compile-time] -32768[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3868 shl[Integer] -32768[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3869 shl[compile-time] -32768[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3870 shl[Integer] -32768[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3871 shl[compile-time] -32768[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3872 shl[Integer] -32767[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3873 shl[compile-time] -32767[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3874 shl[Integer] -32767[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:3875 shl[compile-time] -32767[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 1;
endcode
compile error

$overflow on
code auto:3876 shl[Integer] -32767[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3877 shl[compile-time] -32767[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3878 shl[Integer] -32767[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3879 shl[compile-time] -32767[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3880 shl[Integer] -32767[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3881 shl[compile-time] -32767[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3882 shl[Integer] -129[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3883 shl[compile-time] -129[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3884 shl[Integer] -129[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3885 shl[compile-time] -129[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 1;
endcode
compile error

$overflow on
code auto:3886 shl[Integer] -129[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3887 shl[compile-time] -129[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3888 shl[Integer] -129[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3889 shl[compile-time] -129[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3890 shl[Integer] -129[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3891 shl[compile-time] -129[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3892 shl[Integer] -128[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3893 shl[compile-time] -128[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:3894 shl[Integer] -128[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3895 shl[compile-time] -128[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 1;
endcode
compile error

$overflow on
code auto:3896 shl[Integer] -128[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3897 shl[compile-time] -128[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3898 shl[Integer] -128[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3899 shl[compile-time] -128[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3900 shl[Integer] -128[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3901 shl[compile-time] -128[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3902 shl[Integer] -1[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3903 shl[compile-time] -1[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:3904 shl[Integer] -1[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3905 shl[compile-time] -1[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 1;
endcode
compile error

$overflow on
code auto:3906 shl[Integer] -1[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3907 shl[compile-time] -1[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3908 shl[Integer] -1[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3909 shl[compile-time] -1[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3910 shl[Integer] -1[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3911 shl[compile-time] -1[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3912 shl[Integer] 0[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3913 shl[compile-time] 0[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:3914 shl[Integer] 0[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3915 shl[compile-time] 0[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:3916 shl[Integer] 0[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3917 shl[compile-time] 0[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3918 shl[Integer] 0[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3919 shl[compile-time] 0[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3920 shl[Integer] 0[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3921 shl[compile-time] 0[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3922 shl[Integer] 1[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:3923 shl[compile-time] 1[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:3924 shl[Integer] 1[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:3925 shl[compile-time] 1[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:3926 shl[Integer] 1[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3927 shl[compile-time] 1[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3928 shl[Integer] 1[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3929 shl[compile-time] 1[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3930 shl[Integer] 1[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3931 shl[compile-time] 1[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3932 shl[Integer] 127[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:3933 shl[compile-time] 127[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:3934 shl[Integer] 127[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:3935 shl[compile-time] 127[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:3936 shl[Integer] 127[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3937 shl[compile-time] 127[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3938 shl[Integer] 127[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3939 shl[compile-time] 127[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3940 shl[Integer] 127[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3941 shl[compile-time] 127[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3942 shl[Integer] 128[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:3943 shl[compile-time] 128[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:3944 shl[Integer] 128[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 256

code auto:3945 shl[compile-time] 128[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:3946 shl[Integer] 128[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3947 shl[compile-time] 128[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3948 shl[Integer] 128[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3949 shl[compile-time] 128[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3950 shl[Integer] 128[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3951 shl[compile-time] 128[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3952 shl[Integer] 32767[Integer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:3953 shl[compile-time] 32767[Integer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:3954 shl[Integer] 32767[Integer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:3955 shl[compile-time] 32767[Integer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:3956 shl[Integer] 32767[Integer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3957 shl[compile-time] 32767[Integer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:3958 shl[Integer] 32767[Integer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3959 shl[compile-time] 32767[Integer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:3960 shl[Integer] 32767[Integer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:3961 shl[compile-time] 32767[Integer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3962 shl[Integer] -32768[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3963 shl[compile-time] -32768[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:3964 shl[Integer] -32768[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3965 shl[compile-time] -32768[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3966 shl[Integer] -32768[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3967 shl[compile-time] -32768[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3968 shl[Integer] -32768[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3969 shl[compile-time] -32768[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:3970 shl[Integer] -32768[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3971 shl[compile-time] -32768[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:3972 shl[Integer] -32767[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3973 shl[compile-time] -32767[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:3974 shl[Integer] -32767[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3975 shl[compile-time] -32767[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3976 shl[Integer] -32767[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3977 shl[compile-time] -32767[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3978 shl[Integer] -32767[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3979 shl[compile-time] -32767[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:3980 shl[Integer] -32767[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3981 shl[compile-time] -32767[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:3982 shl[Integer] -129[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:3983 shl[compile-time] -129[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:3984 shl[Integer] -129[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3985 shl[compile-time] -129[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3986 shl[Integer] -129[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3987 shl[compile-time] -129[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3988 shl[Integer] -129[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3989 shl[compile-time] -129[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:3990 shl[Integer] -129[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3991 shl[compile-time] -129[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:3992 shl[Integer] -128[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:3993 shl[compile-time] -128[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:3994 shl[Integer] -128[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3995 shl[compile-time] -128[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:3996 shl[Integer] -128[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3997 shl[compile-time] -128[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:3998 shl[Integer] -128[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:3999 shl[compile-time] -128[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4000 shl[Integer] -128[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4001 shl[compile-time] -128[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4002 shl[Integer] -1[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:4003 shl[compile-time] -1[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:4004 shl[Integer] -1[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4005 shl[compile-time] -1[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4006 shl[Integer] -1[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4007 shl[compile-time] -1[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4008 shl[Integer] -1[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4009 shl[compile-time] -1[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4010 shl[Integer] -1[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4011 shl[compile-time] -1[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4012 shl[Integer] 0[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4013 shl[compile-time] 0[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4014 shl[Integer] 0[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4015 shl[compile-time] 0[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4016 shl[Integer] 0[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4017 shl[compile-time] 0[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4018 shl[Integer] 0[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4019 shl[compile-time] 0[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4020 shl[Integer] 0[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4021 shl[compile-time] 0[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4022 shl[Integer] 1[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:4023 shl[compile-time] 1[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4024 shl[Integer] 1[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4025 shl[compile-time] 1[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4026 shl[Integer] 1[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4027 shl[compile-time] 1[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4028 shl[Integer] 1[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4029 shl[compile-time] 1[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4030 shl[Integer] 1[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4031 shl[compile-time] 1[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4032 shl[Integer] 127[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:4033 shl[compile-time] 127[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4034 shl[Integer] 127[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4035 shl[compile-time] 127[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4036 shl[Integer] 127[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4037 shl[compile-time] 127[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4038 shl[Integer] 127[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4039 shl[compile-time] 127[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4040 shl[Integer] 127[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4041 shl[compile-time] 127[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4042 shl[Integer] 128[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4043 shl[compile-time] 128[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:4044 shl[Integer] 128[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4045 shl[compile-time] 128[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4046 shl[Integer] 128[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4047 shl[compile-time] 128[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4048 shl[Integer] 128[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4049 shl[compile-time] 128[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4050 shl[Integer] 128[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4051 shl[compile-time] 128[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4052 shl[Integer] 32767[Integer], 0[Word] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4053 shl[compile-time] 32767[Integer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:4054 shl[Integer] 32767[Integer], 255[Word] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4055 shl[compile-time] 32767[Integer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4056 shl[Integer] 32767[Integer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4057 shl[compile-time] 32767[Integer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4058 shl[Integer] 32767[Integer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4059 shl[compile-time] 32767[Integer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4060 shl[Integer] 32767[Integer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4061 shl[compile-time] 32767[Integer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4062 shl[Integer] -32768[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32768

code auto:4063 shl[compile-time] -32768[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 0;
endcode
varvalue r -32768

$overflow on
code auto:4064 shl[Integer] -32768[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4065 shl[compile-time] -32768[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4066 shl[Integer] -32768[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4067 shl[compile-time] -32768[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4068 shl[Integer] -32768[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4069 shl[compile-time] -32768[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4070 shl[Integer] -32768[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4071 shl[compile-time] -32768[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4072 shl[Integer] -32767[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32767

code auto:4073 shl[compile-time] -32767[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 0;
endcode
varvalue r -32767

$overflow on
code auto:4074 shl[Integer] -32767[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4075 shl[compile-time] -32767[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4076 shl[Integer] -32767[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4077 shl[compile-time] -32767[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4078 shl[Integer] -32767[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4079 shl[compile-time] -32767[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4080 shl[Integer] -32767[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4081 shl[compile-time] -32767[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4082 shl[Integer] -129[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -129

code auto:4083 shl[compile-time] -129[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 0;
endcode
varvalue r -129

$overflow on
code auto:4084 shl[Integer] -129[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4085 shl[compile-time] -129[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4086 shl[Integer] -129[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4087 shl[compile-time] -129[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4088 shl[Integer] -129[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4089 shl[compile-time] -129[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4090 shl[Integer] -129[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4091 shl[compile-time] -129[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4092 shl[Integer] -128[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:4093 shl[compile-time] -128[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:4094 shl[Integer] -128[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4095 shl[compile-time] -128[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4096 shl[Integer] -128[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4097 shl[compile-time] -128[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4098 shl[Integer] -128[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4099 shl[compile-time] -128[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4100 shl[Integer] -128[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4101 shl[compile-time] -128[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4102 shl[Integer] -1[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:4103 shl[compile-time] -1[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:4104 shl[Integer] -1[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4105 shl[compile-time] -1[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4106 shl[Integer] -1[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4107 shl[compile-time] -1[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4108 shl[Integer] -1[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4109 shl[compile-time] -1[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4110 shl[Integer] -1[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4111 shl[compile-time] -1[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4112 shl[Integer] 0[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4113 shl[compile-time] 0[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4114 shl[Integer] 0[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4115 shl[compile-time] 0[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4116 shl[Integer] 0[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4117 shl[compile-time] 0[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4118 shl[Integer] 0[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4119 shl[compile-time] 0[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4120 shl[Integer] 0[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4121 shl[compile-time] 0[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4122 shl[Integer] 1[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:4123 shl[compile-time] 1[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4124 shl[Integer] 1[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4125 shl[compile-time] 1[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4126 shl[Integer] 1[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4127 shl[compile-time] 1[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4128 shl[Integer] 1[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4129 shl[compile-time] 1[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4130 shl[Integer] 1[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4131 shl[compile-time] 1[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4132 shl[Integer] 127[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:4133 shl[compile-time] 127[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4134 shl[Integer] 127[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4135 shl[compile-time] 127[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4136 shl[Integer] 127[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4137 shl[compile-time] 127[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4138 shl[Integer] 127[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4139 shl[compile-time] 127[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4140 shl[Integer] 127[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4141 shl[compile-time] 127[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4142 shl[Integer] 128[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:4143 shl[compile-time] 128[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4144 shl[Integer] 128[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4145 shl[compile-time] 128[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4146 shl[Integer] 128[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4147 shl[compile-time] 128[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4148 shl[Integer] 128[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4149 shl[compile-time] 128[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4150 shl[Integer] 128[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4151 shl[compile-time] 128[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4152 shl[Integer] 32767[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:4153 shl[compile-time] 32767[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4154 shl[Integer] 32767[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4155 shl[compile-time] 32767[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4156 shl[Integer] 32767[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4157 shl[compile-time] 32767[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4158 shl[Integer] 32767[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4159 shl[compile-time] 32767[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4160 shl[Integer] 32767[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4161 shl[compile-time] 32767[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4162 shl[Integer] -32768[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4163 shl[compile-time] -32768[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4164 shl[Integer] -32768[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4165 shl[compile-time] -32768[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4166 shl[Integer] -32768[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4167 shl[compile-time] -32768[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4168 shl[Integer] -32768[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4169 shl[compile-time] -32768[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4170 shl[Integer] -32768[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4171 shl[compile-time] -32768[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4172 shl[Integer] -32767[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4173 shl[compile-time] -32767[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4174 shl[Integer] -32767[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4175 shl[compile-time] -32767[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4176 shl[Integer] -32767[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4177 shl[compile-time] -32767[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4178 shl[Integer] -32767[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4179 shl[compile-time] -32767[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4180 shl[Integer] -32767[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4181 shl[compile-time] -32767[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4182 shl[Integer] -129[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4183 shl[compile-time] -129[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4184 shl[Integer] -129[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4185 shl[compile-time] -129[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4186 shl[Integer] -129[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4187 shl[compile-time] -129[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4188 shl[Integer] -129[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4189 shl[compile-time] -129[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4190 shl[Integer] -129[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4191 shl[compile-time] -129[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4192 shl[Integer] -128[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4193 shl[compile-time] -128[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4194 shl[Integer] -128[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4195 shl[compile-time] -128[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4196 shl[Integer] -128[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4197 shl[compile-time] -128[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4198 shl[Integer] -128[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4199 shl[compile-time] -128[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4200 shl[Integer] -128[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4201 shl[compile-time] -128[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4202 shl[Integer] -1[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4203 shl[compile-time] -1[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4204 shl[Integer] -1[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4205 shl[compile-time] -1[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4206 shl[Integer] -1[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4207 shl[compile-time] -1[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4208 shl[Integer] -1[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4209 shl[compile-time] -1[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4210 shl[Integer] -1[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4211 shl[compile-time] -1[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4212 shl[Integer] 0[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4213 shl[compile-time] 0[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4214 shl[Integer] 0[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4215 shl[compile-time] 0[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4216 shl[Integer] 0[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4217 shl[compile-time] 0[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4218 shl[Integer] 0[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4219 shl[compile-time] 0[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4220 shl[Integer] 0[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4221 shl[compile-time] 0[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4222 shl[Integer] 1[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:4223 shl[compile-time] 1[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4224 shl[Integer] 1[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4225 shl[compile-time] 1[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4226 shl[Integer] 1[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4227 shl[compile-time] 1[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4228 shl[Integer] 1[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4229 shl[compile-time] 1[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4230 shl[Integer] 1[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4231 shl[compile-time] 1[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4232 shl[Integer] 127[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:4233 shl[compile-time] 127[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4234 shl[Integer] 127[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4235 shl[compile-time] 127[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4236 shl[Integer] 127[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4237 shl[compile-time] 127[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4238 shl[Integer] 127[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4239 shl[compile-time] 127[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4240 shl[Integer] 127[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4241 shl[compile-time] 127[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4242 shl[Integer] 128[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:4243 shl[compile-time] 128[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4244 shl[Integer] 128[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4245 shl[compile-time] 128[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4246 shl[Integer] 128[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4247 shl[compile-time] 128[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4248 shl[Integer] 128[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4249 shl[compile-time] 128[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4250 shl[Integer] 128[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4251 shl[compile-time] 128[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4252 shl[Integer] 32767[Integer], 0[Word] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4253 shl[compile-time] 32767[Integer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:4254 shl[Integer] 32767[Integer], 255[Word] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4255 shl[compile-time] 32767[Integer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4256 shl[Integer] 32767[Integer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4257 shl[compile-time] 32767[Integer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4258 shl[Integer] 32767[Integer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4259 shl[compile-time] 32767[Integer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4260 shl[Integer] 32767[Integer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4261 shl[compile-time] 32767[Integer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4262 shl[Integer] -32768[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4263 shl[compile-time] -32768[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4264 shl[Integer] -32768[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4265 shl[compile-time] -32768[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4266 shl[Integer] -32768[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4267 shl[compile-time] -32768[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4268 shl[Integer] -32768[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4269 shl[compile-time] -32768[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4270 shl[Integer] -32768[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4271 shl[compile-time] -32768[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4272 shl[Integer] -32767[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4273 shl[compile-time] -32767[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4274 shl[Integer] -32767[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4275 shl[compile-time] -32767[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4276 shl[Integer] -32767[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4277 shl[compile-time] -32767[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4278 shl[Integer] -32767[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4279 shl[compile-time] -32767[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4280 shl[Integer] -32767[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4281 shl[compile-time] -32767[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4282 shl[Integer] -129[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4283 shl[compile-time] -129[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4284 shl[Integer] -129[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4285 shl[compile-time] -129[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4286 shl[Integer] -129[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4287 shl[compile-time] -129[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4288 shl[Integer] -129[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4289 shl[compile-time] -129[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4290 shl[Integer] -129[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4291 shl[compile-time] -129[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4292 shl[Integer] -128[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4293 shl[compile-time] -128[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4294 shl[Integer] -128[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4295 shl[compile-time] -128[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4296 shl[Integer] -128[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4297 shl[compile-time] -128[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4298 shl[Integer] -128[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4299 shl[compile-time] -128[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4300 shl[Integer] -128[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4301 shl[compile-time] -128[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4302 shl[Integer] -1[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4303 shl[compile-time] -1[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4304 shl[Integer] -1[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4305 shl[compile-time] -1[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4306 shl[Integer] -1[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4307 shl[compile-time] -1[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4308 shl[Integer] -1[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4309 shl[compile-time] -1[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4310 shl[Integer] -1[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4311 shl[compile-time] -1[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4312 shl[Integer] 0[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4313 shl[compile-time] 0[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4314 shl[Integer] 0[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4315 shl[compile-time] 0[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4316 shl[Integer] 0[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4317 shl[compile-time] 0[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4318 shl[Integer] 0[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4319 shl[compile-time] 0[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4320 shl[Integer] 0[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4321 shl[compile-time] 0[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4322 shl[Integer] 1[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:4323 shl[compile-time] 1[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4324 shl[Integer] 1[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4325 shl[compile-time] 1[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4326 shl[Integer] 1[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4327 shl[compile-time] 1[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4328 shl[Integer] 1[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4329 shl[compile-time] 1[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4330 shl[Integer] 1[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4331 shl[compile-time] 1[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4332 shl[Integer] 127[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:4333 shl[compile-time] 127[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4334 shl[Integer] 127[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4335 shl[compile-time] 127[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4336 shl[Integer] 127[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4337 shl[compile-time] 127[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4338 shl[Integer] 127[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4339 shl[compile-time] 127[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4340 shl[Integer] 127[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4341 shl[compile-time] 127[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4342 shl[Integer] 128[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:4343 shl[compile-time] 128[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4344 shl[Integer] 128[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4345 shl[compile-time] 128[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4346 shl[Integer] 128[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4347 shl[compile-time] 128[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4348 shl[Integer] 128[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4349 shl[compile-time] 128[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4350 shl[Integer] 128[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4351 shl[compile-time] 128[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4352 shl[Integer] 32767[Integer], 0[Word] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:4353 shl[compile-time] 32767[Integer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4354 shl[Integer] 32767[Integer], 255[Word] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4355 shl[compile-time] 32767[Integer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4356 shl[Integer] 32767[Integer], 32767[Word] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4357 shl[compile-time] 32767[Integer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4358 shl[Integer] 32767[Integer], 32768[Word] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4359 shl[compile-time] 32767[Integer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4360 shl[Integer] 32767[Integer], 65535[Word] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4361 shl[compile-time] 32767[Integer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4362 shl[Integer] -32768[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4363 shl[compile-time] -32768[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4364 shl[Integer] -32768[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4365 shl[compile-time] -32768[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4366 shl[Integer] -32768[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4367 shl[compile-time] -32768[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4368 shl[Integer] -32768[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4369 shl[compile-time] -32768[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4370 shl[Integer] -32768[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4371 shl[compile-time] -32768[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4372 shl[Integer] -32767[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4373 shl[compile-time] -32767[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4374 shl[Integer] -32767[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4375 shl[compile-time] -32767[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4376 shl[Integer] -32767[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4377 shl[compile-time] -32767[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4378 shl[Integer] -32767[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4379 shl[compile-time] -32767[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4380 shl[Integer] -32767[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4381 shl[compile-time] -32767[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4382 shl[Integer] -129[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4383 shl[compile-time] -129[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4384 shl[Integer] -129[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4385 shl[compile-time] -129[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4386 shl[Integer] -129[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4387 shl[compile-time] -129[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4388 shl[Integer] -129[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4389 shl[compile-time] -129[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4390 shl[Integer] -129[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4391 shl[compile-time] -129[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4392 shl[Integer] -128[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4393 shl[compile-time] -128[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4394 shl[Integer] -128[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4395 shl[compile-time] -128[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4396 shl[Integer] -128[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4397 shl[compile-time] -128[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4398 shl[Integer] -128[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4399 shl[compile-time] -128[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4400 shl[Integer] -128[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4401 shl[compile-time] -128[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4402 shl[Integer] -1[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4403 shl[compile-time] -1[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4404 shl[Integer] -1[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4405 shl[compile-time] -1[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4406 shl[Integer] -1[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4407 shl[compile-time] -1[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4408 shl[Integer] -1[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4409 shl[compile-time] -1[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4410 shl[Integer] -1[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4411 shl[compile-time] -1[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4412 shl[Integer] 0[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4413 shl[compile-time] 0[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4414 shl[Integer] 0[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4415 shl[compile-time] 0[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4416 shl[Integer] 0[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4417 shl[compile-time] 0[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4418 shl[Integer] 0[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4419 shl[compile-time] 0[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4420 shl[Integer] 0[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4421 shl[compile-time] 0[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4422 shl[Integer] 1[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:4423 shl[compile-time] 1[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4424 shl[Integer] 1[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4425 shl[compile-time] 1[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4426 shl[Integer] 1[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4427 shl[compile-time] 1[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4428 shl[Integer] 1[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4429 shl[compile-time] 1[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4430 shl[Integer] 1[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4431 shl[compile-time] 1[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4432 shl[Integer] 127[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:4433 shl[compile-time] 127[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4434 shl[Integer] 127[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4435 shl[compile-time] 127[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4436 shl[Integer] 127[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4437 shl[compile-time] 127[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4438 shl[Integer] 127[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4439 shl[compile-time] 127[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4440 shl[Integer] 127[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4441 shl[compile-time] 127[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4442 shl[Integer] 128[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:4443 shl[compile-time] 128[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4444 shl[Integer] 128[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4445 shl[compile-time] 128[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4446 shl[Integer] 128[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4447 shl[compile-time] 128[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4448 shl[Integer] 128[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4449 shl[compile-time] 128[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4450 shl[Integer] 128[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4451 shl[compile-time] 128[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4452 shl[Integer] 32767[Integer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:4453 shl[compile-time] 32767[Integer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4454 shl[Integer] 32767[Integer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4455 shl[compile-time] 32767[Integer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4456 shl[Integer] 32767[Integer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4457 shl[compile-time] 32767[Integer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4458 shl[Integer] 32767[Integer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4459 shl[compile-time] 32767[Integer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4460 shl[Integer] 32767[Integer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4461 shl[compile-time] 32767[Integer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4462 shl[Integer] -32768[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4463 shl[compile-time] -32768[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4464 shl[Integer] -32768[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4465 shl[compile-time] -32768[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4466 shl[Integer] -32768[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4467 shl[compile-time] -32768[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4468 shl[Integer] -32768[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4469 shl[compile-time] -32768[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4470 shl[Integer] -32768[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4471 shl[compile-time] -32768[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4472 shl[Integer] -32767[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4473 shl[compile-time] -32767[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4474 shl[Integer] -32767[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4475 shl[compile-time] -32767[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4476 shl[Integer] -32767[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4477 shl[compile-time] -32767[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4478 shl[Integer] -32767[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4479 shl[compile-time] -32767[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4480 shl[Integer] -32767[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4481 shl[compile-time] -32767[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4482 shl[Integer] -129[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4483 shl[compile-time] -129[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4484 shl[Integer] -129[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4485 shl[compile-time] -129[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4486 shl[Integer] -129[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4487 shl[compile-time] -129[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4488 shl[Integer] -129[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4489 shl[compile-time] -129[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4490 shl[Integer] -129[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4491 shl[compile-time] -129[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4492 shl[Integer] -128[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -128

code auto:4493 shl[compile-time] -128[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:4494 shl[Integer] -128[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4495 shl[compile-time] -128[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4496 shl[Integer] -128[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4497 shl[compile-time] -128[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4498 shl[Integer] -128[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4499 shl[compile-time] -128[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4500 shl[Integer] -128[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4501 shl[compile-time] -128[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4502 shl[Integer] -1[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r -1

code auto:4503 shl[compile-time] -1[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:4504 shl[Integer] -1[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4505 shl[compile-time] -1[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4506 shl[Integer] -1[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4507 shl[compile-time] -1[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4508 shl[Integer] -1[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4509 shl[compile-time] -1[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4510 shl[Integer] -1[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4511 shl[compile-time] -1[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4512 shl[Integer] 0[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4513 shl[compile-time] 0[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4514 shl[Integer] 0[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4515 shl[compile-time] 0[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4516 shl[Integer] 0[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4517 shl[compile-time] 0[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4518 shl[Integer] 0[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4519 shl[compile-time] 0[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4520 shl[Integer] 0[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4521 shl[compile-time] 0[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4522 shl[Integer] 1[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:4523 shl[compile-time] 1[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4524 shl[Integer] 1[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4525 shl[compile-time] 1[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4526 shl[Integer] 1[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4527 shl[compile-time] 1[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4528 shl[Integer] 1[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4529 shl[compile-time] 1[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4530 shl[Integer] 1[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4531 shl[compile-time] 1[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4532 shl[Integer] 127[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:4533 shl[compile-time] 127[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4534 shl[Integer] 127[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4535 shl[compile-time] 127[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4536 shl[Integer] 127[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4537 shl[compile-time] 127[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4538 shl[Integer] 127[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4539 shl[compile-time] 127[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4540 shl[Integer] 127[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4541 shl[compile-time] 127[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4542 shl[Integer] 128[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4543 shl[compile-time] 128[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:4544 shl[Integer] 128[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4545 shl[compile-time] 128[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4546 shl[Integer] 128[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4547 shl[compile-time] 128[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4548 shl[Integer] 128[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4549 shl[compile-time] 128[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4550 shl[Integer] 128[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4551 shl[compile-time] 128[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4552 shl[Integer] 32767[Integer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4553 shl[compile-time] 32767[Integer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:4554 shl[Integer] 32767[Integer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4555 shl[compile-time] 32767[Integer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4556 shl[Integer] 32767[Integer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4557 shl[compile-time] 32767[Integer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4558 shl[Integer] 32767[Integer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4559 shl[compile-time] 32767[Integer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4560 shl[Integer] 32767[Integer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4561 shl[compile-time] 32767[Integer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4562 shl[Integer] -32768[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32768

code auto:4563 shl[compile-time] -32768[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 0;
endcode
varvalue r -32768

$overflow on
code auto:4564 shl[Integer] -32768[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4565 shl[compile-time] -32768[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4566 shl[Integer] -32768[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4567 shl[compile-time] -32768[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4568 shl[Integer] -32768[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4569 shl[compile-time] -32768[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4570 shl[Integer] -32768[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4571 shl[compile-time] -32768[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4572 shl[Integer] -32767[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -32767

code auto:4573 shl[compile-time] -32767[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 0;
endcode
varvalue r -32767

$overflow on
code auto:4574 shl[Integer] -32767[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4575 shl[compile-time] -32767[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4576 shl[Integer] -32767[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4577 shl[compile-time] -32767[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4578 shl[Integer] -32767[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4579 shl[compile-time] -32767[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4580 shl[Integer] -32767[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4581 shl[compile-time] -32767[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4582 shl[Integer] -129[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -129

code auto:4583 shl[compile-time] -129[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 0;
endcode
varvalue r -129

$overflow on
code auto:4584 shl[Integer] -129[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4585 shl[compile-time] -129[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4586 shl[Integer] -129[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4587 shl[compile-time] -129[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4588 shl[Integer] -129[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4589 shl[compile-time] -129[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4590 shl[Integer] -129[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4591 shl[compile-time] -129[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4592 shl[Integer] -128[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -128

code auto:4593 shl[compile-time] -128[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 0;
endcode
varvalue r -128

$overflow on
code auto:4594 shl[Integer] -128[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4595 shl[compile-time] -128[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4596 shl[Integer] -128[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4597 shl[compile-time] -128[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4598 shl[Integer] -128[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4599 shl[compile-time] -128[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4600 shl[Integer] -128[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4601 shl[compile-time] -128[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4602 shl[Integer] -1[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r -1

code auto:4603 shl[compile-time] -1[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 0;
endcode
varvalue r -1

$overflow on
code auto:4604 shl[Integer] -1[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4605 shl[compile-time] -1[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4606 shl[Integer] -1[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4607 shl[compile-time] -1[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4608 shl[Integer] -1[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4609 shl[compile-time] -1[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4610 shl[Integer] -1[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4611 shl[compile-time] -1[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4612 shl[Integer] 0[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4613 shl[compile-time] 0[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4614 shl[Integer] 0[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4615 shl[compile-time] 0[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4616 shl[Integer] 0[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4617 shl[compile-time] 0[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4618 shl[Integer] 0[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4619 shl[compile-time] 0[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4620 shl[Integer] 0[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4621 shl[compile-time] 0[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4622 shl[Integer] 1[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:4623 shl[compile-time] 1[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4624 shl[Integer] 1[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4625 shl[compile-time] 1[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4626 shl[Integer] 1[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4627 shl[compile-time] 1[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4628 shl[Integer] 1[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4629 shl[compile-time] 1[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4630 shl[Integer] 1[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4631 shl[compile-time] 1[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4632 shl[Integer] 127[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:4633 shl[compile-time] 127[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4634 shl[Integer] 127[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4635 shl[compile-time] 127[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4636 shl[Integer] 127[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4637 shl[compile-time] 127[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4638 shl[Integer] 127[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4639 shl[compile-time] 127[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4640 shl[Integer] 127[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4641 shl[compile-time] 127[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4642 shl[Integer] 128[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:4643 shl[compile-time] 128[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4644 shl[Integer] 128[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4645 shl[compile-time] 128[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4646 shl[Integer] 128[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4647 shl[compile-time] 128[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4648 shl[Integer] 128[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4649 shl[compile-time] 128[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4650 shl[Integer] 128[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4651 shl[compile-time] 128[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4652 shl[Integer] 32767[Integer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:4653 shl[compile-time] 32767[Integer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4654 shl[Integer] 32767[Integer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4655 shl[compile-time] 32767[Integer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4656 shl[Integer] 32767[Integer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4657 shl[compile-time] 32767[Integer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4658 shl[Integer] 32767[Integer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4659 shl[compile-time] 32767[Integer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4660 shl[Integer] 32767[Integer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:4661 shl[compile-time] 32767[Integer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4662 shl[Integer] -32768[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4663 shl[compile-time] -32768[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4664 shl[Integer] -32768[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4665 shl[compile-time] -32768[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4666 shl[Integer] -32768[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4667 shl[compile-time] -32768[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4668 shl[Integer] -32768[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4669 shl[compile-time] -32768[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4670 shl[Integer] -32768[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4671 shl[compile-time] -32768[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4672 shl[Integer] -32767[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4673 shl[compile-time] -32767[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4674 shl[Integer] -32767[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4675 shl[compile-time] -32767[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4676 shl[Integer] -32767[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4677 shl[compile-time] -32767[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4678 shl[Integer] -32767[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4679 shl[compile-time] -32767[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4680 shl[Integer] -32767[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4681 shl[compile-time] -32767[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4682 shl[Integer] -129[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4683 shl[compile-time] -129[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4684 shl[Integer] -129[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4685 shl[compile-time] -129[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4686 shl[Integer] -129[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4687 shl[compile-time] -129[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4688 shl[Integer] -129[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4689 shl[compile-time] -129[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4690 shl[Integer] -129[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4691 shl[compile-time] -129[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4692 shl[Integer] -128[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4693 shl[compile-time] -128[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4694 shl[Integer] -128[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4695 shl[compile-time] -128[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4696 shl[Integer] -128[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4697 shl[compile-time] -128[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4698 shl[Integer] -128[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4699 shl[compile-time] -128[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4700 shl[Integer] -128[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4701 shl[compile-time] -128[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4702 shl[Integer] -1[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4703 shl[compile-time] -1[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4704 shl[Integer] -1[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4705 shl[compile-time] -1[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4706 shl[Integer] -1[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4707 shl[compile-time] -1[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4708 shl[Integer] -1[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4709 shl[compile-time] -1[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4710 shl[Integer] -1[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4711 shl[compile-time] -1[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4712 shl[Integer] 0[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4713 shl[compile-time] 0[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4714 shl[Integer] 0[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4715 shl[compile-time] 0[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4716 shl[Integer] 0[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4717 shl[compile-time] 0[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4718 shl[Integer] 0[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4719 shl[compile-time] 0[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4720 shl[Integer] 0[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4721 shl[compile-time] 0[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4722 shl[Integer] 1[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:4723 shl[compile-time] 1[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4724 shl[Integer] 1[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4725 shl[compile-time] 1[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4726 shl[Integer] 1[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4727 shl[compile-time] 1[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4728 shl[Integer] 1[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4729 shl[compile-time] 1[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4730 shl[Integer] 1[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4731 shl[compile-time] 1[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4732 shl[Integer] 127[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:4733 shl[compile-time] 127[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4734 shl[Integer] 127[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4735 shl[compile-time] 127[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4736 shl[Integer] 127[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4737 shl[compile-time] 127[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4738 shl[Integer] 127[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4739 shl[compile-time] 127[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4740 shl[Integer] 127[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4741 shl[compile-time] 127[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4742 shl[Integer] 128[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:4743 shl[compile-time] 128[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4744 shl[Integer] 128[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4745 shl[compile-time] 128[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4746 shl[Integer] 128[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4747 shl[compile-time] 128[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4748 shl[Integer] 128[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4749 shl[compile-time] 128[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4750 shl[Integer] 128[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4751 shl[compile-time] 128[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4752 shl[Integer] 32767[Integer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:4753 shl[compile-time] 32767[Integer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:4754 shl[Integer] 32767[Integer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4755 shl[compile-time] 32767[Integer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4756 shl[Integer] 32767[Integer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4757 shl[compile-time] 32767[Integer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4758 shl[Integer] 32767[Integer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4759 shl[compile-time] 32767[Integer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4760 shl[Integer] 32767[Integer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:4761 shl[compile-time] 32767[Integer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4762 shl[Integer] -32768[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4763 shl[compile-time] -32768[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4764 shl[Integer] -32768[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4765 shl[compile-time] -32768[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4766 shl[Integer] -32768[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4767 shl[compile-time] -32768[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4768 shl[Integer] -32768[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4769 shl[compile-time] -32768[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4770 shl[Integer] -32768[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4771 shl[compile-time] -32768[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4772 shl[Integer] -32767[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4773 shl[compile-time] -32767[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4774 shl[Integer] -32767[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4775 shl[compile-time] -32767[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4776 shl[Integer] -32767[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4777 shl[compile-time] -32767[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4778 shl[Integer] -32767[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4779 shl[compile-time] -32767[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4780 shl[Integer] -32767[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4781 shl[compile-time] -32767[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4782 shl[Integer] -129[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4783 shl[compile-time] -129[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4784 shl[Integer] -129[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4785 shl[compile-time] -129[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4786 shl[Integer] -129[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4787 shl[compile-time] -129[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4788 shl[Integer] -129[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4789 shl[compile-time] -129[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4790 shl[Integer] -129[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4791 shl[compile-time] -129[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4792 shl[Integer] -128[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4793 shl[compile-time] -128[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4794 shl[Integer] -128[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4795 shl[compile-time] -128[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4796 shl[Integer] -128[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4797 shl[compile-time] -128[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4798 shl[Integer] -128[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4799 shl[compile-time] -128[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4800 shl[Integer] -128[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4801 shl[compile-time] -128[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4802 shl[Integer] -1[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
runtime overflow

code auto:4803 shl[compile-time] -1[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4804 shl[Integer] -1[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4805 shl[compile-time] -1[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4806 shl[Integer] -1[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4807 shl[compile-time] -1[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4808 shl[Integer] -1[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4809 shl[compile-time] -1[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4810 shl[Integer] -1[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4811 shl[compile-time] -1[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4812 shl[Integer] 0[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4813 shl[compile-time] 0[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4814 shl[Integer] 0[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4815 shl[compile-time] 0[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4816 shl[Integer] 0[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4817 shl[compile-time] 0[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4818 shl[Integer] 0[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4819 shl[compile-time] 0[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4820 shl[Integer] 0[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4821 shl[compile-time] 0[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4822 shl[Integer] 1[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:4823 shl[compile-time] 1[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4824 shl[Integer] 1[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4825 shl[compile-time] 1[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4826 shl[Integer] 1[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4827 shl[compile-time] 1[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4828 shl[Integer] 1[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4829 shl[compile-time] 1[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4830 shl[Integer] 1[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4831 shl[compile-time] 1[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4832 shl[Integer] 127[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:4833 shl[compile-time] 127[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4834 shl[Integer] 127[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4835 shl[compile-time] 127[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4836 shl[Integer] 127[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4837 shl[compile-time] 127[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4838 shl[Integer] 127[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4839 shl[compile-time] 127[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4840 shl[Integer] 127[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4841 shl[compile-time] 127[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4842 shl[Integer] 128[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:4843 shl[compile-time] 128[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4844 shl[Integer] 128[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4845 shl[compile-time] 128[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4846 shl[Integer] 128[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4847 shl[compile-time] 128[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4848 shl[Integer] 128[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4849 shl[compile-time] 128[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4850 shl[Integer] 128[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4851 shl[compile-time] 128[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4852 shl[Integer] 32767[Integer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:4853 shl[compile-time] 32767[Integer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4854 shl[Integer] 32767[Integer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4855 shl[compile-time] 32767[Integer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4856 shl[Integer] 32767[Integer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4857 shl[compile-time] 32767[Integer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4858 shl[Integer] 32767[Integer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4859 shl[compile-time] 32767[Integer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4860 shl[Integer] 32767[Integer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:4861 shl[compile-time] 32767[Integer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4862 shl[Integer] -32768[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4863 shl[compile-time] -32768[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 0;
endcode
compile error

$overflow on
code auto:4864 shl[Integer] -32768[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4865 shl[compile-time] -32768[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4866 shl[Integer] -32768[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4867 shl[compile-time] -32768[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4868 shl[Integer] -32768[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4869 shl[compile-time] -32768[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4870 shl[Integer] -32768[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4871 shl[compile-time] -32768[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4872 shl[Integer] -32767[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4873 shl[compile-time] -32767[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 0;
endcode
compile error

$overflow on
code auto:4874 shl[Integer] -32767[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4875 shl[compile-time] -32767[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4876 shl[Integer] -32767[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4877 shl[compile-time] -32767[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4878 shl[Integer] -32767[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4879 shl[compile-time] -32767[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4880 shl[Integer] -32767[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4881 shl[compile-time] -32767[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4882 shl[Integer] -129[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4883 shl[compile-time] -129[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 0;
endcode
compile error

$overflow on
code auto:4884 shl[Integer] -129[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4885 shl[compile-time] -129[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4886 shl[Integer] -129[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4887 shl[compile-time] -129[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4888 shl[Integer] -129[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4889 shl[compile-time] -129[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4890 shl[Integer] -129[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4891 shl[compile-time] -129[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4892 shl[Integer] -128[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4893 shl[compile-time] -128[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 0;
endcode
compile error

$overflow on
code auto:4894 shl[Integer] -128[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4895 shl[compile-time] -128[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4896 shl[Integer] -128[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4897 shl[compile-time] -128[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4898 shl[Integer] -128[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4899 shl[compile-time] -128[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4900 shl[Integer] -128[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4901 shl[compile-time] -128[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4902 shl[Integer] -1[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
runtime overflow

code auto:4903 shl[compile-time] -1[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 0;
endcode
compile error

$overflow on
code auto:4904 shl[Integer] -1[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4905 shl[compile-time] -1[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4906 shl[Integer] -1[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4907 shl[compile-time] -1[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4908 shl[Integer] -1[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4909 shl[compile-time] -1[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4910 shl[Integer] -1[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4911 shl[compile-time] -1[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4912 shl[Integer] 0[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4913 shl[compile-time] 0[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4914 shl[Integer] 0[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4915 shl[compile-time] 0[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4916 shl[Integer] 0[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4917 shl[compile-time] 0[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4918 shl[Integer] 0[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4919 shl[compile-time] 0[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4920 shl[Integer] 0[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4921 shl[compile-time] 0[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4922 shl[Integer] 1[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:4923 shl[compile-time] 1[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4924 shl[Integer] 1[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4925 shl[compile-time] 1[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4926 shl[Integer] 1[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4927 shl[compile-time] 1[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4928 shl[Integer] 1[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4929 shl[compile-time] 1[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4930 shl[Integer] 1[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4931 shl[compile-time] 1[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4932 shl[Integer] 127[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:4933 shl[compile-time] 127[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4934 shl[Integer] 127[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4935 shl[compile-time] 127[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4936 shl[Integer] 127[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4937 shl[compile-time] 127[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4938 shl[Integer] 127[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4939 shl[compile-time] 127[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4940 shl[Integer] 127[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4941 shl[compile-time] 127[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4942 shl[Integer] 128[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:4943 shl[compile-time] 128[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:4944 shl[Integer] 128[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4945 shl[compile-time] 128[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4946 shl[Integer] 128[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4947 shl[compile-time] 128[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4948 shl[Integer] 128[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4949 shl[compile-time] 128[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4950 shl[Integer] 128[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4951 shl[compile-time] 128[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4952 shl[Integer] 32767[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:4953 shl[compile-time] 32767[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:4954 shl[Integer] 32767[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4955 shl[compile-time] 32767[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:4956 shl[Integer] 32767[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4957 shl[compile-time] 32767[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:4958 shl[Integer] 32767[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4959 shl[compile-time] 32767[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:4960 shl[Integer] 32767[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:4961 shl[compile-time] 32767[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:4962 shl[Byte] 0[Byte], -128[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4963 shl[compile-time] 0[Byte], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:4964 shl[Byte] 0[Byte], -127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4965 shl[compile-time] 0[Byte], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:4966 shl[Byte] 0[Byte], -1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4967 shl[compile-time] 0[Byte], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:4968 shl[Byte] 0[Byte], 0[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4969 shl[compile-time] 0[Byte], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:4970 shl[Byte] 0[Byte], 1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4971 shl[compile-time] 0[Byte], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:4972 shl[Byte] 0[Byte], 127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4973 shl[compile-time] 0[Byte], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:4974 shl[Byte] 1[Byte], -128[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4975 shl[compile-time] 1[Byte], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:4976 shl[Byte] 1[Byte], -127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4977 shl[compile-time] 1[Byte], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:4978 shl[Byte] 1[Byte], -1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4979 shl[compile-time] 1[Byte], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:4980 shl[Byte] 1[Byte], 0[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:4981 shl[compile-time] 1[Byte], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:4982 shl[Byte] 1[Byte], 1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:4983 shl[compile-time] 1[Byte], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:4984 shl[Byte] 1[Byte], 127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4985 shl[compile-time] 1[Byte], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:4986 shl[Byte] 127[Byte], -128[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4987 shl[compile-time] 127[Byte], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:4988 shl[Byte] 127[Byte], -127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4989 shl[compile-time] 127[Byte], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:4990 shl[Byte] 127[Byte], -1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4991 shl[compile-time] 127[Byte], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:4992 shl[Byte] 127[Byte], 0[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:4993 shl[compile-time] 127[Byte], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:4994 shl[Byte] 127[Byte], 1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:4995 shl[compile-time] 127[Byte], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:4996 shl[Byte] 127[Byte], 127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4997 shl[compile-time] 127[Byte], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:4998 shl[Byte] 128[Byte], -128[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:4999 shl[compile-time] 128[Byte], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5000 shl[Byte] 128[Byte], -127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5001 shl[compile-time] 128[Byte], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5002 shl[Byte] 128[Byte], -1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5003 shl[compile-time] 128[Byte], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5004 shl[Byte] 128[Byte], 0[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5005 shl[compile-time] 128[Byte], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:5006 shl[Byte] 128[Byte], 1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5007 shl[compile-time] 128[Byte], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5008 shl[Byte] 128[Byte], 127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5009 shl[compile-time] 128[Byte], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5010 shl[Byte] 255[Byte], -128[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5011 shl[compile-time] 255[Byte], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5012 shl[Byte] 255[Byte], -127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5013 shl[compile-time] 255[Byte], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5014 shl[Byte] 255[Byte], -1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5015 shl[compile-time] 255[Byte], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5016 shl[Byte] 255[Byte], 0[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5017 shl[compile-time] 255[Byte], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:5018 shl[Byte] 255[Byte], 1[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5019 shl[compile-time] 255[Byte], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5020 shl[Byte] 255[Byte], 127[Int8] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5021 shl[compile-time] 255[Byte], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5022 shl[Byte] 0[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5023 shl[compile-time] 0[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5024 shl[Byte] 0[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5025 shl[compile-time] 0[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5026 shl[Byte] 0[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5027 shl[compile-time] 0[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5028 shl[Byte] 0[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5029 shl[compile-time] 0[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5030 shl[Byte] 0[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5031 shl[compile-time] 0[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5032 shl[Byte] 0[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5033 shl[compile-time] 0[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5034 shl[Byte] 1[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5035 shl[compile-time] 1[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5036 shl[Byte] 1[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5037 shl[compile-time] 1[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5038 shl[Byte] 1[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5039 shl[compile-time] 1[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5040 shl[Byte] 1[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:5041 shl[compile-time] 1[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5042 shl[Byte] 1[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:5043 shl[compile-time] 1[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5044 shl[Byte] 1[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5045 shl[compile-time] 1[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5046 shl[Byte] 127[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5047 shl[compile-time] 127[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5048 shl[Byte] 127[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5049 shl[compile-time] 127[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5050 shl[Byte] 127[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5051 shl[compile-time] 127[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5052 shl[Byte] 127[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:5053 shl[compile-time] 127[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5054 shl[Byte] 127[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5055 shl[compile-time] 127[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5056 shl[Byte] 127[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5057 shl[compile-time] 127[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5058 shl[Byte] 128[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5059 shl[compile-time] 128[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5060 shl[Byte] 128[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5061 shl[compile-time] 128[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5062 shl[Byte] 128[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5063 shl[compile-time] 128[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5064 shl[Byte] 128[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:5065 shl[compile-time] 128[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5066 shl[Byte] 128[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5067 shl[compile-time] 128[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5068 shl[Byte] 128[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5069 shl[compile-time] 128[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5070 shl[Byte] 255[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5071 shl[compile-time] 255[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5072 shl[Byte] 255[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5073 shl[compile-time] 255[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5074 shl[Byte] 255[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5075 shl[compile-time] 255[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5076 shl[Byte] 255[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:5077 shl[compile-time] 255[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5078 shl[Byte] 255[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5079 shl[compile-time] 255[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5080 shl[Byte] 255[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5081 shl[compile-time] 255[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5082 shl[Byte] 0[Byte], -128[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5083 shl[compile-time] 0[Byte], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5084 shl[Byte] 0[Byte], -127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5085 shl[compile-time] 0[Byte], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5086 shl[Byte] 0[Byte], -1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5087 shl[compile-time] 0[Byte], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5088 shl[Byte] 0[Byte], 0[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5089 shl[compile-time] 0[Byte], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5090 shl[Byte] 0[Byte], 1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5091 shl[compile-time] 0[Byte], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5092 shl[Byte] 0[Byte], 127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5093 shl[compile-time] 0[Byte], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5094 shl[Byte] 1[Byte], -128[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5095 shl[compile-time] 1[Byte], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5096 shl[Byte] 1[Byte], -127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5097 shl[compile-time] 1[Byte], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5098 shl[Byte] 1[Byte], -1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5099 shl[compile-time] 1[Byte], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5100 shl[Byte] 1[Byte], 0[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:5101 shl[compile-time] 1[Byte], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5102 shl[Byte] 1[Byte], 1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:5103 shl[compile-time] 1[Byte], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5104 shl[Byte] 1[Byte], 127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5105 shl[compile-time] 1[Byte], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5106 shl[Byte] 127[Byte], -128[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5107 shl[compile-time] 127[Byte], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5108 shl[Byte] 127[Byte], -127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5109 shl[compile-time] 127[Byte], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5110 shl[Byte] 127[Byte], -1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5111 shl[compile-time] 127[Byte], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5112 shl[Byte] 127[Byte], 0[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:5113 shl[compile-time] 127[Byte], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5114 shl[Byte] 127[Byte], 1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5115 shl[compile-time] 127[Byte], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5116 shl[Byte] 127[Byte], 127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5117 shl[compile-time] 127[Byte], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5118 shl[Byte] 128[Byte], -128[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5119 shl[compile-time] 128[Byte], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5120 shl[Byte] 128[Byte], -127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5121 shl[compile-time] 128[Byte], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5122 shl[Byte] 128[Byte], -1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5123 shl[compile-time] 128[Byte], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5124 shl[Byte] 128[Byte], 0[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:5125 shl[compile-time] 128[Byte], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5126 shl[Byte] 128[Byte], 1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5127 shl[compile-time] 128[Byte], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5128 shl[Byte] 128[Byte], 127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5129 shl[compile-time] 128[Byte], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5130 shl[Byte] 255[Byte], -128[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5131 shl[compile-time] 255[Byte], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5132 shl[Byte] 255[Byte], -127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5133 shl[compile-time] 255[Byte], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5134 shl[Byte] 255[Byte], -1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5135 shl[compile-time] 255[Byte], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5136 shl[Byte] 255[Byte], 0[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:5137 shl[compile-time] 255[Byte], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5138 shl[Byte] 255[Byte], 1[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5139 shl[compile-time] 255[Byte], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5140 shl[Byte] 255[Byte], 127[Int8] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5141 shl[compile-time] 255[Byte], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5142 shl[Byte] 0[Byte], -128[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5143 shl[compile-time] 0[Byte], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5144 shl[Byte] 0[Byte], -127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5145 shl[compile-time] 0[Byte], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5146 shl[Byte] 0[Byte], -1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5147 shl[compile-time] 0[Byte], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5148 shl[Byte] 0[Byte], 0[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5149 shl[compile-time] 0[Byte], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5150 shl[Byte] 0[Byte], 1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5151 shl[compile-time] 0[Byte], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5152 shl[Byte] 0[Byte], 127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5153 shl[compile-time] 0[Byte], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5154 shl[Byte] 1[Byte], -128[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5155 shl[compile-time] 1[Byte], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5156 shl[Byte] 1[Byte], -127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5157 shl[compile-time] 1[Byte], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5158 shl[Byte] 1[Byte], -1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5159 shl[compile-time] 1[Byte], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5160 shl[Byte] 1[Byte], 0[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:5161 shl[compile-time] 1[Byte], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5162 shl[Byte] 1[Byte], 1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:5163 shl[compile-time] 1[Byte], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5164 shl[Byte] 1[Byte], 127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5165 shl[compile-time] 1[Byte], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5166 shl[Byte] 127[Byte], -128[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5167 shl[compile-time] 127[Byte], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5168 shl[Byte] 127[Byte], -127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5169 shl[compile-time] 127[Byte], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5170 shl[Byte] 127[Byte], -1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5171 shl[compile-time] 127[Byte], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5172 shl[Byte] 127[Byte], 0[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:5173 shl[compile-time] 127[Byte], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5174 shl[Byte] 127[Byte], 1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5175 shl[compile-time] 127[Byte], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5176 shl[Byte] 127[Byte], 127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5177 shl[compile-time] 127[Byte], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5178 shl[Byte] 128[Byte], -128[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5179 shl[compile-time] 128[Byte], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5180 shl[Byte] 128[Byte], -127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5181 shl[compile-time] 128[Byte], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5182 shl[Byte] 128[Byte], -1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5183 shl[compile-time] 128[Byte], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5184 shl[Byte] 128[Byte], 0[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:5185 shl[compile-time] 128[Byte], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5186 shl[Byte] 128[Byte], 1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5187 shl[compile-time] 128[Byte], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5188 shl[Byte] 128[Byte], 127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5189 shl[compile-time] 128[Byte], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5190 shl[Byte] 255[Byte], -128[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5191 shl[compile-time] 255[Byte], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5192 shl[Byte] 255[Byte], -127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5193 shl[compile-time] 255[Byte], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5194 shl[Byte] 255[Byte], -1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5195 shl[compile-time] 255[Byte], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5196 shl[Byte] 255[Byte], 0[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:5197 shl[compile-time] 255[Byte], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5198 shl[Byte] 255[Byte], 1[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5199 shl[compile-time] 255[Byte], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5200 shl[Byte] 255[Byte], 127[Int8] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5201 shl[compile-time] 255[Byte], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5202 shl[Byte] 0[Byte], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5203 shl[compile-time] 0[Byte], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5204 shl[Byte] 0[Byte], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5205 shl[compile-time] 0[Byte], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5206 shl[Byte] 0[Byte], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5207 shl[compile-time] 0[Byte], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5208 shl[Byte] 0[Byte], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5209 shl[compile-time] 0[Byte], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5210 shl[Byte] 0[Byte], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5211 shl[compile-time] 0[Byte], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5212 shl[Byte] 0[Byte], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5213 shl[compile-time] 0[Byte], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5214 shl[Byte] 1[Byte], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5215 shl[compile-time] 1[Byte], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5216 shl[Byte] 1[Byte], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5217 shl[compile-time] 1[Byte], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5218 shl[Byte] 1[Byte], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5219 shl[compile-time] 1[Byte], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5220 shl[Byte] 1[Byte], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:5221 shl[compile-time] 1[Byte], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5222 shl[Byte] 1[Byte], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:5223 shl[compile-time] 1[Byte], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5224 shl[Byte] 1[Byte], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5225 shl[compile-time] 1[Byte], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5226 shl[Byte] 127[Byte], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5227 shl[compile-time] 127[Byte], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5228 shl[Byte] 127[Byte], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5229 shl[compile-time] 127[Byte], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5230 shl[Byte] 127[Byte], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5231 shl[compile-time] 127[Byte], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5232 shl[Byte] 127[Byte], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:5233 shl[compile-time] 127[Byte], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5234 shl[Byte] 127[Byte], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:5235 shl[compile-time] 127[Byte], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5236 shl[Byte] 127[Byte], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5237 shl[compile-time] 127[Byte], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5238 shl[Byte] 128[Byte], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5239 shl[compile-time] 128[Byte], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5240 shl[Byte] 128[Byte], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5241 shl[compile-time] 128[Byte], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5242 shl[Byte] 128[Byte], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5243 shl[compile-time] 128[Byte], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5244 shl[Byte] 128[Byte], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:5245 shl[compile-time] 128[Byte], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5246 shl[Byte] 128[Byte], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5247 shl[compile-time] 128[Byte], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5248 shl[Byte] 128[Byte], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5249 shl[compile-time] 128[Byte], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5250 shl[Byte] 255[Byte], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5251 shl[compile-time] 255[Byte], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5252 shl[Byte] 255[Byte], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5253 shl[compile-time] 255[Byte], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:5254 shl[Byte] 255[Byte], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5255 shl[compile-time] 255[Byte], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5256 shl[Byte] 255[Byte], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:5257 shl[compile-time] 255[Byte], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5258 shl[Byte] 255[Byte], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:5259 shl[compile-time] 255[Byte], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5260 shl[Byte] 255[Byte], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5261 shl[compile-time] 255[Byte], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5262 shl[Byte] 0[Byte], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5263 shl[compile-time] 0[Byte], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5264 shl[Byte] 0[Byte], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5265 shl[compile-time] 0[Byte], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5266 shl[Byte] 0[Byte], -129[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5267 shl[compile-time] 0[Byte], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5268 shl[Byte] 0[Byte], -128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5269 shl[compile-time] 0[Byte], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5270 shl[Byte] 0[Byte], -1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5271 shl[compile-time] 0[Byte], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5272 shl[Byte] 0[Byte], 0[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5273 shl[compile-time] 0[Byte], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5274 shl[Byte] 0[Byte], 1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5275 shl[compile-time] 0[Byte], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5276 shl[Byte] 0[Byte], 127[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5277 shl[compile-time] 0[Byte], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5278 shl[Byte] 0[Byte], 128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5279 shl[compile-time] 0[Byte], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5280 shl[Byte] 0[Byte], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5281 shl[compile-time] 0[Byte], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5282 shl[Byte] 1[Byte], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5283 shl[compile-time] 1[Byte], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5284 shl[Byte] 1[Byte], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5285 shl[compile-time] 1[Byte], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5286 shl[Byte] 1[Byte], -129[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5287 shl[compile-time] 1[Byte], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5288 shl[Byte] 1[Byte], -128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5289 shl[compile-time] 1[Byte], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5290 shl[Byte] 1[Byte], -1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5291 shl[compile-time] 1[Byte], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5292 shl[Byte] 1[Byte], 0[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:5293 shl[compile-time] 1[Byte], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5294 shl[Byte] 1[Byte], 1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:5295 shl[compile-time] 1[Byte], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5296 shl[Byte] 1[Byte], 127[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5297 shl[compile-time] 1[Byte], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5298 shl[Byte] 1[Byte], 128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5299 shl[compile-time] 1[Byte], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5300 shl[Byte] 1[Byte], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5301 shl[compile-time] 1[Byte], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5302 shl[Byte] 127[Byte], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5303 shl[compile-time] 127[Byte], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5304 shl[Byte] 127[Byte], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5305 shl[compile-time] 127[Byte], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5306 shl[Byte] 127[Byte], -129[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5307 shl[compile-time] 127[Byte], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5308 shl[Byte] 127[Byte], -128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5309 shl[compile-time] 127[Byte], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5310 shl[Byte] 127[Byte], -1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5311 shl[compile-time] 127[Byte], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5312 shl[Byte] 127[Byte], 0[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:5313 shl[compile-time] 127[Byte], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5314 shl[Byte] 127[Byte], 1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5315 shl[compile-time] 127[Byte], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:5316 shl[Byte] 127[Byte], 127[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5317 shl[compile-time] 127[Byte], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5318 shl[Byte] 127[Byte], 128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5319 shl[compile-time] 127[Byte], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5320 shl[Byte] 127[Byte], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5321 shl[compile-time] 127[Byte], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5322 shl[Byte] 128[Byte], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5323 shl[compile-time] 128[Byte], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5324 shl[Byte] 128[Byte], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5325 shl[compile-time] 128[Byte], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5326 shl[Byte] 128[Byte], -129[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5327 shl[compile-time] 128[Byte], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5328 shl[Byte] 128[Byte], -128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5329 shl[compile-time] 128[Byte], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5330 shl[Byte] 128[Byte], -1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5331 shl[compile-time] 128[Byte], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5332 shl[Byte] 128[Byte], 0[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5333 shl[compile-time] 128[Byte], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:5334 shl[Byte] 128[Byte], 1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5335 shl[compile-time] 128[Byte], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5336 shl[Byte] 128[Byte], 127[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5337 shl[compile-time] 128[Byte], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5338 shl[Byte] 128[Byte], 128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5339 shl[compile-time] 128[Byte], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5340 shl[Byte] 128[Byte], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5341 shl[compile-time] 128[Byte], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5342 shl[Byte] 255[Byte], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5343 shl[compile-time] 255[Byte], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5344 shl[Byte] 255[Byte], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5345 shl[compile-time] 255[Byte], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5346 shl[Byte] 255[Byte], -129[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5347 shl[compile-time] 255[Byte], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5348 shl[Byte] 255[Byte], -128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5349 shl[compile-time] 255[Byte], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5350 shl[Byte] 255[Byte], -1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5351 shl[compile-time] 255[Byte], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5352 shl[Byte] 255[Byte], 0[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5353 shl[compile-time] 255[Byte], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:5354 shl[Byte] 255[Byte], 1[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5355 shl[compile-time] 255[Byte], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5356 shl[Byte] 255[Byte], 127[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5357 shl[compile-time] 255[Byte], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5358 shl[Byte] 255[Byte], 128[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5359 shl[compile-time] 255[Byte], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5360 shl[Byte] 255[Byte], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5361 shl[compile-time] 255[Byte], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5362 shl[Byte] 0[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5363 shl[compile-time] 0[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5364 shl[Byte] 0[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5365 shl[compile-time] 0[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5366 shl[Byte] 0[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5367 shl[compile-time] 0[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5368 shl[Byte] 0[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5369 shl[compile-time] 0[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5370 shl[Byte] 0[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5371 shl[compile-time] 0[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5372 shl[Byte] 0[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5373 shl[compile-time] 0[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5374 shl[Byte] 0[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5375 shl[compile-time] 0[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5376 shl[Byte] 0[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5377 shl[compile-time] 0[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5378 shl[Byte] 0[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5379 shl[compile-time] 0[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5380 shl[Byte] 0[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5381 shl[compile-time] 0[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5382 shl[Byte] 1[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5383 shl[compile-time] 1[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5384 shl[Byte] 1[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5385 shl[compile-time] 1[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5386 shl[Byte] 1[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5387 shl[compile-time] 1[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5388 shl[Byte] 1[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5389 shl[compile-time] 1[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5390 shl[Byte] 1[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5391 shl[compile-time] 1[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5392 shl[Byte] 1[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:5393 shl[compile-time] 1[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5394 shl[Byte] 1[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:5395 shl[compile-time] 1[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5396 shl[Byte] 1[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5397 shl[compile-time] 1[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5398 shl[Byte] 1[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5399 shl[compile-time] 1[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5400 shl[Byte] 1[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5401 shl[compile-time] 1[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5402 shl[Byte] 127[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5403 shl[compile-time] 127[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5404 shl[Byte] 127[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5405 shl[compile-time] 127[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5406 shl[Byte] 127[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5407 shl[compile-time] 127[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5408 shl[Byte] 127[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5409 shl[compile-time] 127[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5410 shl[Byte] 127[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5411 shl[compile-time] 127[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5412 shl[Byte] 127[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:5413 shl[compile-time] 127[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5414 shl[Byte] 127[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5415 shl[compile-time] 127[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5416 shl[Byte] 127[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5417 shl[compile-time] 127[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5418 shl[Byte] 127[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5419 shl[compile-time] 127[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5420 shl[Byte] 127[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5421 shl[compile-time] 127[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5422 shl[Byte] 128[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5423 shl[compile-time] 128[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5424 shl[Byte] 128[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5425 shl[compile-time] 128[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5426 shl[Byte] 128[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5427 shl[compile-time] 128[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5428 shl[Byte] 128[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5429 shl[compile-time] 128[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5430 shl[Byte] 128[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5431 shl[compile-time] 128[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5432 shl[Byte] 128[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:5433 shl[compile-time] 128[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5434 shl[Byte] 128[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5435 shl[compile-time] 128[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5436 shl[Byte] 128[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5437 shl[compile-time] 128[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5438 shl[Byte] 128[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5439 shl[compile-time] 128[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5440 shl[Byte] 128[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5441 shl[compile-time] 128[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5442 shl[Byte] 255[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5443 shl[compile-time] 255[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5444 shl[Byte] 255[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5445 shl[compile-time] 255[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5446 shl[Byte] 255[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5447 shl[compile-time] 255[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5448 shl[Byte] 255[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5449 shl[compile-time] 255[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5450 shl[Byte] 255[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5451 shl[compile-time] 255[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5452 shl[Byte] 255[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:5453 shl[compile-time] 255[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5454 shl[Byte] 255[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5455 shl[compile-time] 255[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5456 shl[Byte] 255[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5457 shl[compile-time] 255[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5458 shl[Byte] 255[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5459 shl[compile-time] 255[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5460 shl[Byte] 255[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5461 shl[compile-time] 255[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5462 shl[Byte] 0[Byte], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5463 shl[compile-time] 0[Byte], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5464 shl[Byte] 0[Byte], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5465 shl[compile-time] 0[Byte], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5466 shl[Byte] 0[Byte], -129[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5467 shl[compile-time] 0[Byte], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5468 shl[Byte] 0[Byte], -128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5469 shl[compile-time] 0[Byte], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5470 shl[Byte] 0[Byte], -1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5471 shl[compile-time] 0[Byte], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5472 shl[Byte] 0[Byte], 0[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5473 shl[compile-time] 0[Byte], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5474 shl[Byte] 0[Byte], 1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5475 shl[compile-time] 0[Byte], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5476 shl[Byte] 0[Byte], 127[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5477 shl[compile-time] 0[Byte], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5478 shl[Byte] 0[Byte], 128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5479 shl[compile-time] 0[Byte], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5480 shl[Byte] 0[Byte], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5481 shl[compile-time] 0[Byte], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5482 shl[Byte] 1[Byte], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5483 shl[compile-time] 1[Byte], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5484 shl[Byte] 1[Byte], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5485 shl[compile-time] 1[Byte], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5486 shl[Byte] 1[Byte], -129[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5487 shl[compile-time] 1[Byte], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5488 shl[Byte] 1[Byte], -128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5489 shl[compile-time] 1[Byte], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5490 shl[Byte] 1[Byte], -1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5491 shl[compile-time] 1[Byte], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5492 shl[Byte] 1[Byte], 0[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:5493 shl[compile-time] 1[Byte], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5494 shl[Byte] 1[Byte], 1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:5495 shl[compile-time] 1[Byte], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5496 shl[Byte] 1[Byte], 127[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5497 shl[compile-time] 1[Byte], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5498 shl[Byte] 1[Byte], 128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5499 shl[compile-time] 1[Byte], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5500 shl[Byte] 1[Byte], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5501 shl[compile-time] 1[Byte], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5502 shl[Byte] 127[Byte], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5503 shl[compile-time] 127[Byte], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5504 shl[Byte] 127[Byte], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5505 shl[compile-time] 127[Byte], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5506 shl[Byte] 127[Byte], -129[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5507 shl[compile-time] 127[Byte], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5508 shl[Byte] 127[Byte], -128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5509 shl[compile-time] 127[Byte], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5510 shl[Byte] 127[Byte], -1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5511 shl[compile-time] 127[Byte], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5512 shl[Byte] 127[Byte], 0[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:5513 shl[compile-time] 127[Byte], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5514 shl[Byte] 127[Byte], 1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5515 shl[compile-time] 127[Byte], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5516 shl[Byte] 127[Byte], 127[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5517 shl[compile-time] 127[Byte], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5518 shl[Byte] 127[Byte], 128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5519 shl[compile-time] 127[Byte], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5520 shl[Byte] 127[Byte], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5521 shl[compile-time] 127[Byte], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5522 shl[Byte] 128[Byte], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5523 shl[compile-time] 128[Byte], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5524 shl[Byte] 128[Byte], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5525 shl[compile-time] 128[Byte], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5526 shl[Byte] 128[Byte], -129[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5527 shl[compile-time] 128[Byte], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5528 shl[Byte] 128[Byte], -128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5529 shl[compile-time] 128[Byte], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5530 shl[Byte] 128[Byte], -1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5531 shl[compile-time] 128[Byte], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5532 shl[Byte] 128[Byte], 0[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:5533 shl[compile-time] 128[Byte], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5534 shl[Byte] 128[Byte], 1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5535 shl[compile-time] 128[Byte], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5536 shl[Byte] 128[Byte], 127[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5537 shl[compile-time] 128[Byte], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5538 shl[Byte] 128[Byte], 128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5539 shl[compile-time] 128[Byte], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5540 shl[Byte] 128[Byte], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5541 shl[compile-time] 128[Byte], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5542 shl[Byte] 255[Byte], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5543 shl[compile-time] 255[Byte], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5544 shl[Byte] 255[Byte], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5545 shl[compile-time] 255[Byte], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5546 shl[Byte] 255[Byte], -129[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5547 shl[compile-time] 255[Byte], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5548 shl[Byte] 255[Byte], -128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5549 shl[compile-time] 255[Byte], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5550 shl[Byte] 255[Byte], -1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5551 shl[compile-time] 255[Byte], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5552 shl[Byte] 255[Byte], 0[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:5553 shl[compile-time] 255[Byte], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5554 shl[Byte] 255[Byte], 1[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5555 shl[compile-time] 255[Byte], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5556 shl[Byte] 255[Byte], 127[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5557 shl[compile-time] 255[Byte], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5558 shl[Byte] 255[Byte], 128[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5559 shl[compile-time] 255[Byte], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5560 shl[Byte] 255[Byte], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5561 shl[compile-time] 255[Byte], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5562 shl[Byte] 0[Byte], -32768[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5563 shl[compile-time] 0[Byte], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5564 shl[Byte] 0[Byte], -32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5565 shl[compile-time] 0[Byte], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5566 shl[Byte] 0[Byte], -129[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5567 shl[compile-time] 0[Byte], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5568 shl[Byte] 0[Byte], -128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5569 shl[compile-time] 0[Byte], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5570 shl[Byte] 0[Byte], -1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5571 shl[compile-time] 0[Byte], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5572 shl[Byte] 0[Byte], 0[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5573 shl[compile-time] 0[Byte], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5574 shl[Byte] 0[Byte], 1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5575 shl[compile-time] 0[Byte], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5576 shl[Byte] 0[Byte], 127[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5577 shl[compile-time] 0[Byte], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5578 shl[Byte] 0[Byte], 128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5579 shl[compile-time] 0[Byte], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5580 shl[Byte] 0[Byte], 32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5581 shl[compile-time] 0[Byte], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5582 shl[Byte] 1[Byte], -32768[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5583 shl[compile-time] 1[Byte], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5584 shl[Byte] 1[Byte], -32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5585 shl[compile-time] 1[Byte], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5586 shl[Byte] 1[Byte], -129[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5587 shl[compile-time] 1[Byte], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5588 shl[Byte] 1[Byte], -128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5589 shl[compile-time] 1[Byte], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5590 shl[Byte] 1[Byte], -1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5591 shl[compile-time] 1[Byte], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5592 shl[Byte] 1[Byte], 0[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:5593 shl[compile-time] 1[Byte], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5594 shl[Byte] 1[Byte], 1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:5595 shl[compile-time] 1[Byte], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5596 shl[Byte] 1[Byte], 127[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5597 shl[compile-time] 1[Byte], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5598 shl[Byte] 1[Byte], 128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5599 shl[compile-time] 1[Byte], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5600 shl[Byte] 1[Byte], 32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5601 shl[compile-time] 1[Byte], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5602 shl[Byte] 127[Byte], -32768[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5603 shl[compile-time] 127[Byte], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5604 shl[Byte] 127[Byte], -32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5605 shl[compile-time] 127[Byte], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5606 shl[Byte] 127[Byte], -129[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5607 shl[compile-time] 127[Byte], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5608 shl[Byte] 127[Byte], -128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5609 shl[compile-time] 127[Byte], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5610 shl[Byte] 127[Byte], -1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5611 shl[compile-time] 127[Byte], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5612 shl[Byte] 127[Byte], 0[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:5613 shl[compile-time] 127[Byte], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5614 shl[Byte] 127[Byte], 1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5615 shl[compile-time] 127[Byte], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5616 shl[Byte] 127[Byte], 127[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5617 shl[compile-time] 127[Byte], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5618 shl[Byte] 127[Byte], 128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5619 shl[compile-time] 127[Byte], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5620 shl[Byte] 127[Byte], 32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5621 shl[compile-time] 127[Byte], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5622 shl[Byte] 128[Byte], -32768[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5623 shl[compile-time] 128[Byte], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5624 shl[Byte] 128[Byte], -32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5625 shl[compile-time] 128[Byte], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5626 shl[Byte] 128[Byte], -129[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5627 shl[compile-time] 128[Byte], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5628 shl[Byte] 128[Byte], -128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5629 shl[compile-time] 128[Byte], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5630 shl[Byte] 128[Byte], -1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5631 shl[compile-time] 128[Byte], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5632 shl[Byte] 128[Byte], 0[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:5633 shl[compile-time] 128[Byte], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5634 shl[Byte] 128[Byte], 1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5635 shl[compile-time] 128[Byte], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5636 shl[Byte] 128[Byte], 127[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5637 shl[compile-time] 128[Byte], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5638 shl[Byte] 128[Byte], 128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5639 shl[compile-time] 128[Byte], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5640 shl[Byte] 128[Byte], 32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5641 shl[compile-time] 128[Byte], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5642 shl[Byte] 255[Byte], -32768[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5643 shl[compile-time] 255[Byte], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5644 shl[Byte] 255[Byte], -32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5645 shl[compile-time] 255[Byte], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5646 shl[Byte] 255[Byte], -129[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5647 shl[compile-time] 255[Byte], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5648 shl[Byte] 255[Byte], -128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5649 shl[compile-time] 255[Byte], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5650 shl[Byte] 255[Byte], -1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5651 shl[compile-time] 255[Byte], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5652 shl[Byte] 255[Byte], 0[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:5653 shl[compile-time] 255[Byte], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5654 shl[Byte] 255[Byte], 1[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5655 shl[compile-time] 255[Byte], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5656 shl[Byte] 255[Byte], 127[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5657 shl[compile-time] 255[Byte], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5658 shl[Byte] 255[Byte], 128[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5659 shl[compile-time] 255[Byte], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5660 shl[Byte] 255[Byte], 32767[Integer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5661 shl[compile-time] 255[Byte], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5662 shl[Byte] 0[Byte], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5663 shl[compile-time] 0[Byte], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5664 shl[Byte] 0[Byte], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5665 shl[compile-time] 0[Byte], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5666 shl[Byte] 0[Byte], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5667 shl[compile-time] 0[Byte], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5668 shl[Byte] 0[Byte], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5669 shl[compile-time] 0[Byte], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5670 shl[Byte] 0[Byte], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5671 shl[compile-time] 0[Byte], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5672 shl[Byte] 0[Byte], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5673 shl[compile-time] 0[Byte], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5674 shl[Byte] 0[Byte], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5675 shl[compile-time] 0[Byte], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5676 shl[Byte] 0[Byte], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5677 shl[compile-time] 0[Byte], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5678 shl[Byte] 0[Byte], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5679 shl[compile-time] 0[Byte], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5680 shl[Byte] 0[Byte], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5681 shl[compile-time] 0[Byte], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5682 shl[Byte] 1[Byte], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5683 shl[compile-time] 1[Byte], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5684 shl[Byte] 1[Byte], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5685 shl[compile-time] 1[Byte], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5686 shl[Byte] 1[Byte], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5687 shl[compile-time] 1[Byte], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5688 shl[Byte] 1[Byte], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5689 shl[compile-time] 1[Byte], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5690 shl[Byte] 1[Byte], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5691 shl[compile-time] 1[Byte], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5692 shl[Byte] 1[Byte], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:5693 shl[compile-time] 1[Byte], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5694 shl[Byte] 1[Byte], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:5695 shl[compile-time] 1[Byte], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5696 shl[Byte] 1[Byte], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5697 shl[compile-time] 1[Byte], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5698 shl[Byte] 1[Byte], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5699 shl[compile-time] 1[Byte], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5700 shl[Byte] 1[Byte], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5701 shl[compile-time] 1[Byte], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5702 shl[Byte] 127[Byte], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5703 shl[compile-time] 127[Byte], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5704 shl[Byte] 127[Byte], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5705 shl[compile-time] 127[Byte], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5706 shl[Byte] 127[Byte], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5707 shl[compile-time] 127[Byte], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5708 shl[Byte] 127[Byte], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5709 shl[compile-time] 127[Byte], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5710 shl[Byte] 127[Byte], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5711 shl[compile-time] 127[Byte], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5712 shl[Byte] 127[Byte], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:5713 shl[compile-time] 127[Byte], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5714 shl[Byte] 127[Byte], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:5715 shl[compile-time] 127[Byte], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5716 shl[Byte] 127[Byte], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5717 shl[compile-time] 127[Byte], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5718 shl[Byte] 127[Byte], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5719 shl[compile-time] 127[Byte], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5720 shl[Byte] 127[Byte], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5721 shl[compile-time] 127[Byte], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5722 shl[Byte] 128[Byte], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5723 shl[compile-time] 128[Byte], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5724 shl[Byte] 128[Byte], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5725 shl[compile-time] 128[Byte], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5726 shl[Byte] 128[Byte], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5727 shl[compile-time] 128[Byte], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5728 shl[Byte] 128[Byte], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5729 shl[compile-time] 128[Byte], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5730 shl[Byte] 128[Byte], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5731 shl[compile-time] 128[Byte], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5732 shl[Byte] 128[Byte], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:5733 shl[compile-time] 128[Byte], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5734 shl[Byte] 128[Byte], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5735 shl[compile-time] 128[Byte], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5736 shl[Byte] 128[Byte], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5737 shl[compile-time] 128[Byte], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5738 shl[Byte] 128[Byte], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5739 shl[compile-time] 128[Byte], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5740 shl[Byte] 128[Byte], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5741 shl[compile-time] 128[Byte], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5742 shl[Byte] 255[Byte], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5743 shl[compile-time] 255[Byte], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:5744 shl[Byte] 255[Byte], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5745 shl[compile-time] 255[Byte], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:5746 shl[Byte] 255[Byte], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5747 shl[compile-time] 255[Byte], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:5748 shl[Byte] 255[Byte], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5749 shl[compile-time] 255[Byte], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:5750 shl[Byte] 255[Byte], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5751 shl[compile-time] 255[Byte], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:5752 shl[Byte] 255[Byte], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:5753 shl[compile-time] 255[Byte], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5754 shl[Byte] 255[Byte], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:5755 shl[compile-time] 255[Byte], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5756 shl[Byte] 255[Byte], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5757 shl[compile-time] 255[Byte], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5758 shl[Byte] 255[Byte], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5759 shl[compile-time] 255[Byte], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5760 shl[Byte] 255[Byte], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5761 shl[compile-time] 255[Byte], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:5762 shl[Byte] 0[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5763 shl[compile-time] 0[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5764 shl[Byte] 0[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5765 shl[compile-time] 0[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5766 shl[Byte] 0[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5767 shl[compile-time] 0[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5768 shl[Byte] 0[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5769 shl[compile-time] 0[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5770 shl[Byte] 0[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5771 shl[compile-time] 0[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5772 shl[Byte] 1[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:5773 shl[compile-time] 1[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5774 shl[Byte] 1[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 2

code auto:5775 shl[compile-time] 1[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5776 shl[Byte] 1[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5777 shl[compile-time] 1[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5778 shl[Byte] 1[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5779 shl[compile-time] 1[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5780 shl[Byte] 1[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5781 shl[compile-time] 1[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5782 shl[Byte] 127[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:5783 shl[compile-time] 127[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5784 shl[Byte] 127[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5785 shl[compile-time] 127[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 1;
endcode
compile error

$overflow on
code auto:5786 shl[Byte] 127[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5787 shl[compile-time] 127[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5788 shl[Byte] 127[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5789 shl[compile-time] 127[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5790 shl[Byte] 127[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5791 shl[compile-time] 127[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5792 shl[Byte] 128[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5793 shl[compile-time] 128[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:5794 shl[Byte] 128[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5795 shl[compile-time] 128[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5796 shl[Byte] 128[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5797 shl[compile-time] 128[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5798 shl[Byte] 128[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5799 shl[compile-time] 128[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5800 shl[Byte] 128[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5801 shl[compile-time] 128[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5802 shl[Byte] 255[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5803 shl[compile-time] 255[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:5804 shl[Byte] 255[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:5805 shl[compile-time] 255[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5806 shl[Byte] 255[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5807 shl[compile-time] 255[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5808 shl[Byte] 255[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5809 shl[compile-time] 255[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5810 shl[Byte] 255[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:5811 shl[compile-time] 255[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5812 shl[Byte] 0[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5813 shl[compile-time] 0[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5814 shl[Byte] 0[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5815 shl[compile-time] 0[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5816 shl[Byte] 0[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5817 shl[compile-time] 0[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5818 shl[Byte] 0[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5819 shl[compile-time] 0[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5820 shl[Byte] 0[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5821 shl[compile-time] 0[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5822 shl[Byte] 1[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:5823 shl[compile-time] 1[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5824 shl[Byte] 1[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 2

code auto:5825 shl[compile-time] 1[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5826 shl[Byte] 1[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5827 shl[compile-time] 1[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5828 shl[Byte] 1[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5829 shl[compile-time] 1[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5830 shl[Byte] 1[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5831 shl[compile-time] 1[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5832 shl[Byte] 127[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:5833 shl[compile-time] 127[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5834 shl[Byte] 127[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5835 shl[compile-time] 127[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5836 shl[Byte] 127[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5837 shl[compile-time] 127[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5838 shl[Byte] 127[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5839 shl[compile-time] 127[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5840 shl[Byte] 127[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5841 shl[compile-time] 127[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5842 shl[Byte] 128[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:5843 shl[compile-time] 128[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5844 shl[Byte] 128[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5845 shl[compile-time] 128[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5846 shl[Byte] 128[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5847 shl[compile-time] 128[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5848 shl[Byte] 128[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5849 shl[compile-time] 128[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5850 shl[Byte] 128[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5851 shl[compile-time] 128[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5852 shl[Byte] 255[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:5853 shl[compile-time] 255[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5854 shl[Byte] 255[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 254

code auto:5855 shl[compile-time] 255[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5856 shl[Byte] 255[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5857 shl[compile-time] 255[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5858 shl[Byte] 255[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5859 shl[compile-time] 255[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5860 shl[Byte] 255[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:5861 shl[compile-time] 255[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5862 shl[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5863 shl[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5864 shl[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5865 shl[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5866 shl[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5867 shl[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5868 shl[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5869 shl[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5870 shl[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5871 shl[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5872 shl[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:5873 shl[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5874 shl[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 2

code auto:5875 shl[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5876 shl[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5877 shl[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5878 shl[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5879 shl[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5880 shl[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5881 shl[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5882 shl[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:5883 shl[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5884 shl[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5885 shl[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5886 shl[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5887 shl[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5888 shl[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5889 shl[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5890 shl[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5891 shl[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5892 shl[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:5893 shl[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5894 shl[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5895 shl[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 1;
endcode
compile error

$overflow on
code auto:5896 shl[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5897 shl[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5898 shl[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5899 shl[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5900 shl[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5901 shl[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5902 shl[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:5903 shl[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5904 shl[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 254

code auto:5905 shl[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:5906 shl[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5907 shl[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5908 shl[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5909 shl[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5910 shl[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:5911 shl[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5912 shl[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5913 shl[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5914 shl[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5915 shl[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5916 shl[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5917 shl[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5918 shl[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5919 shl[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5920 shl[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5921 shl[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5922 shl[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:5923 shl[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5924 shl[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 2

code auto:5925 shl[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5926 shl[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5927 shl[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5928 shl[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5929 shl[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5930 shl[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5931 shl[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5932 shl[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:5933 shl[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5934 shl[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5935 shl[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5936 shl[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5937 shl[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5938 shl[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5939 shl[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5940 shl[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5941 shl[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5942 shl[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:5943 shl[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5944 shl[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5945 shl[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5946 shl[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5947 shl[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5948 shl[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5949 shl[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5950 shl[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5951 shl[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5952 shl[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:5953 shl[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:5954 shl[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 254

code auto:5955 shl[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:5956 shl[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5957 shl[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5958 shl[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5959 shl[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5960 shl[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:5961 shl[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5962 shl[Byte] 0[Byte], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5963 shl[compile-time] 0[Byte], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:5964 shl[Byte] 0[Byte], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5965 shl[compile-time] 0[Byte], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:5966 shl[Byte] 0[Byte], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5967 shl[compile-time] 0[Byte], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5968 shl[Byte] 0[Byte], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5969 shl[compile-time] 0[Byte], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5970 shl[Byte] 0[Byte], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5971 shl[compile-time] 0[Byte], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5972 shl[Byte] 1[Byte], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:5973 shl[compile-time] 1[Byte], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:5974 shl[Byte] 1[Byte], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 2

code auto:5975 shl[compile-time] 1[Byte], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 1;
endcode
varvalue r 2

$overflow on
code auto:5976 shl[Byte] 1[Byte], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5977 shl[compile-time] 1[Byte], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5978 shl[Byte] 1[Byte], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5979 shl[compile-time] 1[Byte], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5980 shl[Byte] 1[Byte], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5981 shl[compile-time] 1[Byte], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5982 shl[Byte] 127[Byte], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:5983 shl[compile-time] 127[Byte], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:5984 shl[Byte] 127[Byte], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:5985 shl[compile-time] 127[Byte], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 1;
endcode
varvalue r 254

$overflow on
code auto:5986 shl[Byte] 127[Byte], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5987 shl[compile-time] 127[Byte], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5988 shl[Byte] 127[Byte], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5989 shl[compile-time] 127[Byte], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 128;
endcode
varvalue r 0

$overflow on
code auto:5990 shl[Byte] 127[Byte], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5991 shl[compile-time] 127[Byte], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:5992 shl[Byte] 128[Byte], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:5993 shl[compile-time] 128[Byte], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:5994 shl[Byte] 128[Byte], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5995 shl[compile-time] 128[Byte], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 1;
endcode
varvalue r 256

$overflow on
code auto:5996 shl[Byte] 128[Byte], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5997 shl[compile-time] 128[Byte], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 127;
endcode
varvalue r 0

$overflow on
code auto:5998 shl[Byte] 128[Byte], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:5999 shl[compile-time] 128[Byte], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6000 shl[Byte] 128[Byte], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6001 shl[compile-time] 128[Byte], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6002 shl[Byte] 255[Byte], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:6003 shl[compile-time] 255[Byte], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6004 shl[Byte] 255[Byte], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 254

code auto:6005 shl[compile-time] 255[Byte], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:6006 shl[Byte] 255[Byte], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6007 shl[compile-time] 255[Byte], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6008 shl[Byte] 255[Byte], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6009 shl[compile-time] 255[Byte], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6010 shl[Byte] 255[Byte], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6011 shl[compile-time] 255[Byte], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6012 shl[Byte] 0[Byte], 0[Word] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6013 shl[compile-time] 0[Byte], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6014 shl[Byte] 0[Byte], 255[Word] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6015 shl[compile-time] 0[Byte], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6016 shl[Byte] 0[Byte], 32767[Word] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6017 shl[compile-time] 0[Byte], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6018 shl[Byte] 0[Byte], 32768[Word] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6019 shl[compile-time] 0[Byte], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6020 shl[Byte] 0[Byte], 65535[Word] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6021 shl[compile-time] 0[Byte], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6022 shl[Byte] 1[Byte], 0[Word] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:6023 shl[compile-time] 1[Byte], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6024 shl[Byte] 1[Byte], 255[Word] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6025 shl[compile-time] 1[Byte], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6026 shl[Byte] 1[Byte], 32767[Word] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6027 shl[compile-time] 1[Byte], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6028 shl[Byte] 1[Byte], 32768[Word] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6029 shl[compile-time] 1[Byte], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6030 shl[Byte] 1[Byte], 65535[Word] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6031 shl[compile-time] 1[Byte], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6032 shl[Byte] 127[Byte], 0[Word] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:6033 shl[compile-time] 127[Byte], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6034 shl[Byte] 127[Byte], 255[Word] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6035 shl[compile-time] 127[Byte], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6036 shl[Byte] 127[Byte], 32767[Word] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6037 shl[compile-time] 127[Byte], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6038 shl[Byte] 127[Byte], 32768[Word] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6039 shl[compile-time] 127[Byte], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6040 shl[Byte] 127[Byte], 65535[Word] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6041 shl[compile-time] 127[Byte], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6042 shl[Byte] 128[Byte], 0[Word] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6043 shl[compile-time] 128[Byte], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:6044 shl[Byte] 128[Byte], 255[Word] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6045 shl[compile-time] 128[Byte], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6046 shl[Byte] 128[Byte], 32767[Word] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6047 shl[compile-time] 128[Byte], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6048 shl[Byte] 128[Byte], 32768[Word] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6049 shl[compile-time] 128[Byte], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6050 shl[Byte] 128[Byte], 65535[Word] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6051 shl[compile-time] 128[Byte], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6052 shl[Byte] 255[Byte], 0[Word] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6053 shl[compile-time] 255[Byte], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:6054 shl[Byte] 255[Byte], 255[Word] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6055 shl[compile-time] 255[Byte], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6056 shl[Byte] 255[Byte], 32767[Word] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6057 shl[compile-time] 255[Byte], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6058 shl[Byte] 255[Byte], 32768[Word] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6059 shl[compile-time] 255[Byte], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6060 shl[Byte] 255[Byte], 65535[Word] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6061 shl[compile-time] 255[Byte], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6062 shl[Byte] 0[Byte], 0[Word] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6063 shl[compile-time] 0[Byte], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6064 shl[Byte] 0[Byte], 255[Word] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6065 shl[compile-time] 0[Byte], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6066 shl[Byte] 0[Byte], 32767[Word] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6067 shl[compile-time] 0[Byte], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6068 shl[Byte] 0[Byte], 32768[Word] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6069 shl[compile-time] 0[Byte], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6070 shl[Byte] 0[Byte], 65535[Word] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6071 shl[compile-time] 0[Byte], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6072 shl[Byte] 1[Byte], 0[Word] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:6073 shl[compile-time] 1[Byte], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6074 shl[Byte] 1[Byte], 255[Word] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6075 shl[compile-time] 1[Byte], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6076 shl[Byte] 1[Byte], 32767[Word] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6077 shl[compile-time] 1[Byte], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6078 shl[Byte] 1[Byte], 32768[Word] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6079 shl[compile-time] 1[Byte], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6080 shl[Byte] 1[Byte], 65535[Word] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6081 shl[compile-time] 1[Byte], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6082 shl[Byte] 127[Byte], 0[Word] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:6083 shl[compile-time] 127[Byte], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6084 shl[Byte] 127[Byte], 255[Word] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6085 shl[compile-time] 127[Byte], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6086 shl[Byte] 127[Byte], 32767[Word] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6087 shl[compile-time] 127[Byte], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6088 shl[Byte] 127[Byte], 32768[Word] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6089 shl[compile-time] 127[Byte], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6090 shl[Byte] 127[Byte], 65535[Word] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6091 shl[compile-time] 127[Byte], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6092 shl[Byte] 128[Byte], 0[Word] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:6093 shl[compile-time] 128[Byte], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6094 shl[Byte] 128[Byte], 255[Word] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6095 shl[compile-time] 128[Byte], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6096 shl[Byte] 128[Byte], 32767[Word] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6097 shl[compile-time] 128[Byte], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6098 shl[Byte] 128[Byte], 32768[Word] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6099 shl[compile-time] 128[Byte], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6100 shl[Byte] 128[Byte], 65535[Word] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6101 shl[compile-time] 128[Byte], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6102 shl[Byte] 255[Byte], 0[Word] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:6103 shl[compile-time] 255[Byte], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6104 shl[Byte] 255[Byte], 255[Word] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6105 shl[compile-time] 255[Byte], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6106 shl[Byte] 255[Byte], 32767[Word] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6107 shl[compile-time] 255[Byte], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6108 shl[Byte] 255[Byte], 32768[Word] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6109 shl[compile-time] 255[Byte], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6110 shl[Byte] 255[Byte], 65535[Word] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6111 shl[compile-time] 255[Byte], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6112 shl[Byte] 0[Byte], 0[Word] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6113 shl[compile-time] 0[Byte], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6114 shl[Byte] 0[Byte], 255[Word] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6115 shl[compile-time] 0[Byte], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6116 shl[Byte] 0[Byte], 32767[Word] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6117 shl[compile-time] 0[Byte], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6118 shl[Byte] 0[Byte], 32768[Word] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6119 shl[compile-time] 0[Byte], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6120 shl[Byte] 0[Byte], 65535[Word] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6121 shl[compile-time] 0[Byte], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6122 shl[Byte] 1[Byte], 0[Word] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:6123 shl[compile-time] 1[Byte], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6124 shl[Byte] 1[Byte], 255[Word] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6125 shl[compile-time] 1[Byte], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6126 shl[Byte] 1[Byte], 32767[Word] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6127 shl[compile-time] 1[Byte], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6128 shl[Byte] 1[Byte], 32768[Word] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6129 shl[compile-time] 1[Byte], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6130 shl[Byte] 1[Byte], 65535[Word] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6131 shl[compile-time] 1[Byte], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6132 shl[Byte] 127[Byte], 0[Word] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:6133 shl[compile-time] 127[Byte], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6134 shl[Byte] 127[Byte], 255[Word] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6135 shl[compile-time] 127[Byte], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6136 shl[Byte] 127[Byte], 32767[Word] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6137 shl[compile-time] 127[Byte], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6138 shl[Byte] 127[Byte], 32768[Word] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6139 shl[compile-time] 127[Byte], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6140 shl[Byte] 127[Byte], 65535[Word] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6141 shl[compile-time] 127[Byte], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6142 shl[Byte] 128[Byte], 0[Word] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:6143 shl[compile-time] 128[Byte], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6144 shl[Byte] 128[Byte], 255[Word] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6145 shl[compile-time] 128[Byte], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6146 shl[Byte] 128[Byte], 32767[Word] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6147 shl[compile-time] 128[Byte], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6148 shl[Byte] 128[Byte], 32768[Word] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6149 shl[compile-time] 128[Byte], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6150 shl[Byte] 128[Byte], 65535[Word] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6151 shl[compile-time] 128[Byte], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6152 shl[Byte] 255[Byte], 0[Word] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:6153 shl[compile-time] 255[Byte], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6154 shl[Byte] 255[Byte], 255[Word] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6155 shl[compile-time] 255[Byte], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6156 shl[Byte] 255[Byte], 32767[Word] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6157 shl[compile-time] 255[Byte], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6158 shl[Byte] 255[Byte], 32768[Word] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6159 shl[compile-time] 255[Byte], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6160 shl[Byte] 255[Byte], 65535[Word] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6161 shl[compile-time] 255[Byte], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6162 shl[Byte] 0[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6163 shl[compile-time] 0[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6164 shl[Byte] 0[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6165 shl[compile-time] 0[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6166 shl[Byte] 0[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6167 shl[compile-time] 0[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6168 shl[Byte] 0[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6169 shl[compile-time] 0[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6170 shl[Byte] 0[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6171 shl[compile-time] 0[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6172 shl[Byte] 1[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:6173 shl[compile-time] 1[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6174 shl[Byte] 1[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6175 shl[compile-time] 1[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6176 shl[Byte] 1[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6177 shl[compile-time] 1[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6178 shl[Byte] 1[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6179 shl[compile-time] 1[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6180 shl[Byte] 1[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6181 shl[compile-time] 1[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6182 shl[Byte] 127[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:6183 shl[compile-time] 127[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6184 shl[Byte] 127[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6185 shl[compile-time] 127[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6186 shl[Byte] 127[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6187 shl[compile-time] 127[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6188 shl[Byte] 127[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6189 shl[compile-time] 127[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6190 shl[Byte] 127[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6191 shl[compile-time] 127[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6192 shl[Byte] 128[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:6193 shl[compile-time] 128[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6194 shl[Byte] 128[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6195 shl[compile-time] 128[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6196 shl[Byte] 128[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6197 shl[compile-time] 128[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6198 shl[Byte] 128[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6199 shl[compile-time] 128[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6200 shl[Byte] 128[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6201 shl[compile-time] 128[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6202 shl[Byte] 255[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:6203 shl[compile-time] 255[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6204 shl[Byte] 255[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6205 shl[compile-time] 255[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6206 shl[Byte] 255[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6207 shl[compile-time] 255[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6208 shl[Byte] 255[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6209 shl[compile-time] 255[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6210 shl[Byte] 255[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6211 shl[compile-time] 255[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6212 shl[Byte] 0[Byte], 0[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6213 shl[compile-time] 0[Byte], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6214 shl[Byte] 0[Byte], 255[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6215 shl[compile-time] 0[Byte], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6216 shl[Byte] 0[Byte], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6217 shl[compile-time] 0[Byte], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6218 shl[Byte] 0[Byte], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6219 shl[compile-time] 0[Byte], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6220 shl[Byte] 0[Byte], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6221 shl[compile-time] 0[Byte], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6222 shl[Byte] 1[Byte], 0[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:6223 shl[compile-time] 1[Byte], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6224 shl[Byte] 1[Byte], 255[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6225 shl[compile-time] 1[Byte], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6226 shl[Byte] 1[Byte], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6227 shl[compile-time] 1[Byte], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6228 shl[Byte] 1[Byte], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6229 shl[compile-time] 1[Byte], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6230 shl[Byte] 1[Byte], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6231 shl[compile-time] 1[Byte], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6232 shl[Byte] 127[Byte], 0[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:6233 shl[compile-time] 127[Byte], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6234 shl[Byte] 127[Byte], 255[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6235 shl[compile-time] 127[Byte], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6236 shl[Byte] 127[Byte], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6237 shl[compile-time] 127[Byte], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6238 shl[Byte] 127[Byte], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6239 shl[compile-time] 127[Byte], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6240 shl[Byte] 127[Byte], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6241 shl[compile-time] 127[Byte], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6242 shl[Byte] 128[Byte], 0[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:6243 shl[compile-time] 128[Byte], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6244 shl[Byte] 128[Byte], 255[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6245 shl[compile-time] 128[Byte], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6246 shl[Byte] 128[Byte], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6247 shl[compile-time] 128[Byte], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6248 shl[Byte] 128[Byte], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6249 shl[compile-time] 128[Byte], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6250 shl[Byte] 128[Byte], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6251 shl[compile-time] 128[Byte], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6252 shl[Byte] 255[Byte], 0[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:6253 shl[compile-time] 255[Byte], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6254 shl[Byte] 255[Byte], 255[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6255 shl[compile-time] 255[Byte], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6256 shl[Byte] 255[Byte], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6257 shl[compile-time] 255[Byte], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6258 shl[Byte] 255[Byte], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6259 shl[compile-time] 255[Byte], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6260 shl[Byte] 255[Byte], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6261 shl[compile-time] 255[Byte], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6262 shl[Byte] 0[Byte], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6263 shl[compile-time] 0[Byte], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6264 shl[Byte] 0[Byte], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6265 shl[compile-time] 0[Byte], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6266 shl[Byte] 0[Byte], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6267 shl[compile-time] 0[Byte], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6268 shl[Byte] 0[Byte], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6269 shl[compile-time] 0[Byte], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6270 shl[Byte] 0[Byte], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6271 shl[compile-time] 0[Byte], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6272 shl[Byte] 1[Byte], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 1

code auto:6273 shl[compile-time] 1[Byte], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6274 shl[Byte] 1[Byte], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6275 shl[compile-time] 1[Byte], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6276 shl[Byte] 1[Byte], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6277 shl[compile-time] 1[Byte], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6278 shl[Byte] 1[Byte], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6279 shl[compile-time] 1[Byte], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6280 shl[Byte] 1[Byte], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6281 shl[compile-time] 1[Byte], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6282 shl[Byte] 127[Byte], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 127

code auto:6283 shl[compile-time] 127[Byte], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6284 shl[Byte] 127[Byte], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6285 shl[compile-time] 127[Byte], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6286 shl[Byte] 127[Byte], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6287 shl[compile-time] 127[Byte], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6288 shl[Byte] 127[Byte], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6289 shl[compile-time] 127[Byte], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6290 shl[Byte] 127[Byte], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6291 shl[compile-time] 127[Byte], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6292 shl[Byte] 128[Byte], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6293 shl[compile-time] 128[Byte], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 0;
endcode
compile error

$overflow on
code auto:6294 shl[Byte] 128[Byte], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6295 shl[compile-time] 128[Byte], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6296 shl[Byte] 128[Byte], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6297 shl[compile-time] 128[Byte], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6298 shl[Byte] 128[Byte], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6299 shl[compile-time] 128[Byte], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6300 shl[Byte] 128[Byte], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6301 shl[compile-time] 128[Byte], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6302 shl[Byte] 255[Byte], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6303 shl[compile-time] 255[Byte], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:6304 shl[Byte] 255[Byte], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6305 shl[compile-time] 255[Byte], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6306 shl[Byte] 255[Byte], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6307 shl[compile-time] 255[Byte], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6308 shl[Byte] 255[Byte], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6309 shl[compile-time] 255[Byte], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6310 shl[Byte] 255[Byte], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6311 shl[compile-time] 255[Byte], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6312 shl[Byte] 0[Byte], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6313 shl[compile-time] 0[Byte], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6314 shl[Byte] 0[Byte], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6315 shl[compile-time] 0[Byte], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6316 shl[Byte] 0[Byte], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6317 shl[compile-time] 0[Byte], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6318 shl[Byte] 0[Byte], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6319 shl[compile-time] 0[Byte], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6320 shl[Byte] 0[Byte], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6321 shl[compile-time] 0[Byte], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6322 shl[Byte] 1[Byte], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 1

code auto:6323 shl[compile-time] 1[Byte], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6324 shl[Byte] 1[Byte], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6325 shl[compile-time] 1[Byte], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6326 shl[Byte] 1[Byte], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6327 shl[compile-time] 1[Byte], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6328 shl[Byte] 1[Byte], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6329 shl[compile-time] 1[Byte], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6330 shl[Byte] 1[Byte], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6331 shl[compile-time] 1[Byte], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6332 shl[Byte] 127[Byte], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 127

code auto:6333 shl[compile-time] 127[Byte], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6334 shl[Byte] 127[Byte], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6335 shl[compile-time] 127[Byte], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6336 shl[Byte] 127[Byte], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6337 shl[compile-time] 127[Byte], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6338 shl[Byte] 127[Byte], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6339 shl[compile-time] 127[Byte], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6340 shl[Byte] 127[Byte], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6341 shl[compile-time] 127[Byte], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6342 shl[Byte] 128[Byte], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 128

code auto:6343 shl[compile-time] 128[Byte], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6344 shl[Byte] 128[Byte], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6345 shl[compile-time] 128[Byte], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6346 shl[Byte] 128[Byte], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6347 shl[compile-time] 128[Byte], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6348 shl[Byte] 128[Byte], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6349 shl[compile-time] 128[Byte], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6350 shl[Byte] 128[Byte], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6351 shl[compile-time] 128[Byte], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6352 shl[Byte] 255[Byte], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:6353 shl[compile-time] 255[Byte], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6354 shl[Byte] 255[Byte], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6355 shl[compile-time] 255[Byte], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6356 shl[Byte] 255[Byte], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6357 shl[compile-time] 255[Byte], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6358 shl[Byte] 255[Byte], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6359 shl[compile-time] 255[Byte], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6360 shl[Byte] 255[Byte], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6361 shl[compile-time] 255[Byte], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6362 shl[Byte] 0[Byte], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6363 shl[compile-time] 0[Byte], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6364 shl[Byte] 0[Byte], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6365 shl[compile-time] 0[Byte], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6366 shl[Byte] 0[Byte], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6367 shl[compile-time] 0[Byte], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6368 shl[Byte] 0[Byte], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6369 shl[compile-time] 0[Byte], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6370 shl[Byte] 0[Byte], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6371 shl[compile-time] 0[Byte], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6372 shl[Byte] 1[Byte], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 1

code auto:6373 shl[compile-time] 1[Byte], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6374 shl[Byte] 1[Byte], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6375 shl[compile-time] 1[Byte], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6376 shl[Byte] 1[Byte], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6377 shl[compile-time] 1[Byte], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6378 shl[Byte] 1[Byte], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6379 shl[compile-time] 1[Byte], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6380 shl[Byte] 1[Byte], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6381 shl[compile-time] 1[Byte], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6382 shl[Byte] 127[Byte], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 127

code auto:6383 shl[compile-time] 127[Byte], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6384 shl[Byte] 127[Byte], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6385 shl[compile-time] 127[Byte], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6386 shl[Byte] 127[Byte], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6387 shl[compile-time] 127[Byte], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6388 shl[Byte] 127[Byte], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6389 shl[compile-time] 127[Byte], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6390 shl[Byte] 127[Byte], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6391 shl[compile-time] 127[Byte], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6392 shl[Byte] 128[Byte], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 128

code auto:6393 shl[compile-time] 128[Byte], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6394 shl[Byte] 128[Byte], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6395 shl[compile-time] 128[Byte], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6396 shl[Byte] 128[Byte], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6397 shl[compile-time] 128[Byte], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6398 shl[Byte] 128[Byte], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6399 shl[compile-time] 128[Byte], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6400 shl[Byte] 128[Byte], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6401 shl[compile-time] 128[Byte], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6402 shl[Byte] 255[Byte], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:6403 shl[compile-time] 255[Byte], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6404 shl[Byte] 255[Byte], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6405 shl[compile-time] 255[Byte], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6406 shl[Byte] 255[Byte], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6407 shl[compile-time] 255[Byte], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6408 shl[Byte] 255[Byte], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6409 shl[compile-time] 255[Byte], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6410 shl[Byte] 255[Byte], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6411 shl[compile-time] 255[Byte], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6412 shl[Byte] 0[Byte], 0[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6413 shl[compile-time] 0[Byte], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6414 shl[Byte] 0[Byte], 255[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6415 shl[compile-time] 0[Byte], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6416 shl[Byte] 0[Byte], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6417 shl[compile-time] 0[Byte], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6418 shl[Byte] 0[Byte], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6419 shl[compile-time] 0[Byte], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6420 shl[Byte] 0[Byte], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6421 shl[compile-time] 0[Byte], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6422 shl[Byte] 1[Byte], 0[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 1

code auto:6423 shl[compile-time] 1[Byte], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6424 shl[Byte] 1[Byte], 255[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6425 shl[compile-time] 1[Byte], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6426 shl[Byte] 1[Byte], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6427 shl[compile-time] 1[Byte], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6428 shl[Byte] 1[Byte], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6429 shl[compile-time] 1[Byte], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6430 shl[Byte] 1[Byte], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6431 shl[compile-time] 1[Byte], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6432 shl[Byte] 127[Byte], 0[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 127

code auto:6433 shl[compile-time] 127[Byte], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6434 shl[Byte] 127[Byte], 255[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6435 shl[compile-time] 127[Byte], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6436 shl[Byte] 127[Byte], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6437 shl[compile-time] 127[Byte], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6438 shl[Byte] 127[Byte], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6439 shl[compile-time] 127[Byte], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6440 shl[Byte] 127[Byte], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6441 shl[compile-time] 127[Byte], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6442 shl[Byte] 128[Byte], 0[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 128

code auto:6443 shl[compile-time] 128[Byte], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6444 shl[Byte] 128[Byte], 255[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6445 shl[compile-time] 128[Byte], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6446 shl[Byte] 128[Byte], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6447 shl[compile-time] 128[Byte], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6448 shl[Byte] 128[Byte], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6449 shl[compile-time] 128[Byte], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6450 shl[Byte] 128[Byte], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6451 shl[compile-time] 128[Byte], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6452 shl[Byte] 255[Byte], 0[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:6453 shl[compile-time] 255[Byte], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6454 shl[Byte] 255[Byte], 255[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6455 shl[compile-time] 255[Byte], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6456 shl[Byte] 255[Byte], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6457 shl[compile-time] 255[Byte], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6458 shl[Byte] 255[Byte], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6459 shl[compile-time] 255[Byte], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6460 shl[Byte] 255[Byte], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6461 shl[compile-time] 255[Byte], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6462 shl[Byte] 0[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6463 shl[compile-time] 0[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6464 shl[Byte] 0[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6465 shl[compile-time] 0[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6466 shl[Byte] 0[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6467 shl[compile-time] 0[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6468 shl[Byte] 0[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6469 shl[compile-time] 0[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6470 shl[Byte] 0[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6471 shl[compile-time] 0[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6472 shl[Byte] 1[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 1

code auto:6473 shl[compile-time] 1[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 0;
endcode
varvalue r 1

$overflow on
code auto:6474 shl[Byte] 1[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6475 shl[compile-time] 1[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6476 shl[Byte] 1[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6477 shl[compile-time] 1[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6478 shl[Byte] 1[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6479 shl[compile-time] 1[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6480 shl[Byte] 1[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6481 shl[compile-time] 1[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6482 shl[Byte] 127[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 127

code auto:6483 shl[compile-time] 127[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 0;
endcode
varvalue r 127

$overflow on
code auto:6484 shl[Byte] 127[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6485 shl[compile-time] 127[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6486 shl[Byte] 127[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6487 shl[compile-time] 127[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6488 shl[Byte] 127[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6489 shl[compile-time] 127[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6490 shl[Byte] 127[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6491 shl[compile-time] 127[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6492 shl[Byte] 128[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 128

code auto:6493 shl[compile-time] 128[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 0;
endcode
varvalue r 128

$overflow on
code auto:6494 shl[Byte] 128[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6495 shl[compile-time] 128[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6496 shl[Byte] 128[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6497 shl[compile-time] 128[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6498 shl[Byte] 128[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6499 shl[compile-time] 128[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6500 shl[Byte] 128[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6501 shl[compile-time] 128[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6502 shl[Byte] 255[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:6503 shl[compile-time] 255[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6504 shl[Byte] 255[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6505 shl[compile-time] 255[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:6506 shl[Byte] 255[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6507 shl[compile-time] 255[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6508 shl[Byte] 255[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6509 shl[compile-time] 255[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:6510 shl[Byte] 255[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6511 shl[compile-time] 255[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:6512 shl[Word] 0[Word], -128[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6513 shl[compile-time] 0[Word], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6514 shl[Word] 0[Word], -127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6515 shl[compile-time] 0[Word], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6516 shl[Word] 0[Word], -1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6517 shl[compile-time] 0[Word], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6518 shl[Word] 0[Word], 0[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6519 shl[compile-time] 0[Word], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6520 shl[Word] 0[Word], 1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6521 shl[compile-time] 0[Word], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6522 shl[Word] 0[Word], 127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6523 shl[compile-time] 0[Word], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6524 shl[Word] 255[Word], -128[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6525 shl[compile-time] 255[Word], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6526 shl[Word] 255[Word], -127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6527 shl[compile-time] 255[Word], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6528 shl[Word] 255[Word], -1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6529 shl[compile-time] 255[Word], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6530 shl[Word] 255[Word], 0[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6531 shl[compile-time] 255[Word], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:6532 shl[Word] 255[Word], 1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6533 shl[compile-time] 255[Word], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:6534 shl[Word] 255[Word], 127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6535 shl[compile-time] 255[Word], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6536 shl[Word] 32767[Word], -128[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6537 shl[compile-time] 32767[Word], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6538 shl[Word] 32767[Word], -127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6539 shl[compile-time] 32767[Word], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6540 shl[Word] 32767[Word], -1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6541 shl[compile-time] 32767[Word], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6542 shl[Word] 32767[Word], 0[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6543 shl[compile-time] 32767[Word], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:6544 shl[Word] 32767[Word], 1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6545 shl[compile-time] 32767[Word], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:6546 shl[Word] 32767[Word], 127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6547 shl[compile-time] 32767[Word], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6548 shl[Word] 32768[Word], -128[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6549 shl[compile-time] 32768[Word], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6550 shl[Word] 32768[Word], -127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6551 shl[compile-time] 32768[Word], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6552 shl[Word] 32768[Word], -1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6553 shl[compile-time] 32768[Word], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6554 shl[Word] 32768[Word], 0[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6555 shl[compile-time] 32768[Word], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:6556 shl[Word] 32768[Word], 1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6557 shl[compile-time] 32768[Word], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6558 shl[Word] 32768[Word], 127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6559 shl[compile-time] 32768[Word], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6560 shl[Word] 65535[Word], -128[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6561 shl[compile-time] 65535[Word], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6562 shl[Word] 65535[Word], -127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6563 shl[compile-time] 65535[Word], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6564 shl[Word] 65535[Word], -1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6565 shl[compile-time] 65535[Word], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6566 shl[Word] 65535[Word], 0[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6567 shl[compile-time] 65535[Word], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:6568 shl[Word] 65535[Word], 1[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6569 shl[compile-time] 65535[Word], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6570 shl[Word] 65535[Word], 127[Int8] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6571 shl[compile-time] 65535[Word], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6572 shl[Word] 0[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6573 shl[compile-time] 0[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6574 shl[Word] 0[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6575 shl[compile-time] 0[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6576 shl[Word] 0[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6577 shl[compile-time] 0[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6578 shl[Word] 0[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6579 shl[compile-time] 0[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6580 shl[Word] 0[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6581 shl[compile-time] 0[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6582 shl[Word] 0[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6583 shl[compile-time] 0[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6584 shl[Word] 255[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6585 shl[compile-time] 255[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6586 shl[Word] 255[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6587 shl[compile-time] 255[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6588 shl[Word] 255[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6589 shl[compile-time] 255[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6590 shl[Word] 255[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:6591 shl[compile-time] 255[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6592 shl[Word] 255[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:6593 shl[compile-time] 255[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:6594 shl[Word] 255[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6595 shl[compile-time] 255[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6596 shl[Word] 32767[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6597 shl[compile-time] 32767[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6598 shl[Word] 32767[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6599 shl[compile-time] 32767[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6600 shl[Word] 32767[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6601 shl[compile-time] 32767[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6602 shl[Word] 32767[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:6603 shl[compile-time] 32767[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:6604 shl[Word] 32767[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6605 shl[compile-time] 32767[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:6606 shl[Word] 32767[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6607 shl[compile-time] 32767[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6608 shl[Word] 32768[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6609 shl[compile-time] 32768[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6610 shl[Word] 32768[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6611 shl[compile-time] 32768[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6612 shl[Word] 32768[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6613 shl[compile-time] 32768[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6614 shl[Word] 32768[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6615 shl[compile-time] 32768[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:6616 shl[Word] 32768[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6617 shl[compile-time] 32768[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6618 shl[Word] 32768[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6619 shl[compile-time] 32768[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6620 shl[Word] 65535[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6621 shl[compile-time] 65535[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6622 shl[Word] 65535[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6623 shl[compile-time] 65535[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6624 shl[Word] 65535[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6625 shl[compile-time] 65535[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6626 shl[Word] 65535[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6627 shl[compile-time] 65535[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:6628 shl[Word] 65535[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6629 shl[compile-time] 65535[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6630 shl[Word] 65535[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6631 shl[compile-time] 65535[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6632 shl[Word] 0[Word], -128[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6633 shl[compile-time] 0[Word], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6634 shl[Word] 0[Word], -127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6635 shl[compile-time] 0[Word], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6636 shl[Word] 0[Word], -1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6637 shl[compile-time] 0[Word], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6638 shl[Word] 0[Word], 0[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6639 shl[compile-time] 0[Word], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6640 shl[Word] 0[Word], 1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6641 shl[compile-time] 0[Word], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6642 shl[Word] 0[Word], 127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6643 shl[compile-time] 0[Word], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6644 shl[Word] 255[Word], -128[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6645 shl[compile-time] 255[Word], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6646 shl[Word] 255[Word], -127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6647 shl[compile-time] 255[Word], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6648 shl[Word] 255[Word], -1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6649 shl[compile-time] 255[Word], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6650 shl[Word] 255[Word], 0[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:6651 shl[compile-time] 255[Word], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6652 shl[Word] 255[Word], 1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6653 shl[compile-time] 255[Word], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:6654 shl[Word] 255[Word], 127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6655 shl[compile-time] 255[Word], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6656 shl[Word] 32767[Word], -128[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6657 shl[compile-time] 32767[Word], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6658 shl[Word] 32767[Word], -127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6659 shl[compile-time] 32767[Word], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6660 shl[Word] 32767[Word], -1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6661 shl[compile-time] 32767[Word], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6662 shl[Word] 32767[Word], 0[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6663 shl[compile-time] 32767[Word], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:6664 shl[Word] 32767[Word], 1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6665 shl[compile-time] 32767[Word], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:6666 shl[Word] 32767[Word], 127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6667 shl[compile-time] 32767[Word], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6668 shl[Word] 32768[Word], -128[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6669 shl[compile-time] 32768[Word], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6670 shl[Word] 32768[Word], -127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6671 shl[compile-time] 32768[Word], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6672 shl[Word] 32768[Word], -1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6673 shl[compile-time] 32768[Word], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6674 shl[Word] 32768[Word], 0[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6675 shl[compile-time] 32768[Word], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:6676 shl[Word] 32768[Word], 1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6677 shl[compile-time] 32768[Word], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6678 shl[Word] 32768[Word], 127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6679 shl[compile-time] 32768[Word], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6680 shl[Word] 65535[Word], -128[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6681 shl[compile-time] 65535[Word], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6682 shl[Word] 65535[Word], -127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6683 shl[compile-time] 65535[Word], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6684 shl[Word] 65535[Word], -1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6685 shl[compile-time] 65535[Word], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6686 shl[Word] 65535[Word], 0[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6687 shl[compile-time] 65535[Word], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:6688 shl[Word] 65535[Word], 1[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:6689 shl[compile-time] 65535[Word], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6690 shl[Word] 65535[Word], 127[Int8] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:6691 shl[compile-time] 65535[Word], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6692 shl[Word] 0[Word], -128[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6693 shl[compile-time] 0[Word], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6694 shl[Word] 0[Word], -127[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6695 shl[compile-time] 0[Word], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6696 shl[Word] 0[Word], -1[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6697 shl[compile-time] 0[Word], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6698 shl[Word] 0[Word], 0[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6699 shl[compile-time] 0[Word], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6700 shl[Word] 0[Word], 1[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6701 shl[compile-time] 0[Word], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6702 shl[Word] 0[Word], 127[Int8] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6703 shl[compile-time] 0[Word], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6704 shl[Word] 255[Word], -128[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6705 shl[compile-time] 255[Word], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6706 shl[Word] 255[Word], -127[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6707 shl[compile-time] 255[Word], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6708 shl[Word] 255[Word], -1[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6709 shl[compile-time] 255[Word], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6710 shl[Word] 255[Word], 0[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:6711 shl[compile-time] 255[Word], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6712 shl[Word] 255[Word], 1[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:6713 shl[compile-time] 255[Word], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:6714 shl[Word] 255[Word], 127[Int8] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6715 shl[compile-time] 255[Word], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6716 shl[Word] 32767[Word], -128[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6717 shl[compile-time] 32767[Word], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6718 shl[Word] 32767[Word], -127[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6719 shl[compile-time] 32767[Word], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6720 shl[Word] 32767[Word], -1[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6721 shl[compile-time] 32767[Word], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6722 shl[Word] 32767[Word], 0[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:6723 shl[compile-time] 32767[Word], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:6724 shl[Word] 32767[Word], 1[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:6725 shl[compile-time] 32767[Word], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:6726 shl[Word] 32767[Word], 127[Int8] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6727 shl[compile-time] 32767[Word], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6728 shl[Word] 32768[Word], -128[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6729 shl[compile-time] 32768[Word], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6730 shl[Word] 32768[Word], -127[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6731 shl[compile-time] 32768[Word], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6732 shl[Word] 32768[Word], -1[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6733 shl[compile-time] 32768[Word], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6734 shl[Word] 32768[Word], 0[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:6735 shl[compile-time] 32768[Word], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:6736 shl[Word] 32768[Word], 1[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6737 shl[compile-time] 32768[Word], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6738 shl[Word] 32768[Word], 127[Int8] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6739 shl[compile-time] 32768[Word], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6740 shl[Word] 65535[Word], -128[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6741 shl[compile-time] 65535[Word], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6742 shl[Word] 65535[Word], -127[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6743 shl[compile-time] 65535[Word], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6744 shl[Word] 65535[Word], -1[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6745 shl[compile-time] 65535[Word], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6746 shl[Word] 65535[Word], 0[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:6747 shl[compile-time] 65535[Word], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:6748 shl[Word] 65535[Word], 1[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:6749 shl[compile-time] 65535[Word], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6750 shl[Word] 65535[Word], 127[Int8] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:6751 shl[compile-time] 65535[Word], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6752 shl[Word] 0[Word], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6753 shl[compile-time] 0[Word], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6754 shl[Word] 0[Word], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6755 shl[compile-time] 0[Word], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6756 shl[Word] 0[Word], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6757 shl[compile-time] 0[Word], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6758 shl[Word] 0[Word], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6759 shl[compile-time] 0[Word], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6760 shl[Word] 0[Word], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6761 shl[compile-time] 0[Word], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6762 shl[Word] 0[Word], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6763 shl[compile-time] 0[Word], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6764 shl[Word] 255[Word], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6765 shl[compile-time] 255[Word], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6766 shl[Word] 255[Word], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6767 shl[compile-time] 255[Word], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6768 shl[Word] 255[Word], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6769 shl[compile-time] 255[Word], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6770 shl[Word] 255[Word], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:6771 shl[compile-time] 255[Word], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6772 shl[Word] 255[Word], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:6773 shl[compile-time] 255[Word], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:6774 shl[Word] 255[Word], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6775 shl[compile-time] 255[Word], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6776 shl[Word] 32767[Word], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6777 shl[compile-time] 32767[Word], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6778 shl[Word] 32767[Word], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6779 shl[compile-time] 32767[Word], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6780 shl[Word] 32767[Word], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6781 shl[compile-time] 32767[Word], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6782 shl[Word] 32767[Word], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:6783 shl[compile-time] 32767[Word], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:6784 shl[Word] 32767[Word], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:6785 shl[compile-time] 32767[Word], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:6786 shl[Word] 32767[Word], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6787 shl[compile-time] 32767[Word], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6788 shl[Word] 32768[Word], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6789 shl[compile-time] 32768[Word], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6790 shl[Word] 32768[Word], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6791 shl[compile-time] 32768[Word], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6792 shl[Word] 32768[Word], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6793 shl[compile-time] 32768[Word], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6794 shl[Word] 32768[Word], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:6795 shl[compile-time] 32768[Word], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:6796 shl[Word] 32768[Word], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6797 shl[compile-time] 32768[Word], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6798 shl[Word] 32768[Word], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6799 shl[compile-time] 32768[Word], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6800 shl[Word] 65535[Word], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6801 shl[compile-time] 65535[Word], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6802 shl[Word] 65535[Word], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6803 shl[compile-time] 65535[Word], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:6804 shl[Word] 65535[Word], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6805 shl[compile-time] 65535[Word], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6806 shl[Word] 65535[Word], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:6807 shl[compile-time] 65535[Word], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:6808 shl[Word] 65535[Word], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:6809 shl[compile-time] 65535[Word], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6810 shl[Word] 65535[Word], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:6811 shl[compile-time] 65535[Word], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6812 shl[Word] 0[Word], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6813 shl[compile-time] 0[Word], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6814 shl[Word] 0[Word], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6815 shl[compile-time] 0[Word], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6816 shl[Word] 0[Word], -129[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6817 shl[compile-time] 0[Word], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6818 shl[Word] 0[Word], -128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6819 shl[compile-time] 0[Word], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6820 shl[Word] 0[Word], -1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6821 shl[compile-time] 0[Word], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6822 shl[Word] 0[Word], 0[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6823 shl[compile-time] 0[Word], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6824 shl[Word] 0[Word], 1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6825 shl[compile-time] 0[Word], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6826 shl[Word] 0[Word], 127[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6827 shl[compile-time] 0[Word], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6828 shl[Word] 0[Word], 128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6829 shl[compile-time] 0[Word], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6830 shl[Word] 0[Word], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6831 shl[compile-time] 0[Word], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6832 shl[Word] 255[Word], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6833 shl[compile-time] 255[Word], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6834 shl[Word] 255[Word], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6835 shl[compile-time] 255[Word], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6836 shl[Word] 255[Word], -129[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6837 shl[compile-time] 255[Word], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6838 shl[Word] 255[Word], -128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6839 shl[compile-time] 255[Word], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6840 shl[Word] 255[Word], -1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6841 shl[compile-time] 255[Word], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6842 shl[Word] 255[Word], 0[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6843 shl[compile-time] 255[Word], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:6844 shl[Word] 255[Word], 1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6845 shl[compile-time] 255[Word], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:6846 shl[Word] 255[Word], 127[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6847 shl[compile-time] 255[Word], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6848 shl[Word] 255[Word], 128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6849 shl[compile-time] 255[Word], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6850 shl[Word] 255[Word], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6851 shl[compile-time] 255[Word], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6852 shl[Word] 32767[Word], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6853 shl[compile-time] 32767[Word], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6854 shl[Word] 32767[Word], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6855 shl[compile-time] 32767[Word], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6856 shl[Word] 32767[Word], -129[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6857 shl[compile-time] 32767[Word], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6858 shl[Word] 32767[Word], -128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6859 shl[compile-time] 32767[Word], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6860 shl[Word] 32767[Word], -1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6861 shl[compile-time] 32767[Word], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6862 shl[Word] 32767[Word], 0[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6863 shl[compile-time] 32767[Word], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:6864 shl[Word] 32767[Word], 1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6865 shl[compile-time] 32767[Word], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:6866 shl[Word] 32767[Word], 127[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6867 shl[compile-time] 32767[Word], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6868 shl[Word] 32767[Word], 128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6869 shl[compile-time] 32767[Word], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6870 shl[Word] 32767[Word], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6871 shl[compile-time] 32767[Word], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6872 shl[Word] 32768[Word], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6873 shl[compile-time] 32768[Word], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6874 shl[Word] 32768[Word], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6875 shl[compile-time] 32768[Word], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6876 shl[Word] 32768[Word], -129[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6877 shl[compile-time] 32768[Word], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6878 shl[Word] 32768[Word], -128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6879 shl[compile-time] 32768[Word], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6880 shl[Word] 32768[Word], -1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6881 shl[compile-time] 32768[Word], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6882 shl[Word] 32768[Word], 0[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6883 shl[compile-time] 32768[Word], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:6884 shl[Word] 32768[Word], 1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6885 shl[compile-time] 32768[Word], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6886 shl[Word] 32768[Word], 127[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6887 shl[compile-time] 32768[Word], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6888 shl[Word] 32768[Word], 128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6889 shl[compile-time] 32768[Word], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6890 shl[Word] 32768[Word], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6891 shl[compile-time] 32768[Word], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6892 shl[Word] 65535[Word], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6893 shl[compile-time] 65535[Word], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6894 shl[Word] 65535[Word], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6895 shl[compile-time] 65535[Word], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6896 shl[Word] 65535[Word], -129[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6897 shl[compile-time] 65535[Word], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6898 shl[Word] 65535[Word], -128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6899 shl[compile-time] 65535[Word], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6900 shl[Word] 65535[Word], -1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6901 shl[compile-time] 65535[Word], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6902 shl[Word] 65535[Word], 0[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6903 shl[compile-time] 65535[Word], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:6904 shl[Word] 65535[Word], 1[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:6905 shl[compile-time] 65535[Word], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:6906 shl[Word] 65535[Word], 127[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6907 shl[compile-time] 65535[Word], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6908 shl[Word] 65535[Word], 128[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6909 shl[compile-time] 65535[Word], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6910 shl[Word] 65535[Word], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:6911 shl[compile-time] 65535[Word], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6912 shl[Word] 0[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6913 shl[compile-time] 0[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6914 shl[Word] 0[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6915 shl[compile-time] 0[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6916 shl[Word] 0[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6917 shl[compile-time] 0[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6918 shl[Word] 0[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6919 shl[compile-time] 0[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6920 shl[Word] 0[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6921 shl[compile-time] 0[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6922 shl[Word] 0[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6923 shl[compile-time] 0[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:6924 shl[Word] 0[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6925 shl[compile-time] 0[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:6926 shl[Word] 0[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6927 shl[compile-time] 0[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6928 shl[Word] 0[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6929 shl[compile-time] 0[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6930 shl[Word] 0[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6931 shl[compile-time] 0[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6932 shl[Word] 255[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6933 shl[compile-time] 255[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6934 shl[Word] 255[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6935 shl[compile-time] 255[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6936 shl[Word] 255[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6937 shl[compile-time] 255[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6938 shl[Word] 255[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6939 shl[compile-time] 255[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6940 shl[Word] 255[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6941 shl[compile-time] 255[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6942 shl[Word] 255[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:6943 shl[compile-time] 255[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:6944 shl[Word] 255[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:6945 shl[compile-time] 255[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:6946 shl[Word] 255[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6947 shl[compile-time] 255[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6948 shl[Word] 255[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6949 shl[compile-time] 255[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6950 shl[Word] 255[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6951 shl[compile-time] 255[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6952 shl[Word] 32767[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6953 shl[compile-time] 32767[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6954 shl[Word] 32767[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6955 shl[compile-time] 32767[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6956 shl[Word] 32767[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6957 shl[compile-time] 32767[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6958 shl[Word] 32767[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6959 shl[compile-time] 32767[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6960 shl[Word] 32767[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6961 shl[compile-time] 32767[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6962 shl[Word] 32767[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:6963 shl[compile-time] 32767[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:6964 shl[Word] 32767[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6965 shl[compile-time] 32767[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:6966 shl[Word] 32767[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6967 shl[compile-time] 32767[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6968 shl[Word] 32767[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6969 shl[compile-time] 32767[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6970 shl[Word] 32767[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6971 shl[compile-time] 32767[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6972 shl[Word] 32768[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6973 shl[compile-time] 32768[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6974 shl[Word] 32768[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6975 shl[compile-time] 32768[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6976 shl[Word] 32768[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6977 shl[compile-time] 32768[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6978 shl[Word] 32768[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6979 shl[compile-time] 32768[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:6980 shl[Word] 32768[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6981 shl[compile-time] 32768[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:6982 shl[Word] 32768[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:6983 shl[compile-time] 32768[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:6984 shl[Word] 32768[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6985 shl[compile-time] 32768[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:6986 shl[Word] 32768[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6987 shl[compile-time] 32768[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:6988 shl[Word] 32768[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6989 shl[compile-time] 32768[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:6990 shl[Word] 32768[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6991 shl[compile-time] 32768[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:6992 shl[Word] 65535[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6993 shl[compile-time] 65535[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:6994 shl[Word] 65535[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6995 shl[compile-time] 65535[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:6996 shl[Word] 65535[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6997 shl[compile-time] 65535[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:6998 shl[Word] 65535[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:6999 shl[compile-time] 65535[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7000 shl[Word] 65535[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7001 shl[compile-time] 65535[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7002 shl[Word] 65535[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7003 shl[compile-time] 65535[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7004 shl[Word] 65535[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7005 shl[compile-time] 65535[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7006 shl[Word] 65535[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7007 shl[compile-time] 65535[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7008 shl[Word] 65535[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7009 shl[compile-time] 65535[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7010 shl[Word] 65535[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7011 shl[compile-time] 65535[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7012 shl[Word] 0[Word], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7013 shl[compile-time] 0[Word], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7014 shl[Word] 0[Word], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7015 shl[compile-time] 0[Word], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7016 shl[Word] 0[Word], -129[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7017 shl[compile-time] 0[Word], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7018 shl[Word] 0[Word], -128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7019 shl[compile-time] 0[Word], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7020 shl[Word] 0[Word], -1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7021 shl[compile-time] 0[Word], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7022 shl[Word] 0[Word], 0[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7023 shl[compile-time] 0[Word], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7024 shl[Word] 0[Word], 1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7025 shl[compile-time] 0[Word], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7026 shl[Word] 0[Word], 127[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7027 shl[compile-time] 0[Word], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7028 shl[Word] 0[Word], 128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7029 shl[compile-time] 0[Word], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7030 shl[Word] 0[Word], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7031 shl[compile-time] 0[Word], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7032 shl[Word] 255[Word], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7033 shl[compile-time] 255[Word], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7034 shl[Word] 255[Word], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7035 shl[compile-time] 255[Word], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7036 shl[Word] 255[Word], -129[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7037 shl[compile-time] 255[Word], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7038 shl[Word] 255[Word], -128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7039 shl[compile-time] 255[Word], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7040 shl[Word] 255[Word], -1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7041 shl[compile-time] 255[Word], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7042 shl[Word] 255[Word], 0[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:7043 shl[compile-time] 255[Word], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7044 shl[Word] 255[Word], 1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7045 shl[compile-time] 255[Word], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:7046 shl[Word] 255[Word], 127[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7047 shl[compile-time] 255[Word], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7048 shl[Word] 255[Word], 128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7049 shl[compile-time] 255[Word], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7050 shl[Word] 255[Word], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7051 shl[compile-time] 255[Word], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7052 shl[Word] 32767[Word], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7053 shl[compile-time] 32767[Word], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7054 shl[Word] 32767[Word], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7055 shl[compile-time] 32767[Word], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7056 shl[Word] 32767[Word], -129[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7057 shl[compile-time] 32767[Word], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7058 shl[Word] 32767[Word], -128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7059 shl[compile-time] 32767[Word], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7060 shl[Word] 32767[Word], -1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7061 shl[compile-time] 32767[Word], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7062 shl[Word] 32767[Word], 0[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7063 shl[compile-time] 32767[Word], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7064 shl[Word] 32767[Word], 1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7065 shl[compile-time] 32767[Word], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:7066 shl[Word] 32767[Word], 127[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7067 shl[compile-time] 32767[Word], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7068 shl[Word] 32767[Word], 128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7069 shl[compile-time] 32767[Word], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7070 shl[Word] 32767[Word], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7071 shl[compile-time] 32767[Word], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7072 shl[Word] 32768[Word], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7073 shl[compile-time] 32768[Word], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7074 shl[Word] 32768[Word], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7075 shl[compile-time] 32768[Word], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7076 shl[Word] 32768[Word], -129[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7077 shl[compile-time] 32768[Word], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7078 shl[Word] 32768[Word], -128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7079 shl[compile-time] 32768[Word], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7080 shl[Word] 32768[Word], -1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7081 shl[compile-time] 32768[Word], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7082 shl[Word] 32768[Word], 0[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7083 shl[compile-time] 32768[Word], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7084 shl[Word] 32768[Word], 1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7085 shl[compile-time] 32768[Word], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7086 shl[Word] 32768[Word], 127[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7087 shl[compile-time] 32768[Word], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7088 shl[Word] 32768[Word], 128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7089 shl[compile-time] 32768[Word], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7090 shl[Word] 32768[Word], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7091 shl[compile-time] 32768[Word], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7092 shl[Word] 65535[Word], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7093 shl[compile-time] 65535[Word], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7094 shl[Word] 65535[Word], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7095 shl[compile-time] 65535[Word], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7096 shl[Word] 65535[Word], -129[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7097 shl[compile-time] 65535[Word], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7098 shl[Word] 65535[Word], -128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7099 shl[compile-time] 65535[Word], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7100 shl[Word] 65535[Word], -1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7101 shl[compile-time] 65535[Word], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7102 shl[Word] 65535[Word], 0[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7103 shl[compile-time] 65535[Word], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7104 shl[Word] 65535[Word], 1[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7105 shl[compile-time] 65535[Word], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7106 shl[Word] 65535[Word], 127[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7107 shl[compile-time] 65535[Word], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7108 shl[Word] 65535[Word], 128[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7109 shl[compile-time] 65535[Word], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7110 shl[Word] 65535[Word], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7111 shl[compile-time] 65535[Word], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7112 shl[Word] 0[Word], -32768[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7113 shl[compile-time] 0[Word], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7114 shl[Word] 0[Word], -32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7115 shl[compile-time] 0[Word], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7116 shl[Word] 0[Word], -129[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7117 shl[compile-time] 0[Word], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7118 shl[Word] 0[Word], -128[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7119 shl[compile-time] 0[Word], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7120 shl[Word] 0[Word], -1[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7121 shl[compile-time] 0[Word], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7122 shl[Word] 0[Word], 0[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7123 shl[compile-time] 0[Word], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7124 shl[Word] 0[Word], 1[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7125 shl[compile-time] 0[Word], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7126 shl[Word] 0[Word], 127[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7127 shl[compile-time] 0[Word], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7128 shl[Word] 0[Word], 128[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7129 shl[compile-time] 0[Word], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7130 shl[Word] 0[Word], 32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7131 shl[compile-time] 0[Word], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7132 shl[Word] 255[Word], -32768[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7133 shl[compile-time] 255[Word], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7134 shl[Word] 255[Word], -32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7135 shl[compile-time] 255[Word], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7136 shl[Word] 255[Word], -129[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7137 shl[compile-time] 255[Word], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7138 shl[Word] 255[Word], -128[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7139 shl[compile-time] 255[Word], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7140 shl[Word] 255[Word], -1[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7141 shl[compile-time] 255[Word], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7142 shl[Word] 255[Word], 0[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:7143 shl[compile-time] 255[Word], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7144 shl[Word] 255[Word], 1[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:7145 shl[compile-time] 255[Word], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:7146 shl[Word] 255[Word], 127[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7147 shl[compile-time] 255[Word], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7148 shl[Word] 255[Word], 128[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7149 shl[compile-time] 255[Word], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7150 shl[Word] 255[Word], 32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7151 shl[compile-time] 255[Word], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7152 shl[Word] 32767[Word], -32768[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7153 shl[compile-time] 32767[Word], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7154 shl[Word] 32767[Word], -32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7155 shl[compile-time] 32767[Word], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7156 shl[Word] 32767[Word], -129[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7157 shl[compile-time] 32767[Word], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7158 shl[Word] 32767[Word], -128[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7159 shl[compile-time] 32767[Word], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7160 shl[Word] 32767[Word], -1[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7161 shl[compile-time] 32767[Word], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7162 shl[Word] 32767[Word], 0[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:7163 shl[compile-time] 32767[Word], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7164 shl[Word] 32767[Word], 1[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:7165 shl[compile-time] 32767[Word], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:7166 shl[Word] 32767[Word], 127[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7167 shl[compile-time] 32767[Word], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7168 shl[Word] 32767[Word], 128[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7169 shl[compile-time] 32767[Word], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7170 shl[Word] 32767[Word], 32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7171 shl[compile-time] 32767[Word], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7172 shl[Word] 32768[Word], -32768[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7173 shl[compile-time] 32768[Word], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7174 shl[Word] 32768[Word], -32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7175 shl[compile-time] 32768[Word], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7176 shl[Word] 32768[Word], -129[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7177 shl[compile-time] 32768[Word], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7178 shl[Word] 32768[Word], -128[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7179 shl[compile-time] 32768[Word], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7180 shl[Word] 32768[Word], -1[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7181 shl[compile-time] 32768[Word], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7182 shl[Word] 32768[Word], 0[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:7183 shl[compile-time] 32768[Word], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7184 shl[Word] 32768[Word], 1[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7185 shl[compile-time] 32768[Word], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7186 shl[Word] 32768[Word], 127[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7187 shl[compile-time] 32768[Word], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7188 shl[Word] 32768[Word], 128[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7189 shl[compile-time] 32768[Word], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7190 shl[Word] 32768[Word], 32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7191 shl[compile-time] 32768[Word], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7192 shl[Word] 65535[Word], -32768[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7193 shl[compile-time] 65535[Word], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7194 shl[Word] 65535[Word], -32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7195 shl[compile-time] 65535[Word], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7196 shl[Word] 65535[Word], -129[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7197 shl[compile-time] 65535[Word], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7198 shl[Word] 65535[Word], -128[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7199 shl[compile-time] 65535[Word], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7200 shl[Word] 65535[Word], -1[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7201 shl[compile-time] 65535[Word], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7202 shl[Word] 65535[Word], 0[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:7203 shl[compile-time] 65535[Word], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7204 shl[Word] 65535[Word], 1[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:7205 shl[compile-time] 65535[Word], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7206 shl[Word] 65535[Word], 127[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7207 shl[compile-time] 65535[Word], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7208 shl[Word] 65535[Word], 128[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7209 shl[compile-time] 65535[Word], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7210 shl[Word] 65535[Word], 32767[Integer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7211 shl[compile-time] 65535[Word], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7212 shl[Word] 0[Word], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7213 shl[compile-time] 0[Word], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7214 shl[Word] 0[Word], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7215 shl[compile-time] 0[Word], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7216 shl[Word] 0[Word], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7217 shl[compile-time] 0[Word], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7218 shl[Word] 0[Word], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7219 shl[compile-time] 0[Word], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7220 shl[Word] 0[Word], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7221 shl[compile-time] 0[Word], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7222 shl[Word] 0[Word], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7223 shl[compile-time] 0[Word], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7224 shl[Word] 0[Word], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7225 shl[compile-time] 0[Word], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7226 shl[Word] 0[Word], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7227 shl[compile-time] 0[Word], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7228 shl[Word] 0[Word], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7229 shl[compile-time] 0[Word], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7230 shl[Word] 0[Word], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7231 shl[compile-time] 0[Word], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7232 shl[Word] 255[Word], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7233 shl[compile-time] 255[Word], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7234 shl[Word] 255[Word], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7235 shl[compile-time] 255[Word], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7236 shl[Word] 255[Word], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7237 shl[compile-time] 255[Word], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7238 shl[Word] 255[Word], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7239 shl[compile-time] 255[Word], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7240 shl[Word] 255[Word], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7241 shl[compile-time] 255[Word], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7242 shl[Word] 255[Word], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:7243 shl[compile-time] 255[Word], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7244 shl[Word] 255[Word], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:7245 shl[compile-time] 255[Word], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:7246 shl[Word] 255[Word], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7247 shl[compile-time] 255[Word], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7248 shl[Word] 255[Word], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7249 shl[compile-time] 255[Word], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7250 shl[Word] 255[Word], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7251 shl[compile-time] 255[Word], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7252 shl[Word] 32767[Word], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7253 shl[compile-time] 32767[Word], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7254 shl[Word] 32767[Word], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7255 shl[compile-time] 32767[Word], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7256 shl[Word] 32767[Word], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7257 shl[compile-time] 32767[Word], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7258 shl[Word] 32767[Word], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7259 shl[compile-time] 32767[Word], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7260 shl[Word] 32767[Word], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7261 shl[compile-time] 32767[Word], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7262 shl[Word] 32767[Word], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7263 shl[compile-time] 32767[Word], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7264 shl[Word] 32767[Word], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:7265 shl[compile-time] 32767[Word], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:7266 shl[Word] 32767[Word], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7267 shl[compile-time] 32767[Word], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7268 shl[Word] 32767[Word], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7269 shl[compile-time] 32767[Word], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7270 shl[Word] 32767[Word], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7271 shl[compile-time] 32767[Word], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7272 shl[Word] 32768[Word], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7273 shl[compile-time] 32768[Word], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7274 shl[Word] 32768[Word], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7275 shl[compile-time] 32768[Word], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7276 shl[Word] 32768[Word], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7277 shl[compile-time] 32768[Word], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7278 shl[Word] 32768[Word], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7279 shl[compile-time] 32768[Word], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7280 shl[Word] 32768[Word], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7281 shl[compile-time] 32768[Word], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7282 shl[Word] 32768[Word], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:7283 shl[compile-time] 32768[Word], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7284 shl[Word] 32768[Word], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7285 shl[compile-time] 32768[Word], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7286 shl[Word] 32768[Word], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7287 shl[compile-time] 32768[Word], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7288 shl[Word] 32768[Word], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7289 shl[compile-time] 32768[Word], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7290 shl[Word] 32768[Word], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7291 shl[compile-time] 32768[Word], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7292 shl[Word] 65535[Word], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7293 shl[compile-time] 65535[Word], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:7294 shl[Word] 65535[Word], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7295 shl[compile-time] 65535[Word], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:7296 shl[Word] 65535[Word], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7297 shl[compile-time] 65535[Word], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:7298 shl[Word] 65535[Word], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7299 shl[compile-time] 65535[Word], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:7300 shl[Word] 65535[Word], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7301 shl[compile-time] 65535[Word], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:7302 shl[Word] 65535[Word], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:7303 shl[compile-time] 65535[Word], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7304 shl[Word] 65535[Word], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:7305 shl[compile-time] 65535[Word], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7306 shl[Word] 65535[Word], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7307 shl[compile-time] 65535[Word], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7308 shl[Word] 65535[Word], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7309 shl[compile-time] 65535[Word], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7310 shl[Word] 65535[Word], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7311 shl[compile-time] 65535[Word], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7312 shl[Word] 0[Word], 0[Byte] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7313 shl[compile-time] 0[Word], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7314 shl[Word] 0[Word], 1[Byte] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7315 shl[compile-time] 0[Word], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7316 shl[Word] 0[Word], 127[Byte] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7317 shl[compile-time] 0[Word], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7318 shl[Word] 0[Word], 128[Byte] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7319 shl[compile-time] 0[Word], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7320 shl[Word] 0[Word], 255[Byte] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7321 shl[compile-time] 0[Word], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7322 shl[Word] 255[Word], 0[Byte] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7323 shl[compile-time] 255[Word], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:7324 shl[Word] 255[Word], 1[Byte] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7325 shl[compile-time] 255[Word], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:7326 shl[Word] 255[Word], 127[Byte] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7327 shl[compile-time] 255[Word], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7328 shl[Word] 255[Word], 128[Byte] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7329 shl[compile-time] 255[Word], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7330 shl[Word] 255[Word], 255[Byte] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7331 shl[compile-time] 255[Word], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7332 shl[Word] 32767[Word], 0[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7333 shl[compile-time] 32767[Word], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7334 shl[Word] 32767[Word], 1[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7335 shl[compile-time] 32767[Word], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:7336 shl[Word] 32767[Word], 127[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7337 shl[compile-time] 32767[Word], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7338 shl[Word] 32767[Word], 128[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7339 shl[compile-time] 32767[Word], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7340 shl[Word] 32767[Word], 255[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7341 shl[compile-time] 32767[Word], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7342 shl[Word] 32768[Word], 0[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7343 shl[compile-time] 32768[Word], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7344 shl[Word] 32768[Word], 1[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7345 shl[compile-time] 32768[Word], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7346 shl[Word] 32768[Word], 127[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7347 shl[compile-time] 32768[Word], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7348 shl[Word] 32768[Word], 128[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7349 shl[compile-time] 32768[Word], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7350 shl[Word] 32768[Word], 255[Byte] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7351 shl[compile-time] 32768[Word], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7352 shl[Word] 65535[Word], 0[Byte] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7353 shl[compile-time] 65535[Word], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7354 shl[Word] 65535[Word], 1[Byte] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7355 shl[compile-time] 65535[Word], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7356 shl[Word] 65535[Word], 127[Byte] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7357 shl[compile-time] 65535[Word], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7358 shl[Word] 65535[Word], 128[Byte] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7359 shl[compile-time] 65535[Word], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7360 shl[Word] 65535[Word], 255[Byte] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7361 shl[compile-time] 65535[Word], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7362 shl[Word] 0[Word], 0[Byte] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7363 shl[compile-time] 0[Word], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7364 shl[Word] 0[Word], 1[Byte] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7365 shl[compile-time] 0[Word], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7366 shl[Word] 0[Word], 127[Byte] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7367 shl[compile-time] 0[Word], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7368 shl[Word] 0[Word], 128[Byte] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7369 shl[compile-time] 0[Word], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7370 shl[Word] 0[Word], 255[Byte] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7371 shl[compile-time] 0[Word], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7372 shl[Word] 255[Word], 0[Byte] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:7373 shl[compile-time] 255[Word], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7374 shl[Word] 255[Word], 1[Byte] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:7375 shl[compile-time] 255[Word], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:7376 shl[Word] 255[Word], 127[Byte] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7377 shl[compile-time] 255[Word], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7378 shl[Word] 255[Word], 128[Byte] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7379 shl[compile-time] 255[Word], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7380 shl[Word] 255[Word], 255[Byte] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7381 shl[compile-time] 255[Word], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7382 shl[Word] 32767[Word], 0[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7383 shl[compile-time] 32767[Word], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7384 shl[Word] 32767[Word], 1[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7385 shl[compile-time] 32767[Word], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:7386 shl[Word] 32767[Word], 127[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7387 shl[compile-time] 32767[Word], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7388 shl[Word] 32767[Word], 128[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7389 shl[compile-time] 32767[Word], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7390 shl[Word] 32767[Word], 255[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7391 shl[compile-time] 32767[Word], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7392 shl[Word] 32768[Word], 0[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7393 shl[compile-time] 32768[Word], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7394 shl[Word] 32768[Word], 1[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7395 shl[compile-time] 32768[Word], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7396 shl[Word] 32768[Word], 127[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7397 shl[compile-time] 32768[Word], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7398 shl[Word] 32768[Word], 128[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7399 shl[compile-time] 32768[Word], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7400 shl[Word] 32768[Word], 255[Byte] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7401 shl[compile-time] 32768[Word], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7402 shl[Word] 65535[Word], 0[Byte] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7403 shl[compile-time] 65535[Word], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7404 shl[Word] 65535[Word], 1[Byte] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7405 shl[compile-time] 65535[Word], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7406 shl[Word] 65535[Word], 127[Byte] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7407 shl[compile-time] 65535[Word], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7408 shl[Word] 65535[Word], 128[Byte] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7409 shl[compile-time] 65535[Word], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7410 shl[Word] 65535[Word], 255[Byte] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7411 shl[compile-time] 65535[Word], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7412 shl[Word] 0[Word], 0[Byte] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7413 shl[compile-time] 0[Word], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7414 shl[Word] 0[Word], 1[Byte] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7415 shl[compile-time] 0[Word], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7416 shl[Word] 0[Word], 127[Byte] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7417 shl[compile-time] 0[Word], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7418 shl[Word] 0[Word], 128[Byte] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7419 shl[compile-time] 0[Word], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7420 shl[Word] 0[Word], 255[Byte] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7421 shl[compile-time] 0[Word], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7422 shl[Word] 255[Word], 0[Byte] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:7423 shl[compile-time] 255[Word], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7424 shl[Word] 255[Word], 1[Byte] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7425 shl[compile-time] 255[Word], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:7426 shl[Word] 255[Word], 127[Byte] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7427 shl[compile-time] 255[Word], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7428 shl[Word] 255[Word], 128[Byte] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7429 shl[compile-time] 255[Word], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7430 shl[Word] 255[Word], 255[Byte] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7431 shl[compile-time] 255[Word], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7432 shl[Word] 32767[Word], 0[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7433 shl[compile-time] 32767[Word], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7434 shl[Word] 32767[Word], 1[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7435 shl[compile-time] 32767[Word], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:7436 shl[Word] 32767[Word], 127[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7437 shl[compile-time] 32767[Word], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7438 shl[Word] 32767[Word], 128[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7439 shl[compile-time] 32767[Word], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7440 shl[Word] 32767[Word], 255[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7441 shl[compile-time] 32767[Word], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7442 shl[Word] 32768[Word], 0[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7443 shl[compile-time] 32768[Word], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7444 shl[Word] 32768[Word], 1[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7445 shl[compile-time] 32768[Word], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7446 shl[Word] 32768[Word], 127[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7447 shl[compile-time] 32768[Word], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7448 shl[Word] 32768[Word], 128[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7449 shl[compile-time] 32768[Word], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7450 shl[Word] 32768[Word], 255[Byte] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7451 shl[compile-time] 32768[Word], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7452 shl[Word] 65535[Word], 0[Byte] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7453 shl[compile-time] 65535[Word], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7454 shl[Word] 65535[Word], 1[Byte] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7455 shl[compile-time] 65535[Word], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7456 shl[Word] 65535[Word], 127[Byte] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7457 shl[compile-time] 65535[Word], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7458 shl[Word] 65535[Word], 128[Byte] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7459 shl[compile-time] 65535[Word], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7460 shl[Word] 65535[Word], 255[Byte] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7461 shl[compile-time] 65535[Word], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7462 shl[Word] 0[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7463 shl[compile-time] 0[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7464 shl[Word] 0[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7465 shl[compile-time] 0[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7466 shl[Word] 0[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7467 shl[compile-time] 0[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7468 shl[Word] 0[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7469 shl[compile-time] 0[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7470 shl[Word] 0[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7471 shl[compile-time] 0[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7472 shl[Word] 255[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:7473 shl[compile-time] 255[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7474 shl[Word] 255[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:7475 shl[compile-time] 255[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:7476 shl[Word] 255[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7477 shl[compile-time] 255[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7478 shl[Word] 255[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7479 shl[compile-time] 255[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7480 shl[Word] 255[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7481 shl[compile-time] 255[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7482 shl[Word] 32767[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:7483 shl[compile-time] 32767[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7484 shl[Word] 32767[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:7485 shl[compile-time] 32767[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:7486 shl[Word] 32767[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7487 shl[compile-time] 32767[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7488 shl[Word] 32767[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7489 shl[compile-time] 32767[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7490 shl[Word] 32767[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7491 shl[compile-time] 32767[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7492 shl[Word] 32768[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:7493 shl[compile-time] 32768[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7494 shl[Word] 32768[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7495 shl[compile-time] 32768[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7496 shl[Word] 32768[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7497 shl[compile-time] 32768[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7498 shl[Word] 32768[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7499 shl[compile-time] 32768[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7500 shl[Word] 32768[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7501 shl[compile-time] 32768[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7502 shl[Word] 65535[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:7503 shl[compile-time] 65535[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7504 shl[Word] 65535[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:7505 shl[compile-time] 65535[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7506 shl[Word] 65535[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7507 shl[compile-time] 65535[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7508 shl[Word] 65535[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7509 shl[compile-time] 65535[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7510 shl[Word] 65535[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7511 shl[compile-time] 65535[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7512 shl[Word] 0[Word], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7513 shl[compile-time] 0[Word], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7514 shl[Word] 0[Word], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7515 shl[compile-time] 0[Word], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:7516 shl[Word] 0[Word], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7517 shl[compile-time] 0[Word], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7518 shl[Word] 0[Word], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7519 shl[compile-time] 0[Word], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7520 shl[Word] 0[Word], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7521 shl[compile-time] 0[Word], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7522 shl[Word] 255[Word], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:7523 shl[compile-time] 255[Word], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7524 shl[Word] 255[Word], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:7525 shl[compile-time] 255[Word], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:7526 shl[Word] 255[Word], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7527 shl[compile-time] 255[Word], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7528 shl[Word] 255[Word], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7529 shl[compile-time] 255[Word], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7530 shl[Word] 255[Word], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7531 shl[compile-time] 255[Word], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7532 shl[Word] 32767[Word], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7533 shl[compile-time] 32767[Word], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7534 shl[Word] 32767[Word], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:7535 shl[compile-time] 32767[Word], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:7536 shl[Word] 32767[Word], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7537 shl[compile-time] 32767[Word], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7538 shl[Word] 32767[Word], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7539 shl[compile-time] 32767[Word], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7540 shl[Word] 32767[Word], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7541 shl[compile-time] 32767[Word], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7542 shl[Word] 32768[Word], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:7543 shl[compile-time] 32768[Word], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7544 shl[Word] 32768[Word], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7545 shl[compile-time] 32768[Word], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:7546 shl[Word] 32768[Word], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7547 shl[compile-time] 32768[Word], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7548 shl[Word] 32768[Word], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7549 shl[compile-time] 32768[Word], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7550 shl[Word] 32768[Word], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7551 shl[compile-time] 32768[Word], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7552 shl[Word] 65535[Word], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:7553 shl[compile-time] 65535[Word], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7554 shl[Word] 65535[Word], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:7555 shl[compile-time] 65535[Word], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:7556 shl[Word] 65535[Word], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7557 shl[compile-time] 65535[Word], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:7558 shl[Word] 65535[Word], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7559 shl[compile-time] 65535[Word], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:7560 shl[Word] 65535[Word], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7561 shl[compile-time] 65535[Word], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7562 shl[Word] 0[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7563 shl[compile-time] 0[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7564 shl[Word] 0[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7565 shl[compile-time] 0[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7566 shl[Word] 0[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7567 shl[compile-time] 0[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7568 shl[Word] 0[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7569 shl[compile-time] 0[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7570 shl[Word] 0[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7571 shl[compile-time] 0[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7572 shl[Word] 255[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7573 shl[compile-time] 255[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:7574 shl[Word] 255[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7575 shl[compile-time] 255[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7576 shl[Word] 255[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7577 shl[compile-time] 255[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7578 shl[Word] 255[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7579 shl[compile-time] 255[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7580 shl[Word] 255[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7581 shl[compile-time] 255[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7582 shl[Word] 32767[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7583 shl[compile-time] 32767[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7584 shl[Word] 32767[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7585 shl[compile-time] 32767[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7586 shl[Word] 32767[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7587 shl[compile-time] 32767[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7588 shl[Word] 32767[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7589 shl[compile-time] 32767[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7590 shl[Word] 32767[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7591 shl[compile-time] 32767[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7592 shl[Word] 32768[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7593 shl[compile-time] 32768[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7594 shl[Word] 32768[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7595 shl[compile-time] 32768[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7596 shl[Word] 32768[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7597 shl[compile-time] 32768[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7598 shl[Word] 32768[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7599 shl[compile-time] 32768[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7600 shl[Word] 32768[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7601 shl[compile-time] 32768[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7602 shl[Word] 65535[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7603 shl[compile-time] 65535[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7604 shl[Word] 65535[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7605 shl[compile-time] 65535[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7606 shl[Word] 65535[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7607 shl[compile-time] 65535[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7608 shl[Word] 65535[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7609 shl[compile-time] 65535[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7610 shl[Word] 65535[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7611 shl[compile-time] 65535[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7612 shl[Word] 0[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7613 shl[compile-time] 0[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7614 shl[Word] 0[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7615 shl[compile-time] 0[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7616 shl[Word] 0[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7617 shl[compile-time] 0[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7618 shl[Word] 0[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7619 shl[compile-time] 0[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7620 shl[Word] 0[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7621 shl[compile-time] 0[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7622 shl[Word] 255[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:7623 shl[compile-time] 255[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7624 shl[Word] 255[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7625 shl[compile-time] 255[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7626 shl[Word] 255[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7627 shl[compile-time] 255[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7628 shl[Word] 255[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7629 shl[compile-time] 255[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7630 shl[Word] 255[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7631 shl[compile-time] 255[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7632 shl[Word] 32767[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7633 shl[compile-time] 32767[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7634 shl[Word] 32767[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7635 shl[compile-time] 32767[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7636 shl[Word] 32767[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7637 shl[compile-time] 32767[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7638 shl[Word] 32767[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7639 shl[compile-time] 32767[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7640 shl[Word] 32767[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7641 shl[compile-time] 32767[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7642 shl[Word] 32768[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7643 shl[compile-time] 32768[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7644 shl[Word] 32768[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7645 shl[compile-time] 32768[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7646 shl[Word] 32768[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7647 shl[compile-time] 32768[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7648 shl[Word] 32768[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7649 shl[compile-time] 32768[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7650 shl[Word] 32768[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7651 shl[compile-time] 32768[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7652 shl[Word] 65535[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7653 shl[compile-time] 65535[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7654 shl[Word] 65535[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7655 shl[compile-time] 65535[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7656 shl[Word] 65535[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7657 shl[compile-time] 65535[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7658 shl[Word] 65535[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7659 shl[compile-time] 65535[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7660 shl[Word] 65535[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7661 shl[compile-time] 65535[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7662 shl[Word] 0[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7663 shl[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7664 shl[Word] 0[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7665 shl[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7666 shl[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7667 shl[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7668 shl[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7669 shl[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7670 shl[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7671 shl[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7672 shl[Word] 255[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:7673 shl[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7674 shl[Word] 255[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7675 shl[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7676 shl[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7677 shl[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7678 shl[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7679 shl[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7680 shl[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7681 shl[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7682 shl[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7683 shl[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7684 shl[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7685 shl[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7686 shl[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7687 shl[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7688 shl[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7689 shl[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7690 shl[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7691 shl[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7692 shl[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7693 shl[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7694 shl[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7695 shl[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7696 shl[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7697 shl[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7698 shl[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7699 shl[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7700 shl[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7701 shl[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7702 shl[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7703 shl[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7704 shl[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7705 shl[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7706 shl[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7707 shl[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7708 shl[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7709 shl[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7710 shl[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7711 shl[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7712 shl[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7713 shl[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7714 shl[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7715 shl[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7716 shl[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7717 shl[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7718 shl[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7719 shl[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7720 shl[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7721 shl[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7722 shl[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:7723 shl[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7724 shl[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7725 shl[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7726 shl[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7727 shl[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7728 shl[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7729 shl[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7730 shl[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7731 shl[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7732 shl[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:7733 shl[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7734 shl[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7735 shl[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7736 shl[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7737 shl[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7738 shl[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7739 shl[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7740 shl[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7741 shl[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7742 shl[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:7743 shl[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7744 shl[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7745 shl[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7746 shl[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7747 shl[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7748 shl[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7749 shl[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7750 shl[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7751 shl[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7752 shl[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:7753 shl[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7754 shl[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7755 shl[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7756 shl[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7757 shl[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7758 shl[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7759 shl[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7760 shl[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7761 shl[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7762 shl[Word] 0[Word], 0[Word] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7763 shl[compile-time] 0[Word], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7764 shl[Word] 0[Word], 255[Word] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7765 shl[compile-time] 0[Word], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7766 shl[Word] 0[Word], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7767 shl[compile-time] 0[Word], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7768 shl[Word] 0[Word], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7769 shl[compile-time] 0[Word], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7770 shl[Word] 0[Word], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7771 shl[compile-time] 0[Word], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7772 shl[Word] 255[Word], 0[Word] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:7773 shl[compile-time] 255[Word], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7774 shl[Word] 255[Word], 255[Word] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7775 shl[compile-time] 255[Word], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7776 shl[Word] 255[Word], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7777 shl[compile-time] 255[Word], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7778 shl[Word] 255[Word], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7779 shl[compile-time] 255[Word], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7780 shl[Word] 255[Word], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7781 shl[compile-time] 255[Word], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7782 shl[Word] 32767[Word], 0[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7783 shl[compile-time] 32767[Word], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7784 shl[Word] 32767[Word], 255[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7785 shl[compile-time] 32767[Word], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7786 shl[Word] 32767[Word], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7787 shl[compile-time] 32767[Word], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7788 shl[Word] 32767[Word], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7789 shl[compile-time] 32767[Word], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7790 shl[Word] 32767[Word], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7791 shl[compile-time] 32767[Word], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7792 shl[Word] 32768[Word], 0[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:7793 shl[compile-time] 32768[Word], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7794 shl[Word] 32768[Word], 255[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7795 shl[compile-time] 32768[Word], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7796 shl[Word] 32768[Word], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7797 shl[compile-time] 32768[Word], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7798 shl[Word] 32768[Word], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7799 shl[compile-time] 32768[Word], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7800 shl[Word] 32768[Word], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7801 shl[compile-time] 32768[Word], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7802 shl[Word] 65535[Word], 0[Word] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:7803 shl[compile-time] 65535[Word], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:7804 shl[Word] 65535[Word], 255[Word] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7805 shl[compile-time] 65535[Word], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7806 shl[Word] 65535[Word], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7807 shl[compile-time] 65535[Word], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7808 shl[Word] 65535[Word], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7809 shl[compile-time] 65535[Word], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7810 shl[Word] 65535[Word], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:7811 shl[compile-time] 65535[Word], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7812 shl[Word] 0[Word], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7813 shl[compile-time] 0[Word], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7814 shl[Word] 0[Word], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7815 shl[compile-time] 0[Word], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7816 shl[Word] 0[Word], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7817 shl[compile-time] 0[Word], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7818 shl[Word] 0[Word], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7819 shl[compile-time] 0[Word], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7820 shl[Word] 0[Word], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7821 shl[compile-time] 0[Word], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7822 shl[Word] 255[Word], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7823 shl[compile-time] 255[Word], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:7824 shl[Word] 255[Word], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7825 shl[compile-time] 255[Word], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7826 shl[Word] 255[Word], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7827 shl[compile-time] 255[Word], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7828 shl[Word] 255[Word], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7829 shl[compile-time] 255[Word], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7830 shl[Word] 255[Word], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7831 shl[compile-time] 255[Word], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7832 shl[Word] 32767[Word], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7833 shl[compile-time] 32767[Word], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7834 shl[Word] 32767[Word], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7835 shl[compile-time] 32767[Word], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7836 shl[Word] 32767[Word], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7837 shl[compile-time] 32767[Word], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7838 shl[Word] 32767[Word], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7839 shl[compile-time] 32767[Word], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7840 shl[Word] 32767[Word], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7841 shl[compile-time] 32767[Word], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7842 shl[Word] 32768[Word], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7843 shl[compile-time] 32768[Word], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7844 shl[Word] 32768[Word], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7845 shl[compile-time] 32768[Word], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7846 shl[Word] 32768[Word], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7847 shl[compile-time] 32768[Word], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7848 shl[Word] 32768[Word], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7849 shl[compile-time] 32768[Word], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7850 shl[Word] 32768[Word], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7851 shl[compile-time] 32768[Word], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7852 shl[Word] 65535[Word], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:7853 shl[compile-time] 65535[Word], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7854 shl[Word] 65535[Word], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7855 shl[compile-time] 65535[Word], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7856 shl[Word] 65535[Word], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7857 shl[compile-time] 65535[Word], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7858 shl[Word] 65535[Word], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7859 shl[compile-time] 65535[Word], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7860 shl[Word] 65535[Word], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:7861 shl[compile-time] 65535[Word], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7862 shl[Word] 0[Word], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7863 shl[compile-time] 0[Word], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7864 shl[Word] 0[Word], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7865 shl[compile-time] 0[Word], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7866 shl[Word] 0[Word], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7867 shl[compile-time] 0[Word], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7868 shl[Word] 0[Word], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7869 shl[compile-time] 0[Word], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7870 shl[Word] 0[Word], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7871 shl[compile-time] 0[Word], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7872 shl[Word] 255[Word], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:7873 shl[compile-time] 255[Word], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7874 shl[Word] 255[Word], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7875 shl[compile-time] 255[Word], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7876 shl[Word] 255[Word], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7877 shl[compile-time] 255[Word], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7878 shl[Word] 255[Word], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7879 shl[compile-time] 255[Word], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7880 shl[Word] 255[Word], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7881 shl[compile-time] 255[Word], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7882 shl[Word] 32767[Word], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:7883 shl[compile-time] 32767[Word], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7884 shl[Word] 32767[Word], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7885 shl[compile-time] 32767[Word], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7886 shl[Word] 32767[Word], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7887 shl[compile-time] 32767[Word], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7888 shl[Word] 32767[Word], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7889 shl[compile-time] 32767[Word], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7890 shl[Word] 32767[Word], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7891 shl[compile-time] 32767[Word], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7892 shl[Word] 32768[Word], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7893 shl[compile-time] 32768[Word], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7894 shl[Word] 32768[Word], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7895 shl[compile-time] 32768[Word], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7896 shl[Word] 32768[Word], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7897 shl[compile-time] 32768[Word], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7898 shl[Word] 32768[Word], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7899 shl[compile-time] 32768[Word], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7900 shl[Word] 32768[Word], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7901 shl[compile-time] 32768[Word], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7902 shl[Word] 65535[Word], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:7903 shl[compile-time] 65535[Word], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7904 shl[Word] 65535[Word], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7905 shl[compile-time] 65535[Word], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7906 shl[Word] 65535[Word], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7907 shl[compile-time] 65535[Word], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7908 shl[Word] 65535[Word], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7909 shl[compile-time] 65535[Word], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7910 shl[Word] 65535[Word], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:7911 shl[compile-time] 65535[Word], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7912 shl[Word] 0[Word], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7913 shl[compile-time] 0[Word], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7914 shl[Word] 0[Word], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7915 shl[compile-time] 0[Word], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7916 shl[Word] 0[Word], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7917 shl[compile-time] 0[Word], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7918 shl[Word] 0[Word], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7919 shl[compile-time] 0[Word], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7920 shl[Word] 0[Word], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7921 shl[compile-time] 0[Word], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7922 shl[Word] 255[Word], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:7923 shl[compile-time] 255[Word], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7924 shl[Word] 255[Word], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7925 shl[compile-time] 255[Word], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7926 shl[Word] 255[Word], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7927 shl[compile-time] 255[Word], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7928 shl[Word] 255[Word], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7929 shl[compile-time] 255[Word], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7930 shl[Word] 255[Word], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7931 shl[compile-time] 255[Word], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7932 shl[Word] 32767[Word], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7933 shl[compile-time] 32767[Word], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:7934 shl[Word] 32767[Word], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7935 shl[compile-time] 32767[Word], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7936 shl[Word] 32767[Word], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7937 shl[compile-time] 32767[Word], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7938 shl[Word] 32767[Word], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7939 shl[compile-time] 32767[Word], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7940 shl[Word] 32767[Word], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7941 shl[compile-time] 32767[Word], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7942 shl[Word] 32768[Word], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7943 shl[compile-time] 32768[Word], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:7944 shl[Word] 32768[Word], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7945 shl[compile-time] 32768[Word], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7946 shl[Word] 32768[Word], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7947 shl[compile-time] 32768[Word], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7948 shl[Word] 32768[Word], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7949 shl[compile-time] 32768[Word], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7950 shl[Word] 32768[Word], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7951 shl[compile-time] 32768[Word], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7952 shl[Word] 65535[Word], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:7953 shl[compile-time] 65535[Word], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:7954 shl[Word] 65535[Word], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7955 shl[compile-time] 65535[Word], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7956 shl[Word] 65535[Word], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7957 shl[compile-time] 65535[Word], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7958 shl[Word] 65535[Word], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7959 shl[compile-time] 65535[Word], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7960 shl[Word] 65535[Word], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:7961 shl[compile-time] 65535[Word], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7962 shl[Word] 0[Word], 0[Pointer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7963 shl[compile-time] 0[Word], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:7964 shl[Word] 0[Word], 255[Pointer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7965 shl[compile-time] 0[Word], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7966 shl[Word] 0[Word], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7967 shl[compile-time] 0[Word], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7968 shl[Word] 0[Word], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7969 shl[compile-time] 0[Word], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7970 shl[Word] 0[Word], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7971 shl[compile-time] 0[Word], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7972 shl[Word] 255[Word], 0[Pointer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:7973 shl[compile-time] 255[Word], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:7974 shl[Word] 255[Word], 255[Pointer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7975 shl[compile-time] 255[Word], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7976 shl[Word] 255[Word], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7977 shl[compile-time] 255[Word], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7978 shl[Word] 255[Word], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7979 shl[compile-time] 255[Word], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7980 shl[Word] 255[Word], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7981 shl[compile-time] 255[Word], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7982 shl[Word] 32767[Word], 0[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:7983 shl[compile-time] 32767[Word], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:7984 shl[Word] 32767[Word], 255[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7985 shl[compile-time] 32767[Word], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7986 shl[Word] 32767[Word], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7987 shl[compile-time] 32767[Word], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7988 shl[Word] 32767[Word], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7989 shl[compile-time] 32767[Word], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:7990 shl[Word] 32767[Word], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7991 shl[compile-time] 32767[Word], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:7992 shl[Word] 32768[Word], 0[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:7993 shl[compile-time] 32768[Word], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:7994 shl[Word] 32768[Word], 255[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7995 shl[compile-time] 32768[Word], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:7996 shl[Word] 32768[Word], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7997 shl[compile-time] 32768[Word], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:7998 shl[Word] 32768[Word], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:7999 shl[compile-time] 32768[Word], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8000 shl[Word] 32768[Word], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8001 shl[compile-time] 32768[Word], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8002 shl[Word] 65535[Word], 0[Pointer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:8003 shl[compile-time] 65535[Word], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8004 shl[Word] 65535[Word], 255[Pointer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8005 shl[compile-time] 65535[Word], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8006 shl[Word] 65535[Word], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8007 shl[compile-time] 65535[Word], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8008 shl[Word] 65535[Word], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8009 shl[compile-time] 65535[Word], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8010 shl[Word] 65535[Word], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8011 shl[compile-time] 65535[Word], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8012 shl[Word] 0[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8013 shl[compile-time] 0[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8014 shl[Word] 0[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8015 shl[compile-time] 0[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8016 shl[Word] 0[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8017 shl[compile-time] 0[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8018 shl[Word] 0[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8019 shl[compile-time] 0[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8020 shl[Word] 0[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8021 shl[compile-time] 0[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8022 shl[Word] 255[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:8023 shl[compile-time] 255[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8024 shl[Word] 255[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8025 shl[compile-time] 255[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8026 shl[Word] 255[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8027 shl[compile-time] 255[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8028 shl[Word] 255[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8029 shl[compile-time] 255[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8030 shl[Word] 255[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8031 shl[compile-time] 255[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8032 shl[Word] 32767[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8033 shl[compile-time] 32767[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8034 shl[Word] 32767[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8035 shl[compile-time] 32767[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8036 shl[Word] 32767[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8037 shl[compile-time] 32767[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8038 shl[Word] 32767[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8039 shl[compile-time] 32767[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8040 shl[Word] 32767[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8041 shl[compile-time] 32767[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8042 shl[Word] 32768[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:8043 shl[compile-time] 32768[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:8044 shl[Word] 32768[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8045 shl[compile-time] 32768[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8046 shl[Word] 32768[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8047 shl[compile-time] 32768[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8048 shl[Word] 32768[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8049 shl[compile-time] 32768[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8050 shl[Word] 32768[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8051 shl[compile-time] 32768[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8052 shl[Word] 65535[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:8053 shl[compile-time] 65535[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8054 shl[Word] 65535[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8055 shl[compile-time] 65535[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8056 shl[Word] 65535[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8057 shl[compile-time] 65535[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8058 shl[Word] 65535[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8059 shl[compile-time] 65535[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:8060 shl[Word] 65535[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8061 shl[compile-time] 65535[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:8062 shl[Pointer] 0[Pointer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8063 shl[compile-time] 0[Pointer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8064 shl[Pointer] 0[Pointer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8065 shl[compile-time] 0[Pointer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8066 shl[Pointer] 0[Pointer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8067 shl[compile-time] 0[Pointer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8068 shl[Pointer] 0[Pointer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8069 shl[compile-time] 0[Pointer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8070 shl[Pointer] 0[Pointer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8071 shl[compile-time] 0[Pointer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8072 shl[Pointer] 0[Pointer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8073 shl[compile-time] 0[Pointer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8074 shl[Pointer] 255[Pointer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8075 shl[compile-time] 255[Pointer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8076 shl[Pointer] 255[Pointer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8077 shl[compile-time] 255[Pointer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8078 shl[Pointer] 255[Pointer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8079 shl[compile-time] 255[Pointer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8080 shl[Pointer] 255[Pointer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8081 shl[compile-time] 255[Pointer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:8082 shl[Pointer] 255[Pointer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8083 shl[compile-time] 255[Pointer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8084 shl[Pointer] 255[Pointer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8085 shl[compile-time] 255[Pointer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8086 shl[Pointer] 32767[Pointer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8087 shl[compile-time] 32767[Pointer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8088 shl[Pointer] 32767[Pointer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8089 shl[compile-time] 32767[Pointer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8090 shl[Pointer] 32767[Pointer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8091 shl[compile-time] 32767[Pointer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8092 shl[Pointer] 32767[Pointer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8093 shl[compile-time] 32767[Pointer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8094 shl[Pointer] 32767[Pointer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8095 shl[compile-time] 32767[Pointer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8096 shl[Pointer] 32767[Pointer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8097 shl[compile-time] 32767[Pointer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8098 shl[Pointer] 32768[Pointer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8099 shl[compile-time] 32768[Pointer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8100 shl[Pointer] 32768[Pointer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8101 shl[compile-time] 32768[Pointer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8102 shl[Pointer] 32768[Pointer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8103 shl[compile-time] 32768[Pointer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8104 shl[Pointer] 32768[Pointer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8105 shl[compile-time] 32768[Pointer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8106 shl[Pointer] 32768[Pointer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8107 shl[compile-time] 32768[Pointer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8108 shl[Pointer] 32768[Pointer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8109 shl[compile-time] 32768[Pointer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8110 shl[Pointer] 65535[Pointer], -128[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8111 shl[compile-time] 65535[Pointer], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8112 shl[Pointer] 65535[Pointer], -127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8113 shl[compile-time] 65535[Pointer], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8114 shl[Pointer] 65535[Pointer], -1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8115 shl[compile-time] 65535[Pointer], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8116 shl[Pointer] 65535[Pointer], 0[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8117 shl[compile-time] 65535[Pointer], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8118 shl[Pointer] 65535[Pointer], 1[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8119 shl[compile-time] 65535[Pointer], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8120 shl[Pointer] 65535[Pointer], 127[Int8] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8121 shl[compile-time] 65535[Pointer], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8122 shl[Pointer] 0[Pointer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8123 shl[compile-time] 0[Pointer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8124 shl[Pointer] 0[Pointer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8125 shl[compile-time] 0[Pointer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8126 shl[Pointer] 0[Pointer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8127 shl[compile-time] 0[Pointer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8128 shl[Pointer] 0[Pointer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8129 shl[compile-time] 0[Pointer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8130 shl[Pointer] 0[Pointer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8131 shl[compile-time] 0[Pointer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8132 shl[Pointer] 0[Pointer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8133 shl[compile-time] 0[Pointer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8134 shl[Pointer] 255[Pointer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8135 shl[compile-time] 255[Pointer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8136 shl[Pointer] 255[Pointer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8137 shl[compile-time] 255[Pointer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8138 shl[Pointer] 255[Pointer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8139 shl[compile-time] 255[Pointer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8140 shl[Pointer] 255[Pointer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:8141 shl[compile-time] 255[Pointer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8142 shl[Pointer] 255[Pointer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:8143 shl[compile-time] 255[Pointer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8144 shl[Pointer] 255[Pointer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8145 shl[compile-time] 255[Pointer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8146 shl[Pointer] 32767[Pointer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8147 shl[compile-time] 32767[Pointer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8148 shl[Pointer] 32767[Pointer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8149 shl[compile-time] 32767[Pointer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8150 shl[Pointer] 32767[Pointer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8151 shl[compile-time] 32767[Pointer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8152 shl[Pointer] 32767[Pointer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8153 shl[compile-time] 32767[Pointer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8154 shl[Pointer] 32767[Pointer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8155 shl[compile-time] 32767[Pointer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8156 shl[Pointer] 32767[Pointer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8157 shl[compile-time] 32767[Pointer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8158 shl[Pointer] 32768[Pointer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8159 shl[compile-time] 32768[Pointer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8160 shl[Pointer] 32768[Pointer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8161 shl[compile-time] 32768[Pointer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8162 shl[Pointer] 32768[Pointer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8163 shl[compile-time] 32768[Pointer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8164 shl[Pointer] 32768[Pointer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8165 shl[compile-time] 32768[Pointer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8166 shl[Pointer] 32768[Pointer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8167 shl[compile-time] 32768[Pointer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8168 shl[Pointer] 32768[Pointer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8169 shl[compile-time] 32768[Pointer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8170 shl[Pointer] 65535[Pointer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8171 shl[compile-time] 65535[Pointer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8172 shl[Pointer] 65535[Pointer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8173 shl[compile-time] 65535[Pointer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8174 shl[Pointer] 65535[Pointer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8175 shl[compile-time] 65535[Pointer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8176 shl[Pointer] 65535[Pointer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8177 shl[compile-time] 65535[Pointer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8178 shl[Pointer] 65535[Pointer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8179 shl[compile-time] 65535[Pointer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8180 shl[Pointer] 65535[Pointer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8181 shl[compile-time] 65535[Pointer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8182 shl[Pointer] 0[Pointer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8183 shl[compile-time] 0[Pointer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8184 shl[Pointer] 0[Pointer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8185 shl[compile-time] 0[Pointer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8186 shl[Pointer] 0[Pointer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8187 shl[compile-time] 0[Pointer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8188 shl[Pointer] 0[Pointer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8189 shl[compile-time] 0[Pointer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8190 shl[Pointer] 0[Pointer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8191 shl[compile-time] 0[Pointer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8192 shl[Pointer] 0[Pointer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8193 shl[compile-time] 0[Pointer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8194 shl[Pointer] 255[Pointer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8195 shl[compile-time] 255[Pointer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8196 shl[Pointer] 255[Pointer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8197 shl[compile-time] 255[Pointer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8198 shl[Pointer] 255[Pointer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8199 shl[compile-time] 255[Pointer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8200 shl[Pointer] 255[Pointer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:8201 shl[compile-time] 255[Pointer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8202 shl[Pointer] 255[Pointer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8203 shl[compile-time] 255[Pointer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8204 shl[Pointer] 255[Pointer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8205 shl[compile-time] 255[Pointer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8206 shl[Pointer] 32767[Pointer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8207 shl[compile-time] 32767[Pointer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8208 shl[Pointer] 32767[Pointer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8209 shl[compile-time] 32767[Pointer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8210 shl[Pointer] 32767[Pointer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8211 shl[compile-time] 32767[Pointer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8212 shl[Pointer] 32767[Pointer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8213 shl[compile-time] 32767[Pointer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8214 shl[Pointer] 32767[Pointer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8215 shl[compile-time] 32767[Pointer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8216 shl[Pointer] 32767[Pointer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8217 shl[compile-time] 32767[Pointer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8218 shl[Pointer] 32768[Pointer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8219 shl[compile-time] 32768[Pointer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8220 shl[Pointer] 32768[Pointer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8221 shl[compile-time] 32768[Pointer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8222 shl[Pointer] 32768[Pointer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8223 shl[compile-time] 32768[Pointer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8224 shl[Pointer] 32768[Pointer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8225 shl[compile-time] 32768[Pointer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8226 shl[Pointer] 32768[Pointer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8227 shl[compile-time] 32768[Pointer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8228 shl[Pointer] 32768[Pointer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8229 shl[compile-time] 32768[Pointer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8230 shl[Pointer] 65535[Pointer], -128[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8231 shl[compile-time] 65535[Pointer], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8232 shl[Pointer] 65535[Pointer], -127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8233 shl[compile-time] 65535[Pointer], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8234 shl[Pointer] 65535[Pointer], -1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8235 shl[compile-time] 65535[Pointer], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8236 shl[Pointer] 65535[Pointer], 0[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8237 shl[compile-time] 65535[Pointer], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8238 shl[Pointer] 65535[Pointer], 1[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8239 shl[compile-time] 65535[Pointer], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8240 shl[Pointer] 65535[Pointer], 127[Int8] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8241 shl[compile-time] 65535[Pointer], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8242 shl[Pointer] 0[Pointer], -128[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8243 shl[compile-time] 0[Pointer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8244 shl[Pointer] 0[Pointer], -127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8245 shl[compile-time] 0[Pointer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8246 shl[Pointer] 0[Pointer], -1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8247 shl[compile-time] 0[Pointer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8248 shl[Pointer] 0[Pointer], 0[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8249 shl[compile-time] 0[Pointer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8250 shl[Pointer] 0[Pointer], 1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8251 shl[compile-time] 0[Pointer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8252 shl[Pointer] 0[Pointer], 127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8253 shl[compile-time] 0[Pointer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8254 shl[Pointer] 255[Pointer], -128[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8255 shl[compile-time] 255[Pointer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8256 shl[Pointer] 255[Pointer], -127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8257 shl[compile-time] 255[Pointer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8258 shl[Pointer] 255[Pointer], -1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8259 shl[compile-time] 255[Pointer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8260 shl[Pointer] 255[Pointer], 0[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:8261 shl[compile-time] 255[Pointer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8262 shl[Pointer] 255[Pointer], 1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:8263 shl[compile-time] 255[Pointer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8264 shl[Pointer] 255[Pointer], 127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8265 shl[compile-time] 255[Pointer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8266 shl[Pointer] 32767[Pointer], -128[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8267 shl[compile-time] 32767[Pointer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8268 shl[Pointer] 32767[Pointer], -127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8269 shl[compile-time] 32767[Pointer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8270 shl[Pointer] 32767[Pointer], -1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8271 shl[compile-time] 32767[Pointer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8272 shl[Pointer] 32767[Pointer], 0[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:8273 shl[compile-time] 32767[Pointer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8274 shl[Pointer] 32767[Pointer], 1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:8275 shl[compile-time] 32767[Pointer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:8276 shl[Pointer] 32767[Pointer], 127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8277 shl[compile-time] 32767[Pointer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8278 shl[Pointer] 32768[Pointer], -128[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8279 shl[compile-time] 32768[Pointer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8280 shl[Pointer] 32768[Pointer], -127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8281 shl[compile-time] 32768[Pointer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8282 shl[Pointer] 32768[Pointer], -1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8283 shl[compile-time] 32768[Pointer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8284 shl[Pointer] 32768[Pointer], 0[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:8285 shl[compile-time] 32768[Pointer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:8286 shl[Pointer] 32768[Pointer], 1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8287 shl[compile-time] 32768[Pointer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8288 shl[Pointer] 32768[Pointer], 127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8289 shl[compile-time] 32768[Pointer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8290 shl[Pointer] 65535[Pointer], -128[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8291 shl[compile-time] 65535[Pointer], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8292 shl[Pointer] 65535[Pointer], -127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8293 shl[compile-time] 65535[Pointer], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8294 shl[Pointer] 65535[Pointer], -1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8295 shl[compile-time] 65535[Pointer], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8296 shl[Pointer] 65535[Pointer], 0[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:8297 shl[compile-time] 65535[Pointer], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8298 shl[Pointer] 65535[Pointer], 1[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:8299 shl[compile-time] 65535[Pointer], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8300 shl[Pointer] 65535[Pointer], 127[Int8] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8301 shl[compile-time] 65535[Pointer], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8302 shl[Pointer] 0[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8303 shl[compile-time] 0[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8304 shl[Pointer] 0[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8305 shl[compile-time] 0[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8306 shl[Pointer] 0[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8307 shl[compile-time] 0[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8308 shl[Pointer] 0[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8309 shl[compile-time] 0[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8310 shl[Pointer] 0[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8311 shl[compile-time] 0[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8312 shl[Pointer] 0[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8313 shl[compile-time] 0[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8314 shl[Pointer] 255[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8315 shl[compile-time] 255[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8316 shl[Pointer] 255[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8317 shl[compile-time] 255[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8318 shl[Pointer] 255[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8319 shl[compile-time] 255[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8320 shl[Pointer] 255[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:8321 shl[compile-time] 255[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8322 shl[Pointer] 255[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:8323 shl[compile-time] 255[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8324 shl[Pointer] 255[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8325 shl[compile-time] 255[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8326 shl[Pointer] 32767[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8327 shl[compile-time] 32767[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8328 shl[Pointer] 32767[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8329 shl[compile-time] 32767[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8330 shl[Pointer] 32767[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8331 shl[compile-time] 32767[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8332 shl[Pointer] 32767[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8333 shl[compile-time] 32767[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8334 shl[Pointer] 32767[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:8335 shl[compile-time] 32767[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:8336 shl[Pointer] 32767[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8337 shl[compile-time] 32767[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8338 shl[Pointer] 32768[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8339 shl[compile-time] 32768[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8340 shl[Pointer] 32768[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8341 shl[compile-time] 32768[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8342 shl[Pointer] 32768[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8343 shl[compile-time] 32768[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8344 shl[Pointer] 32768[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:8345 shl[compile-time] 32768[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:8346 shl[Pointer] 32768[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8347 shl[compile-time] 32768[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8348 shl[Pointer] 32768[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8349 shl[compile-time] 32768[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8350 shl[Pointer] 65535[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8351 shl[compile-time] 65535[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8352 shl[Pointer] 65535[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8353 shl[compile-time] 65535[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -127;
endcode
varvalue r 0

$overflow on
code auto:8354 shl[Pointer] 65535[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8355 shl[compile-time] 65535[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8356 shl[Pointer] 65535[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:8357 shl[compile-time] 65535[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8358 shl[Pointer] 65535[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:8359 shl[compile-time] 65535[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8360 shl[Pointer] 65535[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8361 shl[compile-time] 65535[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8362 shl[Pointer] 0[Pointer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8363 shl[compile-time] 0[Pointer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8364 shl[Pointer] 0[Pointer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8365 shl[compile-time] 0[Pointer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8366 shl[Pointer] 0[Pointer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8367 shl[compile-time] 0[Pointer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8368 shl[Pointer] 0[Pointer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8369 shl[compile-time] 0[Pointer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8370 shl[Pointer] 0[Pointer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8371 shl[compile-time] 0[Pointer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8372 shl[Pointer] 0[Pointer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8373 shl[compile-time] 0[Pointer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8374 shl[Pointer] 0[Pointer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8375 shl[compile-time] 0[Pointer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8376 shl[Pointer] 0[Pointer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8377 shl[compile-time] 0[Pointer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8378 shl[Pointer] 0[Pointer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8379 shl[compile-time] 0[Pointer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8380 shl[Pointer] 0[Pointer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8381 shl[compile-time] 0[Pointer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8382 shl[Pointer] 255[Pointer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8383 shl[compile-time] 255[Pointer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8384 shl[Pointer] 255[Pointer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8385 shl[compile-time] 255[Pointer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8386 shl[Pointer] 255[Pointer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8387 shl[compile-time] 255[Pointer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8388 shl[Pointer] 255[Pointer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8389 shl[compile-time] 255[Pointer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8390 shl[Pointer] 255[Pointer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8391 shl[compile-time] 255[Pointer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8392 shl[Pointer] 255[Pointer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8393 shl[compile-time] 255[Pointer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:8394 shl[Pointer] 255[Pointer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8395 shl[compile-time] 255[Pointer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8396 shl[Pointer] 255[Pointer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8397 shl[compile-time] 255[Pointer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8398 shl[Pointer] 255[Pointer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8399 shl[compile-time] 255[Pointer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8400 shl[Pointer] 255[Pointer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8401 shl[compile-time] 255[Pointer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8402 shl[Pointer] 32767[Pointer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8403 shl[compile-time] 32767[Pointer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8404 shl[Pointer] 32767[Pointer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8405 shl[compile-time] 32767[Pointer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8406 shl[Pointer] 32767[Pointer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8407 shl[compile-time] 32767[Pointer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8408 shl[Pointer] 32767[Pointer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8409 shl[compile-time] 32767[Pointer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8410 shl[Pointer] 32767[Pointer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8411 shl[compile-time] 32767[Pointer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8412 shl[Pointer] 32767[Pointer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8413 shl[compile-time] 32767[Pointer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8414 shl[Pointer] 32767[Pointer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8415 shl[compile-time] 32767[Pointer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8416 shl[Pointer] 32767[Pointer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8417 shl[compile-time] 32767[Pointer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8418 shl[Pointer] 32767[Pointer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8419 shl[compile-time] 32767[Pointer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8420 shl[Pointer] 32767[Pointer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8421 shl[compile-time] 32767[Pointer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8422 shl[Pointer] 32768[Pointer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8423 shl[compile-time] 32768[Pointer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8424 shl[Pointer] 32768[Pointer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8425 shl[compile-time] 32768[Pointer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8426 shl[Pointer] 32768[Pointer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8427 shl[compile-time] 32768[Pointer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8428 shl[Pointer] 32768[Pointer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8429 shl[compile-time] 32768[Pointer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8430 shl[Pointer] 32768[Pointer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8431 shl[compile-time] 32768[Pointer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8432 shl[Pointer] 32768[Pointer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8433 shl[compile-time] 32768[Pointer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8434 shl[Pointer] 32768[Pointer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8435 shl[compile-time] 32768[Pointer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8436 shl[Pointer] 32768[Pointer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8437 shl[compile-time] 32768[Pointer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8438 shl[Pointer] 32768[Pointer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8439 shl[compile-time] 32768[Pointer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8440 shl[Pointer] 32768[Pointer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8441 shl[compile-time] 32768[Pointer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8442 shl[Pointer] 65535[Pointer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8443 shl[compile-time] 65535[Pointer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8444 shl[Pointer] 65535[Pointer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8445 shl[compile-time] 65535[Pointer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8446 shl[Pointer] 65535[Pointer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8447 shl[compile-time] 65535[Pointer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8448 shl[Pointer] 65535[Pointer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8449 shl[compile-time] 65535[Pointer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8450 shl[Pointer] 65535[Pointer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8451 shl[compile-time] 65535[Pointer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8452 shl[Pointer] 65535[Pointer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8453 shl[compile-time] 65535[Pointer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8454 shl[Pointer] 65535[Pointer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8455 shl[compile-time] 65535[Pointer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8456 shl[Pointer] 65535[Pointer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8457 shl[compile-time] 65535[Pointer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8458 shl[Pointer] 65535[Pointer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8459 shl[compile-time] 65535[Pointer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8460 shl[Pointer] 65535[Pointer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8461 shl[compile-time] 65535[Pointer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8462 shl[Pointer] 0[Pointer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8463 shl[compile-time] 0[Pointer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8464 shl[Pointer] 0[Pointer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8465 shl[compile-time] 0[Pointer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8466 shl[Pointer] 0[Pointer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8467 shl[compile-time] 0[Pointer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8468 shl[Pointer] 0[Pointer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8469 shl[compile-time] 0[Pointer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8470 shl[Pointer] 0[Pointer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8471 shl[compile-time] 0[Pointer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8472 shl[Pointer] 0[Pointer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8473 shl[compile-time] 0[Pointer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8474 shl[Pointer] 0[Pointer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8475 shl[compile-time] 0[Pointer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8476 shl[Pointer] 0[Pointer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8477 shl[compile-time] 0[Pointer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8478 shl[Pointer] 0[Pointer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8479 shl[compile-time] 0[Pointer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8480 shl[Pointer] 0[Pointer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8481 shl[compile-time] 0[Pointer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8482 shl[Pointer] 255[Pointer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8483 shl[compile-time] 255[Pointer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8484 shl[Pointer] 255[Pointer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8485 shl[compile-time] 255[Pointer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8486 shl[Pointer] 255[Pointer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8487 shl[compile-time] 255[Pointer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8488 shl[Pointer] 255[Pointer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8489 shl[compile-time] 255[Pointer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8490 shl[Pointer] 255[Pointer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8491 shl[compile-time] 255[Pointer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8492 shl[Pointer] 255[Pointer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:8493 shl[compile-time] 255[Pointer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8494 shl[Pointer] 255[Pointer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:8495 shl[compile-time] 255[Pointer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8496 shl[Pointer] 255[Pointer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8497 shl[compile-time] 255[Pointer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8498 shl[Pointer] 255[Pointer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8499 shl[compile-time] 255[Pointer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8500 shl[Pointer] 255[Pointer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8501 shl[compile-time] 255[Pointer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8502 shl[Pointer] 32767[Pointer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8503 shl[compile-time] 32767[Pointer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8504 shl[Pointer] 32767[Pointer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8505 shl[compile-time] 32767[Pointer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8506 shl[Pointer] 32767[Pointer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8507 shl[compile-time] 32767[Pointer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8508 shl[Pointer] 32767[Pointer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8509 shl[compile-time] 32767[Pointer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8510 shl[Pointer] 32767[Pointer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8511 shl[compile-time] 32767[Pointer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8512 shl[Pointer] 32767[Pointer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8513 shl[compile-time] 32767[Pointer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8514 shl[Pointer] 32767[Pointer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8515 shl[compile-time] 32767[Pointer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8516 shl[Pointer] 32767[Pointer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8517 shl[compile-time] 32767[Pointer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8518 shl[Pointer] 32767[Pointer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8519 shl[compile-time] 32767[Pointer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8520 shl[Pointer] 32767[Pointer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8521 shl[compile-time] 32767[Pointer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8522 shl[Pointer] 32768[Pointer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8523 shl[compile-time] 32768[Pointer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8524 shl[Pointer] 32768[Pointer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8525 shl[compile-time] 32768[Pointer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8526 shl[Pointer] 32768[Pointer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8527 shl[compile-time] 32768[Pointer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8528 shl[Pointer] 32768[Pointer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8529 shl[compile-time] 32768[Pointer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8530 shl[Pointer] 32768[Pointer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8531 shl[compile-time] 32768[Pointer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8532 shl[Pointer] 32768[Pointer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8533 shl[compile-time] 32768[Pointer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8534 shl[Pointer] 32768[Pointer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8535 shl[compile-time] 32768[Pointer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8536 shl[Pointer] 32768[Pointer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8537 shl[compile-time] 32768[Pointer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8538 shl[Pointer] 32768[Pointer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8539 shl[compile-time] 32768[Pointer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8540 shl[Pointer] 32768[Pointer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8541 shl[compile-time] 32768[Pointer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8542 shl[Pointer] 65535[Pointer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8543 shl[compile-time] 65535[Pointer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8544 shl[Pointer] 65535[Pointer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8545 shl[compile-time] 65535[Pointer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8546 shl[Pointer] 65535[Pointer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8547 shl[compile-time] 65535[Pointer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8548 shl[Pointer] 65535[Pointer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8549 shl[compile-time] 65535[Pointer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8550 shl[Pointer] 65535[Pointer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8551 shl[compile-time] 65535[Pointer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8552 shl[Pointer] 65535[Pointer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8553 shl[compile-time] 65535[Pointer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8554 shl[Pointer] 65535[Pointer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8555 shl[compile-time] 65535[Pointer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8556 shl[Pointer] 65535[Pointer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8557 shl[compile-time] 65535[Pointer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8558 shl[Pointer] 65535[Pointer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8559 shl[compile-time] 65535[Pointer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8560 shl[Pointer] 65535[Pointer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8561 shl[compile-time] 65535[Pointer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8562 shl[Pointer] 0[Pointer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8563 shl[compile-time] 0[Pointer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8564 shl[Pointer] 0[Pointer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8565 shl[compile-time] 0[Pointer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8566 shl[Pointer] 0[Pointer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8567 shl[compile-time] 0[Pointer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8568 shl[Pointer] 0[Pointer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8569 shl[compile-time] 0[Pointer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8570 shl[Pointer] 0[Pointer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8571 shl[compile-time] 0[Pointer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8572 shl[Pointer] 0[Pointer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8573 shl[compile-time] 0[Pointer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8574 shl[Pointer] 0[Pointer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8575 shl[compile-time] 0[Pointer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8576 shl[Pointer] 0[Pointer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8577 shl[compile-time] 0[Pointer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8578 shl[Pointer] 0[Pointer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8579 shl[compile-time] 0[Pointer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8580 shl[Pointer] 0[Pointer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8581 shl[compile-time] 0[Pointer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8582 shl[Pointer] 255[Pointer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8583 shl[compile-time] 255[Pointer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8584 shl[Pointer] 255[Pointer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8585 shl[compile-time] 255[Pointer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8586 shl[Pointer] 255[Pointer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8587 shl[compile-time] 255[Pointer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8588 shl[Pointer] 255[Pointer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8589 shl[compile-time] 255[Pointer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8590 shl[Pointer] 255[Pointer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8591 shl[compile-time] 255[Pointer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8592 shl[Pointer] 255[Pointer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:8593 shl[compile-time] 255[Pointer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8594 shl[Pointer] 255[Pointer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8595 shl[compile-time] 255[Pointer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8596 shl[Pointer] 255[Pointer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8597 shl[compile-time] 255[Pointer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8598 shl[Pointer] 255[Pointer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8599 shl[compile-time] 255[Pointer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8600 shl[Pointer] 255[Pointer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8601 shl[compile-time] 255[Pointer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8602 shl[Pointer] 32767[Pointer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8603 shl[compile-time] 32767[Pointer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8604 shl[Pointer] 32767[Pointer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8605 shl[compile-time] 32767[Pointer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8606 shl[Pointer] 32767[Pointer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8607 shl[compile-time] 32767[Pointer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8608 shl[Pointer] 32767[Pointer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8609 shl[compile-time] 32767[Pointer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8610 shl[Pointer] 32767[Pointer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8611 shl[compile-time] 32767[Pointer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8612 shl[Pointer] 32767[Pointer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8613 shl[compile-time] 32767[Pointer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8614 shl[Pointer] 32767[Pointer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8615 shl[compile-time] 32767[Pointer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8616 shl[Pointer] 32767[Pointer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8617 shl[compile-time] 32767[Pointer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8618 shl[Pointer] 32767[Pointer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8619 shl[compile-time] 32767[Pointer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8620 shl[Pointer] 32767[Pointer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8621 shl[compile-time] 32767[Pointer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8622 shl[Pointer] 32768[Pointer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8623 shl[compile-time] 32768[Pointer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8624 shl[Pointer] 32768[Pointer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8625 shl[compile-time] 32768[Pointer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8626 shl[Pointer] 32768[Pointer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8627 shl[compile-time] 32768[Pointer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8628 shl[Pointer] 32768[Pointer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8629 shl[compile-time] 32768[Pointer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8630 shl[Pointer] 32768[Pointer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8631 shl[compile-time] 32768[Pointer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8632 shl[Pointer] 32768[Pointer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8633 shl[compile-time] 32768[Pointer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8634 shl[Pointer] 32768[Pointer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8635 shl[compile-time] 32768[Pointer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8636 shl[Pointer] 32768[Pointer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8637 shl[compile-time] 32768[Pointer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8638 shl[Pointer] 32768[Pointer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8639 shl[compile-time] 32768[Pointer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8640 shl[Pointer] 32768[Pointer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8641 shl[compile-time] 32768[Pointer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8642 shl[Pointer] 65535[Pointer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8643 shl[compile-time] 65535[Pointer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8644 shl[Pointer] 65535[Pointer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8645 shl[compile-time] 65535[Pointer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8646 shl[Pointer] 65535[Pointer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8647 shl[compile-time] 65535[Pointer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8648 shl[Pointer] 65535[Pointer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8649 shl[compile-time] 65535[Pointer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8650 shl[Pointer] 65535[Pointer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8651 shl[compile-time] 65535[Pointer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8652 shl[Pointer] 65535[Pointer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8653 shl[compile-time] 65535[Pointer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8654 shl[Pointer] 65535[Pointer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8655 shl[compile-time] 65535[Pointer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8656 shl[Pointer] 65535[Pointer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8657 shl[compile-time] 65535[Pointer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8658 shl[Pointer] 65535[Pointer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8659 shl[compile-time] 65535[Pointer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8660 shl[Pointer] 65535[Pointer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8661 shl[compile-time] 65535[Pointer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8662 shl[Pointer] 0[Pointer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8663 shl[compile-time] 0[Pointer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8664 shl[Pointer] 0[Pointer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8665 shl[compile-time] 0[Pointer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8666 shl[Pointer] 0[Pointer], -129[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8667 shl[compile-time] 0[Pointer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8668 shl[Pointer] 0[Pointer], -128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8669 shl[compile-time] 0[Pointer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8670 shl[Pointer] 0[Pointer], -1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8671 shl[compile-time] 0[Pointer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8672 shl[Pointer] 0[Pointer], 0[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8673 shl[compile-time] 0[Pointer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8674 shl[Pointer] 0[Pointer], 1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8675 shl[compile-time] 0[Pointer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8676 shl[Pointer] 0[Pointer], 127[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8677 shl[compile-time] 0[Pointer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8678 shl[Pointer] 0[Pointer], 128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8679 shl[compile-time] 0[Pointer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8680 shl[Pointer] 0[Pointer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8681 shl[compile-time] 0[Pointer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8682 shl[Pointer] 255[Pointer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8683 shl[compile-time] 255[Pointer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8684 shl[Pointer] 255[Pointer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8685 shl[compile-time] 255[Pointer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8686 shl[Pointer] 255[Pointer], -129[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8687 shl[compile-time] 255[Pointer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8688 shl[Pointer] 255[Pointer], -128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8689 shl[compile-time] 255[Pointer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8690 shl[Pointer] 255[Pointer], -1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8691 shl[compile-time] 255[Pointer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8692 shl[Pointer] 255[Pointer], 0[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:8693 shl[compile-time] 255[Pointer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8694 shl[Pointer] 255[Pointer], 1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:8695 shl[compile-time] 255[Pointer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8696 shl[Pointer] 255[Pointer], 127[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8697 shl[compile-time] 255[Pointer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8698 shl[Pointer] 255[Pointer], 128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8699 shl[compile-time] 255[Pointer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8700 shl[Pointer] 255[Pointer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8701 shl[compile-time] 255[Pointer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8702 shl[Pointer] 32767[Pointer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8703 shl[compile-time] 32767[Pointer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8704 shl[Pointer] 32767[Pointer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8705 shl[compile-time] 32767[Pointer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8706 shl[Pointer] 32767[Pointer], -129[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8707 shl[compile-time] 32767[Pointer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8708 shl[Pointer] 32767[Pointer], -128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8709 shl[compile-time] 32767[Pointer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8710 shl[Pointer] 32767[Pointer], -1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8711 shl[compile-time] 32767[Pointer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8712 shl[Pointer] 32767[Pointer], 0[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:8713 shl[compile-time] 32767[Pointer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8714 shl[Pointer] 32767[Pointer], 1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:8715 shl[compile-time] 32767[Pointer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:8716 shl[Pointer] 32767[Pointer], 127[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8717 shl[compile-time] 32767[Pointer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8718 shl[Pointer] 32767[Pointer], 128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8719 shl[compile-time] 32767[Pointer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8720 shl[Pointer] 32767[Pointer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8721 shl[compile-time] 32767[Pointer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8722 shl[Pointer] 32768[Pointer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8723 shl[compile-time] 32768[Pointer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8724 shl[Pointer] 32768[Pointer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8725 shl[compile-time] 32768[Pointer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8726 shl[Pointer] 32768[Pointer], -129[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8727 shl[compile-time] 32768[Pointer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8728 shl[Pointer] 32768[Pointer], -128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8729 shl[compile-time] 32768[Pointer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8730 shl[Pointer] 32768[Pointer], -1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8731 shl[compile-time] 32768[Pointer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8732 shl[Pointer] 32768[Pointer], 0[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:8733 shl[compile-time] 32768[Pointer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:8734 shl[Pointer] 32768[Pointer], 1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8735 shl[compile-time] 32768[Pointer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8736 shl[Pointer] 32768[Pointer], 127[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8737 shl[compile-time] 32768[Pointer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8738 shl[Pointer] 32768[Pointer], 128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8739 shl[compile-time] 32768[Pointer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8740 shl[Pointer] 32768[Pointer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8741 shl[compile-time] 32768[Pointer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8742 shl[Pointer] 65535[Pointer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8743 shl[compile-time] 65535[Pointer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8744 shl[Pointer] 65535[Pointer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8745 shl[compile-time] 65535[Pointer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8746 shl[Pointer] 65535[Pointer], -129[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8747 shl[compile-time] 65535[Pointer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8748 shl[Pointer] 65535[Pointer], -128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8749 shl[compile-time] 65535[Pointer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8750 shl[Pointer] 65535[Pointer], -1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8751 shl[compile-time] 65535[Pointer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8752 shl[Pointer] 65535[Pointer], 0[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:8753 shl[compile-time] 65535[Pointer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8754 shl[Pointer] 65535[Pointer], 1[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:8755 shl[compile-time] 65535[Pointer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8756 shl[Pointer] 65535[Pointer], 127[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8757 shl[compile-time] 65535[Pointer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8758 shl[Pointer] 65535[Pointer], 128[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8759 shl[compile-time] 65535[Pointer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8760 shl[Pointer] 65535[Pointer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:8761 shl[compile-time] 65535[Pointer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8762 shl[Pointer] 0[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8763 shl[compile-time] 0[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8764 shl[Pointer] 0[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8765 shl[compile-time] 0[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8766 shl[Pointer] 0[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8767 shl[compile-time] 0[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8768 shl[Pointer] 0[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8769 shl[compile-time] 0[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8770 shl[Pointer] 0[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8771 shl[compile-time] 0[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8772 shl[Pointer] 0[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8773 shl[compile-time] 0[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8774 shl[Pointer] 0[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8775 shl[compile-time] 0[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8776 shl[Pointer] 0[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8777 shl[compile-time] 0[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8778 shl[Pointer] 0[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8779 shl[compile-time] 0[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8780 shl[Pointer] 0[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8781 shl[compile-time] 0[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8782 shl[Pointer] 255[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8783 shl[compile-time] 255[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8784 shl[Pointer] 255[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8785 shl[compile-time] 255[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8786 shl[Pointer] 255[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8787 shl[compile-time] 255[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8788 shl[Pointer] 255[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8789 shl[compile-time] 255[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8790 shl[Pointer] 255[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8791 shl[compile-time] 255[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8792 shl[Pointer] 255[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:8793 shl[compile-time] 255[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8794 shl[Pointer] 255[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:8795 shl[compile-time] 255[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8796 shl[Pointer] 255[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8797 shl[compile-time] 255[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8798 shl[Pointer] 255[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8799 shl[compile-time] 255[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8800 shl[Pointer] 255[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8801 shl[compile-time] 255[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8802 shl[Pointer] 32767[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8803 shl[compile-time] 32767[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8804 shl[Pointer] 32767[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8805 shl[compile-time] 32767[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8806 shl[Pointer] 32767[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8807 shl[compile-time] 32767[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8808 shl[Pointer] 32767[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8809 shl[compile-time] 32767[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8810 shl[Pointer] 32767[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8811 shl[compile-time] 32767[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8812 shl[Pointer] 32767[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8813 shl[compile-time] 32767[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8814 shl[Pointer] 32767[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:8815 shl[compile-time] 32767[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:8816 shl[Pointer] 32767[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8817 shl[compile-time] 32767[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8818 shl[Pointer] 32767[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8819 shl[compile-time] 32767[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8820 shl[Pointer] 32767[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8821 shl[compile-time] 32767[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8822 shl[Pointer] 32768[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8823 shl[compile-time] 32768[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8824 shl[Pointer] 32768[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8825 shl[compile-time] 32768[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8826 shl[Pointer] 32768[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8827 shl[compile-time] 32768[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8828 shl[Pointer] 32768[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8829 shl[compile-time] 32768[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8830 shl[Pointer] 32768[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8831 shl[compile-time] 32768[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8832 shl[Pointer] 32768[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:8833 shl[compile-time] 32768[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:8834 shl[Pointer] 32768[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8835 shl[compile-time] 32768[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8836 shl[Pointer] 32768[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8837 shl[compile-time] 32768[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8838 shl[Pointer] 32768[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8839 shl[compile-time] 32768[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8840 shl[Pointer] 32768[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8841 shl[compile-time] 32768[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8842 shl[Pointer] 65535[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8843 shl[compile-time] 65535[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -32768;
endcode
varvalue r 0

$overflow on
code auto:8844 shl[Pointer] 65535[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8845 shl[compile-time] 65535[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -32767;
endcode
varvalue r 0

$overflow on
code auto:8846 shl[Pointer] 65535[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8847 shl[compile-time] 65535[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -129;
endcode
varvalue r 0

$overflow on
code auto:8848 shl[Pointer] 65535[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8849 shl[compile-time] 65535[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -128;
endcode
varvalue r 0

$overflow on
code auto:8850 shl[Pointer] 65535[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8851 shl[compile-time] 65535[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl -1;
endcode
varvalue r 0

$overflow on
code auto:8852 shl[Pointer] 65535[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:8853 shl[compile-time] 65535[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:8854 shl[Pointer] 65535[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:8855 shl[compile-time] 65535[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8856 shl[Pointer] 65535[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8857 shl[compile-time] 65535[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8858 shl[Pointer] 65535[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8859 shl[compile-time] 65535[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8860 shl[Pointer] 65535[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:8861 shl[compile-time] 65535[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:8862 shl[Pointer] 0[Pointer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8863 shl[compile-time] 0[Pointer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8864 shl[Pointer] 0[Pointer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8865 shl[compile-time] 0[Pointer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8866 shl[Pointer] 0[Pointer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8867 shl[compile-time] 0[Pointer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8868 shl[Pointer] 0[Pointer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8869 shl[compile-time] 0[Pointer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8870 shl[Pointer] 0[Pointer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8871 shl[compile-time] 0[Pointer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8872 shl[Pointer] 255[Pointer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8873 shl[compile-time] 255[Pointer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:8874 shl[Pointer] 255[Pointer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8875 shl[compile-time] 255[Pointer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8876 shl[Pointer] 255[Pointer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8877 shl[compile-time] 255[Pointer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8878 shl[Pointer] 255[Pointer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8879 shl[compile-time] 255[Pointer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8880 shl[Pointer] 255[Pointer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8881 shl[compile-time] 255[Pointer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8882 shl[Pointer] 32767[Pointer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8883 shl[compile-time] 32767[Pointer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8884 shl[Pointer] 32767[Pointer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8885 shl[compile-time] 32767[Pointer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8886 shl[Pointer] 32767[Pointer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8887 shl[compile-time] 32767[Pointer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8888 shl[Pointer] 32767[Pointer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8889 shl[compile-time] 32767[Pointer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8890 shl[Pointer] 32767[Pointer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8891 shl[compile-time] 32767[Pointer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8892 shl[Pointer] 32768[Pointer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8893 shl[compile-time] 32768[Pointer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8894 shl[Pointer] 32768[Pointer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8895 shl[compile-time] 32768[Pointer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8896 shl[Pointer] 32768[Pointer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8897 shl[compile-time] 32768[Pointer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8898 shl[Pointer] 32768[Pointer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8899 shl[compile-time] 32768[Pointer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8900 shl[Pointer] 32768[Pointer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8901 shl[compile-time] 32768[Pointer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8902 shl[Pointer] 65535[Pointer], 0[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8903 shl[compile-time] 65535[Pointer], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8904 shl[Pointer] 65535[Pointer], 1[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:8905 shl[compile-time] 65535[Pointer], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8906 shl[Pointer] 65535[Pointer], 127[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8907 shl[compile-time] 65535[Pointer], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8908 shl[Pointer] 65535[Pointer], 128[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8909 shl[compile-time] 65535[Pointer], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8910 shl[Pointer] 65535[Pointer], 255[Byte] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:8911 shl[compile-time] 65535[Pointer], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8912 shl[Pointer] 0[Pointer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8913 shl[compile-time] 0[Pointer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8914 shl[Pointer] 0[Pointer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8915 shl[compile-time] 0[Pointer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8916 shl[Pointer] 0[Pointer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8917 shl[compile-time] 0[Pointer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8918 shl[Pointer] 0[Pointer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8919 shl[compile-time] 0[Pointer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8920 shl[Pointer] 0[Pointer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8921 shl[compile-time] 0[Pointer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8922 shl[Pointer] 255[Pointer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:8923 shl[compile-time] 255[Pointer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8924 shl[Pointer] 255[Pointer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 510

code auto:8925 shl[compile-time] 255[Pointer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:8926 shl[Pointer] 255[Pointer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8927 shl[compile-time] 255[Pointer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8928 shl[Pointer] 255[Pointer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8929 shl[compile-time] 255[Pointer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8930 shl[Pointer] 255[Pointer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8931 shl[compile-time] 255[Pointer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8932 shl[Pointer] 32767[Pointer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:8933 shl[compile-time] 32767[Pointer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:8934 shl[Pointer] 32767[Pointer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8935 shl[compile-time] 32767[Pointer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8936 shl[Pointer] 32767[Pointer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8937 shl[compile-time] 32767[Pointer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8938 shl[Pointer] 32767[Pointer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8939 shl[compile-time] 32767[Pointer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8940 shl[Pointer] 32767[Pointer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8941 shl[compile-time] 32767[Pointer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8942 shl[Pointer] 32768[Pointer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8943 shl[compile-time] 32768[Pointer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8944 shl[Pointer] 32768[Pointer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8945 shl[compile-time] 32768[Pointer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8946 shl[Pointer] 32768[Pointer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8947 shl[compile-time] 32768[Pointer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8948 shl[Pointer] 32768[Pointer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8949 shl[compile-time] 32768[Pointer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8950 shl[Pointer] 32768[Pointer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8951 shl[compile-time] 32768[Pointer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8952 shl[Pointer] 65535[Pointer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8953 shl[compile-time] 65535[Pointer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:8954 shl[Pointer] 65535[Pointer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:8955 shl[compile-time] 65535[Pointer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:8956 shl[Pointer] 65535[Pointer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8957 shl[compile-time] 65535[Pointer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8958 shl[Pointer] 65535[Pointer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8959 shl[compile-time] 65535[Pointer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8960 shl[Pointer] 65535[Pointer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:8961 shl[compile-time] 65535[Pointer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8962 shl[Pointer] 0[Pointer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8963 shl[compile-time] 0[Pointer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:8964 shl[Pointer] 0[Pointer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8965 shl[compile-time] 0[Pointer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:8966 shl[Pointer] 0[Pointer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8967 shl[compile-time] 0[Pointer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8968 shl[Pointer] 0[Pointer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8969 shl[compile-time] 0[Pointer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8970 shl[Pointer] 0[Pointer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8971 shl[compile-time] 0[Pointer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8972 shl[Pointer] 255[Pointer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:8973 shl[compile-time] 255[Pointer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:8974 shl[Pointer] 255[Pointer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8975 shl[compile-time] 255[Pointer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 1;
endcode
compile error

$overflow on
code auto:8976 shl[Pointer] 255[Pointer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8977 shl[compile-time] 255[Pointer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8978 shl[Pointer] 255[Pointer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8979 shl[compile-time] 255[Pointer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8980 shl[Pointer] 255[Pointer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8981 shl[compile-time] 255[Pointer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8982 shl[Pointer] 32767[Pointer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8983 shl[compile-time] 32767[Pointer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:8984 shl[Pointer] 32767[Pointer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8985 shl[compile-time] 32767[Pointer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 1;
endcode
compile error

$overflow on
code auto:8986 shl[Pointer] 32767[Pointer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8987 shl[compile-time] 32767[Pointer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8988 shl[Pointer] 32767[Pointer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8989 shl[compile-time] 32767[Pointer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:8990 shl[Pointer] 32767[Pointer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8991 shl[compile-time] 32767[Pointer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:8992 shl[Pointer] 32768[Pointer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:8993 shl[compile-time] 32768[Pointer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:8994 shl[Pointer] 32768[Pointer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8995 shl[compile-time] 32768[Pointer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:8996 shl[Pointer] 32768[Pointer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8997 shl[compile-time] 32768[Pointer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:8998 shl[Pointer] 32768[Pointer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:8999 shl[compile-time] 32768[Pointer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9000 shl[Pointer] 32768[Pointer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9001 shl[compile-time] 32768[Pointer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9002 shl[Pointer] 65535[Pointer], 0[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9003 shl[compile-time] 65535[Pointer], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9004 shl[Pointer] 65535[Pointer], 1[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9005 shl[compile-time] 65535[Pointer], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:9006 shl[Pointer] 65535[Pointer], 127[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9007 shl[compile-time] 65535[Pointer], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9008 shl[Pointer] 65535[Pointer], 128[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9009 shl[compile-time] 65535[Pointer], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9010 shl[Pointer] 65535[Pointer], 255[Byte] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9011 shl[compile-time] 65535[Pointer], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9012 shl[Pointer] 0[Pointer], 0[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9013 shl[compile-time] 0[Pointer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9014 shl[Pointer] 0[Pointer], 1[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9015 shl[compile-time] 0[Pointer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:9016 shl[Pointer] 0[Pointer], 127[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9017 shl[compile-time] 0[Pointer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9018 shl[Pointer] 0[Pointer], 128[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9019 shl[compile-time] 0[Pointer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9020 shl[Pointer] 0[Pointer], 255[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9021 shl[compile-time] 0[Pointer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9022 shl[Pointer] 255[Pointer], 0[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:9023 shl[compile-time] 255[Pointer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9024 shl[Pointer] 255[Pointer], 1[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 510

code auto:9025 shl[compile-time] 255[Pointer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:9026 shl[Pointer] 255[Pointer], 127[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9027 shl[compile-time] 255[Pointer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9028 shl[Pointer] 255[Pointer], 128[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9029 shl[compile-time] 255[Pointer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9030 shl[Pointer] 255[Pointer], 255[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9031 shl[compile-time] 255[Pointer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9032 shl[Pointer] 32767[Pointer], 0[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:9033 shl[compile-time] 32767[Pointer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9034 shl[Pointer] 32767[Pointer], 1[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:9035 shl[compile-time] 32767[Pointer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:9036 shl[Pointer] 32767[Pointer], 127[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9037 shl[compile-time] 32767[Pointer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9038 shl[Pointer] 32767[Pointer], 128[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9039 shl[compile-time] 32767[Pointer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9040 shl[Pointer] 32767[Pointer], 255[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9041 shl[compile-time] 32767[Pointer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9042 shl[Pointer] 32768[Pointer], 0[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:9043 shl[compile-time] 32768[Pointer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9044 shl[Pointer] 32768[Pointer], 1[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9045 shl[compile-time] 32768[Pointer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:9046 shl[Pointer] 32768[Pointer], 127[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9047 shl[compile-time] 32768[Pointer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9048 shl[Pointer] 32768[Pointer], 128[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9049 shl[compile-time] 32768[Pointer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9050 shl[Pointer] 32768[Pointer], 255[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9051 shl[compile-time] 32768[Pointer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9052 shl[Pointer] 65535[Pointer], 0[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:9053 shl[compile-time] 65535[Pointer], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9054 shl[Pointer] 65535[Pointer], 1[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65534

code auto:9055 shl[compile-time] 65535[Pointer], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:9056 shl[Pointer] 65535[Pointer], 127[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9057 shl[compile-time] 65535[Pointer], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9058 shl[Pointer] 65535[Pointer], 128[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9059 shl[compile-time] 65535[Pointer], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9060 shl[Pointer] 65535[Pointer], 255[Byte] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9061 shl[compile-time] 65535[Pointer], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9062 shl[Pointer] 0[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9063 shl[compile-time] 0[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9064 shl[Pointer] 0[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9065 shl[compile-time] 0[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 1;
endcode
varvalue r 0

$overflow on
code auto:9066 shl[Pointer] 0[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9067 shl[compile-time] 0[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9068 shl[Pointer] 0[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9069 shl[compile-time] 0[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9070 shl[Pointer] 0[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9071 shl[compile-time] 0[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9072 shl[Pointer] 255[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:9073 shl[compile-time] 255[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9074 shl[Pointer] 255[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 510

code auto:9075 shl[compile-time] 255[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 1;
endcode
varvalue r 510

$overflow on
code auto:9076 shl[Pointer] 255[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9077 shl[compile-time] 255[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9078 shl[Pointer] 255[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9079 shl[compile-time] 255[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9080 shl[Pointer] 255[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9081 shl[compile-time] 255[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9082 shl[Pointer] 32767[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:9083 shl[compile-time] 32767[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9084 shl[Pointer] 32767[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:9085 shl[compile-time] 32767[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 1;
endcode
varvalue r 65534

$overflow on
code auto:9086 shl[Pointer] 32767[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9087 shl[compile-time] 32767[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9088 shl[Pointer] 32767[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9089 shl[compile-time] 32767[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9090 shl[Pointer] 32767[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9091 shl[compile-time] 32767[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9092 shl[Pointer] 32768[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:9093 shl[compile-time] 32768[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9094 shl[Pointer] 32768[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9095 shl[compile-time] 32768[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 1;
endcode
compile error

$overflow on
code auto:9096 shl[Pointer] 32768[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9097 shl[compile-time] 32768[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9098 shl[Pointer] 32768[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9099 shl[compile-time] 32768[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9100 shl[Pointer] 32768[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9101 shl[compile-time] 32768[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9102 shl[Pointer] 65535[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:9103 shl[compile-time] 65535[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9104 shl[Pointer] 65535[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65534

code auto:9105 shl[compile-time] 65535[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 1;
endcode
compile error

$overflow on
code auto:9106 shl[Pointer] 65535[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9107 shl[compile-time] 65535[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 127;
endcode
varvalue r 0

$overflow on
code auto:9108 shl[Pointer] 65535[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9109 shl[compile-time] 65535[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 128;
endcode
varvalue r 0

$overflow on
code auto:9110 shl[Pointer] 65535[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9111 shl[compile-time] 65535[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9112 shl[Pointer] 0[Pointer], 0[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9113 shl[compile-time] 0[Pointer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9114 shl[Pointer] 0[Pointer], 255[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9115 shl[compile-time] 0[Pointer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9116 shl[Pointer] 0[Pointer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9117 shl[compile-time] 0[Pointer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9118 shl[Pointer] 0[Pointer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9119 shl[compile-time] 0[Pointer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9120 shl[Pointer] 0[Pointer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9121 shl[compile-time] 0[Pointer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9122 shl[Pointer] 255[Pointer], 0[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9123 shl[compile-time] 255[Pointer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:9124 shl[Pointer] 255[Pointer], 255[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9125 shl[compile-time] 255[Pointer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9126 shl[Pointer] 255[Pointer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9127 shl[compile-time] 255[Pointer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9128 shl[Pointer] 255[Pointer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9129 shl[compile-time] 255[Pointer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9130 shl[Pointer] 255[Pointer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9131 shl[compile-time] 255[Pointer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9132 shl[Pointer] 32767[Pointer], 0[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9133 shl[compile-time] 32767[Pointer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:9134 shl[Pointer] 32767[Pointer], 255[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9135 shl[compile-time] 32767[Pointer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9136 shl[Pointer] 32767[Pointer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9137 shl[compile-time] 32767[Pointer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9138 shl[Pointer] 32767[Pointer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9139 shl[compile-time] 32767[Pointer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9140 shl[Pointer] 32767[Pointer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9141 shl[compile-time] 32767[Pointer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9142 shl[Pointer] 32768[Pointer], 0[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9143 shl[compile-time] 32768[Pointer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9144 shl[Pointer] 32768[Pointer], 255[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9145 shl[compile-time] 32768[Pointer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9146 shl[Pointer] 32768[Pointer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9147 shl[compile-time] 32768[Pointer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9148 shl[Pointer] 32768[Pointer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9149 shl[compile-time] 32768[Pointer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9150 shl[Pointer] 32768[Pointer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9151 shl[compile-time] 32768[Pointer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9152 shl[Pointer] 65535[Pointer], 0[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9153 shl[compile-time] 65535[Pointer], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9154 shl[Pointer] 65535[Pointer], 255[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9155 shl[compile-time] 65535[Pointer], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9156 shl[Pointer] 65535[Pointer], 32767[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9157 shl[compile-time] 65535[Pointer], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9158 shl[Pointer] 65535[Pointer], 32768[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9159 shl[compile-time] 65535[Pointer], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9160 shl[Pointer] 65535[Pointer], 65535[Word] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9161 shl[compile-time] 65535[Pointer], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9162 shl[Pointer] 0[Pointer], 0[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9163 shl[compile-time] 0[Pointer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9164 shl[Pointer] 0[Pointer], 255[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9165 shl[compile-time] 0[Pointer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9166 shl[Pointer] 0[Pointer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9167 shl[compile-time] 0[Pointer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9168 shl[Pointer] 0[Pointer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9169 shl[compile-time] 0[Pointer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9170 shl[Pointer] 0[Pointer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9171 shl[compile-time] 0[Pointer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9172 shl[Pointer] 255[Pointer], 0[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:9173 shl[compile-time] 255[Pointer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9174 shl[Pointer] 255[Pointer], 255[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9175 shl[compile-time] 255[Pointer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9176 shl[Pointer] 255[Pointer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9177 shl[compile-time] 255[Pointer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9178 shl[Pointer] 255[Pointer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9179 shl[compile-time] 255[Pointer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9180 shl[Pointer] 255[Pointer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9181 shl[compile-time] 255[Pointer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9182 shl[Pointer] 32767[Pointer], 0[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:9183 shl[compile-time] 32767[Pointer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9184 shl[Pointer] 32767[Pointer], 255[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9185 shl[compile-time] 32767[Pointer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9186 shl[Pointer] 32767[Pointer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9187 shl[compile-time] 32767[Pointer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9188 shl[Pointer] 32767[Pointer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9189 shl[compile-time] 32767[Pointer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9190 shl[Pointer] 32767[Pointer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9191 shl[compile-time] 32767[Pointer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9192 shl[Pointer] 32768[Pointer], 0[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:9193 shl[compile-time] 32768[Pointer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9194 shl[Pointer] 32768[Pointer], 255[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9195 shl[compile-time] 32768[Pointer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9196 shl[Pointer] 32768[Pointer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9197 shl[compile-time] 32768[Pointer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9198 shl[Pointer] 32768[Pointer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9199 shl[compile-time] 32768[Pointer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9200 shl[Pointer] 32768[Pointer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9201 shl[compile-time] 32768[Pointer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9202 shl[Pointer] 65535[Pointer], 0[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:9203 shl[compile-time] 65535[Pointer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9204 shl[Pointer] 65535[Pointer], 255[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9205 shl[compile-time] 65535[Pointer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9206 shl[Pointer] 65535[Pointer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9207 shl[compile-time] 65535[Pointer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9208 shl[Pointer] 65535[Pointer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9209 shl[compile-time] 65535[Pointer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9210 shl[Pointer] 65535[Pointer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9211 shl[compile-time] 65535[Pointer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9212 shl[Pointer] 0[Pointer], 0[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9213 shl[compile-time] 0[Pointer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9214 shl[Pointer] 0[Pointer], 255[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9215 shl[compile-time] 0[Pointer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9216 shl[Pointer] 0[Pointer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9217 shl[compile-time] 0[Pointer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9218 shl[Pointer] 0[Pointer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9219 shl[compile-time] 0[Pointer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9220 shl[Pointer] 0[Pointer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9221 shl[compile-time] 0[Pointer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9222 shl[Pointer] 255[Pointer], 0[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:9223 shl[compile-time] 255[Pointer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9224 shl[Pointer] 255[Pointer], 255[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9225 shl[compile-time] 255[Pointer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9226 shl[Pointer] 255[Pointer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9227 shl[compile-time] 255[Pointer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9228 shl[Pointer] 255[Pointer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9229 shl[compile-time] 255[Pointer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9230 shl[Pointer] 255[Pointer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9231 shl[compile-time] 255[Pointer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9232 shl[Pointer] 32767[Pointer], 0[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9233 shl[compile-time] 32767[Pointer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:9234 shl[Pointer] 32767[Pointer], 255[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9235 shl[compile-time] 32767[Pointer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9236 shl[Pointer] 32767[Pointer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9237 shl[compile-time] 32767[Pointer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9238 shl[Pointer] 32767[Pointer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9239 shl[compile-time] 32767[Pointer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9240 shl[Pointer] 32767[Pointer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9241 shl[compile-time] 32767[Pointer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9242 shl[Pointer] 32768[Pointer], 0[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9243 shl[compile-time] 32768[Pointer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9244 shl[Pointer] 32768[Pointer], 255[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9245 shl[compile-time] 32768[Pointer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9246 shl[Pointer] 32768[Pointer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9247 shl[compile-time] 32768[Pointer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9248 shl[Pointer] 32768[Pointer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9249 shl[compile-time] 32768[Pointer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9250 shl[Pointer] 32768[Pointer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9251 shl[compile-time] 32768[Pointer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9252 shl[Pointer] 65535[Pointer], 0[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9253 shl[compile-time] 65535[Pointer], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9254 shl[Pointer] 65535[Pointer], 255[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9255 shl[compile-time] 65535[Pointer], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9256 shl[Pointer] 65535[Pointer], 32767[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9257 shl[compile-time] 65535[Pointer], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9258 shl[Pointer] 65535[Pointer], 32768[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9259 shl[compile-time] 65535[Pointer], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9260 shl[Pointer] 65535[Pointer], 65535[Word] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9261 shl[compile-time] 65535[Pointer], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9262 shl[Pointer] 0[Pointer], 0[Word] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9263 shl[compile-time] 0[Pointer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9264 shl[Pointer] 0[Pointer], 255[Word] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9265 shl[compile-time] 0[Pointer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9266 shl[Pointer] 0[Pointer], 32767[Word] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9267 shl[compile-time] 0[Pointer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9268 shl[Pointer] 0[Pointer], 32768[Word] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9269 shl[compile-time] 0[Pointer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9270 shl[Pointer] 0[Pointer], 65535[Word] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9271 shl[compile-time] 0[Pointer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9272 shl[Pointer] 255[Pointer], 0[Word] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:9273 shl[compile-time] 255[Pointer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9274 shl[Pointer] 255[Pointer], 255[Word] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9275 shl[compile-time] 255[Pointer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9276 shl[Pointer] 255[Pointer], 32767[Word] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9277 shl[compile-time] 255[Pointer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9278 shl[Pointer] 255[Pointer], 32768[Word] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9279 shl[compile-time] 255[Pointer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9280 shl[Pointer] 255[Pointer], 65535[Word] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9281 shl[compile-time] 255[Pointer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9282 shl[Pointer] 32767[Pointer], 0[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:9283 shl[compile-time] 32767[Pointer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9284 shl[Pointer] 32767[Pointer], 255[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9285 shl[compile-time] 32767[Pointer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9286 shl[Pointer] 32767[Pointer], 32767[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9287 shl[compile-time] 32767[Pointer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9288 shl[Pointer] 32767[Pointer], 32768[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9289 shl[compile-time] 32767[Pointer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9290 shl[Pointer] 32767[Pointer], 65535[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9291 shl[compile-time] 32767[Pointer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9292 shl[Pointer] 32768[Pointer], 0[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:9293 shl[compile-time] 32768[Pointer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9294 shl[Pointer] 32768[Pointer], 255[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9295 shl[compile-time] 32768[Pointer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9296 shl[Pointer] 32768[Pointer], 32767[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9297 shl[compile-time] 32768[Pointer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9298 shl[Pointer] 32768[Pointer], 32768[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9299 shl[compile-time] 32768[Pointer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9300 shl[Pointer] 32768[Pointer], 65535[Word] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9301 shl[compile-time] 32768[Pointer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9302 shl[Pointer] 65535[Pointer], 0[Word] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:9303 shl[compile-time] 65535[Pointer], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9304 shl[Pointer] 65535[Pointer], 255[Word] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9305 shl[compile-time] 65535[Pointer], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9306 shl[Pointer] 65535[Pointer], 32767[Word] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9307 shl[compile-time] 65535[Pointer], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9308 shl[Pointer] 65535[Pointer], 32768[Word] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9309 shl[compile-time] 65535[Pointer], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9310 shl[Pointer] 65535[Pointer], 65535[Word] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9311 shl[compile-time] 65535[Pointer], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9312 shl[Pointer] 0[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9313 shl[compile-time] 0[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9314 shl[Pointer] 0[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9315 shl[compile-time] 0[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9316 shl[Pointer] 0[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9317 shl[compile-time] 0[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9318 shl[Pointer] 0[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9319 shl[compile-time] 0[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9320 shl[Pointer] 0[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9321 shl[compile-time] 0[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9322 shl[Pointer] 255[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:9323 shl[compile-time] 255[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9324 shl[Pointer] 255[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9325 shl[compile-time] 255[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9326 shl[Pointer] 255[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9327 shl[compile-time] 255[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9328 shl[Pointer] 255[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9329 shl[compile-time] 255[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9330 shl[Pointer] 255[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9331 shl[compile-time] 255[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9332 shl[Pointer] 32767[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:9333 shl[compile-time] 32767[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9334 shl[Pointer] 32767[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9335 shl[compile-time] 32767[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9336 shl[Pointer] 32767[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9337 shl[compile-time] 32767[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9338 shl[Pointer] 32767[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9339 shl[compile-time] 32767[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9340 shl[Pointer] 32767[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9341 shl[compile-time] 32767[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9342 shl[Pointer] 32768[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:9343 shl[compile-time] 32768[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9344 shl[Pointer] 32768[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9345 shl[compile-time] 32768[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9346 shl[Pointer] 32768[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9347 shl[compile-time] 32768[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9348 shl[Pointer] 32768[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9349 shl[compile-time] 32768[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9350 shl[Pointer] 32768[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9351 shl[compile-time] 32768[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9352 shl[Pointer] 65535[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:9353 shl[compile-time] 65535[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9354 shl[Pointer] 65535[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9355 shl[compile-time] 65535[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9356 shl[Pointer] 65535[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9357 shl[compile-time] 65535[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9358 shl[Pointer] 65535[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9359 shl[compile-time] 65535[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9360 shl[Pointer] 65535[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9361 shl[compile-time] 65535[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9362 shl[Pointer] 0[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9363 shl[compile-time] 0[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9364 shl[Pointer] 0[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9365 shl[compile-time] 0[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9366 shl[Pointer] 0[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9367 shl[compile-time] 0[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9368 shl[Pointer] 0[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9369 shl[compile-time] 0[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9370 shl[Pointer] 0[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9371 shl[compile-time] 0[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9372 shl[Pointer] 255[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9373 shl[compile-time] 255[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 0;
endcode
compile error

$overflow on
code auto:9374 shl[Pointer] 255[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9375 shl[compile-time] 255[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9376 shl[Pointer] 255[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9377 shl[compile-time] 255[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9378 shl[Pointer] 255[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9379 shl[compile-time] 255[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9380 shl[Pointer] 255[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9381 shl[compile-time] 255[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9382 shl[Pointer] 32767[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9383 shl[compile-time] 32767[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:9384 shl[Pointer] 32767[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9385 shl[compile-time] 32767[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9386 shl[Pointer] 32767[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9387 shl[compile-time] 32767[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9388 shl[Pointer] 32767[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9389 shl[compile-time] 32767[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9390 shl[Pointer] 32767[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9391 shl[compile-time] 32767[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9392 shl[Pointer] 32768[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9393 shl[compile-time] 32768[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9394 shl[Pointer] 32768[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9395 shl[compile-time] 32768[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9396 shl[Pointer] 32768[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9397 shl[compile-time] 32768[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9398 shl[Pointer] 32768[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9399 shl[compile-time] 32768[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9400 shl[Pointer] 32768[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9401 shl[compile-time] 32768[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9402 shl[Pointer] 65535[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a shl b;
endcode
runtime overflow

code auto:9403 shl[compile-time] 65535[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9404 shl[Pointer] 65535[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9405 shl[compile-time] 65535[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9406 shl[Pointer] 65535[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9407 shl[compile-time] 65535[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9408 shl[Pointer] 65535[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9409 shl[compile-time] 65535[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9410 shl[Pointer] 65535[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a shl b;
endcode
varvalue r 0

code auto:9411 shl[compile-time] 65535[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9412 shl[Pointer] 0[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9413 shl[compile-time] 0[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9414 shl[Pointer] 0[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9415 shl[compile-time] 0[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9416 shl[Pointer] 0[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9417 shl[compile-time] 0[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9418 shl[Pointer] 0[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9419 shl[compile-time] 0[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9420 shl[Pointer] 0[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9421 shl[compile-time] 0[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9422 shl[Pointer] 255[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 255

code auto:9423 shl[compile-time] 255[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9424 shl[Pointer] 255[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9425 shl[compile-time] 255[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9426 shl[Pointer] 255[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9427 shl[compile-time] 255[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9428 shl[Pointer] 255[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9429 shl[compile-time] 255[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9430 shl[Pointer] 255[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9431 shl[compile-time] 255[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9432 shl[Pointer] 32767[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 32767

code auto:9433 shl[compile-time] 32767[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9434 shl[Pointer] 32767[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9435 shl[compile-time] 32767[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9436 shl[Pointer] 32767[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9437 shl[compile-time] 32767[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9438 shl[Pointer] 32767[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9439 shl[compile-time] 32767[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9440 shl[Pointer] 32767[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9441 shl[compile-time] 32767[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9442 shl[Pointer] 32768[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:9443 shl[compile-time] 32768[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9444 shl[Pointer] 32768[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9445 shl[compile-time] 32768[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9446 shl[Pointer] 32768[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9447 shl[compile-time] 32768[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9448 shl[Pointer] 32768[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9449 shl[compile-time] 32768[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9450 shl[Pointer] 32768[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9451 shl[compile-time] 32768[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9452 shl[Pointer] 65535[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a shl b;
endcode
runtime overflow

code auto:9453 shl[compile-time] 65535[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9454 shl[Pointer] 65535[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9455 shl[compile-time] 65535[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9456 shl[Pointer] 65535[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9457 shl[compile-time] 65535[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9458 shl[Pointer] 65535[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9459 shl[compile-time] 65535[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9460 shl[Pointer] 65535[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a shl b;
endcode
varvalue r 0

code auto:9461 shl[compile-time] 65535[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9462 shl[Pointer] 0[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9463 shl[compile-time] 0[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9464 shl[Pointer] 0[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9465 shl[compile-time] 0[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9466 shl[Pointer] 0[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9467 shl[compile-time] 0[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9468 shl[Pointer] 0[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9469 shl[compile-time] 0[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9470 shl[Pointer] 0[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9471 shl[compile-time] 0[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9472 shl[Pointer] 255[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 255

code auto:9473 shl[compile-time] 255[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9474 shl[Pointer] 255[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9475 shl[compile-time] 255[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9476 shl[Pointer] 255[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9477 shl[compile-time] 255[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9478 shl[Pointer] 255[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9479 shl[compile-time] 255[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9480 shl[Pointer] 255[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9481 shl[compile-time] 255[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9482 shl[Pointer] 32767[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9483 shl[compile-time] 32767[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 0;
endcode
compile error

$overflow on
code auto:9484 shl[Pointer] 32767[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9485 shl[compile-time] 32767[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9486 shl[Pointer] 32767[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9487 shl[compile-time] 32767[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9488 shl[Pointer] 32767[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9489 shl[compile-time] 32767[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9490 shl[Pointer] 32767[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9491 shl[compile-time] 32767[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9492 shl[Pointer] 32768[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9493 shl[compile-time] 32768[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 0;
endcode
compile error

$overflow on
code auto:9494 shl[Pointer] 32768[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9495 shl[compile-time] 32768[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9496 shl[Pointer] 32768[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9497 shl[compile-time] 32768[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9498 shl[Pointer] 32768[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9499 shl[compile-time] 32768[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9500 shl[Pointer] 32768[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9501 shl[compile-time] 32768[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9502 shl[Pointer] 65535[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a shl b;
endcode
runtime overflow

code auto:9503 shl[compile-time] 65535[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 0;
endcode
compile error

$overflow on
code auto:9504 shl[Pointer] 65535[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9505 shl[compile-time] 65535[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9506 shl[Pointer] 65535[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9507 shl[compile-time] 65535[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9508 shl[Pointer] 65535[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9509 shl[compile-time] 65535[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9510 shl[Pointer] 65535[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a shl b;
endcode
varvalue r 0

code auto:9511 shl[compile-time] 65535[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9512 shl[Pointer] 0[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9513 shl[compile-time] 0[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9514 shl[Pointer] 0[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9515 shl[compile-time] 0[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9516 shl[Pointer] 0[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9517 shl[compile-time] 0[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9518 shl[Pointer] 0[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9519 shl[compile-time] 0[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9520 shl[Pointer] 0[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9521 shl[compile-time] 0[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9522 shl[Pointer] 255[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 255

code auto:9523 shl[compile-time] 255[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9524 shl[Pointer] 255[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9525 shl[compile-time] 255[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9526 shl[Pointer] 255[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9527 shl[compile-time] 255[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9528 shl[Pointer] 255[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9529 shl[compile-time] 255[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9530 shl[Pointer] 255[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9531 shl[compile-time] 255[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9532 shl[Pointer] 32767[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32767

code auto:9533 shl[compile-time] 32767[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9534 shl[Pointer] 32767[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9535 shl[compile-time] 32767[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9536 shl[Pointer] 32767[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9537 shl[compile-time] 32767[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9538 shl[Pointer] 32767[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9539 shl[compile-time] 32767[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9540 shl[Pointer] 32767[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9541 shl[compile-time] 32767[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9542 shl[Pointer] 32768[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 32768

code auto:9543 shl[compile-time] 32768[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9544 shl[Pointer] 32768[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9545 shl[compile-time] 32768[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9546 shl[Pointer] 32768[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9547 shl[compile-time] 32768[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9548 shl[Pointer] 32768[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9549 shl[compile-time] 32768[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9550 shl[Pointer] 32768[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9551 shl[compile-time] 32768[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9552 shl[Pointer] 65535[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 65535

code auto:9553 shl[compile-time] 65535[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9554 shl[Pointer] 65535[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9555 shl[compile-time] 65535[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9556 shl[Pointer] 65535[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9557 shl[compile-time] 65535[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9558 shl[Pointer] 65535[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9559 shl[compile-time] 65535[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9560 shl[Pointer] 65535[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a shl b;
endcode
varvalue r 0

code auto:9561 shl[compile-time] 65535[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9562 shl[Pointer] 0[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9563 shl[compile-time] 0[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 0;
endcode
varvalue r 0

$overflow on
code auto:9564 shl[Pointer] 0[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9565 shl[compile-time] 0[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9566 shl[Pointer] 0[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9567 shl[compile-time] 0[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9568 shl[Pointer] 0[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9569 shl[compile-time] 0[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9570 shl[Pointer] 0[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9571 shl[compile-time] 0[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9572 shl[Pointer] 255[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 255

code auto:9573 shl[compile-time] 255[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 0;
endcode
varvalue r 255

$overflow on
code auto:9574 shl[Pointer] 255[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9575 shl[compile-time] 255[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9576 shl[Pointer] 255[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9577 shl[compile-time] 255[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9578 shl[Pointer] 255[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9579 shl[compile-time] 255[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9580 shl[Pointer] 255[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9581 shl[compile-time] 255[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9582 shl[Pointer] 32767[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32767

code auto:9583 shl[compile-time] 32767[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 0;
endcode
varvalue r 32767

$overflow on
code auto:9584 shl[Pointer] 32767[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9585 shl[compile-time] 32767[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9586 shl[Pointer] 32767[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9587 shl[compile-time] 32767[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9588 shl[Pointer] 32767[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9589 shl[compile-time] 32767[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9590 shl[Pointer] 32767[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9591 shl[compile-time] 32767[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9592 shl[Pointer] 32768[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 32768

code auto:9593 shl[compile-time] 32768[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 0;
endcode
varvalue r 32768

$overflow on
code auto:9594 shl[Pointer] 32768[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9595 shl[compile-time] 32768[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9596 shl[Pointer] 32768[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9597 shl[compile-time] 32768[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9598 shl[Pointer] 32768[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9599 shl[compile-time] 32768[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9600 shl[Pointer] 32768[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9601 shl[compile-time] 32768[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 shl 65535;
endcode
varvalue r 0

$overflow on
code auto:9602 shl[Pointer] 65535[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 65535

code auto:9603 shl[compile-time] 65535[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 0;
endcode
varvalue r 65535

$overflow on
code auto:9604 shl[Pointer] 65535[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9605 shl[compile-time] 65535[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 255;
endcode
varvalue r 0

$overflow on
code auto:9606 shl[Pointer] 65535[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9607 shl[compile-time] 65535[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32767;
endcode
varvalue r 0

$overflow on
code auto:9608 shl[Pointer] 65535[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9609 shl[compile-time] 65535[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 32768;
endcode
varvalue r 0

$overflow on
code auto:9610 shl[Pointer] 65535[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a shl b;
endcode
varvalue r 0

code auto:9611 shl[compile-time] 65535[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 shl 65535;
endcode
varvalue r 0

