;Subranges;=========;============= DECLARATIONScode Decl Basic  type Sub1 = 1..10  type Sub2 = 1 ..10  type Sub3 = -1.. 10  type Sub4 = -32768..32767  type Sub5 = 0..65535  type Sub6 = 'a'..'z'  type Sub7 = 'A'..    'Z'endcodecompile noerrorcode Decl Expressions  type Intrinsics = low(Byte)..high(Word)  type Expression = 1+2..10*3  type Negatives = -11..-10  type MoreIntrinsics = low(Integer)..high(Byte)  type YetMoreIntrinsics = pred(0)..succ(255)  const Lower = 10  type Constants = Lower..Lower*2  type Positives = +11..+101endcodecompile noerrorcode Decl Enumerations  type Days = (Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday);  type Weekdays = Monday..Fridayendcodecompile noerrorcode Decl No operator  type Sub1 = 10 1endcodecompile RangeOperatorExpectedcode Decl No operator  type Sub1 = 10   var x:=1endcodecompile RangeOperatorExpectedcode Decl Mismatch Types 1  type Sub1 = 1..'z'   var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Mismatch Types 2  type Colours = (Red, White, Blue)  type Sub1 = Red..10   var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Mismatch Types 3  type Colours = (Red, White, Blue)  type Days = (Mon, Tue, Wed, Thu, Fri)  type Sub1 = Red..Wed  var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Not Simple  type Sub1 = 10..'Hello'endcodecompile SimpleConstExprExpectedcode Decl Not Constant Expr 1  var x:=10  type Sub1 = 1..xendcodecompile SimpleConstExprExpectedcode Decl Not Constant Expr 2  var x:=10  type Sub1 = x..100endcodecompile UndeclaredTypeOrInvalidTypeDefcode Decl Too Wide 1  type Sub1 = -1..32768endcodecompile RangeExprValuesTooWidecode Decl Too Wide 2  type Sub1 = -32768..65535endcodecompile RangeExprValuesTooWidecode Decl Misordered 1  type Sub1 = 10..1endcodecompile RangeValuesMisorderedcode Decl Misordered 2  type Colours = (Red, White, Blue)  type Sub1 = Blue..Redendcodecompile RangeValuesMisordered;=================== INSTANTIATE VARIABLEcode Instantiate Typed  type TLetter = 'a'..'z'  var Letter: TLetterendcodecompile noerrorcode Instantiate Inline  var Letter: 'a'..'z'endcodecompile noerror;Short is < 256 items in rangecode Instantiate Short Typed  type TNumber = 1000..1010  var Number: TNumberendcodecompile noerrorcode Instantiate Short Inline  var Number: 1000..1010endcodecompile noerror;Long is >= 256 items in rangecode Instantiate Long Typed  type TNumber = 1000..2000  var Number: TNumberendcodecompile noerrorcode Instantiate Long Inline  var Number: 1000..2000endcodecompile noerror;=================== ASSIGNMENT TO (& RANGE CHECKING)code Assign Constant  type TNumber = 10..20  var x: TNumber  x := 15endcodecompile noerrorvarvalue x 15code Assign Constant Out Of Range  type TNumber = 10..20  var x: TNumber  x := 100endcodecompile ConstantAssignmentOutOfRangecode Assign Char Const  type TAlpha = 'a'..'z'  var c: TAlpha  c := 'q'endcodevarvalue c 'q'code Assign Enum Const  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  Day := Wednesdayendcodevarvalue Day Wednesday;--------;Side note: Long and Short here refer to the size of the SubRange base type.;Short is a SubRange which fits within a byte. Long is a SubRange which requires two bytes.;--Byte to Shortcode Assign Byte To Short Low  type TNumber = 10..20  var x: TNumber  var y: Byte  y := 10  x := yendcodevarvalue x 10code Assign Byte To Short High  type TNumber = 10..20  var x: TNumber  var y: Byte  y := 20  x := yendcodevarvalue x 20code Assign Byte To Short Low Fail  type TNumber = 10..20  var x: TNumber  var y: Byte  y := 9  x := yendcoderuntime errorcode Assign Byte To Short High Fail  type TNumber = 10..20  var x: TNumber  var y: Byte  y := 21  x := yendcoderuntime errorcode Assign Byte To Short Zero-based Low  type TNumber = 0..200  var x: TNumber  var y: Byte  y := 0  x := yendcodevarvalue x 0code Assign Byte To Short Zero-based high  type TNumber = 0..200  var x: TNumber  var y: Byte  y := 200  x := yendcodevarvalue x 200code Assign Byte To Short Zero-based high fail  type TNumber = 0..200  var x: TNumber  var y: Byte  y := 201  x := yendcoderuntime errorcode Assign Byte To Short 255 High  type TNumber = 100..255  var x: TNumber  var y: Byte  y := 255  x := yendcodevarvalue x 255code Assign Byte To Short 255 too Low  type TNumber = 100..255  var x: TNumber  var y: Byte  y := 100  x := yendcodevarvalue x 100code Assign Byte To Short 255 too Low  type TNumber = 100..255  var x: TNumber  var y: Byte  y := 0  x := yendcoderuntime errorcode Assign Byte To Short Signed Low  type TNumber = -10..127  var x: TNumber  var y: Byte  y := 0  x := yendcodevarvalue x 0code Assign Byte To Short Signed High  type TNumber = -10..127  var x: TNumber  var y: Byte  y := 127  x := yendcodevarvalue x 127;--Byte to Longcode Assign Byte To Long Low  type TNumber = 10..2000  var x: TNumber  var y: Byte  y := 10  x := yendcodevarvalue x 10code Assign Byte To Long High  type TNumber = -1000..20  var x: TNumber  var y: Byte  y := 20  x := yendcodevarvalue x 20code Assign Byte To Long Low Fail  type TNumber = 10..20000  var x: TNumber  var y: Byte  y := 9  x := yendcoderuntime errorcode Assign Byte To Long High Fail  type TNumber = -10000..20  var x: TNumber  var y: Byte  y := 21  x := yendcoderuntime errorcode Assign Byte To Long Zero-based Low  type TNumber = 0..2000  var x: TNumber  var y: Byte  y := 0  x := yendcodevarvalue x 0code Assign Byte To Long 255 High  type TNumber = -100..255  var x: TNumber  var y: Byte  y := 255  x := yendcodevarvalue x 255code Assign Byte To Long Signed Low  type TNumber = -10..1270  var x: TNumber  var y: Byte  y := 0  x := yendcodevarvalue x 0code Assign Byte To Long Signed High  type TNumber = -1000..127  var x: TNumber  var y: Byte  y := 127  x := yendcodevarvalue x 127;These assignments can never succeed so should be caught as compile-timecode Assign Byte To Long Out of Range  type TNumber = 1000..1270  var x: TNumber  var y: Byte  y := 127  x := yendcodecompile TypeMismatchNoOverlapcode Assign Byte To Long Signed Out of Range  type TNumber = -1000..-127  var x: TNumber  var y: Byte  y := 127  x := yendcodecompile TypeMismatchNoOverlap;--Int8 to Shortcode Assign Int8 To Short Low  type TNumber = 10..20  var x: TNumber  var y: Int8  y := 10  x := yendcodevarvalue x 10code Assign Int8 To Short High  type TNumber = 10..20  var x: TNumber  var y: Int8  y := 20  x := yendcodevarvalue x 20code Assign Int8 To Short -ve Low  type TNumber = -10..20  var x: TNumber  var y: Int8  y := -10  x := yendcodevarvalue x -10code Assign Int8 To Short -ve High  type TNumber = -20..-10  var x: TNumber  var y: Int8  y := -10  x := yendcodevarvalue x -10code Assign Int8 To Short Too Low  type TNumber = 10..20  var x: TNumber  var y: Int8  y := 9  x := yendcoderuntime errorcode Assign Int8 To Short Too High  type TNumber = 10..20  var x: TNumber  var y: Int8  y := 21  x := yendcoderuntime errorcode Assign Int8 To Short -ve Too Low  type TNumber = -10..20  var x: TNumber  var y: Int8  y := -11  x := yendcoderuntime errorcode Assign Int8 To Short -ve Too High  type TNumber = -20..-10  var x: TNumber  var y: Int8  y := -9  x := yendcoderuntime errorcode Assign Int8 To Short -ve Min  type TNumber = -128..-10  var x: TNumber  var y: Int8  y := -128  x := yendcodevarvalue x -128code Assign Int8 To Short -ve Max  type TNumber = 0..127  var x: TNumber  var y: Int8  y := 127  x := yendcodevarvalue x 127;--Int8 to Longcode Assign Int8 To Long Low  type TNumber = 10..2000  var x: TNumber  var y: Int8  y := 10  x := yendcodevarvalue x 10code Assign Int8 To Long High  type TNumber = -1000..20  var x: TNumber  var y: Int8  y := 20  x := yendcodevarvalue x 20code Assign Int8 To Long -ve Low  type TNumber = -10..20000  var x: TNumber  var y: Int8  y := -10  x := yendcodevarvalue x -10code Assign Int8 To Long -ve High  type TNumber = -2000..-10  var x: TNumber  var y: Int8  y := -10  x := yendcodevarvalue x -10code Assign Int8 To Long Too Low  type TNumber = 10..2000  var x: TNumber  var y: Int8  y := 9  x := yendcoderuntime errorcode Assign Int8 To Long Too High  type TNumber = -1000..20  var x: TNumber  var y: Int8  y := 21  x := yendcoderuntime errorcode Assign Int8 To Long -ve Too Low  type TNumber = -10..2000  var x: TNumber  var y: Int8  y := -11  x := yendcoderuntime errorcode Assign Int8 To Long -ve Too High  type TNumber = -2000..-10  var x: TNumber  var y: Int8  y := -9  x := yendcoderuntime errorcode Assign Int8 To Long -ve Min  type TNumber = -128..1000  var x: TNumber  var y: Int8  y := -128  x := yendcodevarvalue x -128code Assign Int8 To Long -ve Max  type TNumber = -1000..127  var x: TNumber  var y: Int8  y := 127  x := yendcodevarvalue x 127code Assign Int8 To Long -ve No Overlap Low  type TNumber = -1280..-1000  var x: TNumber  var y: Int8  y := -128  x := yendcodecompile TypeMismatchNoOverLapcode Assign Int8 To Long -ve No Overlap High  type TNumber = 1280..20000  var x: TNumber  var y: Int8  y := -128  x := yendcodecompile TypeMismatchNoOverLapcode Assign Int8 To Long +ve No Overlap Low  type TNumber = -1000..-130  var x: TNumber  var y: Int8  y := 127  x := yendcodecompile TypeMismatchNoOverLapcode Assign Int8 To Long +ve No Overlap High  type TNumber = 1000..2000  var x: TNumber  var y: Int8  y := 127  x := yendcodecompile TypeMismatchNoOverLap;--Word to Shortcode Assign Word To Short Low  type TNumber = 10..20  var x: TNumber  var y: Word  y := 10  x := yendcodevarvalue x 10code Assign Word To Short High  type TNumber = 10..20  var x: TNumber  var y: Word  y := 20  x := yendcodevarvalue x 20code Assign Word To Short Low Fail  type TNumber = 10..20  var x: TNumber  var y: Word  y := 9  x := yendcoderuntime errorcode Assign Word To Short High Fail  type TNumber = 10..20  var x: TNumber  var y: Word  y := 21  x := yendcoderuntime errorcode Assign Word To Short Zero-based Low  type TNumber = 0..200  var x: TNumber  var y: Word  y := 0  x := yendcodevarvalue x 0code Assign Word To Short Zero-based high  type TNumber = 0..200  var x: TNumber  var y: Word  y := 200  x := yendcodevarvalue x 200code Assign Word To Short Zero-based high fail  type TNumber = 0..200  var x: TNumber  var y: Word  y := 201  x := yendcoderuntime errorcode Assign Word To Short 255 High  type TNumber = 100..255  var x: TNumber  var y: Word  y := 255  x := yendcodevarvalue x 255code Assign Word To Short 255 too Low  type TNumber = 100..255  var x: TNumber  var y: Word  y := 100  x := yendcodevarvalue x 100code Assign Word To Short 255 too Low  type TNumber = 100..255  var x: TNumber  var y: Word  y := 0  x := yendcoderuntime errorcode Assign Word To Short Signed Low  type TNumber = -10..127  var x: TNumber  var y: Word  y := 0  x := yendcodevarvalue x 0code Assign Word To Short Signed High  type TNumber = -10..127  var x: TNumber  var y: Word  y := 127  x := yendcodevarvalue x 127;--Word to Longcode Assign Word To Long Low  type TNumber = 10..2000  var x: TNumber  var y: Word  y := 10  x := yendcodevarvalue x 10code Assign Word To Long High  type TNumber = 10..2000  var x: TNumber  var y: Word  y := 2000  x := yendcodevarvalue x 2000code Assign Word To Long Low Fail  type TNumber = 10..2000  var x: TNumber  var y: Word  y := 9  x := yendcoderuntime errorcode Assign Word To Long High Fail  type TNumber = 10..2000  var x: TNumber  var y: Word  y := 2001  x := yendcoderuntime errorcode Assign Word To Long Zero-based Low  type TNumber = 0..2000  var x: TNumber  var y: Word  y := 0  x := yendcodevarvalue x 0code Assign Word To Long Zero-based high  type TNumber = 0..2000  var x: TNumber  var y: Word  y := 2000  x := yendcodevarvalue x 2000code Assign Word To Long Zero-based high fail  type TNumber = 0..2000  var x: TNumber  var y: Word  y := 2001  x := yendcoderuntime errorcode Assign Word To Long 65535 High  type TNumber = 100..65535  var x: TNumber  var y: Word  y := 65535  x := yendcodevarvalue x 65535code Assign Word To Long 65535 too Low  type TNumber = 100..65535  var x: TNumber  var y: Word  y := 100  x := yendcodevarvalue x 100code Assign Word To Long 65535 too Low  type TNumber = 100..65535  var x: TNumber  var y: Word  y := 0  x := yendcoderuntime errorcode Assign Word To Long Signed Low  type TNumber = -10..1270  var x: TNumber  var y: Word  y := 0  x := yendcodevarvalue x 0code Assign Word To Long Signed High  type TNumber = -10..1270  var x: TNumber  var y: Word  y := 1270  x := yendcodevarvalue x 1270;---;16-bit range tests test each byte individually and have several short cuts;depending on the range bounds. These 'edge' tests exercise that code.code Assign Word To Long Low Edge 1a Pass  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $02ff  x := yendcodevarvalue x $02ffcode Assign Word To Long Low Edge 1b Pass  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $0300  x := yendcodevarvalue x $0300code Assign Word To Long Low Edge 1c Pass  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $0301  x := yendcodevarvalue x $0301code Assign Word To Long Low Edge 1d Pass  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $03ff  x := yendcodevarvalue x $03ffcode Assign Word To Low Long Edge 1e Pass  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $0400  x := yendcodevarvalue x $0400code Assign Word To Low Long Edge 1f Fail  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $02fe  x := yendcoderuntime errorcode Assign Word To Low Long Edge 1g Fail  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $0200  x := yendcoderuntime errorcode Assign Word To Low Long Edge 1g Fail  type TNumber = $02ff..2000  var x: TNumber  var y: Word  y := $01ff  x := yendcoderuntime error;-code Assign Word To Long Low Edge 2a Pass  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $0300  x := yendcodevarvalue x $0300code Assign Word To Long Low Edge 2b Pass  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $0301  x := yendcodevarvalue x $0301code Assign Word To Long Low Edge 2c Pass  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $03ff  x := yendcodevarvalue x $03ffcode Assign Word To Long Low Edge 2d Pass  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $0400  x := yendcodevarvalue x $0400code Assign Word To Low Long Edge 2e Fail  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $02ff  x := yendcoderuntime errorcode Assign Word To Low Long Edge 2f Fail  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $0200  x := yendcoderuntime errorcode Assign Word To Low Long Edge 2g Fail  type TNumber = $0300..2000  var x: TNumber  var y: Word  y := $0201  x := yendcoderuntime error;-code Assign Word To Long Low Edge 3a Pass  type TNumber = $0301..2000  var x: TNumber  var y: Word  y := $0301  x := yendcodevarvalue x $0301code Assign Word To Long Low Edge 3b Pass  type TNumber = $0301..2000  var x: TNumber  var y: Word  y := $0401  x := yendcodevarvalue x $0401code Assign Word To Long Low Edge 3c Pass  type TNumber = $0301..2000  var x: TNumber  var y: Word  y := $0401  x := yendcodevarvalue x $0401code Assign Word To Low Long Edge 3d Fail  type TNumber = $0301..2000  var x: TNumber  var y: Word  y := $0300  x := yendcoderuntime errorcode Assign Word To Low Long Edge 3e Fail  type TNumber = $0301..2000  var x: TNumber  var y: Word  y := $0201  x := yendcoderuntime error;-code Assign Word To Long Low Edge 4a Pass  type TNumber = $00ff..2000  var x: TNumber  var y: Word  y := $00ff  x := yendcodevarvalue x $00ffcode Assign Word To Long Low Edge 4b Pass  type TNumber = $00ff..2000  var x: TNumber  var y: Word  y := $0100  x := yendcodevarvalue x $0100code Assign Word To Long Low Edge 4c Fail  type TNumber = $00ff..2000  var x: TNumber  var y: Word  y := $00fe  x := yendcoderuntime errorcode Assign Word To Long Low Edge 4d Pass  type TNumber = $00fe..2000  var x: TNumber  var y: Word  y := $00fe  x := yendcodevarvalue x $00fecode Assign Word To Long Low Edge 4e Pass  type TNumber = $00fe..2000  var x: TNumber  var y: Word  y := $00ff  x := yendcodevarvalue x $00ffcode Assign Word To Long Low Edge 4f Fail  type TNumber = $00fe..2000  var x: TNumber  var y: Word  y := $00fd  x := yendcoderuntime error;--code Assign Word To Long High Edge 1a Pass  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $2000  x := yendcodevarvalue x $2000code Assign Word To Long High Edge 1b Pass  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $1fff  x := yendcodevarvalue x $1fffcode Assign Word To Long High Edge 1c Pass  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $1ffe  x := yendcodevarvalue x $1ffecode Assign Word To Long High Edge 1d Pass  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $1e00  x := yendcodevarvalue x $1e00code Assign Word To Long High Edge 1e Pass  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $1eff  x := yendcodevarvalue x $1effcode Assign Word To Long High Edge 1f Fail  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $2001  x := yendcoderuntime errorcode Assign Word To Long High Edge 1g Fail  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $20ff  x := yendcoderuntime errorcode Assign Word To Long High Edge 1h Fail  type TNumber = 100..$2000  var x: TNumber  var y: Word  y := $2100  x := yendcoderuntime error;--code Assign Word To Long High Edge 2a Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1fff  x := yendcodevarvalue x $1fffcode Assign Word To Long High Edge 2b Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1ffe  x := yendcodevarvalue x $1ffecode Assign Word To Long High Edge 2c Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1f00  x := yendcodevarvalue x $1f00code Assign Word To Long High Edge 2d Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1eff  x := yendcodevarvalue x $1effcode Assign Word To Long High Edge 2e Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1efe  x := yendcodevarvalue x $1efecode Assign Word To Long High Edge 2f Pass  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $1e00  x := yendcodevarvalue x $1e00code Assign Word To Long High Edge 2g Fail  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $2000  x := yendcoderuntime errorcode Assign Word To Long High Edge 2h Fail  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $2001  x := yendcoderuntime errorcode Assign Word To Long High Edge 2i Fail  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $20ff  x := yendcoderuntime errorcode Assign Word To Long High Edge 2j Fail  type TNumber = 100..$1fff  var x: TNumber  var y: Word  y := $2100  x := yendcoderuntime error;--code Assign Word To Long High Edge 3a Pass  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $00ff  x := yendcodevarvalue x $00ffcode Assign Word To Long High Edge 3b Pass  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $00fe  x := yendcodevarvalue x $00fecode Assign Word To Long High Edge 3c Pass  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $0000  x := yendcodevarvalue x $0000code Assign Word To Long High Edge 3d Fail  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $0100  x := yendcoderuntime errorcode Assign Word To Long High Edge 3e Fail  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $0101  x := yendcoderuntime errorcode Assign Word To Long High Edge 3f Fail  type TNumber = -1000..$00ff  var x: TNumber  var y: Word  y := $01ff  x := yendcoderuntime error;--code Assign Word To Long Signed No Overlap  type TNumber = -1000..-10  var x: TNumber  var y: Word  y := 1270  x := yendcodecompile TypeMismatchNoOverlap;-----;Integer to Shortcode Assign Integer To Short  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 10  x := yendcodevarvalue x 10code Assign Integer To Short  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 20  x := yendcodevarvalue x 20code Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 9  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 9  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 21  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := -25  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := -500  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 130  x := yendcoderuntime errorcode Assign Integer To Short Fail  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 2000  x := yendcoderuntime error;--Integer to Long;-code Assign Integer To Long +ve Low  type TNumber = 10..2000  var x: TNumber  var y: Integer  y := 10  x := yendcodevarvalue x 10code Assign Integer To Long +ve Low  type TNumber = 10..2000  var x: TNumber  var y: Integer  y := 11  x := yendcodevarvalue x 11code Assign Integer To Long +ve Low Fail  type TNumber = 10..2000  var x: TNumber  var y: Integer  y := 9  x := yendcoderuntime errorcode Assign Integer To Long +ve Low Fail  type TNumber = 10..2000  var x: TNumber  var y: Integer  y := -255  x := yendcoderuntime errorcode Assign Integer To Long +ve Low  type TNumber = 1000..2000  var x: TNumber  var y: Integer  y := 1000  x := yendcodevarvalue x 1000code Assign Integer To Long +ve Low  type TNumber = 1000..2000  var x: TNumber  var y: Integer  y := 1001  x := yendcodevarvalue x 1001code Assign Integer To Long +ve Low Fail  type TNumber = 1000..2000  var x: TNumber  var y: Integer  y := 999  x := yendcoderuntime errorcode Assign Integer To Long +ve Low Fail  type TNumber = 1000..2000  var x: TNumber  var y: Integer  y := -255  x := yendcoderuntime error;-code Assign Integer To Long -ve +ve  type TNumber = -10..2000  var x: TNumber  var y: Integer  y := 10  x := yendcodevarvalue x 10code Assign Integer To Long -ve Low  type TNumber = -10..2000  var x: TNumber  var y: Integer  y := -9  x := yendcodevarvalue x -9code Assign Integer To Long -ve Low  type TNumber = -10..2000  var x: TNumber  var y: Integer  y := -10  x := yendcodevarvalue x -10code Assign Integer To Long -ve Low Fail  type TNumber = 010..2000  var x: TNumber  var y: Integer  y := -9  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Fail  type TNumber = -10..2000  var x: TNumber  var y: Integer  y := -255  x := yendcoderuntime errorcode Assign Integer To Long -ve Low  type TNumber = -1000..2000  var x: TNumber  var y: Integer  y := -1000  x := yendcodevarvalue x -1000code Assign Integer To Long -ve Low  type TNumber = -1000..2000  var x: TNumber  var y: Integer  y := -999  x := yendcodevarvalue x -999code Assign Integer To Long -ve Low Fail  type TNumber = -1000..2000  var x: TNumber  var y: Integer  y := -1001  x := yendcoderuntime error;-These 'edge' tests check for byte boundaries in binary numberscode Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := -256  x := yendcodevarvalue x -256code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := -257  x := yendcodevarvalue x -257code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -256  x := yendcodevarvalue x -256code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -257  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255code Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -256  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -257  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := 254  x := yendcodevarvalue x 254code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := 255  x := yendcodevarvalue x 255code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := 256  x := yendcodevarvalue x 256code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := 254  x := yendcodevarvalue x 254code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := 255  x := yendcodevarvalue x 255code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := 256  x := yendcodevarvalue x 256code Assign Integer To Long -ve Low Edge  type TNumber = -257..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -256  x := yendcodevarvalue x -256code Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -257  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -256..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255code Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -256  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -257  x := yendcoderuntime errorcode Assign Integer To Long -ve Low Edge  type TNumber = -255..2000  var x: TNumber  var y: Integer  y := -258  x := yendcoderuntime error;-code Assign Integer To Long +ve Low Edge  type TNumber = 127..2000  var x: TNumber  var y: Integer  y := 128  x := yendcodevarvalue x 128code Assign Integer To Long +ve Low Edge  type TNumber = 127..2000  var x: TNumber  var y: Integer  y := 127  x := yendcodevarvalue x 127code Assign Integer To Long +ve Low Edge  type TNumber = 127..2000  var x: TNumber  var y: Integer  y := 126  x := yendcoderuntime errorcode Assign Integer To Long +ve Low Edge  type TNumber = $00ff..2000  var x: TNumber  var y: Integer  y := $0100  x := yendcodevarvalue x $0100code Assign Integer To Long +ve Low Edge  type TNumber = $00ff..2000  var x: TNumber  var y: Integer  y := $00ff  x := yendcodevarvalue x $00ffcode Assign Integer To Long +ve Low Edge  type TNumber = $00ff..2000  var x: TNumber  var y: Integer  y := $00fe  x := yendcoderuntime error;-code Assign Integer To Long +ve High Edge  type TNumber = -127..2000  var x: TNumber  var y: Integer  y := 1999  x := yendcodevarvalue x 1999code Assign Integer To Long +ve High Edge  type TNumber = -127..2000  var x: TNumber  var y: Integer  y := 2000  x := yendcodevarvalue x 2000code Assign Integer To Long +ve High Edge  type TNumber = -127..2000  var x: TNumber  var y: Integer  y := 2001  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..-2000  var x: TNumber  var y: Integer  y := -2001  x := yendcodevarvalue x -2001code Assign Integer To Long +ve High Edge  type TNumber = -10000..-2000  var x: TNumber  var y: Integer  y := -2000  x := yendcodevarvalue x -2000code Assign Integer To Long +ve High Edge  type TNumber = -10000..-2000  var x: TNumber  var y: Integer  y := -1999  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..127  var x: TNumber  var y: Integer  y := 126  x := yendcodevarvalue x 126code Assign Integer To Long +ve High Edge  type TNumber = -10000..127  var x: TNumber  var y: Integer  y := 127  x := yendcodevarvalue x 127code Assign Integer To Long +ve High Edge  type TNumber = -10000..127  var x: TNumber  var y: Integer  y := 128  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..128  var x: TNumber  var y: Integer  y := 126  x := yendcodevarvalue x 126code Assign Integer To Long +ve High Edge  type TNumber = -10000..128  var x: TNumber  var y: Integer  y := 127  x := yendcodevarvalue x 127code Assign Integer To Long +ve High Edge  type TNumber = -10000..128  var x: TNumber  var y: Integer  y := 128  x := yendcodevarvalue x 128code Assign Integer To Long +ve High Edge  type TNumber = -10000..128  var x: TNumber  var y: Integer  y := 129  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..254  var x: TNumber  var y: Integer  y := 254  x := yendcodevarvalue x 254code Assign Integer To Long +ve High Edge  type TNumber = -10000..254  var x: TNumber  var y: Integer  y := 255  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..254  var x: TNumber  var y: Integer  y := 256  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..255  var x: TNumber  var y: Integer  y := 254  x := yendcodevarvalue x 254code Assign Integer To Long +ve High Edge  type TNumber = -10000..255  var x: TNumber  var y: Integer  y := 255  x := yendcodevarvalue x 255code Assign Integer To Long +ve High Edge  type TNumber = -10000..255  var x: TNumber  var y: Integer  y := 256  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..256  var x: TNumber  var y: Integer  y := 255  x := yendcodevarvalue x 255code Assign Integer To Long +ve High Edge  type TNumber = -10000..256  var x: TNumber  var y: Integer  y := 256  x := yendcodevarvalue x 256code Assign Integer To Long +ve High Edge  type TNumber = -10000..256  var x: TNumber  var y: Integer  y := 257  x := yendcoderuntime errorcode Assign Integer To Long -ve High Edge  type TNumber = -10000..-257  var x: TNumber  var y: Integer  y := -257  x := yendcodevarvalue x -257code Assign Integer To Long -ve High Edge  type TNumber = -10000..-257  var x: TNumber  var y: Integer  y := -256  x := yendcoderuntime errorcode Assign Integer To Long +ve High Edge  type TNumber = -10000..-257  var x: TNumber  var y: Integer  y := -255  x := yendcoderuntime errorcode Assign Integer To Long -ve High Edge  type TNumber = -10000..-256  var x: TNumber  var y: Integer  y := -257  x := yendcodevarvalue x -257code Assign Integer To Long -ve High Edge  type TNumber = -10000..-256  var x: TNumber  var y: Integer  y := -256  x := yendcodevarvalue x -256code Assign Integer To Long +ve High Edge  type TNumber = -10000..-256  var x: TNumber  var y: Integer  y := -255  x := yendcoderuntime errorcode Assign Integer To Long -ve High Edge  type TNumber = -10000..-255  var x: TNumber  var y: Integer  y := -257  x := yendcodevarvalue x -257code Assign Integer To Long -ve High Edge  type TNumber = -10000..-255  var x: TNumber  var y: Integer  y := -256  x := yendcodevarvalue x -256code Assign Integer To Long +ve High Edge  type TNumber = -10000..-255  var x: TNumber  var y: Integer  y := -255  x := yendcodevarvalue x -255;--Othercode Assign Char To  type TAlpha = 'a'..'z'  var c: TAlpha  var a := 'd'  c := aendcodevarvalue c 'd'code Assign Enum To  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  var Today: TDay = Thursday  Day := Todayendcodevarvalue Day Thursday;-----code Assign Out Of Range, No Range Checking  {$R-}  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 50  x := yendcoderuntime noerror;================== ASSIGN FROMcode Assign Integer From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Integer  x := 15  y := xendcodevarvalue y 15code Assign Word From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Word  x := 15  y := xendcodevarvalue y 15code Assign Byte From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Byte  x := 15  y := xendcodevarvalue y 15code Assign Int8 From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Int8  x := 15  y := xendcodevarvalue y 15  code Assign Integer From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Integer  x := 15  y := xendcodevarvalue y 15code Assign Word From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Word  x := 15  y := xendcodevarvalue y 15code Assign Byte From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Byte  x := 15  y := xendcodevarvalue y 15code Assign Int8 From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Int8  x := 15  y := xendcodevarvalue y 15code Assign Char From  type TAlpha = 'a'..'z'  var c: TAlpha  var a: Char  c := 'd'  a := cendcodevarvalue a 'd'code Assign Enum From  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  var Today: TDay  Day := Thursday  Today := Dayendcodevarvalue Today Thursday;--Subrange to SubRangecode Assign SubRange to SubRange  type TNumber = 10..20  var x: TNumber  var y: TNumber  x := 15  y := xendcodevarvalue x 15varvalue y 15code Assign SubRange to SubRange Impossible  type TNumber = 10..20  type TOther = 21..40  var x: TOther  var y: TNumber  x := 25  y := xendcodecompile TypeMismatchNoOverlapcode Assign SubRange to SubRange Overlap  type TNumber = 10..20  type TOther = 15..30  var x: TOther  var y: TNumber  x := 15  y := xendcodevarvalue x 15varvalue y 15code Assign SubRange to SubRange Overlap Fail  type TNumber = 10..20  type TOther = 15..30  var x: TOther  var y: TNumber  x := 21  y := xendcoderuntime error