;Subranges;=========;============= DECLARATIONScode Decl Basic  type Sub1 = 1..10  type Sub2 = 1 ..10  type Sub3 = -1.. 10  type Sub4 = -32768..32767  type Sub5 = 0..65535  type Sub6 = 'a'..'z'  type Sub7 = 'A'..    'Z'endcodecompile noerrorcode Decl Expressions  type Intrinsics = low(Byte)..high(Word)  type Expression = 1+2..10*3  type Negatives = -11..-10  type MoreIntrinsics = low(Integer)..high(Byte)  type YetMoreIntrinsics = pred(0)..succ(255)  const Lower = 10  type Constants = Lower..Lower*2  type Positives = +11..+101endcodecompile noerrorcode Decl Enumerations  type Days = (Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday);  type Weekdays = Monday..Fridayendcodecompile noerrorcode Decl No operator  type Sub1 = 10 1endcodecompile RangeOperatorExpectedcode Decl No operator  type Sub1 = 10   var x:=1endcodecompile RangeOperatorExpectedcode Decl Mismatch Types 1  type Sub1 = 1..'z'   var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Mismatch Types 2  type Colours = (Red, White, Blue)  type Sub1 = Red..10   var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Mismatch Types 3  type Colours = (Red, White, Blue)  type Days = (Mon, Tue, Wed, Thu, Fri)  type Sub1 = Red..Wed  var x:=1endcodecompile RangeBoundsTypeMismatchcode Decl Not Simple  type Sub1 = 10..'Hello'endcodecompile SimpleConstExprExpectedcode Decl Not Constant Expr 1  var x:=10  type Sub1 = 1..xendcodecompile SimpleConstExprExpectedcode Decl Not Constant Expr 2  var x:=10  type Sub1 = x..100endcodecompile InvalidTypeDefinitioncode Decl Too Wide 1  type Sub1 = -1..32768endcodecompile RangeExprValuesTooWidecode Decl Too Wide 2  type Sub1 = -32768..65535endcodecompile RangeExprValuesTooWidecode Decl Misordered 1  type Sub1 = 10..1endcodecompile RangeValuesMisorderedcode Decl Misordered 2  type Colours = (Red, White, Blue)  type Sub1 = Blue..Redendcodecompile RangeValuesMisordered;=================== INSTANTIATE VARIABLEcode Instantiate Typed  type TLetter = 'a'..'z'  var Letter: TLetterendcodecompile noerrorcode Instantiate Inline  var Letter: 'a'..'z'endcodecompile noerror;Short is < 256 items in rangecode Instantiate Short Typed  type TNumber = 1000..1010  var Number: TNumberendcodecompile noerrorcode Instantiate Short Inline  var Number: 1000..1010endcodecompile noerror;Long is >= 256 items in rangecode Instantiate Long Typed  type TNumber = 1000..2000  var Number: TNumberendcodecompile noerrorcode Instantiate Long Inline  var Number: 1000..2000endcodecompile noerror;=================== ASSIGNMENT TOcode Assign Constant  type TNumber = 10..20  var x: TNumber  x := 15endcodecompile noerrorvarvalue x 15code Assign Constant Out Of Range  type TNumber = 10..20  var x: TNumber  x := 100endcodecompile ConstantAssignmentOutOfRangecode Assign Char Const  type TAlpha = 'a'..'z'  var c: TAlpha  c := 'q'endcodevarvalue c 'q'code Assign Enum Const  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  Day := Wednesdayendcodevarvalue Day Wednesdaycode Assign SubRange to SubRange  type TNumber = 10..20  var x: TNumber  var y: TNumber  x := 15  y := xendcodevarvalue x 15varvalue y 15code Assign Integer To Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 15  x := yendcodevarvalue x 15code Assign Word To Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Word  y := 15  x := yendcodevarvalue x 15code Assign Byte To Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Byte  y := 15  x := yendcodevarvalue x 15code Assign Int8 To Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Int8  y := 15  x := yendcodevarvalue x 15  code Assign Integer To Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Integer  y := 15  x := yendcodevarvalue x 15code Assign Word To Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Word  y := 15  x := yendcodevarvalue x 15code Assign Byte To Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Byte  y := 15  x := yendcodevarvalue x 15code Assign Int8 To Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Int8  y := 15  x := yendcodevarvalue x 15code Assign Char To  type TAlpha = 'a'..'z'  var c: TAlpha  var a := 'd'  c := aendcodevarvalue c 'd'code Assign Enum To  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  var Today: TDay = Thursday  Day := Todayendcodevarvalue Day Thursdaycode Assign Out Of Range Error Integer to Byte  {$R+}  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 50  x := yendcoderuntime OutOfRangecode Assign Out Of Range, No Range Checking  {$R-}  type TNumber = 10..20  var x: TNumber  var y: Integer  y := 50  x := yendcoderuntime noerror;================== ASSIGN FROMcode Assign Integer From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Integer  x := 15  y := xendcodevarvalue y 15code Assign Word From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Word  x := 15  y := xendcodevarvalue y 15code Assign Byte From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Byte  x := 15  y := xendcodevarvalue y 15code Assign Int8 From Short SubRange  type TNumber = 10..20  var x: TNumber  var y: Int8  x := 15  y := xendcodevarvalue y 15  code Assign Integer From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Integer  x := 15  y := xendcodevarvalue y 15code Assign Word From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Word  x := 15  y := xendcodevarvalue y 15code Assign Byte From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Byte  x := 15  y := xendcodevarvalue y 15code Assign Int8 From Long SubRange  type TNumber = 10..2000  var x: TNumber  var y: Int8  x := 15  y := xendcodevarvalue y 15code Assign Char From  type TAlpha = 'a'..'z'  var c: TAlpha  var a: Char  c := 'd'  a := cendcodevarvalue a 'd'code Assign Enum From  type TDay = (Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday)  type TWeekday = Monday..Friday  var Day: TWeekday  var Today: TDay  Day := Thursday  Today := Dayendcodevarvalue Today Thursday