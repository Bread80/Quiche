;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:3 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 0

code auto:4 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 0

code auto:5 xor[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:6 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 1

code auto:7 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 1

code auto:8 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 1

code auto:9 xor[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 1;
endcode
varvalue r 1

$overflow on
code auto:10 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:11 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 127

code auto:12 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 127

code auto:13 xor[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 127;
endcode
varvalue r 127

$overflow on
code auto:14 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:15 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 128

code auto:16 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 128

code auto:17 xor[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 128;
endcode
varvalue r 128

$overflow on
code auto:18 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:19 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 255

code auto:20 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 255

code auto:21 xor[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:22 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 1

code auto:23 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 1

code auto:24 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 1

code auto:25 xor[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 0;
endcode
varvalue r 1

$overflow on
code auto:26 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:27 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 0

code auto:28 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 0

code auto:29 xor[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 1;
endcode
varvalue r 0

$overflow on
code auto:30 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 126

code auto:31 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 126

code auto:32 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 126

code auto:33 xor[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 127;
endcode
varvalue r 126

$overflow on
code auto:34 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 129

code auto:35 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 129

code auto:36 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 129

code auto:37 xor[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 128;
endcode
varvalue r 129

$overflow on
code auto:38 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 254

code auto:39 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 254

code auto:40 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 254

code auto:41 xor[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 255;
endcode
varvalue r 254

$overflow on
code auto:42 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:43 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 127

code auto:44 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 127

code auto:45 xor[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 0;
endcode
varvalue r 127

$overflow on
code auto:46 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 126

code auto:47 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 126

code auto:48 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 126

code auto:49 xor[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 1;
endcode
varvalue r 126

$overflow on
code auto:50 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:51 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 0

code auto:52 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 0

code auto:53 xor[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 127;
endcode
varvalue r 0

$overflow on
code auto:54 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:55 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 255

code auto:56 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 255

code auto:57 xor[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 128;
endcode
varvalue r 255

$overflow on
code auto:58 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:59 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 128

code auto:60 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 128

code auto:61 xor[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 255;
endcode
varvalue r 128

$overflow on
code auto:62 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:63 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 128

code auto:64 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 128

code auto:65 xor[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 0;
endcode
varvalue r 128

$overflow on
code auto:66 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 129

code auto:67 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 129

code auto:68 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 129

code auto:69 xor[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 1;
endcode
varvalue r 129

$overflow on
code auto:70 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:71 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 255

code auto:72 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 255

code auto:73 xor[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 127;
endcode
varvalue r 255

$overflow on
code auto:74 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:75 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 0

code auto:76 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 0

code auto:77 xor[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 128;
endcode
varvalue r 0

$overflow on
code auto:78 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:79 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 127

code auto:80 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 127

code auto:81 xor[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 255;
endcode
varvalue r 127

$overflow on
code auto:82 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:83 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 255

code auto:84 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 255

code auto:85 xor[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:86 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 254

code auto:87 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 254

code auto:88 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 254

code auto:89 xor[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 1;
endcode
varvalue r 254

$overflow on
code auto:90 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:91 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 128

code auto:92 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 128

code auto:93 xor[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 127;
endcode
varvalue r 128

$overflow on
code auto:94 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:95 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 127

code auto:96 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 127

code auto:97 xor[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 128;
endcode
varvalue r 127

$overflow on
code auto:98 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:99 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 0

code auto:100 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 0

code auto:101 xor[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow on
code auto:102 xor[Word] 0[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:103 xor[Word] 0[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 0

code auto:104 xor[Word] 0[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 0

code auto:105 xor[compile-time] 0[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:106 xor[Word] 0[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:107 xor[Word] 0[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 255

code auto:108 xor[Word] 0[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 255

code auto:109 xor[compile-time] 0[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:110 xor[Word] 0[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:111 xor[Word] 0[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32767

code auto:112 xor[Word] 0[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32767

code auto:113 xor[compile-time] 0[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32767;
endcode
varvalue r 32767

$overflow on
code auto:114 xor[Word] 0[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:115 xor[Word] 0[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32768

code auto:116 xor[Word] 0[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32768

code auto:117 xor[compile-time] 0[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32768;
endcode
varvalue r 32768

$overflow on
code auto:118 xor[Word] 0[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:119 xor[Word] 0[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 65535

code auto:120 xor[Word] 0[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65535

code auto:121 xor[compile-time] 0[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 65535;
endcode
varvalue r 65535

$overflow on
code auto:122 xor[Word] 1[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 1

code auto:123 xor[Word] 1[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 1

code auto:124 xor[Word] 1[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 1

code auto:125 xor[compile-time] 1[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 0;
endcode
varvalue r 1

$overflow on
code auto:126 xor[Word] 1[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 254

code auto:127 xor[Word] 1[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 254

code auto:128 xor[Word] 1[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 254

code auto:129 xor[compile-time] 1[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 255;
endcode
varvalue r 254

$overflow on
code auto:130 xor[Word] 1[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32766

code auto:131 xor[Word] 1[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 32766

code auto:132 xor[Word] 1[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32766

code auto:133 xor[compile-time] 1[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 32767;
endcode
varvalue r 32766

$overflow on
code auto:134 xor[Word] 1[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32769

code auto:135 xor[Word] 1[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 32769

code auto:136 xor[Word] 1[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32769

code auto:137 xor[compile-time] 1[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 32768;
endcode
varvalue r 32769

$overflow on
code auto:138 xor[Word] 1[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65534

code auto:139 xor[Word] 1[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 65534

code auto:140 xor[Word] 1[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65534

code auto:141 xor[compile-time] 1[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 65535;
endcode
varvalue r 65534

$overflow on
code auto:142 xor[Word] 127[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:143 xor[Word] 127[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 127

code auto:144 xor[Word] 127[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 127

code auto:145 xor[compile-time] 127[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 0;
endcode
varvalue r 127

$overflow on
code auto:146 xor[Word] 127[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:147 xor[Word] 127[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 128

code auto:148 xor[Word] 127[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 128

code auto:149 xor[compile-time] 127[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 255;
endcode
varvalue r 128

$overflow on
code auto:150 xor[Word] 127[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32640

code auto:151 xor[Word] 127[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 32640

code auto:152 xor[Word] 127[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32640

code auto:153 xor[compile-time] 127[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 32767;
endcode
varvalue r 32640

$overflow on
code auto:154 xor[Word] 127[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32895

code auto:155 xor[Word] 127[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 32895

code auto:156 xor[Word] 127[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32895

code auto:157 xor[compile-time] 127[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 32768;
endcode
varvalue r 32895

$overflow on
code auto:158 xor[Word] 127[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65408

code auto:159 xor[Word] 127[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 65408

code auto:160 xor[Word] 127[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65408

code auto:161 xor[compile-time] 127[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 65535;
endcode
varvalue r 65408

$overflow on
code auto:162 xor[Word] 128[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:163 xor[Word] 128[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 128

code auto:164 xor[Word] 128[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 128

code auto:165 xor[compile-time] 128[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 0;
endcode
varvalue r 128

$overflow on
code auto:166 xor[Word] 128[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:167 xor[Word] 128[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 127

code auto:168 xor[Word] 128[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 127

code auto:169 xor[compile-time] 128[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 255;
endcode
varvalue r 127

$overflow on
code auto:170 xor[Word] 128[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32639

code auto:171 xor[Word] 128[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 32639

code auto:172 xor[Word] 128[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32639

code auto:173 xor[compile-time] 128[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 32767;
endcode
varvalue r 32639

$overflow on
code auto:174 xor[Word] 128[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32896

code auto:175 xor[Word] 128[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 32896

code auto:176 xor[Word] 128[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32896

code auto:177 xor[compile-time] 128[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 32768;
endcode
varvalue r 32896

$overflow on
code auto:178 xor[Word] 128[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65407

code auto:179 xor[Word] 128[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 65407

code auto:180 xor[Word] 128[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65407

code auto:181 xor[compile-time] 128[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 65535;
endcode
varvalue r 65407

$overflow on
code auto:182 xor[Word] 255[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:183 xor[Word] 255[Byte], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 255

code auto:184 xor[Word] 255[Byte], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 255

code auto:185 xor[compile-time] 255[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:186 xor[Word] 255[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:187 xor[Word] 255[Byte], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 0

code auto:188 xor[Word] 255[Byte], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 0

code auto:189 xor[compile-time] 255[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow on
code auto:190 xor[Word] 255[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:191 xor[Word] 255[Byte], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 32512

code auto:192 xor[Word] 255[Byte], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32512

code auto:193 xor[compile-time] 255[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32767;
endcode
varvalue r 32512

$overflow on
code auto:194 xor[Word] 255[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:195 xor[Word] 255[Byte], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 33023

code auto:196 xor[Word] 255[Byte], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 33023

code auto:197 xor[compile-time] 255[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32768;
endcode
varvalue r 33023

$overflow on
code auto:198 xor[Word] 255[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:199 xor[Word] 255[Byte], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 65280

code auto:200 xor[Word] 255[Byte], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65280

code auto:201 xor[compile-time] 255[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 65535;
endcode
varvalue r 65280

$overflow on
code auto:202 xor[Word] 0[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:203 xor[Word] 0[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 0

code auto:204 xor[Word] 0[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 0

code auto:205 xor[compile-time] 0[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:206 xor[Word] 0[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 1

code auto:207 xor[Word] 0[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 1

code auto:208 xor[Word] 0[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 1

code auto:209 xor[compile-time] 0[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 1;
endcode
varvalue r 1

$overflow on
code auto:210 xor[Word] 0[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:211 xor[Word] 0[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 127

code auto:212 xor[Word] 0[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 127

code auto:213 xor[compile-time] 0[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 127;
endcode
varvalue r 127

$overflow on
code auto:214 xor[Word] 0[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:215 xor[Word] 0[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 128

code auto:216 xor[Word] 0[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 128

code auto:217 xor[compile-time] 0[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 128;
endcode
varvalue r 128

$overflow on
code auto:218 xor[Word] 0[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:219 xor[Word] 0[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 255

code auto:220 xor[Word] 0[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 255

code auto:221 xor[compile-time] 0[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:222 xor[Word] 255[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:223 xor[Word] 255[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 255

code auto:224 xor[Word] 255[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 255

code auto:225 xor[compile-time] 255[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:226 xor[Word] 255[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 254

code auto:227 xor[Word] 255[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 254

code auto:228 xor[Word] 255[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 254

code auto:229 xor[compile-time] 255[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 1;
endcode
varvalue r 254

$overflow on
code auto:230 xor[Word] 255[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:231 xor[Word] 255[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 128

code auto:232 xor[Word] 255[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 128

code auto:233 xor[compile-time] 255[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 127;
endcode
varvalue r 128

$overflow on
code auto:234 xor[Word] 255[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:235 xor[Word] 255[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 127

code auto:236 xor[Word] 255[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 127

code auto:237 xor[compile-time] 255[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 128;
endcode
varvalue r 127

$overflow on
code auto:238 xor[Word] 255[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:239 xor[Word] 255[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 0

code auto:240 xor[Word] 255[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 0

code auto:241 xor[compile-time] 255[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow on
code auto:242 xor[Word] 32767[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:243 xor[Word] 32767[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32767

code auto:244 xor[Word] 32767[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32767

code auto:245 xor[compile-time] 32767[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 0;
endcode
varvalue r 32767

$overflow on
code auto:246 xor[Word] 32767[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32766

code auto:247 xor[Word] 32767[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32766

code auto:248 xor[Word] 32767[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 32766

code auto:249 xor[compile-time] 32767[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 1;
endcode
varvalue r 32766

$overflow on
code auto:250 xor[Word] 32767[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32640

code auto:251 xor[Word] 32767[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32640

code auto:252 xor[Word] 32767[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 32640

code auto:253 xor[compile-time] 32767[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 127;
endcode
varvalue r 32640

$overflow on
code auto:254 xor[Word] 32767[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32639

code auto:255 xor[Word] 32767[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32639

code auto:256 xor[Word] 32767[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 32639

code auto:257 xor[compile-time] 32767[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 128;
endcode
varvalue r 32639

$overflow on
code auto:258 xor[Word] 32767[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:259 xor[Word] 32767[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32512

code auto:260 xor[Word] 32767[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 32512

code auto:261 xor[compile-time] 32767[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 255;
endcode
varvalue r 32512

$overflow on
code auto:262 xor[Word] 32768[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:263 xor[Word] 32768[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32768

code auto:264 xor[Word] 32768[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32768

code auto:265 xor[compile-time] 32768[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 0;
endcode
varvalue r 32768

$overflow on
code auto:266 xor[Word] 32768[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32769

code auto:267 xor[Word] 32768[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32769

code auto:268 xor[Word] 32768[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 32769

code auto:269 xor[compile-time] 32768[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 1;
endcode
varvalue r 32769

$overflow on
code auto:270 xor[Word] 32768[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32895

code auto:271 xor[Word] 32768[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32895

code auto:272 xor[Word] 32768[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 32895

code auto:273 xor[compile-time] 32768[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 127;
endcode
varvalue r 32895

$overflow on
code auto:274 xor[Word] 32768[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32896

code auto:275 xor[Word] 32768[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32896

code auto:276 xor[Word] 32768[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 32896

code auto:277 xor[compile-time] 32768[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 128;
endcode
varvalue r 32896

$overflow on
code auto:278 xor[Word] 32768[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:279 xor[Word] 32768[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 33023

code auto:280 xor[Word] 32768[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 33023

code auto:281 xor[compile-time] 32768[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 255;
endcode
varvalue r 33023

$overflow on
code auto:282 xor[Word] 65535[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:283 xor[Word] 65535[Word], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65535

code auto:284 xor[Word] 65535[Word], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 65535

code auto:285 xor[compile-time] 65535[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 0;
endcode
varvalue r 65535

$overflow on
code auto:286 xor[Word] 65535[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65534

code auto:287 xor[Word] 65535[Word], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65534

code auto:288 xor[Word] 65535[Word], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 65534

code auto:289 xor[compile-time] 65535[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 1;
endcode
varvalue r 65534

$overflow on
code auto:290 xor[Word] 65535[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65408

code auto:291 xor[Word] 65535[Word], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65408

code auto:292 xor[Word] 65535[Word], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 65408

code auto:293 xor[compile-time] 65535[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 127;
endcode
varvalue r 65408

$overflow on
code auto:294 xor[Word] 65535[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65407

code auto:295 xor[Word] 65535[Word], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65407

code auto:296 xor[Word] 65535[Word], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 65407

code auto:297 xor[compile-time] 65535[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 128;
endcode
varvalue r 65407

$overflow on
code auto:298 xor[Word] 65535[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:299 xor[Word] 65535[Word], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65280

code auto:300 xor[Word] 65535[Word], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 65280

code auto:301 xor[compile-time] 65535[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 255;
endcode
varvalue r 65280

$overflow on
code auto:302 xor[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:303 xor[Word] 0[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 0

code auto:304 xor[Word] 0[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 0

code auto:305 xor[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:306 xor[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:307 xor[Word] 0[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 255

code auto:308 xor[Word] 0[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 255

code auto:309 xor[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:310 xor[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:311 xor[Word] 0[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32767

code auto:312 xor[Word] 0[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32767

code auto:313 xor[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32767;
endcode
varvalue r 32767

$overflow on
code auto:314 xor[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:315 xor[Word] 0[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32768

code auto:316 xor[Word] 0[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32768

code auto:317 xor[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32768;
endcode
varvalue r 32768

$overflow on
code auto:318 xor[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:319 xor[Word] 0[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 65535

code auto:320 xor[Word] 0[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65535

code auto:321 xor[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 65535;
endcode
varvalue r 65535

$overflow on
code auto:322 xor[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:323 xor[Word] 255[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 255

code auto:324 xor[Word] 255[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 255

code auto:325 xor[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:326 xor[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:327 xor[Word] 255[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 0

code auto:328 xor[Word] 255[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 0

code auto:329 xor[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow on
code auto:330 xor[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:331 xor[Word] 255[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 32512

code auto:332 xor[Word] 255[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32512

code auto:333 xor[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32767;
endcode
varvalue r 32512

$overflow on
code auto:334 xor[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:335 xor[Word] 255[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 33023

code auto:336 xor[Word] 255[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 33023

code auto:337 xor[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32768;
endcode
varvalue r 33023

$overflow on
code auto:338 xor[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:339 xor[Word] 255[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 65280

code auto:340 xor[Word] 255[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65280

code auto:341 xor[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 65535;
endcode
varvalue r 65280

$overflow on
code auto:342 xor[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:343 xor[Word] 32767[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32767

code auto:344 xor[Word] 32767[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32767

code auto:345 xor[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 0;
endcode
varvalue r 32767

$overflow on
code auto:346 xor[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:347 xor[Word] 32767[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32512

code auto:348 xor[Word] 32767[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 32512

code auto:349 xor[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 255;
endcode
varvalue r 32512

$overflow on
code auto:350 xor[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:351 xor[Word] 32767[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 0

code auto:352 xor[Word] 32767[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 0

code auto:353 xor[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 32767;
endcode
varvalue r 0

$overflow on
code auto:354 xor[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:355 xor[Word] 32767[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 65535

code auto:356 xor[Word] 32767[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 65535

code auto:357 xor[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 32768;
endcode
varvalue r 65535

$overflow on
code auto:358 xor[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:359 xor[Word] 32767[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32768

code auto:360 xor[Word] 32767[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 32768

code auto:361 xor[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 65535;
endcode
varvalue r 32768

$overflow on
code auto:362 xor[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:363 xor[Word] 32768[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32768

code auto:364 xor[Word] 32768[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32768

code auto:365 xor[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 0;
endcode
varvalue r 32768

$overflow on
code auto:366 xor[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:367 xor[Word] 32768[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 33023

code auto:368 xor[Word] 32768[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 33023

code auto:369 xor[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 255;
endcode
varvalue r 33023

$overflow on
code auto:370 xor[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:371 xor[Word] 32768[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 65535

code auto:372 xor[Word] 32768[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 65535

code auto:373 xor[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 32767;
endcode
varvalue r 65535

$overflow on
code auto:374 xor[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:375 xor[Word] 32768[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 0

code auto:376 xor[Word] 32768[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 0

code auto:377 xor[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 32768;
endcode
varvalue r 0

$overflow on
code auto:378 xor[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:379 xor[Word] 32768[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32767

code auto:380 xor[Word] 32768[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 32767

code auto:381 xor[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 65535;
endcode
varvalue r 32767

$overflow on
code auto:382 xor[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:383 xor[Word] 65535[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65535

code auto:384 xor[Word] 65535[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 65535

code auto:385 xor[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 0;
endcode
varvalue r 65535

$overflow on
code auto:386 xor[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:387 xor[Word] 65535[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65280

code auto:388 xor[Word] 65535[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 65280

code auto:389 xor[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 255;
endcode
varvalue r 65280

$overflow on
code auto:390 xor[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:391 xor[Word] 65535[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 32768

code auto:392 xor[Word] 65535[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32768

code auto:393 xor[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 32767;
endcode
varvalue r 32768

$overflow on
code auto:394 xor[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:395 xor[Word] 65535[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 32767

code auto:396 xor[Word] 65535[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32767

code auto:397 xor[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 32768;
endcode
varvalue r 32767

$overflow on
code auto:398 xor[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:399 xor[Word] 65535[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 0

code auto:400 xor[Word] 65535[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 0

code auto:401 xor[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 65535;
endcode
varvalue r 0

$overflow on
code auto:402 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:403 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 0

code auto:404 xor[Byte] 0[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 0

code auto:405 xor[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:406 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 1

code auto:407 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 1

code auto:408 xor[Byte] 0[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 1

code auto:409 xor[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 1;
endcode
varvalue r 1

$overflow on
code auto:410 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:411 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 127

code auto:412 xor[Byte] 0[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 127

code auto:413 xor[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 127;
endcode
varvalue r 127

$overflow on
code auto:414 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:415 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 128

code auto:416 xor[Byte] 0[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 128

code auto:417 xor[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 128;
endcode
varvalue r 128

$overflow on
code auto:418 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:419 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 255

code auto:420 xor[Byte] 0[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 255

code auto:421 xor[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:422 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 1

code auto:423 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 1

code auto:424 xor[Byte] 1[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 1

code auto:425 xor[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 0;
endcode
varvalue r 1

$overflow on
code auto:426 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:427 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 0

code auto:428 xor[Byte] 1[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 0

code auto:429 xor[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 1;
endcode
varvalue r 0

$overflow on
code auto:430 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 126

code auto:431 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 126

code auto:432 xor[Byte] 1[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 126

code auto:433 xor[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 127;
endcode
varvalue r 126

$overflow on
code auto:434 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 129

code auto:435 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 129

code auto:436 xor[Byte] 1[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 129

code auto:437 xor[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 128;
endcode
varvalue r 129

$overflow on
code auto:438 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 254

code auto:439 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 1 xor b;
endcode
varvalue r 254

code auto:440 xor[Byte] 1[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 254

code auto:441 xor[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 xor 255;
endcode
varvalue r 254

$overflow on
code auto:442 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:443 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 127

code auto:444 xor[Byte] 127[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 127

code auto:445 xor[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 0;
endcode
varvalue r 127

$overflow on
code auto:446 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 126

code auto:447 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 126

code auto:448 xor[Byte] 127[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 126

code auto:449 xor[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 1;
endcode
varvalue r 126

$overflow on
code auto:450 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:451 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 0

code auto:452 xor[Byte] 127[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 0

code auto:453 xor[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 127;
endcode
varvalue r 0

$overflow on
code auto:454 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:455 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 255

code auto:456 xor[Byte] 127[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 255

code auto:457 xor[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 128;
endcode
varvalue r 255

$overflow on
code auto:458 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:459 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 127 xor b;
endcode
varvalue r 128

code auto:460 xor[Byte] 127[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 128

code auto:461 xor[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 xor 255;
endcode
varvalue r 128

$overflow on
code auto:462 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:463 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 128

code auto:464 xor[Byte] 128[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 128

code auto:465 xor[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 0;
endcode
varvalue r 128

$overflow on
code auto:466 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 129

code auto:467 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 129

code auto:468 xor[Byte] 128[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 129

code auto:469 xor[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 1;
endcode
varvalue r 129

$overflow on
code auto:470 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:471 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 255

code auto:472 xor[Byte] 128[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 255

code auto:473 xor[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 127;
endcode
varvalue r 255

$overflow on
code auto:474 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:475 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 0

code auto:476 xor[Byte] 128[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 0

code auto:477 xor[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 128;
endcode
varvalue r 0

$overflow on
code auto:478 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:479 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 128 xor b;
endcode
varvalue r 127

code auto:480 xor[Byte] 128[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 127

code auto:481 xor[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 xor 255;
endcode
varvalue r 127

$overflow on
code auto:482 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:483 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 255

code auto:484 xor[Byte] 255[Byte], 0[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 255

code auto:485 xor[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:486 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 254

code auto:487 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 254

code auto:488 xor[Byte] 255[Byte], 1[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 1;
endcode
varvalue r 254

code auto:489 xor[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 1;
endcode
varvalue r 254

$overflow on
code auto:490 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 128

code auto:491 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 128

code auto:492 xor[Byte] 255[Byte], 127[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 127;
endcode
varvalue r 128

code auto:493 xor[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 127;
endcode
varvalue r 128

$overflow on
code auto:494 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 127

code auto:495 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 127

code auto:496 xor[Byte] 255[Byte], 128[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 128;
endcode
varvalue r 127

code auto:497 xor[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 128;
endcode
varvalue r 127

$overflow on
code auto:498 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:499 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 0

code auto:500 xor[Byte] 255[Byte], 255[Byte] -> [Byte] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 0

code auto:501 xor[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow off
code auto:502 xor[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:503 xor[Byte] 0[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 0 xor b;
endcode
runtime noerror

code auto:504 xor[Byte] 0[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 0;
endcode
runtime noerror

code auto:505 xor[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 xor 0;
endcode
runtime noerror

$overflow on
code auto:506 xor[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:507 xor[Byte] 0[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 0

code auto:508 xor[Byte] 0[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 0

code auto:509 xor[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow off
code auto:510 xor[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:511 xor[Byte] 0[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 0 xor b;
endcode
runtime noerror

code auto:512 xor[Byte] 0[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 1;
endcode
runtime noerror

code auto:513 xor[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 xor 1;
endcode
runtime noerror

$overflow on
code auto:514 xor[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 1

code auto:515 xor[Byte] 0[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 1

code auto:516 xor[Byte] 0[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 1

code auto:517 xor[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 1;
endcode
varvalue r 1

$overflow off
code auto:518 xor[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:519 xor[Byte] 0[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 0 xor b;
endcode
runtime noerror

code auto:520 xor[Byte] 0[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 127;
endcode
runtime noerror

code auto:521 xor[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 xor 127;
endcode
runtime noerror

$overflow on
code auto:522 xor[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:523 xor[Byte] 0[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 127

code auto:524 xor[Byte] 0[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 127

code auto:525 xor[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 127;
endcode
varvalue r 127

$overflow off
code auto:526 xor[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:527 xor[Byte] 0[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 0 xor b;
endcode
runtime noerror

code auto:528 xor[Byte] 0[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 128;
endcode
runtime noerror

code auto:529 xor[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 xor 128;
endcode
runtime noerror

$overflow on
code auto:530 xor[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:531 xor[Byte] 0[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 128

code auto:532 xor[Byte] 0[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 128

code auto:533 xor[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 128;
endcode
varvalue r 128

$overflow off
code auto:534 xor[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:535 xor[Byte] 0[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 0 xor b;
endcode
runtime noerror

code auto:536 xor[Byte] 0[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 255;
endcode
runtime noerror

code auto:537 xor[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 xor 255;
endcode
runtime noerror

$overflow on
code auto:538 xor[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:539 xor[Byte] 0[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 255

code auto:540 xor[Byte] 0[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 0;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 255

code auto:541 xor[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow off
code auto:542 xor[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:543 xor[Byte] 1[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 1 xor b;
endcode
runtime noerror

code auto:544 xor[Byte] 1[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 0;
endcode
runtime noerror

code auto:545 xor[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 xor 0;
endcode
runtime noerror

$overflow on
code auto:546 xor[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 1

code auto:547 xor[Byte] 1[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 1

code auto:548 xor[Byte] 1[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 1

code auto:549 xor[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 0;
endcode
varvalue r 1

$overflow off
code auto:550 xor[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:551 xor[Byte] 1[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 1 xor b;
endcode
runtime noerror

code auto:552 xor[Byte] 1[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 1;
endcode
runtime noerror

code auto:553 xor[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 xor 1;
endcode
runtime noerror

$overflow on
code auto:554 xor[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:555 xor[Byte] 1[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 0

code auto:556 xor[Byte] 1[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 0

code auto:557 xor[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 1;
endcode
varvalue r 0

$overflow off
code auto:558 xor[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:559 xor[Byte] 1[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 1 xor b;
endcode
runtime noerror

code auto:560 xor[Byte] 1[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 127;
endcode
runtime noerror

code auto:561 xor[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 xor 127;
endcode
runtime noerror

$overflow on
code auto:562 xor[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 126

code auto:563 xor[Byte] 1[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 126

code auto:564 xor[Byte] 1[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 126

code auto:565 xor[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 127;
endcode
varvalue r 126

$overflow off
code auto:566 xor[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:567 xor[Byte] 1[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 1 xor b;
endcode
runtime noerror

code auto:568 xor[Byte] 1[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 128;
endcode
runtime noerror

code auto:569 xor[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 xor 128;
endcode
runtime noerror

$overflow on
code auto:570 xor[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 129

code auto:571 xor[Byte] 1[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 129

code auto:572 xor[Byte] 1[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 129

code auto:573 xor[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 128;
endcode
varvalue r 129

$overflow off
code auto:574 xor[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:575 xor[Byte] 1[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 1 xor b;
endcode
runtime noerror

code auto:576 xor[Byte] 1[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 255;
endcode
runtime noerror

code auto:577 xor[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 xor 255;
endcode
runtime noerror

$overflow on
code auto:578 xor[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 254

code auto:579 xor[Byte] 1[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 1 xor b;
endcode
varvalue r 254

code auto:580 xor[Byte] 1[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 1;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 254

code auto:581 xor[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 xor 255;
endcode
varvalue r 254

$overflow off
code auto:582 xor[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:583 xor[Byte] 127[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 127 xor b;
endcode
runtime noerror

code auto:584 xor[Byte] 127[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 0;
endcode
runtime noerror

code auto:585 xor[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 xor 0;
endcode
runtime noerror

$overflow on
code auto:586 xor[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:587 xor[Byte] 127[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 127

code auto:588 xor[Byte] 127[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 127

code auto:589 xor[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 0;
endcode
varvalue r 127

$overflow off
code auto:590 xor[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:591 xor[Byte] 127[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 127 xor b;
endcode
runtime noerror

code auto:592 xor[Byte] 127[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 1;
endcode
runtime noerror

code auto:593 xor[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 xor 1;
endcode
runtime noerror

$overflow on
code auto:594 xor[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 126

code auto:595 xor[Byte] 127[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 126

code auto:596 xor[Byte] 127[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 126

code auto:597 xor[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 1;
endcode
varvalue r 126

$overflow off
code auto:598 xor[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:599 xor[Byte] 127[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 127 xor b;
endcode
runtime noerror

code auto:600 xor[Byte] 127[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 127;
endcode
runtime noerror

code auto:601 xor[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 xor 127;
endcode
runtime noerror

$overflow on
code auto:602 xor[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:603 xor[Byte] 127[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 0

code auto:604 xor[Byte] 127[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 0

code auto:605 xor[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 127;
endcode
varvalue r 0

$overflow off
code auto:606 xor[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:607 xor[Byte] 127[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 127 xor b;
endcode
runtime noerror

code auto:608 xor[Byte] 127[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 128;
endcode
runtime noerror

code auto:609 xor[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 xor 128;
endcode
runtime noerror

$overflow on
code auto:610 xor[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:611 xor[Byte] 127[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 255

code auto:612 xor[Byte] 127[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 255

code auto:613 xor[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 128;
endcode
varvalue r 255

$overflow off
code auto:614 xor[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:615 xor[Byte] 127[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 127 xor b;
endcode
runtime noerror

code auto:616 xor[Byte] 127[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 255;
endcode
runtime noerror

code auto:617 xor[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 xor 255;
endcode
runtime noerror

$overflow on
code auto:618 xor[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:619 xor[Byte] 127[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 127 xor b;
endcode
varvalue r 128

code auto:620 xor[Byte] 127[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 127;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 128

code auto:621 xor[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 xor 255;
endcode
varvalue r 128

$overflow off
code auto:622 xor[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:623 xor[Byte] 128[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 128 xor b;
endcode
runtime noerror

code auto:624 xor[Byte] 128[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 0;
endcode
runtime noerror

code auto:625 xor[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 xor 0;
endcode
runtime noerror

$overflow on
code auto:626 xor[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:627 xor[Byte] 128[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 128

code auto:628 xor[Byte] 128[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 128

code auto:629 xor[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 0;
endcode
varvalue r 128

$overflow off
code auto:630 xor[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:631 xor[Byte] 128[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 128 xor b;
endcode
runtime noerror

code auto:632 xor[Byte] 128[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 1;
endcode
runtime noerror

code auto:633 xor[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 xor 1;
endcode
runtime noerror

$overflow on
code auto:634 xor[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 129

code auto:635 xor[Byte] 128[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 129

code auto:636 xor[Byte] 128[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 129

code auto:637 xor[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 1;
endcode
varvalue r 129

$overflow off
code auto:638 xor[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:639 xor[Byte] 128[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 128 xor b;
endcode
runtime noerror

code auto:640 xor[Byte] 128[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 127;
endcode
runtime noerror

code auto:641 xor[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 xor 127;
endcode
runtime noerror

$overflow on
code auto:642 xor[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:643 xor[Byte] 128[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 255

code auto:644 xor[Byte] 128[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 255

code auto:645 xor[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 127;
endcode
varvalue r 255

$overflow off
code auto:646 xor[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:647 xor[Byte] 128[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 128 xor b;
endcode
runtime noerror

code auto:648 xor[Byte] 128[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 128;
endcode
runtime noerror

code auto:649 xor[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 xor 128;
endcode
runtime noerror

$overflow on
code auto:650 xor[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:651 xor[Byte] 128[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 0

code auto:652 xor[Byte] 128[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 0

code auto:653 xor[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 128;
endcode
varvalue r 0

$overflow off
code auto:654 xor[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:655 xor[Byte] 128[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 128 xor b;
endcode
runtime noerror

code auto:656 xor[Byte] 128[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 255;
endcode
runtime noerror

code auto:657 xor[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 xor 255;
endcode
runtime noerror

$overflow on
code auto:658 xor[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:659 xor[Byte] 128[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 128 xor b;
endcode
varvalue r 127

code auto:660 xor[Byte] 128[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 128;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 127

code auto:661 xor[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 xor 255;
endcode
varvalue r 127

$overflow off
code auto:662 xor[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:663 xor[Byte] 255[Byte], 0[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 0;
  var  r: Word;
  r := 255 xor b;
endcode
runtime noerror

code auto:664 xor[Byte] 255[Byte], 0[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 0;
endcode
runtime noerror

code auto:665 xor[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 xor 0;
endcode
runtime noerror

$overflow on
code auto:666 xor[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:667 xor[Byte] 255[Byte], 0[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 0;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 255

code auto:668 xor[Byte] 255[Byte], 0[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 255

code auto:669 xor[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow off
code auto:670 xor[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:671 xor[Byte] 255[Byte], 1[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 1;
  var  r: Word;
  r := 255 xor b;
endcode
runtime noerror

code auto:672 xor[Byte] 255[Byte], 1[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 1;
endcode
runtime noerror

code auto:673 xor[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 xor 1;
endcode
runtime noerror

$overflow on
code auto:674 xor[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 254

code auto:675 xor[Byte] 255[Byte], 1[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 1;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 254

code auto:676 xor[Byte] 255[Byte], 1[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 1;
endcode
varvalue r 254

code auto:677 xor[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 1;
endcode
varvalue r 254

$overflow off
code auto:678 xor[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:679 xor[Byte] 255[Byte], 127[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 127;
  var  r: Word;
  r := 255 xor b;
endcode
runtime noerror

code auto:680 xor[Byte] 255[Byte], 127[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 127;
endcode
runtime noerror

code auto:681 xor[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 xor 127;
endcode
runtime noerror

$overflow on
code auto:682 xor[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 128

code auto:683 xor[Byte] 255[Byte], 127[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 127;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 128

code auto:684 xor[Byte] 255[Byte], 127[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 127;
endcode
varvalue r 128

code auto:685 xor[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 127;
endcode
varvalue r 128

$overflow off
code auto:686 xor[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:687 xor[Byte] 255[Byte], 128[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 128;
  var  r: Word;
  r := 255 xor b;
endcode
runtime noerror

code auto:688 xor[Byte] 255[Byte], 128[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 128;
endcode
runtime noerror

code auto:689 xor[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 xor 128;
endcode
runtime noerror

$overflow on
code auto:690 xor[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 127

code auto:691 xor[Byte] 255[Byte], 128[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 128;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 127

code auto:692 xor[Byte] 255[Byte], 128[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 128;
endcode
varvalue r 127

code auto:693 xor[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 128;
endcode
varvalue r 127

$overflow off
code auto:694 xor[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
runtime noerror

code auto:695 xor[Byte] 255[Byte], 255[Byte] -> [Word] Left immediate $overflow off
  var  b: Byte = 255;
  var  r: Word;
  r := 255 xor b;
endcode
runtime noerror

code auto:696 xor[Byte] 255[Byte], 255[Byte] -> [Word] Right immediate $overflow off
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 255;
endcode
runtime noerror

code auto:697 xor[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 xor 255;
endcode
runtime noerror

$overflow on
code auto:698 xor[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:699 xor[Byte] 255[Byte], 255[Byte] -> [Word] Left immediate $overflow on
  var  b: Byte = 255;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 0

code auto:700 xor[Byte] 255[Byte], 255[Byte] -> [Word] Right immediate $overflow on
  var  a: Byte = 255;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 0

code auto:701 xor[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow off
code auto:702 xor[Word] 0[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:703 xor[Word] 0[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime noerror

code auto:704 xor[Word] 0[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 0;
endcode
runtime noerror

code auto:705 xor[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 xor 0;
endcode
runtime noerror

$overflow on
code auto:706 xor[Word] 0[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:707 xor[Word] 0[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 0

code auto:708 xor[Word] 0[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 0

code auto:709 xor[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow off
code auto:710 xor[Word] 0[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:711 xor[Word] 0[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime noerror

code auto:712 xor[Word] 0[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 255;
endcode
runtime noerror

code auto:713 xor[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 xor 255;
endcode
runtime noerror

$overflow on
code auto:714 xor[Word] 0[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:715 xor[Word] 0[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 0 xor b;
endcode
varvalue r 255

code auto:716 xor[Word] 0[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 255

code auto:717 xor[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow off
code auto:718 xor[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:719 xor[Word] 0[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime noerror

code auto:720 xor[Word] 0[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime noerror

code auto:721 xor[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 xor 32767;
endcode
compile error

$overflow on
code auto:722 xor[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:723 xor[Word] 0[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime overflow

code auto:724 xor[Word] 0[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime overflow

code auto:725 xor[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 32767;
endcode
compile error

$overflow off
code auto:726 xor[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:727 xor[Word] 0[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime noerror

code auto:728 xor[Word] 0[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime noerror

code auto:729 xor[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 xor 32768;
endcode
compile error

$overflow on
code auto:730 xor[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:731 xor[Word] 0[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime overflow

code auto:732 xor[Word] 0[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime overflow

code auto:733 xor[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 32768;
endcode
compile error

$overflow off
code auto:734 xor[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:735 xor[Word] 0[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime noerror

code auto:736 xor[Word] 0[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime noerror

code auto:737 xor[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 xor 65535;
endcode
compile error

$overflow on
code auto:738 xor[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:739 xor[Word] 0[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 0 xor b;
endcode
runtime overflow

code auto:740 xor[Word] 0[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime overflow

code auto:741 xor[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 xor 65535;
endcode
compile error

$overflow off
code auto:742 xor[Word] 255[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:743 xor[Word] 255[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime noerror

code auto:744 xor[Word] 255[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 0;
endcode
runtime noerror

code auto:745 xor[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 xor 0;
endcode
runtime noerror

$overflow on
code auto:746 xor[Word] 255[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 255

code auto:747 xor[Word] 255[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 255

code auto:748 xor[Word] 255[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 0;
endcode
varvalue r 255

code auto:749 xor[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow off
code auto:750 xor[Word] 255[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:751 xor[Word] 255[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime noerror

code auto:752 xor[Word] 255[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 255;
endcode
runtime noerror

code auto:753 xor[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 xor 255;
endcode
runtime noerror

$overflow on
code auto:754 xor[Word] 255[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:755 xor[Word] 255[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 255 xor b;
endcode
varvalue r 0

code auto:756 xor[Word] 255[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 255;
endcode
varvalue r 0

code auto:757 xor[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow off
code auto:758 xor[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:759 xor[Word] 255[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime noerror

code auto:760 xor[Word] 255[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime noerror

code auto:761 xor[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 xor 32767;
endcode
compile error

$overflow on
code auto:762 xor[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:763 xor[Word] 255[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime overflow

code auto:764 xor[Word] 255[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime overflow

code auto:765 xor[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 32767;
endcode
compile error

$overflow off
code auto:766 xor[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:767 xor[Word] 255[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime noerror

code auto:768 xor[Word] 255[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime noerror

code auto:769 xor[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 xor 32768;
endcode
compile error

$overflow on
code auto:770 xor[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:771 xor[Word] 255[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime overflow

code auto:772 xor[Word] 255[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime overflow

code auto:773 xor[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 32768;
endcode
compile error

$overflow off
code auto:774 xor[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:775 xor[Word] 255[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime noerror

code auto:776 xor[Word] 255[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime noerror

code auto:777 xor[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 xor 65535;
endcode
compile error

$overflow on
code auto:778 xor[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:779 xor[Word] 255[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 255 xor b;
endcode
runtime overflow

code auto:780 xor[Word] 255[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime overflow

code auto:781 xor[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 xor 65535;
endcode
compile error

$overflow off
code auto:782 xor[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:783 xor[Word] 32767[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime noerror

code auto:784 xor[Word] 32767[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 0;
endcode
runtime noerror

code auto:785 xor[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 xor 0;
endcode
compile error

$overflow on
code auto:786 xor[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:787 xor[Word] 32767[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime overflow

code auto:788 xor[Word] 32767[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 0;
endcode
runtime overflow

code auto:789 xor[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 xor 0;
endcode
compile error

$overflow off
code auto:790 xor[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:791 xor[Word] 32767[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime noerror

code auto:792 xor[Word] 32767[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 255;
endcode
runtime noerror

code auto:793 xor[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 xor 255;
endcode
compile error

$overflow on
code auto:794 xor[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:795 xor[Word] 32767[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime overflow

code auto:796 xor[Word] 32767[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 255;
endcode
runtime overflow

code auto:797 xor[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 xor 255;
endcode
compile error

$overflow off
code auto:798 xor[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:799 xor[Word] 32767[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime noerror

code auto:800 xor[Word] 32767[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime noerror

code auto:801 xor[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 xor 32767;
endcode
runtime noerror

$overflow on
code auto:802 xor[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:803 xor[Word] 32767[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 32767 xor b;
endcode
varvalue r 0

code auto:804 xor[Word] 32767[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 32767;
endcode
varvalue r 0

code auto:805 xor[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 xor 32767;
endcode
varvalue r 0

$overflow off
code auto:806 xor[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:807 xor[Word] 32767[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime noerror

code auto:808 xor[Word] 32767[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime noerror

code auto:809 xor[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 xor 32768;
endcode
compile error

$overflow on
code auto:810 xor[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:811 xor[Word] 32767[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime overflow

code auto:812 xor[Word] 32767[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime overflow

code auto:813 xor[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 xor 32768;
endcode
compile error

$overflow off
code auto:814 xor[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:815 xor[Word] 32767[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime noerror

code auto:816 xor[Word] 32767[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime noerror

code auto:817 xor[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 xor 65535;
endcode
compile error

$overflow on
code auto:818 xor[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:819 xor[Word] 32767[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 32767 xor b;
endcode
runtime overflow

code auto:820 xor[Word] 32767[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime overflow

code auto:821 xor[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 xor 65535;
endcode
compile error

$overflow off
code auto:822 xor[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:823 xor[Word] 32768[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime noerror

code auto:824 xor[Word] 32768[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 0;
endcode
runtime noerror

code auto:825 xor[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 xor 0;
endcode
compile error

$overflow on
code auto:826 xor[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:827 xor[Word] 32768[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime overflow

code auto:828 xor[Word] 32768[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 0;
endcode
runtime overflow

code auto:829 xor[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 xor 0;
endcode
compile error

$overflow off
code auto:830 xor[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:831 xor[Word] 32768[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime noerror

code auto:832 xor[Word] 32768[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 255;
endcode
runtime noerror

code auto:833 xor[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 xor 255;
endcode
compile error

$overflow on
code auto:834 xor[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:835 xor[Word] 32768[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime overflow

code auto:836 xor[Word] 32768[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 255;
endcode
runtime overflow

code auto:837 xor[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 xor 255;
endcode
compile error

$overflow off
code auto:838 xor[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:839 xor[Word] 32768[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime noerror

code auto:840 xor[Word] 32768[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime noerror

code auto:841 xor[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 xor 32767;
endcode
compile error

$overflow on
code auto:842 xor[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:843 xor[Word] 32768[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime overflow

code auto:844 xor[Word] 32768[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime overflow

code auto:845 xor[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 xor 32767;
endcode
compile error

$overflow off
code auto:846 xor[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:847 xor[Word] 32768[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime noerror

code auto:848 xor[Word] 32768[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime noerror

code auto:849 xor[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 xor 32768;
endcode
runtime noerror

$overflow on
code auto:850 xor[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:851 xor[Word] 32768[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 32768 xor b;
endcode
varvalue r 0

code auto:852 xor[Word] 32768[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 32768;
endcode
varvalue r 0

code auto:853 xor[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 xor 32768;
endcode
varvalue r 0

$overflow off
code auto:854 xor[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:855 xor[Word] 32768[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime noerror

code auto:856 xor[Word] 32768[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime noerror

code auto:857 xor[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 xor 65535;
endcode
compile error

$overflow on
code auto:858 xor[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:859 xor[Word] 32768[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 32768 xor b;
endcode
runtime overflow

code auto:860 xor[Word] 32768[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime overflow

code auto:861 xor[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 xor 65535;
endcode
compile error

$overflow off
code auto:862 xor[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:863 xor[Word] 65535[Word], 0[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 0;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime noerror

code auto:864 xor[Word] 65535[Word], 0[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 0;
endcode
runtime noerror

code auto:865 xor[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 xor 0;
endcode
compile error

$overflow on
code auto:866 xor[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:867 xor[Word] 65535[Word], 0[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime overflow

code auto:868 xor[Word] 65535[Word], 0[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 0;
endcode
runtime overflow

code auto:869 xor[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 xor 0;
endcode
compile error

$overflow off
code auto:870 xor[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:871 xor[Word] 65535[Word], 255[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 255;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime noerror

code auto:872 xor[Word] 65535[Word], 255[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 255;
endcode
runtime noerror

code auto:873 xor[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 xor 255;
endcode
compile error

$overflow on
code auto:874 xor[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:875 xor[Word] 65535[Word], 255[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime overflow

code auto:876 xor[Word] 65535[Word], 255[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 255;
endcode
runtime overflow

code auto:877 xor[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 xor 255;
endcode
compile error

$overflow off
code auto:878 xor[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:879 xor[Word] 65535[Word], 32767[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32767;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime noerror

code auto:880 xor[Word] 65535[Word], 32767[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime noerror

code auto:881 xor[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 xor 32767;
endcode
compile error

$overflow on
code auto:882 xor[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:883 xor[Word] 65535[Word], 32767[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime overflow

code auto:884 xor[Word] 65535[Word], 32767[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 32767;
endcode
runtime overflow

code auto:885 xor[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 xor 32767;
endcode
compile error

$overflow off
code auto:886 xor[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:887 xor[Word] 65535[Word], 32768[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 32768;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime noerror

code auto:888 xor[Word] 65535[Word], 32768[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime noerror

code auto:889 xor[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 xor 32768;
endcode
compile error

$overflow on
code auto:890 xor[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a xor b;
endcode
runtime overflow

code auto:891 xor[Word] 65535[Word], 32768[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime overflow

code auto:892 xor[Word] 65535[Word], 32768[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 32768;
endcode
runtime overflow

code auto:893 xor[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 xor 32768;
endcode
compile error

$overflow off
code auto:894 xor[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
runtime noerror

code auto:895 xor[Word] 65535[Word], 65535[Word] -> [Byte] Left immediate $overflow off
  var  b: Word = 65535;
  var  r: Byte;
  r := 65535 xor b;
endcode
runtime noerror

code auto:896 xor[Word] 65535[Word], 65535[Word] -> [Byte] Right immediate $overflow off
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 65535;
endcode
runtime noerror

code auto:897 xor[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 xor 65535;
endcode
runtime noerror

$overflow on
code auto:898 xor[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a xor b;
endcode
varvalue r 0

code auto:899 xor[Word] 65535[Word], 65535[Word] -> [Byte] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Byte;
  r := 65535 xor b;
endcode
varvalue r 0

code auto:900 xor[Word] 65535[Word], 65535[Word] -> [Byte] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Byte;
  r := a xor 65535;
endcode
varvalue r 0

code auto:901 xor[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 xor 65535;
endcode
varvalue r 0

$overflow on
code auto:902 xor[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:903 xor[Word] 0[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 0

code auto:904 xor[Word] 0[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 0

code auto:905 xor[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 0;
endcode
varvalue r 0

$overflow on
code auto:906 xor[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:907 xor[Word] 0[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 255

code auto:908 xor[Word] 0[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 255

code auto:909 xor[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 255;
endcode
varvalue r 255

$overflow on
code auto:910 xor[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:911 xor[Word] 0[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32767

code auto:912 xor[Word] 0[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32767

code auto:913 xor[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32767;
endcode
varvalue r 32767

$overflow on
code auto:914 xor[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:915 xor[Word] 0[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 32768

code auto:916 xor[Word] 0[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32768

code auto:917 xor[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 32768;
endcode
varvalue r 32768

$overflow on
code auto:918 xor[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:919 xor[Word] 0[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 0 xor b;
endcode
varvalue r 65535

code auto:920 xor[Word] 0[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 0;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65535

code auto:921 xor[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 xor 65535;
endcode
varvalue r 65535

$overflow on
code auto:922 xor[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 255

code auto:923 xor[Word] 255[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 255

code auto:924 xor[Word] 255[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 255

code auto:925 xor[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 0;
endcode
varvalue r 255

$overflow on
code auto:926 xor[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:927 xor[Word] 255[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 0

code auto:928 xor[Word] 255[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 0

code auto:929 xor[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 255;
endcode
varvalue r 0

$overflow on
code auto:930 xor[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:931 xor[Word] 255[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 32512

code auto:932 xor[Word] 255[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32512

code auto:933 xor[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32767;
endcode
varvalue r 32512

$overflow on
code auto:934 xor[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:935 xor[Word] 255[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 33023

code auto:936 xor[Word] 255[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 33023

code auto:937 xor[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 32768;
endcode
varvalue r 33023

$overflow on
code auto:938 xor[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:939 xor[Word] 255[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 255 xor b;
endcode
varvalue r 65280

code auto:940 xor[Word] 255[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 255;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 65280

code auto:941 xor[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 xor 65535;
endcode
varvalue r 65280

$overflow on
code auto:942 xor[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:943 xor[Word] 32767[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32767

code auto:944 xor[Word] 32767[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32767

code auto:945 xor[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 0;
endcode
varvalue r 32767

$overflow on
code auto:946 xor[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32512

code auto:947 xor[Word] 32767[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32512

code auto:948 xor[Word] 32767[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 32512

code auto:949 xor[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 255;
endcode
varvalue r 32512

$overflow on
code auto:950 xor[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:951 xor[Word] 32767[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 0

code auto:952 xor[Word] 32767[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 0

code auto:953 xor[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 32767;
endcode
varvalue r 0

$overflow on
code auto:954 xor[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:955 xor[Word] 32767[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 65535

code auto:956 xor[Word] 32767[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 65535

code auto:957 xor[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 32768;
endcode
varvalue r 65535

$overflow on
code auto:958 xor[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:959 xor[Word] 32767[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32767 xor b;
endcode
varvalue r 32768

code auto:960 xor[Word] 32767[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32767;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 32768

code auto:961 xor[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 xor 65535;
endcode
varvalue r 32768

$overflow on
code auto:962 xor[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:963 xor[Word] 32768[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32768

code auto:964 xor[Word] 32768[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 32768

code auto:965 xor[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 0;
endcode
varvalue r 32768

$overflow on
code auto:966 xor[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 33023

code auto:967 xor[Word] 32768[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 33023

code auto:968 xor[Word] 32768[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 33023

code auto:969 xor[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 255;
endcode
varvalue r 33023

$overflow on
code auto:970 xor[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:971 xor[Word] 32768[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 65535

code auto:972 xor[Word] 32768[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 65535

code auto:973 xor[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 32767;
endcode
varvalue r 65535

$overflow on
code auto:974 xor[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:975 xor[Word] 32768[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 0

code auto:976 xor[Word] 32768[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 0

code auto:977 xor[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 32768;
endcode
varvalue r 0

$overflow on
code auto:978 xor[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:979 xor[Word] 32768[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 32768 xor b;
endcode
varvalue r 32767

code auto:980 xor[Word] 32768[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 32768;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 32767

code auto:981 xor[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 xor 65535;
endcode
varvalue r 32767

$overflow on
code auto:982 xor[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65535

code auto:983 xor[Word] 65535[Word], 0[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 0;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65535

code auto:984 xor[Word] 65535[Word], 0[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 0;
endcode
varvalue r 65535

code auto:985 xor[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 0;
endcode
varvalue r 65535

$overflow on
code auto:986 xor[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 65280

code auto:987 xor[Word] 65535[Word], 255[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 255;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 65280

code auto:988 xor[Word] 65535[Word], 255[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 255;
endcode
varvalue r 65280

code auto:989 xor[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 255;
endcode
varvalue r 65280

$overflow on
code auto:990 xor[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32768

code auto:991 xor[Word] 65535[Word], 32767[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32767;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 32768

code auto:992 xor[Word] 65535[Word], 32767[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 32767;
endcode
varvalue r 32768

code auto:993 xor[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 32767;
endcode
varvalue r 32768

$overflow on
code auto:994 xor[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 32767

code auto:995 xor[Word] 65535[Word], 32768[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 32768;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 32767

code auto:996 xor[Word] 65535[Word], 32768[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 32768;
endcode
varvalue r 32767

code auto:997 xor[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 32768;
endcode
varvalue r 32767

$overflow on
code auto:998 xor[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a xor b;
endcode
varvalue r 0

code auto:999 xor[Word] 65535[Word], 65535[Word] -> [Word] Left immediate $overflow on
  var  b: Word = 65535;
  var  r: Word;
  r := 65535 xor b;
endcode
varvalue r 0

code auto:1000 xor[Word] 65535[Word], 65535[Word] -> [Word] Right immediate $overflow on
  var  a: Word = 65535;
  var  r: Word;
  r := a xor 65535;
endcode
varvalue r 0

code auto:1001 xor[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 xor 65535;
endcode
varvalue r 0

$overflow on
code auto:1002 xor[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a xor b;
endcode
varvalue r False

code auto:1003 xor[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := False xor b;
endcode
varvalue r False

code auto:1004 xor[Boolean] 0[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a xor False;
endcode
varvalue r False

code auto:1005 xor[compile-time] 0[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False xor False;
endcode
varvalue r False

$overflow on
code auto:1006 xor[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = False;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a xor b;
endcode
varvalue r True

code auto:1007 xor[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := False xor b;
endcode
varvalue r True

code auto:1008 xor[Boolean] 0[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = False;
  var  r: Boolean;
  r := a xor True;
endcode
varvalue r True

code auto:1009 xor[compile-time] 0[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := False xor True;
endcode
varvalue r True

$overflow on
code auto:1010 xor[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = False;
  var  r: Boolean;
  r := a xor b;
endcode
varvalue r True

code auto:1011 xor[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = False;
  var  r: Boolean;
  r := True xor b;
endcode
varvalue r True

code auto:1012 xor[Boolean] 255[Boolean], 0[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a xor False;
endcode
varvalue r True

code auto:1013 xor[compile-time] 255[Boolean], 0[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True xor False;
endcode
varvalue r True

$overflow on
code auto:1014 xor[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Var $overflow on
  var  a: Boolean = True;
  var  b: Boolean = True;
  var  r: Boolean;
  r := a xor b;
endcode
varvalue r False

code auto:1015 xor[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Left immediate $overflow on
  var  b: Boolean = True;
  var  r: Boolean;
  r := True xor b;
endcode
varvalue r False

code auto:1016 xor[Boolean] 255[Boolean], 255[Boolean] -> [Boolean] Right immediate $overflow on
  var  a: Boolean = True;
  var  r: Boolean;
  r := a xor True;
endcode
varvalue r False

code auto:1017 xor[compile-time] 255[Boolean], 255[Boolean] -> [Boolean] Both immediate $overflow on
  var  r: Boolean;
  r := True xor True;
endcode
varvalue r False

