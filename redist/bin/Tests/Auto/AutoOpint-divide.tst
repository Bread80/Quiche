;PROCEDURALLY GENERATED FILE

;Any modifications will be overwritten!
;Generated by the QuicheTestGen utility

$overflow on
code auto:2 int-divide[Integer] -128[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3 int-divide[compile-time] -128[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:4 int-divide[Integer] -128[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:5 int-divide[compile-time] -128[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -127;
endcode
varvalue r 1

$overflow on
code auto:6 int-divide[Integer] -128[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:7 int-divide[compile-time] -128[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow on
code auto:8 int-divide[Integer] -128[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:9 int-divide[compile-time] -128[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:10 int-divide[Integer] -128[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:11 int-divide[compile-time] -128[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:12 int-divide[Integer] -128[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:13 int-divide[compile-time] -128[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:14 int-divide[Integer] -127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:15 int-divide[compile-time] -127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -128;
endcode
varvalue r 0

$overflow on
code auto:16 int-divide[Integer] -127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:17 int-divide[compile-time] -127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -127;
endcode
varvalue r 1

$overflow on
code auto:18 int-divide[Integer] -127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:19 int-divide[compile-time] -127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -1;
endcode
varvalue r 127

$overflow on
code auto:20 int-divide[Integer] -127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:21 int-divide[compile-time] -127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:22 int-divide[Integer] -127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:23 int-divide[compile-time] -127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 1;
endcode
varvalue r -127

$overflow on
code auto:24 int-divide[Integer] -127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:25 int-divide[compile-time] -127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 127;
endcode
varvalue r -1

$overflow on
code auto:26 int-divide[Integer] -1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:27 int-divide[compile-time] -1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:28 int-divide[Integer] -1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:29 int-divide[compile-time] -1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -127;
endcode
varvalue r 0

$overflow on
code auto:30 int-divide[Integer] -1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:31 int-divide[compile-time] -1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:32 int-divide[Integer] -1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:33 int-divide[compile-time] -1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:34 int-divide[Integer] -1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:35 int-divide[compile-time] -1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:36 int-divide[Integer] -1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:37 int-divide[compile-time] -1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:38 int-divide[Integer] 0[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:39 int-divide[compile-time] 0[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:40 int-divide[Integer] 0[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:41 int-divide[compile-time] 0[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:42 int-divide[Integer] 0[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:43 int-divide[compile-time] 0[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:44 int-divide[Integer] 0[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:45 int-divide[compile-time] 0[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:46 int-divide[Integer] 0[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:47 int-divide[compile-time] 0[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:48 int-divide[Integer] 0[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:49 int-divide[compile-time] 0[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:50 int-divide[Integer] 1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:51 int-divide[compile-time] 1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:52 int-divide[Integer] 1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:53 int-divide[compile-time] 1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -127;
endcode
varvalue r 0

$overflow on
code auto:54 int-divide[Integer] 1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:55 int-divide[compile-time] 1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:56 int-divide[Integer] 1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:57 int-divide[compile-time] 1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:58 int-divide[Integer] 1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:59 int-divide[compile-time] 1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:60 int-divide[Integer] 1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:61 int-divide[compile-time] 1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:62 int-divide[Integer] 127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:63 int-divide[compile-time] 127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:64 int-divide[Integer] 127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:65 int-divide[compile-time] 127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -127;
endcode
varvalue r -1

$overflow on
code auto:66 int-divide[Integer] 127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:67 int-divide[compile-time] 127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:68 int-divide[Integer] 127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:69 int-divide[compile-time] 127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:70 int-divide[Integer] 127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:71 int-divide[compile-time] 127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:72 int-divide[Integer] 127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:73 int-divide[compile-time] 127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:74 int-divide[Integer] -128[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:75 int-divide[compile-time] -128[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:76 int-divide[Integer] -128[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:77 int-divide[compile-time] -128[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:78 int-divide[Integer] -128[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:79 int-divide[compile-time] -128[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -129;
endcode
varvalue r 0

$overflow on
code auto:80 int-divide[Integer] -128[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:81 int-divide[compile-time] -128[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:82 int-divide[Integer] -128[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:83 int-divide[compile-time] -128[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow on
code auto:84 int-divide[Integer] -128[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:85 int-divide[compile-time] -128[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:86 int-divide[Integer] -128[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:87 int-divide[compile-time] -128[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:88 int-divide[Integer] -128[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:89 int-divide[compile-time] -128[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:90 int-divide[Integer] -128[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:91 int-divide[compile-time] -128[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 128;
endcode
varvalue r -1

$overflow on
code auto:92 int-divide[Integer] -128[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:93 int-divide[compile-time] -128[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:94 int-divide[Integer] -127[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:95 int-divide[compile-time] -127[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -32768;
endcode
varvalue r 0

$overflow on
code auto:96 int-divide[Integer] -127[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:97 int-divide[compile-time] -127[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -32767;
endcode
varvalue r 0

$overflow on
code auto:98 int-divide[Integer] -127[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:99 int-divide[compile-time] -127[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -129;
endcode
varvalue r 0

$overflow on
code auto:100 int-divide[Integer] -127[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:101 int-divide[compile-time] -127[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -128;
endcode
varvalue r 0

$overflow on
code auto:102 int-divide[Integer] -127[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:103 int-divide[compile-time] -127[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -1;
endcode
varvalue r 127

$overflow on
code auto:104 int-divide[Integer] -127[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:105 int-divide[compile-time] -127[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:106 int-divide[Integer] -127[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:107 int-divide[compile-time] -127[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 1;
endcode
varvalue r -127

$overflow on
code auto:108 int-divide[Integer] -127[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:109 int-divide[compile-time] -127[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 127;
endcode
varvalue r -1

$overflow on
code auto:110 int-divide[Integer] -127[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:111 int-divide[compile-time] -127[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 128;
endcode
varvalue r 0

$overflow on
code auto:112 int-divide[Integer] -127[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:113 int-divide[compile-time] -127[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:114 int-divide[Integer] -1[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:115 int-divide[compile-time] -1[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:116 int-divide[Integer] -1[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:117 int-divide[compile-time] -1[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:118 int-divide[Integer] -1[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:119 int-divide[compile-time] -1[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -129;
endcode
varvalue r 0

$overflow on
code auto:120 int-divide[Integer] -1[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:121 int-divide[compile-time] -1[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:122 int-divide[Integer] -1[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:123 int-divide[compile-time] -1[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:124 int-divide[Integer] -1[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:125 int-divide[compile-time] -1[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:126 int-divide[Integer] -1[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:127 int-divide[compile-time] -1[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:128 int-divide[Integer] -1[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:129 int-divide[compile-time] -1[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:130 int-divide[Integer] -1[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:131 int-divide[compile-time] -1[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 128;
endcode
varvalue r 0

$overflow on
code auto:132 int-divide[Integer] -1[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:133 int-divide[compile-time] -1[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:134 int-divide[Integer] 0[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:135 int-divide[compile-time] 0[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:136 int-divide[Integer] 0[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:137 int-divide[compile-time] 0[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:138 int-divide[Integer] 0[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:139 int-divide[compile-time] 0[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:140 int-divide[Integer] 0[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:141 int-divide[compile-time] 0[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:142 int-divide[Integer] 0[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:143 int-divide[compile-time] 0[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:144 int-divide[Integer] 0[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:145 int-divide[compile-time] 0[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:146 int-divide[Integer] 0[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:147 int-divide[compile-time] 0[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:148 int-divide[Integer] 0[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:149 int-divide[compile-time] 0[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:150 int-divide[Integer] 0[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:151 int-divide[compile-time] 0[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:152 int-divide[Integer] 0[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:153 int-divide[compile-time] 0[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:154 int-divide[Integer] 1[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:155 int-divide[compile-time] 1[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:156 int-divide[Integer] 1[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:157 int-divide[compile-time] 1[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:158 int-divide[Integer] 1[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:159 int-divide[compile-time] 1[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -129;
endcode
varvalue r 0

$overflow on
code auto:160 int-divide[Integer] 1[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:161 int-divide[compile-time] 1[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:162 int-divide[Integer] 1[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:163 int-divide[compile-time] 1[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:164 int-divide[Integer] 1[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:165 int-divide[compile-time] 1[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:166 int-divide[Integer] 1[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:167 int-divide[compile-time] 1[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:168 int-divide[Integer] 1[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:169 int-divide[compile-time] 1[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:170 int-divide[Integer] 1[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:171 int-divide[compile-time] 1[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:172 int-divide[Integer] 1[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:173 int-divide[compile-time] 1[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:174 int-divide[Integer] 127[Int8], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:175 int-divide[compile-time] 127[Int8], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow on
code auto:176 int-divide[Integer] 127[Int8], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:177 int-divide[compile-time] 127[Int8], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow on
code auto:178 int-divide[Integer] 127[Int8], -129[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:179 int-divide[compile-time] 127[Int8], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -129;
endcode
varvalue r 0

$overflow on
code auto:180 int-divide[Integer] 127[Int8], -128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:181 int-divide[compile-time] 127[Int8], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:182 int-divide[Integer] 127[Int8], -1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:183 int-divide[compile-time] 127[Int8], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:184 int-divide[Integer] 127[Int8], 0[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:185 int-divide[compile-time] 127[Int8], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:186 int-divide[Integer] 127[Int8], 1[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:187 int-divide[compile-time] 127[Int8], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:188 int-divide[Integer] 127[Int8], 127[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:189 int-divide[compile-time] 127[Int8], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:190 int-divide[Integer] 127[Int8], 128[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:191 int-divide[compile-time] 127[Int8], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:192 int-divide[Integer] 127[Int8], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:193 int-divide[compile-time] 127[Int8], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:194 int-divide[Integer] -128[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:195 int-divide[compile-time] -128[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:196 int-divide[Integer] -128[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:197 int-divide[compile-time] -128[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:198 int-divide[Integer] -128[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:199 int-divide[compile-time] -128[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:200 int-divide[Integer] -128[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:201 int-divide[compile-time] -128[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 128;
endcode
varvalue r -1

$overflow on
code auto:202 int-divide[Integer] -128[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:203 int-divide[compile-time] -128[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:204 int-divide[Integer] -127[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:205 int-divide[compile-time] -127[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:206 int-divide[Integer] -127[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:207 int-divide[compile-time] -127[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 1;
endcode
varvalue r -127

$overflow on
code auto:208 int-divide[Integer] -127[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:209 int-divide[compile-time] -127[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 127;
endcode
varvalue r -1

$overflow on
code auto:210 int-divide[Integer] -127[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:211 int-divide[compile-time] -127[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 128;
endcode
varvalue r 0

$overflow on
code auto:212 int-divide[Integer] -127[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:213 int-divide[compile-time] -127[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 255;
endcode
varvalue r 0

$overflow on
code auto:214 int-divide[Integer] -1[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:215 int-divide[compile-time] -1[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:216 int-divide[Integer] -1[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:217 int-divide[compile-time] -1[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:218 int-divide[Integer] -1[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:219 int-divide[compile-time] -1[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:220 int-divide[Integer] -1[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:221 int-divide[compile-time] -1[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 128;
endcode
varvalue r 0

$overflow on
code auto:222 int-divide[Integer] -1[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:223 int-divide[compile-time] -1[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:224 int-divide[Integer] 0[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:225 int-divide[compile-time] 0[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:226 int-divide[Integer] 0[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:227 int-divide[compile-time] 0[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:228 int-divide[Integer] 0[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:229 int-divide[compile-time] 0[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:230 int-divide[Integer] 0[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:231 int-divide[compile-time] 0[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:232 int-divide[Integer] 0[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:233 int-divide[compile-time] 0[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:234 int-divide[Integer] 1[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:235 int-divide[compile-time] 1[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:236 int-divide[Integer] 1[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:237 int-divide[compile-time] 1[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:238 int-divide[Integer] 1[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:239 int-divide[compile-time] 1[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:240 int-divide[Integer] 1[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:241 int-divide[compile-time] 1[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:242 int-divide[Integer] 1[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:243 int-divide[compile-time] 1[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:244 int-divide[Integer] 127[Int8], 0[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:245 int-divide[compile-time] 127[Int8], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:246 int-divide[Integer] 127[Int8], 1[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:247 int-divide[compile-time] 127[Int8], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:248 int-divide[Integer] 127[Int8], 127[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:249 int-divide[compile-time] 127[Int8], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:250 int-divide[Integer] 127[Int8], 128[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:251 int-divide[compile-time] 127[Int8], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:252 int-divide[Integer] 127[Int8], 255[Byte] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:253 int-divide[compile-time] 127[Int8], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:254 int-divide[Integer] -128[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:255 int-divide[compile-time] -128[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:256 int-divide[Integer] -128[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:257 int-divide[compile-time] -128[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:258 int-divide[Integer] -128[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:259 int-divide[compile-time] -128[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:260 int-divide[Integer] -128[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:261 int-divide[compile-time] -128[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:262 int-divide[Integer] -128[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:263 int-divide[compile-time] -128[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:264 int-divide[Integer] -127[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:265 int-divide[compile-time] -127[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:266 int-divide[Integer] -127[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:267 int-divide[compile-time] -127[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 255;
endcode
varvalue r 0

$overflow on
code auto:268 int-divide[Integer] -127[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:269 int-divide[compile-time] -127[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:270 int-divide[Integer] -127[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:271 int-divide[compile-time] -127[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:272 int-divide[Integer] -127[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:273 int-divide[compile-time] -127[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:274 int-divide[Integer] -1[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:275 int-divide[compile-time] -1[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:276 int-divide[Integer] -1[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:277 int-divide[compile-time] -1[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:278 int-divide[Integer] -1[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:279 int-divide[compile-time] -1[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:280 int-divide[Integer] -1[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:281 int-divide[compile-time] -1[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:282 int-divide[Integer] -1[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:283 int-divide[compile-time] -1[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:284 int-divide[Integer] 0[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:285 int-divide[compile-time] 0[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:286 int-divide[Integer] 0[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:287 int-divide[compile-time] 0[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:288 int-divide[Integer] 0[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:289 int-divide[compile-time] 0[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:290 int-divide[Integer] 0[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:291 int-divide[compile-time] 0[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:292 int-divide[Integer] 0[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:293 int-divide[compile-time] 0[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:294 int-divide[Integer] 1[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:295 int-divide[compile-time] 1[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:296 int-divide[Integer] 1[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:297 int-divide[compile-time] 1[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:298 int-divide[Integer] 1[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:299 int-divide[compile-time] 1[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:300 int-divide[Integer] 1[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:301 int-divide[compile-time] 1[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:302 int-divide[Integer] 1[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:303 int-divide[compile-time] 1[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:304 int-divide[Integer] 127[Int8], 0[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:305 int-divide[compile-time] 127[Int8], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:306 int-divide[Integer] 127[Int8], 255[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:307 int-divide[compile-time] 127[Int8], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:308 int-divide[Integer] 127[Int8], 32767[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:309 int-divide[compile-time] 127[Int8], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:310 int-divide[Integer] 127[Int8], 32768[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:311 int-divide[compile-time] 127[Int8], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:312 int-divide[Integer] 127[Int8], 65535[Word] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:313 int-divide[compile-time] 127[Int8], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:314 int-divide[Pointer] -128[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:315 int-divide[compile-time] -128[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:316 int-divide[Pointer] -128[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:317 int-divide[compile-time] -128[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:318 int-divide[Pointer] -128[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:319 int-divide[compile-time] -128[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:320 int-divide[Pointer] -128[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:321 int-divide[compile-time] -128[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:322 int-divide[Pointer] -128[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:323 int-divide[compile-time] -128[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:324 int-divide[Pointer] -127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:325 int-divide[compile-time] -127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:326 int-divide[Pointer] -127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:327 int-divide[compile-time] -127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 div 255;
endcode
varvalue r 0

$overflow on
code auto:328 int-divide[Pointer] -127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:329 int-divide[compile-time] -127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:330 int-divide[Pointer] -127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:331 int-divide[compile-time] -127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:332 int-divide[Pointer] -127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:333 int-divide[compile-time] -127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:334 int-divide[Pointer] -1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:335 int-divide[compile-time] -1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:336 int-divide[Pointer] -1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:337 int-divide[compile-time] -1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:338 int-divide[Pointer] -1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:339 int-divide[compile-time] -1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:340 int-divide[Pointer] -1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:341 int-divide[compile-time] -1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:342 int-divide[Pointer] -1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:343 int-divide[compile-time] -1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:344 int-divide[Pointer] 0[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:345 int-divide[compile-time] 0[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:346 int-divide[Pointer] 0[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:347 int-divide[compile-time] 0[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:348 int-divide[Pointer] 0[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:349 int-divide[compile-time] 0[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:350 int-divide[Pointer] 0[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:351 int-divide[compile-time] 0[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:352 int-divide[Pointer] 0[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:353 int-divide[compile-time] 0[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:354 int-divide[Pointer] 1[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:355 int-divide[compile-time] 1[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:356 int-divide[Pointer] 1[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:357 int-divide[compile-time] 1[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:358 int-divide[Pointer] 1[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:359 int-divide[compile-time] 1[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:360 int-divide[Pointer] 1[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:361 int-divide[compile-time] 1[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:362 int-divide[Pointer] 1[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:363 int-divide[compile-time] 1[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:364 int-divide[Pointer] 127[Int8], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:365 int-divide[compile-time] 127[Int8], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:366 int-divide[Pointer] 127[Int8], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:367 int-divide[compile-time] 127[Int8], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:368 int-divide[Pointer] 127[Int8], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:369 int-divide[compile-time] 127[Int8], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:370 int-divide[Pointer] 127[Int8], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:371 int-divide[compile-time] 127[Int8], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:372 int-divide[Pointer] 127[Int8], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:373 int-divide[compile-time] 127[Int8], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:374 int-divide[Integer] -32768[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 256

code auto:375 int-divide[compile-time] -32768[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -128;
endcode
varvalue r 256

$overflow on
code auto:376 int-divide[Integer] -32768[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:377 int-divide[compile-time] -32768[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -127;
endcode
varvalue r 258

$overflow on
code auto:378 int-divide[Integer] -32768[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:379 int-divide[compile-time] -32768[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -1;
endcode
compile error

$overflow on
code auto:380 int-divide[Integer] -32768[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:381 int-divide[compile-time] -32768[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:382 int-divide[Integer] -32768[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:383 int-divide[compile-time] -32768[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 1;
endcode
varvalue r -32768

$overflow on
code auto:384 int-divide[Integer] -32768[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:385 int-divide[compile-time] -32768[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 127;
endcode
varvalue r -258

$overflow on
code auto:386 int-divide[Integer] -32767[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:387 int-divide[compile-time] -32767[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -128;
endcode
varvalue r 255

$overflow on
code auto:388 int-divide[Integer] -32767[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:389 int-divide[compile-time] -32767[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -127;
endcode
varvalue r 258

$overflow on
code auto:390 int-divide[Integer] -32767[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:391 int-divide[compile-time] -32767[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -1;
endcode
varvalue r 32767

$overflow on
code auto:392 int-divide[Integer] -32767[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:393 int-divide[compile-time] -32767[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:394 int-divide[Integer] -32767[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:395 int-divide[compile-time] -32767[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 1;
endcode
varvalue r -32767

$overflow on
code auto:396 int-divide[Integer] -32767[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:397 int-divide[compile-time] -32767[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 127;
endcode
varvalue r -258

$overflow on
code auto:398 int-divide[Integer] -129[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:399 int-divide[compile-time] -129[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -128;
endcode
varvalue r 1

$overflow on
code auto:400 int-divide[Integer] -129[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:401 int-divide[compile-time] -129[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -127;
endcode
varvalue r 1

$overflow on
code auto:402 int-divide[Integer] -129[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 129

code auto:403 int-divide[compile-time] -129[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -1;
endcode
varvalue r 129

$overflow on
code auto:404 int-divide[Integer] -129[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:405 int-divide[compile-time] -129[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:406 int-divide[Integer] -129[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -129

code auto:407 int-divide[compile-time] -129[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 1;
endcode
varvalue r -129

$overflow on
code auto:408 int-divide[Integer] -129[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:409 int-divide[compile-time] -129[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 127;
endcode
varvalue r -1

$overflow on
code auto:410 int-divide[Integer] -128[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:411 int-divide[compile-time] -128[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:412 int-divide[Integer] -128[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:413 int-divide[compile-time] -128[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -127;
endcode
varvalue r 1

$overflow on
code auto:414 int-divide[Integer] -128[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:415 int-divide[compile-time] -128[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow on
code auto:416 int-divide[Integer] -128[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:417 int-divide[compile-time] -128[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:418 int-divide[Integer] -128[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:419 int-divide[compile-time] -128[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:420 int-divide[Integer] -128[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:421 int-divide[compile-time] -128[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:422 int-divide[Integer] -1[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:423 int-divide[compile-time] -1[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:424 int-divide[Integer] -1[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:425 int-divide[compile-time] -1[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -127;
endcode
varvalue r 0

$overflow on
code auto:426 int-divide[Integer] -1[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:427 int-divide[compile-time] -1[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:428 int-divide[Integer] -1[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:429 int-divide[compile-time] -1[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:430 int-divide[Integer] -1[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:431 int-divide[compile-time] -1[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:432 int-divide[Integer] -1[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:433 int-divide[compile-time] -1[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:434 int-divide[Integer] 0[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:435 int-divide[compile-time] 0[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:436 int-divide[Integer] 0[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:437 int-divide[compile-time] 0[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:438 int-divide[Integer] 0[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:439 int-divide[compile-time] 0[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:440 int-divide[Integer] 0[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:441 int-divide[compile-time] 0[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:442 int-divide[Integer] 0[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:443 int-divide[compile-time] 0[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:444 int-divide[Integer] 0[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:445 int-divide[compile-time] 0[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:446 int-divide[Integer] 1[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:447 int-divide[compile-time] 1[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:448 int-divide[Integer] 1[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:449 int-divide[compile-time] 1[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -127;
endcode
varvalue r 0

$overflow on
code auto:450 int-divide[Integer] 1[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:451 int-divide[compile-time] 1[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:452 int-divide[Integer] 1[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:453 int-divide[compile-time] 1[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:454 int-divide[Integer] 1[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:455 int-divide[compile-time] 1[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:456 int-divide[Integer] 1[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:457 int-divide[compile-time] 1[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:458 int-divide[Integer] 127[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:459 int-divide[compile-time] 127[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:460 int-divide[Integer] 127[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:461 int-divide[compile-time] 127[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -127;
endcode
varvalue r -1

$overflow on
code auto:462 int-divide[Integer] 127[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:463 int-divide[compile-time] 127[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:464 int-divide[Integer] 127[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:465 int-divide[compile-time] 127[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:466 int-divide[Integer] 127[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:467 int-divide[compile-time] 127[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:468 int-divide[Integer] 127[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:469 int-divide[compile-time] 127[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:470 int-divide[Integer] 128[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:471 int-divide[compile-time] 128[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -128;
endcode
varvalue r -1

$overflow on
code auto:472 int-divide[Integer] 128[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:473 int-divide[compile-time] 128[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -127;
endcode
varvalue r -1

$overflow on
code auto:474 int-divide[Integer] 128[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:475 int-divide[compile-time] 128[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -1;
endcode
varvalue r -128

$overflow on
code auto:476 int-divide[Integer] 128[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:477 int-divide[compile-time] 128[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:478 int-divide[Integer] 128[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:479 int-divide[compile-time] 128[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:480 int-divide[Integer] 128[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:481 int-divide[compile-time] 128[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:482 int-divide[Integer] 32767[Integer], -128[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:483 int-divide[compile-time] 32767[Integer], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -128;
endcode
varvalue r -255

$overflow on
code auto:484 int-divide[Integer] 32767[Integer], -127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:485 int-divide[compile-time] 32767[Integer], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -127;
endcode
varvalue r -258

$overflow on
code auto:486 int-divide[Integer] 32767[Integer], -1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:487 int-divide[compile-time] 32767[Integer], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -1;
endcode
varvalue r -32767

$overflow on
code auto:488 int-divide[Integer] 32767[Integer], 0[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:489 int-divide[compile-time] 32767[Integer], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:490 int-divide[Integer] 32767[Integer], 1[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:491 int-divide[compile-time] 32767[Integer], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:492 int-divide[Integer] 32767[Integer], 127[Int8] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:493 int-divide[compile-time] 32767[Integer], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:494 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:495 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -32768;
endcode
varvalue r 1

$overflow on
code auto:496 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:497 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -32767;
endcode
varvalue r 1

$overflow on
code auto:498 int-divide[Integer] -32768[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 254

code auto:499 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -129;
endcode
varvalue r 254

$overflow on
code auto:500 int-divide[Integer] -32768[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 256

code auto:501 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -128;
endcode
varvalue r 256

$overflow on
code auto:502 int-divide[Integer] -32768[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:503 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -1;
endcode
compile error

$overflow on
code auto:504 int-divide[Integer] -32768[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:505 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:506 int-divide[Integer] -32768[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:507 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 1;
endcode
varvalue r -32768

$overflow on
code auto:508 int-divide[Integer] -32768[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:509 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 127;
endcode
varvalue r -258

$overflow on
code auto:510 int-divide[Integer] -32768[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -256

code auto:511 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 128;
endcode
varvalue r -256

$overflow on
code auto:512 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:513 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 32767;
endcode
varvalue r -1

$overflow on
code auto:514 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:515 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:516 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:517 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -32767;
endcode
varvalue r 1

$overflow on
code auto:518 int-divide[Integer] -32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 254

code auto:519 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -129;
endcode
varvalue r 254

$overflow on
code auto:520 int-divide[Integer] -32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:521 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -128;
endcode
varvalue r 255

$overflow on
code auto:522 int-divide[Integer] -32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:523 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -1;
endcode
varvalue r 32767

$overflow on
code auto:524 int-divide[Integer] -32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:525 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:526 int-divide[Integer] -32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:527 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 1;
endcode
varvalue r -32767

$overflow on
code auto:528 int-divide[Integer] -32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:529 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 127;
endcode
varvalue r -258

$overflow on
code auto:530 int-divide[Integer] -32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:531 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 128;
endcode
varvalue r -255

$overflow on
code auto:532 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:533 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 32767;
endcode
varvalue r -1

$overflow on
code auto:534 int-divide[Integer] -129[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:535 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -32768;
endcode
varvalue r 0

$overflow on
code auto:536 int-divide[Integer] -129[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:537 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -32767;
endcode
varvalue r 0

$overflow on
code auto:538 int-divide[Integer] -129[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:539 int-divide[compile-time] -129[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -129;
endcode
varvalue r 1

$overflow on
code auto:540 int-divide[Integer] -129[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:541 int-divide[compile-time] -129[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -128;
endcode
varvalue r 1

$overflow on
code auto:542 int-divide[Integer] -129[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 129

code auto:543 int-divide[compile-time] -129[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -1;
endcode
varvalue r 129

$overflow on
code auto:544 int-divide[Integer] -129[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:545 int-divide[compile-time] -129[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:546 int-divide[Integer] -129[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -129

code auto:547 int-divide[compile-time] -129[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 1;
endcode
varvalue r -129

$overflow on
code auto:548 int-divide[Integer] -129[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:549 int-divide[compile-time] -129[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 127;
endcode
varvalue r -1

$overflow on
code auto:550 int-divide[Integer] -129[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:551 int-divide[compile-time] -129[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 128;
endcode
varvalue r -1

$overflow on
code auto:552 int-divide[Integer] -129[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:553 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow on
code auto:554 int-divide[Integer] -128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:555 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:556 int-divide[Integer] -128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:557 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:558 int-divide[Integer] -128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:559 int-divide[compile-time] -128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -129;
endcode
varvalue r 0

$overflow on
code auto:560 int-divide[Integer] -128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:561 int-divide[compile-time] -128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:562 int-divide[Integer] -128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:563 int-divide[compile-time] -128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow on
code auto:564 int-divide[Integer] -128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:565 int-divide[compile-time] -128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:566 int-divide[Integer] -128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:567 int-divide[compile-time] -128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:568 int-divide[Integer] -128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:569 int-divide[compile-time] -128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:570 int-divide[Integer] -128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:571 int-divide[compile-time] -128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 128;
endcode
varvalue r -1

$overflow on
code auto:572 int-divide[Integer] -128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:573 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:574 int-divide[Integer] -1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:575 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:576 int-divide[Integer] -1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:577 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:578 int-divide[Integer] -1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:579 int-divide[compile-time] -1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -129;
endcode
varvalue r 0

$overflow on
code auto:580 int-divide[Integer] -1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:581 int-divide[compile-time] -1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:582 int-divide[Integer] -1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:583 int-divide[compile-time] -1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:584 int-divide[Integer] -1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:585 int-divide[compile-time] -1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:586 int-divide[Integer] -1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:587 int-divide[compile-time] -1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:588 int-divide[Integer] -1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:589 int-divide[compile-time] -1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:590 int-divide[Integer] -1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:591 int-divide[compile-time] -1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 128;
endcode
varvalue r 0

$overflow on
code auto:592 int-divide[Integer] -1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:593 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:594 int-divide[Integer] 0[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:595 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:596 int-divide[Integer] 0[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:597 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:598 int-divide[Integer] 0[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:599 int-divide[compile-time] 0[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:600 int-divide[Integer] 0[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:601 int-divide[compile-time] 0[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:602 int-divide[Integer] 0[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:603 int-divide[compile-time] 0[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:604 int-divide[Integer] 0[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:605 int-divide[compile-time] 0[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:606 int-divide[Integer] 0[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:607 int-divide[compile-time] 0[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:608 int-divide[Integer] 0[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:609 int-divide[compile-time] 0[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:610 int-divide[Integer] 0[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:611 int-divide[compile-time] 0[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:612 int-divide[Integer] 0[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:613 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:614 int-divide[Integer] 1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:615 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:616 int-divide[Integer] 1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:617 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:618 int-divide[Integer] 1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:619 int-divide[compile-time] 1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -129;
endcode
varvalue r 0

$overflow on
code auto:620 int-divide[Integer] 1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:621 int-divide[compile-time] 1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:622 int-divide[Integer] 1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:623 int-divide[compile-time] 1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:624 int-divide[Integer] 1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:625 int-divide[compile-time] 1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:626 int-divide[Integer] 1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:627 int-divide[compile-time] 1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:628 int-divide[Integer] 1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:629 int-divide[compile-time] 1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:630 int-divide[Integer] 1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:631 int-divide[compile-time] 1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:632 int-divide[Integer] 1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:633 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:634 int-divide[Integer] 127[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:635 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow on
code auto:636 int-divide[Integer] 127[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:637 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow on
code auto:638 int-divide[Integer] 127[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:639 int-divide[compile-time] 127[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -129;
endcode
varvalue r 0

$overflow on
code auto:640 int-divide[Integer] 127[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:641 int-divide[compile-time] 127[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:642 int-divide[Integer] 127[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:643 int-divide[compile-time] 127[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:644 int-divide[Integer] 127[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:645 int-divide[compile-time] 127[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:646 int-divide[Integer] 127[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:647 int-divide[compile-time] 127[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:648 int-divide[Integer] 127[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:649 int-divide[compile-time] 127[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:650 int-divide[Integer] 127[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:651 int-divide[compile-time] 127[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:652 int-divide[Integer] 127[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:653 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:654 int-divide[Integer] 128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:655 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:656 int-divide[Integer] 128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:657 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:658 int-divide[Integer] 128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:659 int-divide[compile-time] 128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -129;
endcode
varvalue r 0

$overflow on
code auto:660 int-divide[Integer] 128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:661 int-divide[compile-time] 128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -128;
endcode
varvalue r -1

$overflow on
code auto:662 int-divide[Integer] 128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:663 int-divide[compile-time] 128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -1;
endcode
varvalue r -128

$overflow on
code auto:664 int-divide[Integer] 128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:665 int-divide[compile-time] 128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:666 int-divide[Integer] 128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:667 int-divide[compile-time] 128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:668 int-divide[Integer] 128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:669 int-divide[compile-time] 128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:670 int-divide[Integer] 128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:671 int-divide[compile-time] 128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:672 int-divide[Integer] 128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:673 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:674 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:675 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:676 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:677 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32767;
endcode
varvalue r -1

$overflow on
code auto:678 int-divide[Integer] 32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -254

code auto:679 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -129;
endcode
varvalue r -254

$overflow on
code auto:680 int-divide[Integer] 32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:681 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -128;
endcode
varvalue r -255

$overflow on
code auto:682 int-divide[Integer] 32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:683 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -1;
endcode
varvalue r -32767

$overflow on
code auto:684 int-divide[Integer] 32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:685 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:686 int-divide[Integer] 32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:687 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:688 int-divide[Integer] 32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:689 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:690 int-divide[Integer] 32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:691 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:692 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:693 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:694 int-divide[Integer] -32768[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:695 int-divide[compile-time] -32768[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:696 int-divide[Integer] -32768[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:697 int-divide[compile-time] -32768[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 1;
endcode
varvalue r -32768

$overflow on
code auto:698 int-divide[Integer] -32768[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:699 int-divide[compile-time] -32768[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 127;
endcode
varvalue r -258

$overflow on
code auto:700 int-divide[Integer] -32768[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -256

code auto:701 int-divide[compile-time] -32768[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 128;
endcode
varvalue r -256

$overflow on
code auto:702 int-divide[Integer] -32768[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:703 int-divide[compile-time] -32768[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 255;
endcode
varvalue r -128

$overflow on
code auto:704 int-divide[Integer] -32767[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:705 int-divide[compile-time] -32767[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:706 int-divide[Integer] -32767[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:707 int-divide[compile-time] -32767[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 1;
endcode
varvalue r -32767

$overflow on
code auto:708 int-divide[Integer] -32767[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:709 int-divide[compile-time] -32767[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 127;
endcode
varvalue r -258

$overflow on
code auto:710 int-divide[Integer] -32767[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:711 int-divide[compile-time] -32767[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 128;
endcode
varvalue r -255

$overflow on
code auto:712 int-divide[Integer] -32767[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:713 int-divide[compile-time] -32767[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 255;
endcode
varvalue r -128

$overflow on
code auto:714 int-divide[Integer] -129[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:715 int-divide[compile-time] -129[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:716 int-divide[Integer] -129[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -129

code auto:717 int-divide[compile-time] -129[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 1;
endcode
varvalue r -129

$overflow on
code auto:718 int-divide[Integer] -129[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:719 int-divide[compile-time] -129[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 127;
endcode
varvalue r -1

$overflow on
code auto:720 int-divide[Integer] -129[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:721 int-divide[compile-time] -129[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 128;
endcode
varvalue r -1

$overflow on
code auto:722 int-divide[Integer] -129[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:723 int-divide[compile-time] -129[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 255;
endcode
varvalue r 0

$overflow on
code auto:724 int-divide[Integer] -128[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:725 int-divide[compile-time] -128[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:726 int-divide[Integer] -128[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:727 int-divide[compile-time] -128[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:728 int-divide[Integer] -128[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:729 int-divide[compile-time] -128[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:730 int-divide[Integer] -128[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:731 int-divide[compile-time] -128[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 128;
endcode
varvalue r -1

$overflow on
code auto:732 int-divide[Integer] -128[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:733 int-divide[compile-time] -128[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:734 int-divide[Integer] -1[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:735 int-divide[compile-time] -1[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:736 int-divide[Integer] -1[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:737 int-divide[compile-time] -1[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:738 int-divide[Integer] -1[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:739 int-divide[compile-time] -1[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:740 int-divide[Integer] -1[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:741 int-divide[compile-time] -1[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 128;
endcode
varvalue r 0

$overflow on
code auto:742 int-divide[Integer] -1[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:743 int-divide[compile-time] -1[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:744 int-divide[Integer] 0[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:745 int-divide[compile-time] 0[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:746 int-divide[Integer] 0[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:747 int-divide[compile-time] 0[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:748 int-divide[Integer] 0[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:749 int-divide[compile-time] 0[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:750 int-divide[Integer] 0[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:751 int-divide[compile-time] 0[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:752 int-divide[Integer] 0[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:753 int-divide[compile-time] 0[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:754 int-divide[Integer] 1[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:755 int-divide[compile-time] 1[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:756 int-divide[Integer] 1[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:757 int-divide[compile-time] 1[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:758 int-divide[Integer] 1[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:759 int-divide[compile-time] 1[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:760 int-divide[Integer] 1[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:761 int-divide[compile-time] 1[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:762 int-divide[Integer] 1[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:763 int-divide[compile-time] 1[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:764 int-divide[Integer] 127[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:765 int-divide[compile-time] 127[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:766 int-divide[Integer] 127[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:767 int-divide[compile-time] 127[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:768 int-divide[Integer] 127[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:769 int-divide[compile-time] 127[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:770 int-divide[Integer] 127[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:771 int-divide[compile-time] 127[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:772 int-divide[Integer] 127[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:773 int-divide[compile-time] 127[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:774 int-divide[Integer] 128[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:775 int-divide[compile-time] 128[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:776 int-divide[Integer] 128[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:777 int-divide[compile-time] 128[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:778 int-divide[Integer] 128[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:779 int-divide[compile-time] 128[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:780 int-divide[Integer] 128[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:781 int-divide[compile-time] 128[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:782 int-divide[Integer] 128[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:783 int-divide[compile-time] 128[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:784 int-divide[Integer] 32767[Integer], 0[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:785 int-divide[compile-time] 32767[Integer], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:786 int-divide[Integer] 32767[Integer], 1[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:787 int-divide[compile-time] 32767[Integer], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:788 int-divide[Integer] 32767[Integer], 127[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:789 int-divide[compile-time] 32767[Integer], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:790 int-divide[Integer] 32767[Integer], 128[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:791 int-divide[compile-time] 32767[Integer], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:792 int-divide[Integer] 32767[Integer], 255[Byte] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:793 int-divide[compile-time] 32767[Integer], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:794 int-divide[Integer] -32768[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:795 int-divide[compile-time] -32768[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:796 int-divide[Integer] -32768[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:797 int-divide[compile-time] -32768[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 255;
endcode
varvalue r -128

$overflow on
code auto:798 int-divide[Integer] -32768[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:799 int-divide[compile-time] -32768[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 32767;
endcode
varvalue r -1

$overflow on
code auto:800 int-divide[Integer] -32768[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:801 int-divide[compile-time] -32768[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 32768;
endcode
varvalue r -1

$overflow on
code auto:802 int-divide[Integer] -32768[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:803 int-divide[compile-time] -32768[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:804 int-divide[Integer] -32767[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:805 int-divide[compile-time] -32767[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:806 int-divide[Integer] -32767[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:807 int-divide[compile-time] -32767[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 255;
endcode
varvalue r -128

$overflow on
code auto:808 int-divide[Integer] -32767[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:809 int-divide[compile-time] -32767[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 32767;
endcode
varvalue r -1

$overflow on
code auto:810 int-divide[Integer] -32767[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:811 int-divide[compile-time] -32767[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:812 int-divide[Integer] -32767[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:813 int-divide[compile-time] -32767[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:814 int-divide[Integer] -129[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:815 int-divide[compile-time] -129[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:816 int-divide[Integer] -129[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:817 int-divide[compile-time] -129[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 255;
endcode
varvalue r 0

$overflow on
code auto:818 int-divide[Integer] -129[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:819 int-divide[compile-time] -129[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow on
code auto:820 int-divide[Integer] -129[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:821 int-divide[compile-time] -129[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 32768;
endcode
varvalue r 0

$overflow on
code auto:822 int-divide[Integer] -129[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:823 int-divide[compile-time] -129[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 65535;
endcode
varvalue r 0

$overflow on
code auto:824 int-divide[Integer] -128[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:825 int-divide[compile-time] -128[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:826 int-divide[Integer] -128[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:827 int-divide[compile-time] -128[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:828 int-divide[Integer] -128[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:829 int-divide[compile-time] -128[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:830 int-divide[Integer] -128[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:831 int-divide[compile-time] -128[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:832 int-divide[Integer] -128[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:833 int-divide[compile-time] -128[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:834 int-divide[Integer] -1[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:835 int-divide[compile-time] -1[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:836 int-divide[Integer] -1[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:837 int-divide[compile-time] -1[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:838 int-divide[Integer] -1[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:839 int-divide[compile-time] -1[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:840 int-divide[Integer] -1[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:841 int-divide[compile-time] -1[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:842 int-divide[Integer] -1[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:843 int-divide[compile-time] -1[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:844 int-divide[Integer] 0[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:845 int-divide[compile-time] 0[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:846 int-divide[Integer] 0[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:847 int-divide[compile-time] 0[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:848 int-divide[Integer] 0[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:849 int-divide[compile-time] 0[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:850 int-divide[Integer] 0[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:851 int-divide[compile-time] 0[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:852 int-divide[Integer] 0[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:853 int-divide[compile-time] 0[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:854 int-divide[Integer] 1[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:855 int-divide[compile-time] 1[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:856 int-divide[Integer] 1[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:857 int-divide[compile-time] 1[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:858 int-divide[Integer] 1[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:859 int-divide[compile-time] 1[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:860 int-divide[Integer] 1[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:861 int-divide[compile-time] 1[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:862 int-divide[Integer] 1[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:863 int-divide[compile-time] 1[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:864 int-divide[Integer] 127[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:865 int-divide[compile-time] 127[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:866 int-divide[Integer] 127[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:867 int-divide[compile-time] 127[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:868 int-divide[Integer] 127[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:869 int-divide[compile-time] 127[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:870 int-divide[Integer] 127[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:871 int-divide[compile-time] 127[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:872 int-divide[Integer] 127[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:873 int-divide[compile-time] 127[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:874 int-divide[Integer] 128[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:875 int-divide[compile-time] 128[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:876 int-divide[Integer] 128[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:877 int-divide[compile-time] 128[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:878 int-divide[Integer] 128[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:879 int-divide[compile-time] 128[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:880 int-divide[Integer] 128[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:881 int-divide[compile-time] 128[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:882 int-divide[Integer] 128[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:883 int-divide[compile-time] 128[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:884 int-divide[Integer] 32767[Integer], 0[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:885 int-divide[compile-time] 32767[Integer], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:886 int-divide[Integer] 32767[Integer], 255[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:887 int-divide[compile-time] 32767[Integer], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:888 int-divide[Integer] 32767[Integer], 32767[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:889 int-divide[compile-time] 32767[Integer], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:890 int-divide[Integer] 32767[Integer], 32768[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:891 int-divide[compile-time] 32767[Integer], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:892 int-divide[Integer] 32767[Integer], 65535[Word] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:893 int-divide[compile-time] 32767[Integer], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:894 int-divide[Pointer] -32768[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:895 int-divide[compile-time] -32768[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:896 int-divide[Pointer] -32768[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:897 int-divide[compile-time] -32768[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 div 255;
endcode
compile error

$overflow on
code auto:898 int-divide[Pointer] -32768[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:899 int-divide[compile-time] -32768[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 div 32767;
endcode
compile error

$overflow on
code auto:900 int-divide[Pointer] -32768[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:901 int-divide[compile-time] -32768[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 div 32768;
endcode
compile error

$overflow on
code auto:902 int-divide[Pointer] -32768[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:903 int-divide[compile-time] -32768[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:904 int-divide[Pointer] -32767[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:905 int-divide[compile-time] -32767[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:906 int-divide[Pointer] -32767[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:907 int-divide[compile-time] -32767[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 div 255;
endcode
compile error

$overflow on
code auto:908 int-divide[Pointer] -32767[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:909 int-divide[compile-time] -32767[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 div 32767;
endcode
compile error

$overflow on
code auto:910 int-divide[Pointer] -32767[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:911 int-divide[compile-time] -32767[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:912 int-divide[Pointer] -32767[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:913 int-divide[compile-time] -32767[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:914 int-divide[Pointer] -129[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:915 int-divide[compile-time] -129[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:916 int-divide[Pointer] -129[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:917 int-divide[compile-time] -129[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 div 255;
endcode
varvalue r 0

$overflow on
code auto:918 int-divide[Pointer] -129[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:919 int-divide[compile-time] -129[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow on
code auto:920 int-divide[Pointer] -129[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:921 int-divide[compile-time] -129[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 div 32768;
endcode
varvalue r 0

$overflow on
code auto:922 int-divide[Pointer] -129[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -129;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:923 int-divide[compile-time] -129[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -129 div 65535;
endcode
varvalue r 0

$overflow on
code auto:924 int-divide[Pointer] -128[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:925 int-divide[compile-time] -128[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:926 int-divide[Pointer] -128[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:927 int-divide[compile-time] -128[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 255;
endcode
varvalue r 0

$overflow on
code auto:928 int-divide[Pointer] -128[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:929 int-divide[compile-time] -128[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:930 int-divide[Pointer] -128[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:931 int-divide[compile-time] -128[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:932 int-divide[Pointer] -128[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:933 int-divide[compile-time] -128[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:934 int-divide[Pointer] -1[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:935 int-divide[compile-time] -1[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:936 int-divide[Pointer] -1[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:937 int-divide[compile-time] -1[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 255;
endcode
varvalue r 0

$overflow on
code auto:938 int-divide[Pointer] -1[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:939 int-divide[compile-time] -1[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:940 int-divide[Pointer] -1[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:941 int-divide[compile-time] -1[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:942 int-divide[Pointer] -1[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = -1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:943 int-divide[compile-time] -1[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := -1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:944 int-divide[Pointer] 0[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:945 int-divide[compile-time] 0[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:946 int-divide[Pointer] 0[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:947 int-divide[compile-time] 0[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:948 int-divide[Pointer] 0[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:949 int-divide[compile-time] 0[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:950 int-divide[Pointer] 0[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:951 int-divide[compile-time] 0[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:952 int-divide[Pointer] 0[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:953 int-divide[compile-time] 0[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:954 int-divide[Pointer] 1[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:955 int-divide[compile-time] 1[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:956 int-divide[Pointer] 1[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:957 int-divide[compile-time] 1[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:958 int-divide[Pointer] 1[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:959 int-divide[compile-time] 1[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:960 int-divide[Pointer] 1[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:961 int-divide[compile-time] 1[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:962 int-divide[Pointer] 1[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:963 int-divide[compile-time] 1[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:964 int-divide[Pointer] 127[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:965 int-divide[compile-time] 127[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:966 int-divide[Pointer] 127[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:967 int-divide[compile-time] 127[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:968 int-divide[Pointer] 127[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:969 int-divide[compile-time] 127[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:970 int-divide[Pointer] 127[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:971 int-divide[compile-time] 127[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:972 int-divide[Pointer] 127[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:973 int-divide[compile-time] 127[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:974 int-divide[Pointer] 128[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:975 int-divide[compile-time] 128[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:976 int-divide[Pointer] 128[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:977 int-divide[compile-time] 128[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:978 int-divide[Pointer] 128[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:979 int-divide[compile-time] 128[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:980 int-divide[Pointer] 128[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:981 int-divide[compile-time] 128[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:982 int-divide[Pointer] 128[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:983 int-divide[compile-time] 128[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:984 int-divide[Pointer] 32767[Integer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:985 int-divide[compile-time] 32767[Integer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:986 int-divide[Pointer] 32767[Integer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:987 int-divide[compile-time] 32767[Integer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:988 int-divide[Pointer] 32767[Integer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:989 int-divide[compile-time] 32767[Integer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:990 int-divide[Pointer] 32767[Integer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:991 int-divide[compile-time] 32767[Integer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:992 int-divide[Pointer] 32767[Integer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:993 int-divide[compile-time] 32767[Integer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:994 int-divide[Integer] 0[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:995 int-divide[compile-time] 0[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:996 int-divide[Integer] 0[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:997 int-divide[compile-time] 0[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:998 int-divide[Integer] 0[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:999 int-divide[compile-time] 0[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1000 int-divide[Integer] 0[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1001 int-divide[compile-time] 0[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1002 int-divide[Integer] 0[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1003 int-divide[compile-time] 0[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1004 int-divide[Integer] 0[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1005 int-divide[compile-time] 0[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1006 int-divide[Integer] 1[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1007 int-divide[compile-time] 1[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:1008 int-divide[Integer] 1[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1009 int-divide[compile-time] 1[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -127;
endcode
varvalue r 0

$overflow on
code auto:1010 int-divide[Integer] 1[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1011 int-divide[compile-time] 1[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:1012 int-divide[Integer] 1[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1013 int-divide[compile-time] 1[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1014 int-divide[Integer] 1[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1015 int-divide[compile-time] 1[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:1016 int-divide[Integer] 1[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1017 int-divide[compile-time] 1[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:1018 int-divide[Integer] 127[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1019 int-divide[compile-time] 127[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:1020 int-divide[Integer] 127[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1021 int-divide[compile-time] 127[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -127;
endcode
varvalue r -1

$overflow on
code auto:1022 int-divide[Integer] 127[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:1023 int-divide[compile-time] 127[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:1024 int-divide[Integer] 127[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1025 int-divide[compile-time] 127[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1026 int-divide[Integer] 127[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:1027 int-divide[compile-time] 127[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:1028 int-divide[Integer] 127[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1029 int-divide[compile-time] 127[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:1030 int-divide[Integer] 128[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1031 int-divide[compile-time] 128[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -128;
endcode
varvalue r -1

$overflow on
code auto:1032 int-divide[Integer] 128[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1033 int-divide[compile-time] 128[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -127;
endcode
varvalue r -1

$overflow on
code auto:1034 int-divide[Integer] 128[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:1035 int-divide[compile-time] 128[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -1;
endcode
varvalue r -128

$overflow on
code auto:1036 int-divide[Integer] 128[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1037 int-divide[compile-time] 128[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:1038 int-divide[Integer] 128[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:1039 int-divide[compile-time] 128[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:1040 int-divide[Integer] 128[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1041 int-divide[compile-time] 128[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:1042 int-divide[Integer] 255[Byte], -128[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1043 int-divide[compile-time] 255[Byte], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -128;
endcode
varvalue r -1

$overflow on
code auto:1044 int-divide[Integer] 255[Byte], -127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -2

code auto:1045 int-divide[compile-time] 255[Byte], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -127;
endcode
varvalue r -2

$overflow on
code auto:1046 int-divide[Integer] 255[Byte], -1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1047 int-divide[compile-time] 255[Byte], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -1;
endcode
varvalue r -255

$overflow on
code auto:1048 int-divide[Integer] 255[Byte], 0[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1049 int-divide[compile-time] 255[Byte], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1050 int-divide[Integer] 255[Byte], 1[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:1051 int-divide[compile-time] 255[Byte], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1052 int-divide[Integer] 255[Byte], 127[Int8] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:1053 int-divide[compile-time] 255[Byte], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1054 int-divide[Integer] 0[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1055 int-divide[compile-time] 0[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1056 int-divide[Integer] 0[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1057 int-divide[compile-time] 0[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1058 int-divide[Integer] 0[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1059 int-divide[compile-time] 0[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:1060 int-divide[Integer] 0[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1061 int-divide[compile-time] 0[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1062 int-divide[Integer] 0[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1063 int-divide[compile-time] 0[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1064 int-divide[Integer] 0[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1065 int-divide[compile-time] 0[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1066 int-divide[Integer] 0[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1067 int-divide[compile-time] 0[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1068 int-divide[Integer] 0[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1069 int-divide[compile-time] 0[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1070 int-divide[Integer] 0[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1071 int-divide[compile-time] 0[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1072 int-divide[Integer] 0[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1073 int-divide[compile-time] 0[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1074 int-divide[Integer] 1[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1075 int-divide[compile-time] 1[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1076 int-divide[Integer] 1[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1077 int-divide[compile-time] 1[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1078 int-divide[Integer] 1[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1079 int-divide[compile-time] 1[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -129;
endcode
varvalue r 0

$overflow on
code auto:1080 int-divide[Integer] 1[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1081 int-divide[compile-time] 1[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:1082 int-divide[Integer] 1[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1083 int-divide[compile-time] 1[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:1084 int-divide[Integer] 1[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1085 int-divide[compile-time] 1[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1086 int-divide[Integer] 1[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1087 int-divide[compile-time] 1[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:1088 int-divide[Integer] 1[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1089 int-divide[compile-time] 1[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:1090 int-divide[Integer] 1[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1091 int-divide[compile-time] 1[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:1092 int-divide[Integer] 1[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1093 int-divide[compile-time] 1[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1094 int-divide[Integer] 127[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1095 int-divide[compile-time] 127[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1096 int-divide[Integer] 127[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1097 int-divide[compile-time] 127[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1098 int-divide[Integer] 127[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1099 int-divide[compile-time] 127[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -129;
endcode
varvalue r 0

$overflow on
code auto:1100 int-divide[Integer] 127[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1101 int-divide[compile-time] 127[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:1102 int-divide[Integer] 127[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:1103 int-divide[compile-time] 127[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:1104 int-divide[Integer] 127[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1105 int-divide[compile-time] 127[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1106 int-divide[Integer] 127[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:1107 int-divide[compile-time] 127[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:1108 int-divide[Integer] 127[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1109 int-divide[compile-time] 127[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:1110 int-divide[Integer] 127[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1111 int-divide[compile-time] 127[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:1112 int-divide[Integer] 127[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1113 int-divide[compile-time] 127[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1114 int-divide[Integer] 128[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1115 int-divide[compile-time] 128[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1116 int-divide[Integer] 128[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1117 int-divide[compile-time] 128[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1118 int-divide[Integer] 128[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1119 int-divide[compile-time] 128[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -129;
endcode
varvalue r 0

$overflow on
code auto:1120 int-divide[Integer] 128[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1121 int-divide[compile-time] 128[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -128;
endcode
varvalue r -1

$overflow on
code auto:1122 int-divide[Integer] 128[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:1123 int-divide[compile-time] 128[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -1;
endcode
varvalue r -128

$overflow on
code auto:1124 int-divide[Integer] 128[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1125 int-divide[compile-time] 128[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:1126 int-divide[Integer] 128[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:1127 int-divide[compile-time] 128[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:1128 int-divide[Integer] 128[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1129 int-divide[compile-time] 128[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:1130 int-divide[Integer] 128[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1131 int-divide[compile-time] 128[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:1132 int-divide[Integer] 128[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1133 int-divide[compile-time] 128[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1134 int-divide[Integer] 255[Byte], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1135 int-divide[compile-time] 255[Byte], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1136 int-divide[Integer] 255[Byte], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1137 int-divide[compile-time] 255[Byte], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1138 int-divide[Integer] 255[Byte], -129[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1139 int-divide[compile-time] 255[Byte], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -129;
endcode
varvalue r -1

$overflow on
code auto:1140 int-divide[Integer] 255[Byte], -128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1141 int-divide[compile-time] 255[Byte], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -128;
endcode
varvalue r -1

$overflow on
code auto:1142 int-divide[Integer] 255[Byte], -1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1143 int-divide[compile-time] 255[Byte], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -1;
endcode
varvalue r -255

$overflow on
code auto:1144 int-divide[Integer] 255[Byte], 0[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1145 int-divide[compile-time] 255[Byte], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1146 int-divide[Integer] 255[Byte], 1[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:1147 int-divide[compile-time] 255[Byte], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1148 int-divide[Integer] 255[Byte], 127[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:1149 int-divide[compile-time] 255[Byte], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1150 int-divide[Integer] 255[Byte], 128[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1151 int-divide[compile-time] 255[Byte], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1152 int-divide[Integer] 255[Byte], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1153 int-divide[compile-time] 255[Byte], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1154 int-divide[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:1155 int-divide[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1156 int-divide[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1157 int-divide[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1158 int-divide[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1159 int-divide[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1160 int-divide[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1161 int-divide[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1162 int-divide[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1163 int-divide[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1164 int-divide[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:1165 int-divide[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1166 int-divide[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1167 int-divide[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:1168 int-divide[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1169 int-divide[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:1170 int-divide[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1171 int-divide[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:1172 int-divide[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1173 int-divide[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:1174 int-divide[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:1175 int-divide[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1176 int-divide[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 127

code auto:1177 int-divide[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:1178 int-divide[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1179 int-divide[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:1180 int-divide[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1181 int-divide[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:1182 int-divide[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1183 int-divide[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:1184 int-divide[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:1185 int-divide[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:1186 int-divide[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:1187 int-divide[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:1188 int-divide[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1189 int-divide[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:1190 int-divide[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1191 int-divide[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:1192 int-divide[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:1193 int-divide[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:1194 int-divide[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:1195 int-divide[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1196 int-divide[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 255

code auto:1197 int-divide[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1198 int-divide[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 2

code auto:1199 int-divide[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1200 int-divide[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1201 int-divide[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1202 int-divide[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:1203 int-divide[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1204 int-divide[Word] 0[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1205 int-divide[compile-time] 0[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1206 int-divide[Word] 0[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1207 int-divide[compile-time] 0[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1208 int-divide[Word] 0[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1209 int-divide[compile-time] 0[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1210 int-divide[Word] 0[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1211 int-divide[compile-time] 0[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1212 int-divide[Word] 0[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1213 int-divide[compile-time] 0[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1214 int-divide[Word] 1[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1215 int-divide[compile-time] 1[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1216 int-divide[Word] 1[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1217 int-divide[compile-time] 1[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:1218 int-divide[Word] 1[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1219 int-divide[compile-time] 1[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1220 int-divide[Word] 1[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1221 int-divide[compile-time] 1[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1222 int-divide[Word] 1[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1223 int-divide[compile-time] 1[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1224 int-divide[Word] 127[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1225 int-divide[compile-time] 127[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1226 int-divide[Word] 127[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1227 int-divide[compile-time] 127[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:1228 int-divide[Word] 127[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1229 int-divide[compile-time] 127[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1230 int-divide[Word] 127[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1231 int-divide[compile-time] 127[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1232 int-divide[Word] 127[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1233 int-divide[compile-time] 127[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1234 int-divide[Word] 128[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1235 int-divide[compile-time] 128[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:1236 int-divide[Word] 128[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1237 int-divide[compile-time] 128[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:1238 int-divide[Word] 128[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1239 int-divide[compile-time] 128[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1240 int-divide[Word] 128[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1241 int-divide[compile-time] 128[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1242 int-divide[Word] 128[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1243 int-divide[compile-time] 128[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1244 int-divide[Word] 255[Byte], 0[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1245 int-divide[compile-time] 255[Byte], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1246 int-divide[Word] 255[Byte], 255[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1247 int-divide[compile-time] 255[Byte], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1248 int-divide[Word] 255[Byte], 32767[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1249 int-divide[compile-time] 255[Byte], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1250 int-divide[Word] 255[Byte], 32768[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1251 int-divide[compile-time] 255[Byte], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1252 int-divide[Word] 255[Byte], 65535[Word] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1253 int-divide[compile-time] 255[Byte], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1254 int-divide[Pointer] 0[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1255 int-divide[compile-time] 0[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1256 int-divide[Pointer] 0[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1257 int-divide[compile-time] 0[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1258 int-divide[Pointer] 0[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1259 int-divide[compile-time] 0[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1260 int-divide[Pointer] 0[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1261 int-divide[compile-time] 0[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1262 int-divide[Pointer] 0[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1263 int-divide[compile-time] 0[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1264 int-divide[Pointer] 1[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1265 int-divide[compile-time] 1[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1266 int-divide[Pointer] 1[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1267 int-divide[compile-time] 1[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:1268 int-divide[Pointer] 1[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1269 int-divide[compile-time] 1[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1270 int-divide[Pointer] 1[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1271 int-divide[compile-time] 1[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1272 int-divide[Pointer] 1[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 1;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1273 int-divide[compile-time] 1[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 1 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1274 int-divide[Pointer] 127[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1275 int-divide[compile-time] 127[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1276 int-divide[Pointer] 127[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1277 int-divide[compile-time] 127[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:1278 int-divide[Pointer] 127[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1279 int-divide[compile-time] 127[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1280 int-divide[Pointer] 127[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1281 int-divide[compile-time] 127[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1282 int-divide[Pointer] 127[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 127;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1283 int-divide[compile-time] 127[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 127 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1284 int-divide[Pointer] 128[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1285 int-divide[compile-time] 128[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:1286 int-divide[Pointer] 128[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1287 int-divide[compile-time] 128[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:1288 int-divide[Pointer] 128[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1289 int-divide[compile-time] 128[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1290 int-divide[Pointer] 128[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1291 int-divide[compile-time] 128[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1292 int-divide[Pointer] 128[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 128;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1293 int-divide[compile-time] 128[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 128 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1294 int-divide[Pointer] 255[Byte], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1295 int-divide[compile-time] 255[Byte], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1296 int-divide[Pointer] 255[Byte], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1297 int-divide[compile-time] 255[Byte], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1298 int-divide[Pointer] 255[Byte], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1299 int-divide[compile-time] 255[Byte], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1300 int-divide[Pointer] 255[Byte], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1301 int-divide[compile-time] 255[Byte], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1302 int-divide[Pointer] 255[Byte], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Byte = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1303 int-divide[compile-time] 255[Byte], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1304 int-divide[Integer] 0[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1305 int-divide[compile-time] 0[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1306 int-divide[Integer] 0[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1307 int-divide[compile-time] 0[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:1308 int-divide[Integer] 0[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1309 int-divide[compile-time] 0[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1310 int-divide[Integer] 0[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1311 int-divide[compile-time] 0[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1312 int-divide[Integer] 0[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1313 int-divide[compile-time] 0[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1314 int-divide[Integer] 0[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1315 int-divide[compile-time] 0[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1316 int-divide[Integer] 255[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1317 int-divide[compile-time] 255[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -128;
endcode
varvalue r -1

$overflow on
code auto:1318 int-divide[Integer] 255[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -2

code auto:1319 int-divide[compile-time] 255[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -127;
endcode
varvalue r -2

$overflow on
code auto:1320 int-divide[Integer] 255[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1321 int-divide[compile-time] 255[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -1;
endcode
varvalue r -255

$overflow on
code auto:1322 int-divide[Integer] 255[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1323 int-divide[compile-time] 255[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1324 int-divide[Integer] 255[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:1325 int-divide[compile-time] 255[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1326 int-divide[Integer] 255[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:1327 int-divide[compile-time] 255[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1328 int-divide[Integer] 32767[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1329 int-divide[compile-time] 32767[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -128;
endcode
varvalue r -255

$overflow on
code auto:1330 int-divide[Integer] 32767[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:1331 int-divide[compile-time] 32767[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -127;
endcode
varvalue r -258

$overflow on
code auto:1332 int-divide[Integer] 32767[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:1333 int-divide[compile-time] 32767[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -1;
endcode
varvalue r -32767

$overflow on
code auto:1334 int-divide[Integer] 32767[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1335 int-divide[compile-time] 32767[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1336 int-divide[Integer] 32767[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:1337 int-divide[compile-time] 32767[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1338 int-divide[Integer] 32767[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:1339 int-divide[compile-time] 32767[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1340 int-divide[Integer] 32768[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -256

code auto:1341 int-divide[compile-time] 32768[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -128;
endcode
varvalue r -256

$overflow on
code auto:1342 int-divide[Integer] 32768[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:1343 int-divide[compile-time] 32768[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -127;
endcode
varvalue r -258

$overflow on
code auto:1344 int-divide[Integer] 32768[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:1345 int-divide[compile-time] 32768[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -1;
endcode
varvalue r -32768

$overflow on
code auto:1346 int-divide[Integer] 32768[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1347 int-divide[compile-time] 32768[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1348 int-divide[Integer] 32768[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1349 int-divide[compile-time] 32768[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 1;
endcode
compile error

$overflow on
code auto:1350 int-divide[Integer] 32768[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:1351 int-divide[compile-time] 32768[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1352 int-divide[Integer] 65535[Word], -128[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -511

code auto:1353 int-divide[compile-time] 65535[Word], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -128;
endcode
varvalue r -511

$overflow on
code auto:1354 int-divide[Integer] 65535[Word], -127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -516

code auto:1355 int-divide[compile-time] 65535[Word], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -127;
endcode
varvalue r -516

$overflow on
code auto:1356 int-divide[Integer] 65535[Word], -1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1357 int-divide[compile-time] 65535[Word], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -1;
endcode
compile error

$overflow on
code auto:1358 int-divide[Integer] 65535[Word], 0[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1359 int-divide[compile-time] 65535[Word], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1360 int-divide[Integer] 65535[Word], 1[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1361 int-divide[compile-time] 65535[Word], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 1;
endcode
compile error

$overflow on
code auto:1362 int-divide[Integer] 65535[Word], 127[Int8] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 516

code auto:1363 int-divide[compile-time] 65535[Word], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1364 int-divide[Integer] 0[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1365 int-divide[compile-time] 0[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1366 int-divide[Integer] 0[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1367 int-divide[compile-time] 0[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1368 int-divide[Integer] 0[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1369 int-divide[compile-time] 0[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:1370 int-divide[Integer] 0[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1371 int-divide[compile-time] 0[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1372 int-divide[Integer] 0[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1373 int-divide[compile-time] 0[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1374 int-divide[Integer] 0[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1375 int-divide[compile-time] 0[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1376 int-divide[Integer] 0[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1377 int-divide[compile-time] 0[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1378 int-divide[Integer] 0[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1379 int-divide[compile-time] 0[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1380 int-divide[Integer] 0[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1381 int-divide[compile-time] 0[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1382 int-divide[Integer] 0[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1383 int-divide[compile-time] 0[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1384 int-divide[Integer] 255[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1385 int-divide[compile-time] 255[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1386 int-divide[Integer] 255[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1387 int-divide[compile-time] 255[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1388 int-divide[Integer] 255[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1389 int-divide[compile-time] 255[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -129;
endcode
varvalue r -1

$overflow on
code auto:1390 int-divide[Integer] 255[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1391 int-divide[compile-time] 255[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -128;
endcode
varvalue r -1

$overflow on
code auto:1392 int-divide[Integer] 255[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1393 int-divide[compile-time] 255[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div -1;
endcode
varvalue r -255

$overflow on
code auto:1394 int-divide[Integer] 255[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1395 int-divide[compile-time] 255[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1396 int-divide[Integer] 255[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:1397 int-divide[compile-time] 255[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1398 int-divide[Integer] 255[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:1399 int-divide[compile-time] 255[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1400 int-divide[Integer] 255[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1401 int-divide[compile-time] 255[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1402 int-divide[Integer] 255[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1403 int-divide[compile-time] 255[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1404 int-divide[Integer] 32767[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:1405 int-divide[compile-time] 32767[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1406 int-divide[Integer] 32767[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1407 int-divide[compile-time] 32767[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32767;
endcode
varvalue r -1

$overflow on
code auto:1408 int-divide[Integer] 32767[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -254

code auto:1409 int-divide[compile-time] 32767[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -129;
endcode
varvalue r -254

$overflow on
code auto:1410 int-divide[Integer] 32767[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:1411 int-divide[compile-time] 32767[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -128;
endcode
varvalue r -255

$overflow on
code auto:1412 int-divide[Integer] 32767[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:1413 int-divide[compile-time] 32767[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -1;
endcode
varvalue r -32767

$overflow on
code auto:1414 int-divide[Integer] 32767[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1415 int-divide[compile-time] 32767[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1416 int-divide[Integer] 32767[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:1417 int-divide[compile-time] 32767[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1418 int-divide[Integer] 32767[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:1419 int-divide[compile-time] 32767[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1420 int-divide[Integer] 32767[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:1421 int-divide[compile-time] 32767[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:1422 int-divide[Integer] 32767[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1423 int-divide[compile-time] 32767[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1424 int-divide[Integer] 32768[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1425 int-divide[compile-time] 32768[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -32768;
endcode
varvalue r -1

$overflow on
code auto:1426 int-divide[Integer] 32768[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1427 int-divide[compile-time] 32768[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -32767;
endcode
varvalue r -1

$overflow on
code auto:1428 int-divide[Integer] 32768[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -254

code auto:1429 int-divide[compile-time] 32768[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -129;
endcode
varvalue r -254

$overflow on
code auto:1430 int-divide[Integer] 32768[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -256

code auto:1431 int-divide[compile-time] 32768[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -128;
endcode
varvalue r -256

$overflow on
code auto:1432 int-divide[Integer] 32768[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:1433 int-divide[compile-time] 32768[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div -1;
endcode
varvalue r -32768

$overflow on
code auto:1434 int-divide[Integer] 32768[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1435 int-divide[compile-time] 32768[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1436 int-divide[Integer] 32768[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1437 int-divide[compile-time] 32768[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 1;
endcode
compile error

$overflow on
code auto:1438 int-divide[Integer] 32768[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:1439 int-divide[compile-time] 32768[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1440 int-divide[Integer] 32768[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 256

code auto:1441 int-divide[compile-time] 32768[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 128;
endcode
varvalue r 256

$overflow on
code auto:1442 int-divide[Integer] 32768[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1443 int-divide[compile-time] 32768[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1444 int-divide[Integer] 65535[Word], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:1445 int-divide[compile-time] 65535[Word], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -32768;
endcode
varvalue r -1

$overflow on
code auto:1446 int-divide[Integer] 65535[Word], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -2

code auto:1447 int-divide[compile-time] 65535[Word], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -32767;
endcode
varvalue r -2

$overflow on
code auto:1448 int-divide[Integer] 65535[Word], -129[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -508

code auto:1449 int-divide[compile-time] 65535[Word], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -129;
endcode
varvalue r -508

$overflow on
code auto:1450 int-divide[Integer] 65535[Word], -128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -511

code auto:1451 int-divide[compile-time] 65535[Word], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -128;
endcode
varvalue r -511

$overflow on
code auto:1452 int-divide[Integer] 65535[Word], -1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1453 int-divide[compile-time] 65535[Word], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div -1;
endcode
compile error

$overflow on
code auto:1454 int-divide[Integer] 65535[Word], 0[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1455 int-divide[compile-time] 65535[Word], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1456 int-divide[Integer] 65535[Word], 1[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:1457 int-divide[compile-time] 65535[Word], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 1;
endcode
compile error

$overflow on
code auto:1458 int-divide[Integer] 65535[Word], 127[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 516

code auto:1459 int-divide[compile-time] 65535[Word], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1460 int-divide[Integer] 65535[Word], 128[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 511

code auto:1461 int-divide[compile-time] 65535[Word], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 128;
endcode
varvalue r 511

$overflow on
code auto:1462 int-divide[Integer] 65535[Word], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:1463 int-divide[compile-time] 65535[Word], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1464 int-divide[Word] 0[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1465 int-divide[compile-time] 0[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1466 int-divide[Word] 0[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1467 int-divide[compile-time] 0[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1468 int-divide[Word] 0[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1469 int-divide[compile-time] 0[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1470 int-divide[Word] 0[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1471 int-divide[compile-time] 0[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1472 int-divide[Word] 0[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1473 int-divide[compile-time] 0[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1474 int-divide[Word] 255[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1475 int-divide[compile-time] 255[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1476 int-divide[Word] 255[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 255

code auto:1477 int-divide[compile-time] 255[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1478 int-divide[Word] 255[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 2

code auto:1479 int-divide[compile-time] 255[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1480 int-divide[Word] 255[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1481 int-divide[compile-time] 255[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1482 int-divide[Word] 255[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1483 int-divide[compile-time] 255[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1484 int-divide[Word] 32767[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1485 int-divide[compile-time] 32767[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1486 int-divide[Word] 32767[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 32767

code auto:1487 int-divide[compile-time] 32767[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1488 int-divide[Word] 32767[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 258

code auto:1489 int-divide[compile-time] 32767[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1490 int-divide[Word] 32767[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 255

code auto:1491 int-divide[compile-time] 32767[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:1492 int-divide[Word] 32767[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:1493 int-divide[compile-time] 32767[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1494 int-divide[Word] 32768[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1495 int-divide[compile-time] 32768[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1496 int-divide[Word] 32768[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 32768

code auto:1497 int-divide[compile-time] 32768[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 1;
endcode
varvalue r 32768

$overflow on
code auto:1498 int-divide[Word] 32768[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 258

code auto:1499 int-divide[compile-time] 32768[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1500 int-divide[Word] 32768[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 256

code auto:1501 int-divide[compile-time] 32768[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 128;
endcode
varvalue r 256

$overflow on
code auto:1502 int-divide[Word] 32768[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:1503 int-divide[compile-time] 32768[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1504 int-divide[Word] 65535[Word], 0[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1505 int-divide[compile-time] 65535[Word], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1506 int-divide[Word] 65535[Word], 1[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 65535

code auto:1507 int-divide[compile-time] 65535[Word], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 1;
endcode
varvalue r 65535

$overflow on
code auto:1508 int-divide[Word] 65535[Word], 127[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 516

code auto:1509 int-divide[compile-time] 65535[Word], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1510 int-divide[Word] 65535[Word], 128[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 511

code auto:1511 int-divide[compile-time] 65535[Word], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 128;
endcode
varvalue r 511

$overflow on
code auto:1512 int-divide[Word] 65535[Word], 255[Byte] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 257

code auto:1513 int-divide[compile-time] 65535[Word], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1514 int-divide[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1515 int-divide[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1516 int-divide[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1517 int-divide[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1518 int-divide[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1519 int-divide[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1520 int-divide[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1521 int-divide[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1522 int-divide[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1523 int-divide[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1524 int-divide[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1525 int-divide[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1526 int-divide[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1527 int-divide[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1528 int-divide[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1529 int-divide[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1530 int-divide[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1531 int-divide[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1532 int-divide[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1533 int-divide[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1534 int-divide[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1535 int-divide[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1536 int-divide[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:1537 int-divide[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1538 int-divide[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1539 int-divide[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1540 int-divide[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1541 int-divide[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1542 int-divide[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1543 int-divide[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1544 int-divide[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1545 int-divide[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1546 int-divide[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:1547 int-divide[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1548 int-divide[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1549 int-divide[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1550 int-divide[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1551 int-divide[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1552 int-divide[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:1553 int-divide[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1554 int-divide[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:1555 int-divide[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1556 int-divide[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 257

code auto:1557 int-divide[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1558 int-divide[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 2

code auto:1559 int-divide[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1560 int-divide[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1561 int-divide[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1562 int-divide[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:1563 int-divide[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow on
code auto:1564 int-divide[Pointer] 0[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1565 int-divide[compile-time] 0[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1566 int-divide[Pointer] 0[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1567 int-divide[compile-time] 0[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1568 int-divide[Pointer] 0[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1569 int-divide[compile-time] 0[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1570 int-divide[Pointer] 0[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1571 int-divide[compile-time] 0[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1572 int-divide[Pointer] 0[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1573 int-divide[compile-time] 0[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1574 int-divide[Pointer] 255[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1575 int-divide[compile-time] 255[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1576 int-divide[Pointer] 255[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1577 int-divide[compile-time] 255[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1578 int-divide[Pointer] 255[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1579 int-divide[compile-time] 255[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1580 int-divide[Pointer] 255[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1581 int-divide[compile-time] 255[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1582 int-divide[Pointer] 255[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1583 int-divide[compile-time] 255[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1584 int-divide[Pointer] 32767[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1585 int-divide[compile-time] 32767[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1586 int-divide[Pointer] 32767[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1587 int-divide[compile-time] 32767[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1588 int-divide[Pointer] 32767[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1589 int-divide[compile-time] 32767[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1590 int-divide[Pointer] 32767[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1591 int-divide[compile-time] 32767[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1592 int-divide[Pointer] 32767[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1593 int-divide[compile-time] 32767[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1594 int-divide[Pointer] 32768[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1595 int-divide[compile-time] 32768[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1596 int-divide[Pointer] 32768[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1597 int-divide[compile-time] 32768[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1598 int-divide[Pointer] 32768[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1599 int-divide[compile-time] 32768[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1600 int-divide[Pointer] 32768[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1601 int-divide[compile-time] 32768[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1602 int-divide[Pointer] 32768[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1603 int-divide[compile-time] 32768[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1604 int-divide[Pointer] 65535[Word], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1605 int-divide[compile-time] 65535[Word], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1606 int-divide[Pointer] 65535[Word], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 257

code auto:1607 int-divide[compile-time] 65535[Word], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1608 int-divide[Pointer] 65535[Word], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1609 int-divide[compile-time] 65535[Word], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1610 int-divide[Pointer] 65535[Word], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1611 int-divide[compile-time] 65535[Word], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1612 int-divide[Pointer] 65535[Word], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Word = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1613 int-divide[compile-time] 65535[Word], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow on
code auto:1614 int-divide[Pointer] 0[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1615 int-divide[compile-time] 0[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1616 int-divide[Pointer] 0[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1617 int-divide[compile-time] 0[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:1618 int-divide[Pointer] 0[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1619 int-divide[compile-time] 0[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1620 int-divide[Pointer] 0[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1621 int-divide[compile-time] 0[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1622 int-divide[Pointer] 0[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1623 int-divide[compile-time] 0[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1624 int-divide[Pointer] 0[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1625 int-divide[compile-time] 0[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1626 int-divide[Pointer] 255[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1627 int-divide[compile-time] 255[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -128;
endcode
compile error

$overflow on
code auto:1628 int-divide[Pointer] 255[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1629 int-divide[compile-time] 255[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -127;
endcode
compile error

$overflow on
code auto:1630 int-divide[Pointer] 255[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1631 int-divide[compile-time] 255[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -1;
endcode
compile error

$overflow on
code auto:1632 int-divide[Pointer] 255[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1633 int-divide[compile-time] 255[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1634 int-divide[Pointer] 255[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 255

code auto:1635 int-divide[compile-time] 255[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1636 int-divide[Pointer] 255[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1637 int-divide[compile-time] 255[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1638 int-divide[Pointer] 32767[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1639 int-divide[compile-time] 32767[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -128;
endcode
compile error

$overflow on
code auto:1640 int-divide[Pointer] 32767[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1641 int-divide[compile-time] 32767[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -127;
endcode
compile error

$overflow on
code auto:1642 int-divide[Pointer] 32767[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1643 int-divide[compile-time] 32767[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -1;
endcode
compile error

$overflow on
code auto:1644 int-divide[Pointer] 32767[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1645 int-divide[compile-time] 32767[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1646 int-divide[Pointer] 32767[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32767

code auto:1647 int-divide[compile-time] 32767[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1648 int-divide[Pointer] 32767[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1649 int-divide[compile-time] 32767[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1650 int-divide[Pointer] 32768[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1651 int-divide[compile-time] 32768[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -128;
endcode
compile error

$overflow on
code auto:1652 int-divide[Pointer] 32768[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1653 int-divide[compile-time] 32768[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -127;
endcode
compile error

$overflow on
code auto:1654 int-divide[Pointer] 32768[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1655 int-divide[compile-time] 32768[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -1;
endcode
compile error

$overflow on
code auto:1656 int-divide[Pointer] 32768[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1657 int-divide[compile-time] 32768[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1658 int-divide[Pointer] 32768[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32768

code auto:1659 int-divide[compile-time] 32768[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 1;
endcode
varvalue r 32768

$overflow on
code auto:1660 int-divide[Pointer] 32768[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1661 int-divide[compile-time] 32768[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1662 int-divide[Pointer] 65535[Pointer], -128[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1663 int-divide[compile-time] 65535[Pointer], -128[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -128;
endcode
compile error

$overflow on
code auto:1664 int-divide[Pointer] 65535[Pointer], -127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -127;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1665 int-divide[compile-time] 65535[Pointer], -127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -127;
endcode
compile error

$overflow on
code auto:1666 int-divide[Pointer] 65535[Pointer], -1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1667 int-divide[compile-time] 65535[Pointer], -1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -1;
endcode
compile error

$overflow on
code auto:1668 int-divide[Pointer] 65535[Pointer], 0[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1669 int-divide[compile-time] 65535[Pointer], 0[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1670 int-divide[Pointer] 65535[Pointer], 1[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 65535

code auto:1671 int-divide[compile-time] 65535[Pointer], 1[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 1;
endcode
varvalue r 65535

$overflow on
code auto:1672 int-divide[Pointer] 65535[Pointer], 127[Int8] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Int8 = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 516

code auto:1673 int-divide[compile-time] 65535[Pointer], 127[Int8] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1674 int-divide[Pointer] 0[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1675 int-divide[compile-time] 0[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1676 int-divide[Pointer] 0[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1677 int-divide[compile-time] 0[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1678 int-divide[Pointer] 0[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1679 int-divide[compile-time] 0[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:1680 int-divide[Pointer] 0[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1681 int-divide[compile-time] 0[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1682 int-divide[Pointer] 0[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1683 int-divide[compile-time] 0[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1684 int-divide[Pointer] 0[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1685 int-divide[compile-time] 0[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1686 int-divide[Pointer] 0[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1687 int-divide[compile-time] 0[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1688 int-divide[Pointer] 0[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1689 int-divide[compile-time] 0[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1690 int-divide[Pointer] 0[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1691 int-divide[compile-time] 0[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1692 int-divide[Pointer] 0[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1693 int-divide[compile-time] 0[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1694 int-divide[Pointer] 255[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1695 int-divide[compile-time] 255[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1696 int-divide[Pointer] 255[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1697 int-divide[compile-time] 255[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -32767;
endcode
varvalue r 0

$overflow on
code auto:1698 int-divide[Pointer] 255[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1699 int-divide[compile-time] 255[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -129;
endcode
compile error

$overflow on
code auto:1700 int-divide[Pointer] 255[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1701 int-divide[compile-time] 255[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -128;
endcode
compile error

$overflow on
code auto:1702 int-divide[Pointer] 255[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1703 int-divide[compile-time] 255[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div -1;
endcode
compile error

$overflow on
code auto:1704 int-divide[Pointer] 255[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1705 int-divide[compile-time] 255[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1706 int-divide[Pointer] 255[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 255

code auto:1707 int-divide[compile-time] 255[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1708 int-divide[Pointer] 255[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1709 int-divide[compile-time] 255[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1710 int-divide[Pointer] 255[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1711 int-divide[compile-time] 255[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1712 int-divide[Pointer] 255[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1713 int-divide[compile-time] 255[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1714 int-divide[Pointer] 32767[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1715 int-divide[compile-time] 32767[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:1716 int-divide[Pointer] 32767[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1717 int-divide[compile-time] 32767[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -32767;
endcode
compile error

$overflow on
code auto:1718 int-divide[Pointer] 32767[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1719 int-divide[compile-time] 32767[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -129;
endcode
compile error

$overflow on
code auto:1720 int-divide[Pointer] 32767[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1721 int-divide[compile-time] 32767[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -128;
endcode
compile error

$overflow on
code auto:1722 int-divide[Pointer] 32767[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1723 int-divide[compile-time] 32767[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div -1;
endcode
compile error

$overflow on
code auto:1724 int-divide[Pointer] 32767[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1725 int-divide[compile-time] 32767[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1726 int-divide[Pointer] 32767[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32767

code auto:1727 int-divide[compile-time] 32767[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1728 int-divide[Pointer] 32767[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1729 int-divide[compile-time] 32767[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1730 int-divide[Pointer] 32767[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 255

code auto:1731 int-divide[compile-time] 32767[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:1732 int-divide[Pointer] 32767[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1733 int-divide[compile-time] 32767[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1734 int-divide[Pointer] 32768[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1735 int-divide[compile-time] 32768[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -32768;
endcode
compile error

$overflow on
code auto:1736 int-divide[Pointer] 32768[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1737 int-divide[compile-time] 32768[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -32767;
endcode
compile error

$overflow on
code auto:1738 int-divide[Pointer] 32768[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1739 int-divide[compile-time] 32768[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -129;
endcode
compile error

$overflow on
code auto:1740 int-divide[Pointer] 32768[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1741 int-divide[compile-time] 32768[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -128;
endcode
compile error

$overflow on
code auto:1742 int-divide[Pointer] 32768[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1743 int-divide[compile-time] 32768[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div -1;
endcode
compile error

$overflow on
code auto:1744 int-divide[Pointer] 32768[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1745 int-divide[compile-time] 32768[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1746 int-divide[Pointer] 32768[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32768

code auto:1747 int-divide[compile-time] 32768[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 1;
endcode
varvalue r 32768

$overflow on
code auto:1748 int-divide[Pointer] 32768[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1749 int-divide[compile-time] 32768[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1750 int-divide[Pointer] 32768[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 256

code auto:1751 int-divide[compile-time] 32768[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 128;
endcode
varvalue r 256

$overflow on
code auto:1752 int-divide[Pointer] 32768[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1753 int-divide[compile-time] 32768[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1754 int-divide[Pointer] 65535[Pointer], -32768[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32768;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1755 int-divide[compile-time] 65535[Pointer], -32768[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -32768;
endcode
compile error

$overflow on
code auto:1756 int-divide[Pointer] 65535[Pointer], -32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -32767;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1757 int-divide[compile-time] 65535[Pointer], -32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -32767;
endcode
compile error

$overflow on
code auto:1758 int-divide[Pointer] 65535[Pointer], -129[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -129;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1759 int-divide[compile-time] 65535[Pointer], -129[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -129;
endcode
compile error

$overflow on
code auto:1760 int-divide[Pointer] 65535[Pointer], -128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -128;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1761 int-divide[compile-time] 65535[Pointer], -128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -128;
endcode
compile error

$overflow on
code auto:1762 int-divide[Pointer] 65535[Pointer], -1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = -1;
  var  r: Pointer;
  r := a div b;
endcode
runtime overflow

code auto:1763 int-divide[compile-time] 65535[Pointer], -1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div -1;
endcode
compile error

$overflow on
code auto:1764 int-divide[Pointer] 65535[Pointer], 0[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1765 int-divide[compile-time] 65535[Pointer], 0[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1766 int-divide[Pointer] 65535[Pointer], 1[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 65535

code auto:1767 int-divide[compile-time] 65535[Pointer], 1[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 1;
endcode
varvalue r 65535

$overflow on
code auto:1768 int-divide[Pointer] 65535[Pointer], 127[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 516

code auto:1769 int-divide[compile-time] 65535[Pointer], 127[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1770 int-divide[Pointer] 65535[Pointer], 128[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 511

code auto:1771 int-divide[compile-time] 65535[Pointer], 128[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 128;
endcode
varvalue r 511

$overflow on
code auto:1772 int-divide[Pointer] 65535[Pointer], 32767[Integer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Integer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1773 int-divide[compile-time] 65535[Pointer], 32767[Integer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1774 int-divide[Pointer] 0[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1775 int-divide[compile-time] 0[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1776 int-divide[Pointer] 0[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1777 int-divide[compile-time] 0[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1778 int-divide[Pointer] 0[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1779 int-divide[compile-time] 0[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1780 int-divide[Pointer] 0[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1781 int-divide[compile-time] 0[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:1782 int-divide[Pointer] 0[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1783 int-divide[compile-time] 0[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1784 int-divide[Pointer] 255[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1785 int-divide[compile-time] 255[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1786 int-divide[Pointer] 255[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 255

code auto:1787 int-divide[compile-time] 255[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:1788 int-divide[Pointer] 255[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1789 int-divide[compile-time] 255[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:1790 int-divide[Pointer] 255[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1791 int-divide[compile-time] 255[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:1792 int-divide[Pointer] 255[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1793 int-divide[compile-time] 255[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1794 int-divide[Pointer] 32767[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1795 int-divide[compile-time] 32767[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1796 int-divide[Pointer] 32767[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32767

code auto:1797 int-divide[compile-time] 32767[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:1798 int-divide[Pointer] 32767[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1799 int-divide[compile-time] 32767[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:1800 int-divide[Pointer] 32767[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 255

code auto:1801 int-divide[compile-time] 32767[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:1802 int-divide[Pointer] 32767[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1803 int-divide[compile-time] 32767[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1804 int-divide[Pointer] 32768[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1805 int-divide[compile-time] 32768[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1806 int-divide[Pointer] 32768[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 32768

code auto:1807 int-divide[compile-time] 32768[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 1;
endcode
varvalue r 32768

$overflow on
code auto:1808 int-divide[Pointer] 32768[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 258

code auto:1809 int-divide[compile-time] 32768[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 127;
endcode
varvalue r 258

$overflow on
code auto:1810 int-divide[Pointer] 32768[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 256

code auto:1811 int-divide[compile-time] 32768[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 128;
endcode
varvalue r 256

$overflow on
code auto:1812 int-divide[Pointer] 32768[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1813 int-divide[compile-time] 32768[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1814 int-divide[Pointer] 65535[Pointer], 0[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1815 int-divide[compile-time] 65535[Pointer], 0[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1816 int-divide[Pointer] 65535[Pointer], 1[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 1;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 65535

code auto:1817 int-divide[compile-time] 65535[Pointer], 1[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 1;
endcode
varvalue r 65535

$overflow on
code auto:1818 int-divide[Pointer] 65535[Pointer], 127[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 127;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 516

code auto:1819 int-divide[compile-time] 65535[Pointer], 127[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 127;
endcode
varvalue r 516

$overflow on
code auto:1820 int-divide[Pointer] 65535[Pointer], 128[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 128;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 511

code auto:1821 int-divide[compile-time] 65535[Pointer], 128[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 128;
endcode
varvalue r 511

$overflow on
code auto:1822 int-divide[Pointer] 65535[Pointer], 255[Byte] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Byte = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 257

code auto:1823 int-divide[compile-time] 65535[Pointer], 255[Byte] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1824 int-divide[Pointer] 0[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1825 int-divide[compile-time] 0[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1826 int-divide[Pointer] 0[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1827 int-divide[compile-time] 0[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1828 int-divide[Pointer] 0[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1829 int-divide[compile-time] 0[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1830 int-divide[Pointer] 0[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1831 int-divide[compile-time] 0[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1832 int-divide[Pointer] 0[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1833 int-divide[compile-time] 0[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1834 int-divide[Pointer] 255[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1835 int-divide[compile-time] 255[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1836 int-divide[Pointer] 255[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1837 int-divide[compile-time] 255[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1838 int-divide[Pointer] 255[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1839 int-divide[compile-time] 255[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1840 int-divide[Pointer] 255[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1841 int-divide[compile-time] 255[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1842 int-divide[Pointer] 255[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1843 int-divide[compile-time] 255[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1844 int-divide[Pointer] 32767[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1845 int-divide[compile-time] 32767[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1846 int-divide[Pointer] 32767[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1847 int-divide[compile-time] 32767[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1848 int-divide[Pointer] 32767[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1849 int-divide[compile-time] 32767[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1850 int-divide[Pointer] 32767[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1851 int-divide[compile-time] 32767[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1852 int-divide[Pointer] 32767[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1853 int-divide[compile-time] 32767[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1854 int-divide[Pointer] 32768[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1855 int-divide[compile-time] 32768[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1856 int-divide[Pointer] 32768[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1857 int-divide[compile-time] 32768[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1858 int-divide[Pointer] 32768[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1859 int-divide[compile-time] 32768[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1860 int-divide[Pointer] 32768[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1861 int-divide[compile-time] 32768[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1862 int-divide[Pointer] 32768[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1863 int-divide[compile-time] 32768[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1864 int-divide[Pointer] 65535[Pointer], 0[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1865 int-divide[compile-time] 65535[Pointer], 0[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1866 int-divide[Pointer] 65535[Pointer], 255[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 257

code auto:1867 int-divide[compile-time] 65535[Pointer], 255[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1868 int-divide[Pointer] 65535[Pointer], 32767[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1869 int-divide[compile-time] 65535[Pointer], 32767[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1870 int-divide[Pointer] 65535[Pointer], 32768[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1871 int-divide[compile-time] 65535[Pointer], 32768[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1872 int-divide[Pointer] 65535[Pointer], 65535[Word] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Word = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1873 int-divide[compile-time] 65535[Pointer], 65535[Word] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow on
code auto:1874 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1875 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1876 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1877 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:1878 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1879 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1880 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1881 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1882 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1883 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1884 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1885 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:1886 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1887 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:1888 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1889 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:1890 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1891 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1892 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1893 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1894 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1895 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:1896 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1897 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:1898 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1899 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1900 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1901 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:1902 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1903 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1904 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1905 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:1906 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 128

code auto:1907 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:1908 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1909 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:1910 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1911 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1912 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 0

code auto:1913 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:1914 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Pointer;
  r := a div b;
endcode
runtime dividebyzero

code auto:1915 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:1916 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 257

code auto:1917 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:1918 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 2

code auto:1919 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:1920 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1921 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow on
code auto:1922 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Pointer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Pointer;
  r := a div b;
endcode
varvalue r 1

code auto:1923 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Pointer] Both immediate $overflow on
  var  r: Pointer;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow on
code auto:1924 int-divide[Integer] -128[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1925 int-divide[compile-time] -128[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:1926 int-divide[Integer] -128[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1927 int-divide[compile-time] -128[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -127;
endcode
varvalue r 1

$overflow on
code auto:1928 int-divide[Integer] -128[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:1929 int-divide[compile-time] -128[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -1;
endcode
compile error

$overflow on
code auto:1930 int-divide[Integer] -128[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1931 int-divide[compile-time] -128[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:1932 int-divide[Integer] -128[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -128

code auto:1933 int-divide[compile-time] -128[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:1934 int-divide[Integer] -128[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:1935 int-divide[compile-time] -128[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:1936 int-divide[Integer] -127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1937 int-divide[compile-time] -127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div -128;
endcode
varvalue r 0

$overflow on
code auto:1938 int-divide[Integer] -127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1939 int-divide[compile-time] -127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div -127;
endcode
varvalue r 1

$overflow on
code auto:1940 int-divide[Integer] -127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 127

code auto:1941 int-divide[compile-time] -127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div -1;
endcode
varvalue r 127

$overflow on
code auto:1942 int-divide[Integer] -127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1943 int-divide[compile-time] -127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:1944 int-divide[Integer] -127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -127

code auto:1945 int-divide[compile-time] -127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div 1;
endcode
varvalue r -127

$overflow on
code auto:1946 int-divide[Integer] -127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:1947 int-divide[compile-time] -127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -127 div 127;
endcode
varvalue r -1

$overflow on
code auto:1948 int-divide[Integer] -1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1949 int-divide[compile-time] -1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:1950 int-divide[Integer] -1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1951 int-divide[compile-time] -1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -127;
endcode
varvalue r 0

$overflow on
code auto:1952 int-divide[Integer] -1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1953 int-divide[compile-time] -1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:1954 int-divide[Integer] -1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1955 int-divide[compile-time] -1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:1956 int-divide[Integer] -1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:1957 int-divide[compile-time] -1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:1958 int-divide[Integer] -1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1959 int-divide[compile-time] -1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:1960 int-divide[Integer] 0[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1961 int-divide[compile-time] 0[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:1962 int-divide[Integer] 0[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1963 int-divide[compile-time] 0[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -127;
endcode
varvalue r 0

$overflow on
code auto:1964 int-divide[Integer] 0[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1965 int-divide[compile-time] 0[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:1966 int-divide[Integer] 0[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1967 int-divide[compile-time] 0[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:1968 int-divide[Integer] 0[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1969 int-divide[compile-time] 0[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:1970 int-divide[Integer] 0[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1971 int-divide[compile-time] 0[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:1972 int-divide[Integer] 1[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1973 int-divide[compile-time] 1[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:1974 int-divide[Integer] 1[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1975 int-divide[compile-time] 1[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -127;
endcode
varvalue r 0

$overflow on
code auto:1976 int-divide[Integer] 1[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:1977 int-divide[compile-time] 1[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:1978 int-divide[Integer] 1[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1979 int-divide[compile-time] 1[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:1980 int-divide[Integer] 1[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1981 int-divide[compile-time] 1[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:1982 int-divide[Integer] 1[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1983 int-divide[compile-time] 1[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:1984 int-divide[Integer] 127[Int8], -128[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:1985 int-divide[compile-time] 127[Int8], -128[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:1986 int-divide[Integer] 127[Int8], -127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:1987 int-divide[compile-time] 127[Int8], -127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -127;
endcode
varvalue r -1

$overflow on
code auto:1988 int-divide[Integer] 127[Int8], -1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -127

code auto:1989 int-divide[compile-time] 127[Int8], -1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:1990 int-divide[Integer] 127[Int8], 0[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:1991 int-divide[compile-time] 127[Int8], 0[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:1992 int-divide[Integer] 127[Int8], 1[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 127

code auto:1993 int-divide[compile-time] 127[Int8], 1[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:1994 int-divide[Integer] 127[Int8], 127[Int8] -> [Int8] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:1995 int-divide[compile-time] 127[Int8], 127[Int8] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:1996 int-divide[Integer] -128[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:1997 int-divide[compile-time] -128[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:1998 int-divide[Integer] -128[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:1999 int-divide[compile-time] -128[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:2000 int-divide[Integer] -128[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2001 int-divide[compile-time] -128[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div -127;
endcode
runtime noerror

$overflow on
code auto:2002 int-divide[Integer] -128[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2003 int-divide[compile-time] -128[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -127;
endcode
varvalue r 1

$overflow off
code auto:2004 int-divide[Integer] -128[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2005 int-divide[compile-time] -128[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div -1;
endcode
runtime noerror

$overflow on
code auto:2006 int-divide[Integer] -128[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:2007 int-divide[compile-time] -128[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow off
code auto:2008 int-divide[Integer] -128[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2009 int-divide[compile-time] -128[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:2010 int-divide[Integer] -128[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2011 int-divide[compile-time] -128[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:2012 int-divide[Integer] -128[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2013 int-divide[compile-time] -128[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div 1;
endcode
runtime noerror

$overflow on
code auto:2014 int-divide[Integer] -128[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:2015 int-divide[compile-time] -128[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow off
code auto:2016 int-divide[Integer] -128[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2017 int-divide[compile-time] -128[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -128 div 127;
endcode
runtime noerror

$overflow on
code auto:2018 int-divide[Integer] -128[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2019 int-divide[compile-time] -128[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow off
code auto:2020 int-divide[Integer] -127[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2021 int-divide[compile-time] -127[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div -128;
endcode
runtime noerror

$overflow on
code auto:2022 int-divide[Integer] -127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2023 int-divide[compile-time] -127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2024 int-divide[Integer] -127[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2025 int-divide[compile-time] -127[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div -127;
endcode
runtime noerror

$overflow on
code auto:2026 int-divide[Integer] -127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2027 int-divide[compile-time] -127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -127;
endcode
varvalue r 1

$overflow off
code auto:2028 int-divide[Integer] -127[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2029 int-divide[compile-time] -127[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div -1;
endcode
runtime noerror

$overflow on
code auto:2030 int-divide[Integer] -127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:2031 int-divide[compile-time] -127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div -1;
endcode
varvalue r 127

$overflow off
code auto:2032 int-divide[Integer] -127[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2033 int-divide[compile-time] -127[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:2034 int-divide[Integer] -127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2035 int-divide[compile-time] -127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 0;
endcode
compile error

$overflow off
code auto:2036 int-divide[Integer] -127[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2037 int-divide[compile-time] -127[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div 1;
endcode
runtime noerror

$overflow on
code auto:2038 int-divide[Integer] -127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:2039 int-divide[compile-time] -127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 1;
endcode
varvalue r -127

$overflow off
code auto:2040 int-divide[Integer] -127[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2041 int-divide[compile-time] -127[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -127 div 127;
endcode
runtime noerror

$overflow on
code auto:2042 int-divide[Integer] -127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2043 int-divide[compile-time] -127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -127 div 127;
endcode
varvalue r -1

$overflow off
code auto:2044 int-divide[Integer] -1[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2045 int-divide[compile-time] -1[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:2046 int-divide[Integer] -1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2047 int-divide[compile-time] -1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2048 int-divide[Integer] -1[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2049 int-divide[compile-time] -1[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div -127;
endcode
runtime noerror

$overflow on
code auto:2050 int-divide[Integer] -1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2051 int-divide[compile-time] -1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2052 int-divide[Integer] -1[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2053 int-divide[compile-time] -1[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:2054 int-divide[Integer] -1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2055 int-divide[compile-time] -1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:2056 int-divide[Integer] -1[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2057 int-divide[compile-time] -1[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:2058 int-divide[Integer] -1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2059 int-divide[compile-time] -1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:2060 int-divide[Integer] -1[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2061 int-divide[compile-time] -1[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div 1;
endcode
runtime noerror

$overflow on
code auto:2062 int-divide[Integer] -1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2063 int-divide[compile-time] -1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow off
code auto:2064 int-divide[Integer] -1[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2065 int-divide[compile-time] -1[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:2066 int-divide[Integer] -1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2067 int-divide[compile-time] -1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2068 int-divide[Integer] 0[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2069 int-divide[compile-time] 0[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:2070 int-divide[Integer] 0[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2071 int-divide[compile-time] 0[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:2072 int-divide[Integer] 0[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2073 int-divide[compile-time] 0[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div -127;
endcode
runtime noerror

$overflow on
code auto:2074 int-divide[Integer] 0[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2075 int-divide[compile-time] 0[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -127;
endcode
varvalue r 0

$overflow off
code auto:2076 int-divide[Integer] 0[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2077 int-divide[compile-time] 0[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:2078 int-divide[Integer] 0[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2079 int-divide[compile-time] 0[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:2080 int-divide[Integer] 0[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2081 int-divide[compile-time] 0[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:2082 int-divide[Integer] 0[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2083 int-divide[compile-time] 0[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:2084 int-divide[Integer] 0[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2085 int-divide[compile-time] 0[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:2086 int-divide[Integer] 0[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2087 int-divide[compile-time] 0[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:2088 int-divide[Integer] 0[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2089 int-divide[compile-time] 0[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:2090 int-divide[Integer] 0[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2091 int-divide[compile-time] 0[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:2092 int-divide[Integer] 1[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2093 int-divide[compile-time] 1[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:2094 int-divide[Integer] 1[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2095 int-divide[compile-time] 1[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2096 int-divide[Integer] 1[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2097 int-divide[compile-time] 1[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div -127;
endcode
runtime noerror

$overflow on
code auto:2098 int-divide[Integer] 1[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2099 int-divide[compile-time] 1[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2100 int-divide[Integer] 1[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2101 int-divide[compile-time] 1[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div -1;
endcode
runtime noerror

$overflow on
code auto:2102 int-divide[Integer] 1[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2103 int-divide[compile-time] 1[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow off
code auto:2104 int-divide[Integer] 1[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2105 int-divide[compile-time] 1[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:2106 int-divide[Integer] 1[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2107 int-divide[compile-time] 1[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:2108 int-divide[Integer] 1[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2109 int-divide[compile-time] 1[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:2110 int-divide[Integer] 1[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2111 int-divide[compile-time] 1[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:2112 int-divide[Integer] 1[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2113 int-divide[compile-time] 1[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:2114 int-divide[Integer] 1[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2115 int-divide[compile-time] 1[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2116 int-divide[Integer] 127[Int8], -128[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2117 int-divide[compile-time] 127[Int8], -128[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:2118 int-divide[Integer] 127[Int8], -128[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2119 int-divide[compile-time] 127[Int8], -128[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2120 int-divide[Integer] 127[Int8], -127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2121 int-divide[compile-time] 127[Int8], -127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div -127;
endcode
runtime noerror

$overflow on
code auto:2122 int-divide[Integer] 127[Int8], -127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2123 int-divide[compile-time] 127[Int8], -127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -127;
endcode
varvalue r -1

$overflow off
code auto:2124 int-divide[Integer] 127[Int8], -1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2125 int-divide[compile-time] 127[Int8], -1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div -1;
endcode
runtime noerror

$overflow on
code auto:2126 int-divide[Integer] 127[Int8], -1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:2127 int-divide[compile-time] 127[Int8], -1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow off
code auto:2128 int-divide[Integer] 127[Int8], 0[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2129 int-divide[compile-time] 127[Int8], 0[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:2130 int-divide[Integer] 127[Int8], 0[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2131 int-divide[compile-time] 127[Int8], 0[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:2132 int-divide[Integer] 127[Int8], 1[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2133 int-divide[compile-time] 127[Int8], 1[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:2134 int-divide[Integer] 127[Int8], 1[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:2135 int-divide[compile-time] 127[Int8], 1[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:2136 int-divide[Integer] 127[Int8], 127[Int8] -> [Integer] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:2137 int-divide[compile-time] 127[Int8], 127[Int8] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:2138 int-divide[Integer] 127[Int8], 127[Int8] -> [Integer] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2139 int-divide[compile-time] 127[Int8], 127[Int8] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:2140 int-divide[Integer] -128[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2141 int-divide[compile-time] -128[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:2142 int-divide[Integer] -128[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2143 int-divide[compile-time] -128[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:2144 int-divide[Integer] -128[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2145 int-divide[compile-time] -128[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -127;
endcode
runtime noerror

$overflow on
code auto:2146 int-divide[Integer] -128[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2147 int-divide[compile-time] -128[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -127;
endcode
varvalue r 1

$overflow off
code auto:2148 int-divide[Integer] -128[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2149 int-divide[compile-time] -128[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -1;
endcode
runtime noerror

$overflow on
code auto:2150 int-divide[Integer] -128[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:2151 int-divide[compile-time] -128[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -1;
endcode
varvalue r 128

$overflow off
code auto:2152 int-divide[Integer] -128[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2153 int-divide[compile-time] -128[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:2154 int-divide[Integer] -128[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2155 int-divide[compile-time] -128[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:2156 int-divide[Integer] -128[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2157 int-divide[compile-time] -128[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 1;
endcode
compile error

$overflow on
code auto:2158 int-divide[Integer] -128[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2159 int-divide[compile-time] -128[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 1;
endcode
compile error

$overflow off
code auto:2160 int-divide[Integer] -128[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2161 int-divide[compile-time] -128[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 127;
endcode
compile error

$overflow on
code auto:2162 int-divide[Integer] -128[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2163 int-divide[compile-time] -128[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 127;
endcode
compile error

$overflow off
code auto:2164 int-divide[Integer] -127[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2165 int-divide[compile-time] -127[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div -128;
endcode
runtime noerror

$overflow on
code auto:2166 int-divide[Integer] -127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2167 int-divide[compile-time] -127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2168 int-divide[Integer] -127[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2169 int-divide[compile-time] -127[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div -127;
endcode
runtime noerror

$overflow on
code auto:2170 int-divide[Integer] -127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2171 int-divide[compile-time] -127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div -127;
endcode
varvalue r 1

$overflow off
code auto:2172 int-divide[Integer] -127[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2173 int-divide[compile-time] -127[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div -1;
endcode
runtime noerror

$overflow on
code auto:2174 int-divide[Integer] -127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 127

code auto:2175 int-divide[compile-time] -127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div -1;
endcode
varvalue r 127

$overflow off
code auto:2176 int-divide[Integer] -127[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2177 int-divide[compile-time] -127[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:2178 int-divide[Integer] -127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2179 int-divide[compile-time] -127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div 0;
endcode
compile error

$overflow off
code auto:2180 int-divide[Integer] -127[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2181 int-divide[compile-time] -127[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div 1;
endcode
compile error

$overflow on
code auto:2182 int-divide[Integer] -127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2183 int-divide[compile-time] -127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div 1;
endcode
compile error

$overflow off
code auto:2184 int-divide[Integer] -127[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2185 int-divide[compile-time] -127[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -127 div 127;
endcode
compile error

$overflow on
code auto:2186 int-divide[Integer] -127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2187 int-divide[compile-time] -127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -127 div 127;
endcode
compile error

$overflow off
code auto:2188 int-divide[Integer] -1[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2189 int-divide[compile-time] -1[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:2190 int-divide[Integer] -1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2191 int-divide[compile-time] -1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2192 int-divide[Integer] -1[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2193 int-divide[compile-time] -1[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -127;
endcode
runtime noerror

$overflow on
code auto:2194 int-divide[Integer] -1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2195 int-divide[compile-time] -1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2196 int-divide[Integer] -1[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2197 int-divide[compile-time] -1[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:2198 int-divide[Integer] -1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2199 int-divide[compile-time] -1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:2200 int-divide[Integer] -1[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2201 int-divide[compile-time] -1[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:2202 int-divide[Integer] -1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2203 int-divide[compile-time] -1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:2204 int-divide[Integer] -1[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2205 int-divide[compile-time] -1[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 1;
endcode
compile error

$overflow on
code auto:2206 int-divide[Integer] -1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2207 int-divide[compile-time] -1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 1;
endcode
compile error

$overflow off
code auto:2208 int-divide[Integer] -1[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2209 int-divide[compile-time] -1[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:2210 int-divide[Integer] -1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2211 int-divide[compile-time] -1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2212 int-divide[Integer] 0[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2213 int-divide[compile-time] 0[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:2214 int-divide[Integer] 0[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2215 int-divide[compile-time] 0[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:2216 int-divide[Integer] 0[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2217 int-divide[compile-time] 0[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -127;
endcode
runtime noerror

$overflow on
code auto:2218 int-divide[Integer] 0[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2219 int-divide[compile-time] 0[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -127;
endcode
varvalue r 0

$overflow off
code auto:2220 int-divide[Integer] 0[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2221 int-divide[compile-time] 0[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:2222 int-divide[Integer] 0[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2223 int-divide[compile-time] 0[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:2224 int-divide[Integer] 0[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2225 int-divide[compile-time] 0[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:2226 int-divide[Integer] 0[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2227 int-divide[compile-time] 0[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:2228 int-divide[Integer] 0[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2229 int-divide[compile-time] 0[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:2230 int-divide[Integer] 0[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2231 int-divide[compile-time] 0[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:2232 int-divide[Integer] 0[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2233 int-divide[compile-time] 0[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:2234 int-divide[Integer] 0[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2235 int-divide[compile-time] 0[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:2236 int-divide[Integer] 1[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2237 int-divide[compile-time] 1[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:2238 int-divide[Integer] 1[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2239 int-divide[compile-time] 1[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2240 int-divide[Integer] 1[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2241 int-divide[compile-time] 1[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -127;
endcode
runtime noerror

$overflow on
code auto:2242 int-divide[Integer] 1[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2243 int-divide[compile-time] 1[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2244 int-divide[Integer] 1[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2245 int-divide[compile-time] 1[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -1;
endcode
compile error

$overflow on
code auto:2246 int-divide[Integer] 1[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2247 int-divide[compile-time] 1[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -1;
endcode
compile error

$overflow off
code auto:2248 int-divide[Integer] 1[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2249 int-divide[compile-time] 1[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:2250 int-divide[Integer] 1[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2251 int-divide[compile-time] 1[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:2252 int-divide[Integer] 1[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2253 int-divide[compile-time] 1[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:2254 int-divide[Integer] 1[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2255 int-divide[compile-time] 1[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:2256 int-divide[Integer] 1[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2257 int-divide[compile-time] 1[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:2258 int-divide[Integer] 1[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2259 int-divide[compile-time] 1[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2260 int-divide[Integer] 127[Int8], -128[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2261 int-divide[compile-time] 127[Int8], -128[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:2262 int-divide[Integer] 127[Int8], -128[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:2263 int-divide[compile-time] 127[Int8], -128[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2264 int-divide[Integer] 127[Int8], -127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2265 int-divide[compile-time] 127[Int8], -127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -127;
endcode
compile error

$overflow on
code auto:2266 int-divide[Integer] 127[Int8], -127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2267 int-divide[compile-time] 127[Int8], -127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -127;
endcode
compile error

$overflow off
code auto:2268 int-divide[Integer] 127[Int8], -1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2269 int-divide[compile-time] 127[Int8], -1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -1;
endcode
compile error

$overflow on
code auto:2270 int-divide[Integer] 127[Int8], -1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:2271 int-divide[compile-time] 127[Int8], -1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -1;
endcode
compile error

$overflow off
code auto:2272 int-divide[Integer] 127[Int8], 0[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2273 int-divide[compile-time] 127[Int8], 0[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:2274 int-divide[Integer] 127[Int8], 0[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:2275 int-divide[compile-time] 127[Int8], 0[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:2276 int-divide[Integer] 127[Int8], 1[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2277 int-divide[compile-time] 127[Int8], 1[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:2278 int-divide[Integer] 127[Int8], 1[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 127

code auto:2279 int-divide[compile-time] 127[Int8], 1[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:2280 int-divide[Integer] 127[Int8], 127[Int8] -> [Byte] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:2281 int-divide[compile-time] 127[Int8], 127[Int8] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:2282 int-divide[Integer] 127[Int8], 127[Int8] -> [Byte] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:2283 int-divide[compile-time] 127[Int8], 127[Int8] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:2284 int-divide[Integer] -128[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2285 int-divide[compile-time] -128[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:2286 int-divide[Integer] -128[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2287 int-divide[compile-time] -128[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:2288 int-divide[Integer] -128[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2289 int-divide[compile-time] -128[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -127;
endcode
runtime noerror

$overflow on
code auto:2290 int-divide[Integer] -128[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2291 int-divide[compile-time] -128[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -127;
endcode
varvalue r 1

$overflow off
code auto:2292 int-divide[Integer] -128[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2293 int-divide[compile-time] -128[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -1;
endcode
runtime noerror

$overflow on
code auto:2294 int-divide[Integer] -128[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:2295 int-divide[compile-time] -128[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -1;
endcode
varvalue r 128

$overflow off
code auto:2296 int-divide[Integer] -128[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2297 int-divide[compile-time] -128[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:2298 int-divide[Integer] -128[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2299 int-divide[compile-time] -128[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:2300 int-divide[Integer] -128[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2301 int-divide[compile-time] -128[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 1;
endcode
compile error

$overflow on
code auto:2302 int-divide[Integer] -128[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2303 int-divide[compile-time] -128[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 1;
endcode
compile error

$overflow off
code auto:2304 int-divide[Integer] -128[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2305 int-divide[compile-time] -128[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 127;
endcode
compile error

$overflow on
code auto:2306 int-divide[Integer] -128[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -128;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2307 int-divide[compile-time] -128[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 127;
endcode
compile error

$overflow off
code auto:2308 int-divide[Integer] -127[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2309 int-divide[compile-time] -127[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div -128;
endcode
runtime noerror

$overflow on
code auto:2310 int-divide[Integer] -127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2311 int-divide[compile-time] -127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2312 int-divide[Integer] -127[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2313 int-divide[compile-time] -127[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div -127;
endcode
runtime noerror

$overflow on
code auto:2314 int-divide[Integer] -127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2315 int-divide[compile-time] -127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div -127;
endcode
varvalue r 1

$overflow off
code auto:2316 int-divide[Integer] -127[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2317 int-divide[compile-time] -127[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div -1;
endcode
runtime noerror

$overflow on
code auto:2318 int-divide[Integer] -127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 127

code auto:2319 int-divide[compile-time] -127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div -1;
endcode
varvalue r 127

$overflow off
code auto:2320 int-divide[Integer] -127[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2321 int-divide[compile-time] -127[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div 0;
endcode
compile error

$overflow on
code auto:2322 int-divide[Integer] -127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2323 int-divide[compile-time] -127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div 0;
endcode
compile error

$overflow off
code auto:2324 int-divide[Integer] -127[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2325 int-divide[compile-time] -127[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div 1;
endcode
compile error

$overflow on
code auto:2326 int-divide[Integer] -127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2327 int-divide[compile-time] -127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div 1;
endcode
compile error

$overflow off
code auto:2328 int-divide[Integer] -127[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2329 int-divide[compile-time] -127[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -127 div 127;
endcode
compile error

$overflow on
code auto:2330 int-divide[Integer] -127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2331 int-divide[compile-time] -127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -127 div 127;
endcode
compile error

$overflow off
code auto:2332 int-divide[Integer] -1[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2333 int-divide[compile-time] -1[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:2334 int-divide[Integer] -1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2335 int-divide[compile-time] -1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2336 int-divide[Integer] -1[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2337 int-divide[compile-time] -1[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -127;
endcode
runtime noerror

$overflow on
code auto:2338 int-divide[Integer] -1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2339 int-divide[compile-time] -1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2340 int-divide[Integer] -1[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2341 int-divide[compile-time] -1[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:2342 int-divide[Integer] -1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2343 int-divide[compile-time] -1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:2344 int-divide[Integer] -1[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2345 int-divide[compile-time] -1[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:2346 int-divide[Integer] -1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2347 int-divide[compile-time] -1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:2348 int-divide[Integer] -1[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2349 int-divide[compile-time] -1[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 1;
endcode
compile error

$overflow on
code auto:2350 int-divide[Integer] -1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2351 int-divide[compile-time] -1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 1;
endcode
compile error

$overflow off
code auto:2352 int-divide[Integer] -1[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2353 int-divide[compile-time] -1[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:2354 int-divide[Integer] -1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = -1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2355 int-divide[compile-time] -1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2356 int-divide[Integer] 0[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2357 int-divide[compile-time] 0[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:2358 int-divide[Integer] 0[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2359 int-divide[compile-time] 0[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:2360 int-divide[Integer] 0[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2361 int-divide[compile-time] 0[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -127;
endcode
runtime noerror

$overflow on
code auto:2362 int-divide[Integer] 0[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2363 int-divide[compile-time] 0[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -127;
endcode
varvalue r 0

$overflow off
code auto:2364 int-divide[Integer] 0[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2365 int-divide[compile-time] 0[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:2366 int-divide[Integer] 0[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2367 int-divide[compile-time] 0[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:2368 int-divide[Integer] 0[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2369 int-divide[compile-time] 0[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:2370 int-divide[Integer] 0[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2371 int-divide[compile-time] 0[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:2372 int-divide[Integer] 0[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2373 int-divide[compile-time] 0[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:2374 int-divide[Integer] 0[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2375 int-divide[compile-time] 0[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:2376 int-divide[Integer] 0[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2377 int-divide[compile-time] 0[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:2378 int-divide[Integer] 0[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 0;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2379 int-divide[compile-time] 0[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:2380 int-divide[Integer] 1[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2381 int-divide[compile-time] 1[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:2382 int-divide[Integer] 1[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2383 int-divide[compile-time] 1[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2384 int-divide[Integer] 1[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2385 int-divide[compile-time] 1[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -127;
endcode
runtime noerror

$overflow on
code auto:2386 int-divide[Integer] 1[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2387 int-divide[compile-time] 1[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -127;
endcode
varvalue r 0

$overflow off
code auto:2388 int-divide[Integer] 1[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2389 int-divide[compile-time] 1[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -1;
endcode
compile error

$overflow on
code auto:2390 int-divide[Integer] 1[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2391 int-divide[compile-time] 1[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -1;
endcode
compile error

$overflow off
code auto:2392 int-divide[Integer] 1[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2393 int-divide[compile-time] 1[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:2394 int-divide[Integer] 1[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2395 int-divide[compile-time] 1[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:2396 int-divide[Integer] 1[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2397 int-divide[compile-time] 1[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:2398 int-divide[Integer] 1[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2399 int-divide[compile-time] 1[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:2400 int-divide[Integer] 1[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2401 int-divide[compile-time] 1[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:2402 int-divide[Integer] 1[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 1;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2403 int-divide[compile-time] 1[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2404 int-divide[Integer] 127[Int8], -128[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2405 int-divide[compile-time] 127[Int8], -128[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:2406 int-divide[Integer] 127[Int8], -128[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:2407 int-divide[compile-time] 127[Int8], -128[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2408 int-divide[Integer] 127[Int8], -127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2409 int-divide[compile-time] 127[Int8], -127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -127;
endcode
compile error

$overflow on
code auto:2410 int-divide[Integer] 127[Int8], -127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2411 int-divide[compile-time] 127[Int8], -127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -127;
endcode
compile error

$overflow off
code auto:2412 int-divide[Integer] 127[Int8], -1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2413 int-divide[compile-time] 127[Int8], -1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -1;
endcode
compile error

$overflow on
code auto:2414 int-divide[Integer] 127[Int8], -1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:2415 int-divide[compile-time] 127[Int8], -1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -1;
endcode
compile error

$overflow off
code auto:2416 int-divide[Integer] 127[Int8], 0[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2417 int-divide[compile-time] 127[Int8], 0[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:2418 int-divide[Integer] 127[Int8], 0[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:2419 int-divide[compile-time] 127[Int8], 0[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:2420 int-divide[Integer] 127[Int8], 1[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2421 int-divide[compile-time] 127[Int8], 1[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:2422 int-divide[Integer] 127[Int8], 1[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 127

code auto:2423 int-divide[compile-time] 127[Int8], 1[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:2424 int-divide[Integer] 127[Int8], 127[Int8] -> [Word] Var $overflow off
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:2425 int-divide[compile-time] 127[Int8], 127[Int8] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:2426 int-divide[Integer] 127[Int8], 127[Int8] -> [Word] Var $overflow on
  var  a: Int8 = 127;
  var  b: Int8 = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:2427 int-divide[compile-time] 127[Int8], 127[Int8] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:2428 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2429 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div -32768;
endcode
runtime noerror

$overflow on
code auto:2430 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2431 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div -32768;
endcode
varvalue r 1

$overflow off
code auto:2432 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2433 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div -32767;
endcode
runtime noerror

$overflow on
code auto:2434 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2435 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div -32767;
endcode
varvalue r 1

$overflow off
code auto:2436 int-divide[Integer] -32768[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2437 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div -129;
endcode
compile error

$overflow on
code auto:2438 int-divide[Integer] -32768[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2439 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div -129;
endcode
compile error

$overflow off
code auto:2440 int-divide[Integer] -32768[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2441 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div -128;
endcode
compile error

$overflow on
code auto:2442 int-divide[Integer] -32768[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2443 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div -128;
endcode
compile error

$overflow off
code auto:2444 int-divide[Integer] -32768[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2445 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div -1;
endcode
compile error

$overflow on
code auto:2446 int-divide[Integer] -32768[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2447 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div -1;
endcode
compile error

$overflow off
code auto:2448 int-divide[Integer] -32768[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2449 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:2450 int-divide[Integer] -32768[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2451 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div 0;
endcode
compile error

$overflow off
code auto:2452 int-divide[Integer] -32768[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2453 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div 1;
endcode
compile error

$overflow on
code auto:2454 int-divide[Integer] -32768[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2455 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div 1;
endcode
compile error

$overflow off
code auto:2456 int-divide[Integer] -32768[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2457 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div 127;
endcode
compile error

$overflow on
code auto:2458 int-divide[Integer] -32768[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2459 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div 127;
endcode
compile error

$overflow off
code auto:2460 int-divide[Integer] -32768[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2461 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div 128;
endcode
compile error

$overflow on
code auto:2462 int-divide[Integer] -32768[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2463 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div 128;
endcode
compile error

$overflow off
code auto:2464 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2465 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:2466 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2467 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32768 div 32767;
endcode
varvalue r -1

$overflow off
code auto:2468 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2469 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:2470 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2471 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2472 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2473 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div -32767;
endcode
runtime noerror

$overflow on
code auto:2474 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2475 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div -32767;
endcode
varvalue r 1

$overflow off
code auto:2476 int-divide[Integer] -32767[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2477 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div -129;
endcode
compile error

$overflow on
code auto:2478 int-divide[Integer] -32767[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2479 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div -129;
endcode
compile error

$overflow off
code auto:2480 int-divide[Integer] -32767[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2481 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div -128;
endcode
compile error

$overflow on
code auto:2482 int-divide[Integer] -32767[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2483 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div -128;
endcode
compile error

$overflow off
code auto:2484 int-divide[Integer] -32767[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2485 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div -1;
endcode
compile error

$overflow on
code auto:2486 int-divide[Integer] -32767[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2487 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div -1;
endcode
compile error

$overflow off
code auto:2488 int-divide[Integer] -32767[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2489 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:2490 int-divide[Integer] -32767[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2491 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div 0;
endcode
compile error

$overflow off
code auto:2492 int-divide[Integer] -32767[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2493 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div 1;
endcode
compile error

$overflow on
code auto:2494 int-divide[Integer] -32767[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2495 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div 1;
endcode
compile error

$overflow off
code auto:2496 int-divide[Integer] -32767[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2497 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div 127;
endcode
compile error

$overflow on
code auto:2498 int-divide[Integer] -32767[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2499 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div 127;
endcode
compile error

$overflow off
code auto:2500 int-divide[Integer] -32767[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2501 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div 128;
endcode
compile error

$overflow on
code auto:2502 int-divide[Integer] -32767[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2503 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div 128;
endcode
compile error

$overflow off
code auto:2504 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2505 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:2506 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2507 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -32767 div 32767;
endcode
varvalue r -1

$overflow off
code auto:2508 int-divide[Integer] -129[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2509 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div -32768;
endcode
runtime noerror

$overflow on
code auto:2510 int-divide[Integer] -129[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2511 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2512 int-divide[Integer] -129[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2513 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div -32767;
endcode
runtime noerror

$overflow on
code auto:2514 int-divide[Integer] -129[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2515 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2516 int-divide[Integer] -129[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2517 int-divide[compile-time] -129[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div -129;
endcode
runtime noerror

$overflow on
code auto:2518 int-divide[Integer] -129[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2519 int-divide[compile-time] -129[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div -129;
endcode
varvalue r 1

$overflow off
code auto:2520 int-divide[Integer] -129[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2521 int-divide[compile-time] -129[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div -128;
endcode
runtime noerror

$overflow on
code auto:2522 int-divide[Integer] -129[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2523 int-divide[compile-time] -129[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div -128;
endcode
varvalue r 1

$overflow off
code auto:2524 int-divide[Integer] -129[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2525 int-divide[compile-time] -129[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div -1;
endcode
compile error

$overflow on
code auto:2526 int-divide[Integer] -129[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2527 int-divide[compile-time] -129[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div -1;
endcode
compile error

$overflow off
code auto:2528 int-divide[Integer] -129[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2529 int-divide[compile-time] -129[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:2530 int-divide[Integer] -129[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2531 int-divide[compile-time] -129[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div 0;
endcode
compile error

$overflow off
code auto:2532 int-divide[Integer] -129[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2533 int-divide[compile-time] -129[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div 1;
endcode
compile error

$overflow on
code auto:2534 int-divide[Integer] -129[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2535 int-divide[compile-time] -129[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div 1;
endcode
compile error

$overflow off
code auto:2536 int-divide[Integer] -129[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2537 int-divide[compile-time] -129[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div 127;
endcode
runtime noerror

$overflow on
code auto:2538 int-divide[Integer] -129[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2539 int-divide[compile-time] -129[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div 127;
endcode
varvalue r -1

$overflow off
code auto:2540 int-divide[Integer] -129[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2541 int-divide[compile-time] -129[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div 128;
endcode
runtime noerror

$overflow on
code auto:2542 int-divide[Integer] -129[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2543 int-divide[compile-time] -129[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div 128;
endcode
varvalue r -1

$overflow off
code auto:2544 int-divide[Integer] -129[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2545 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -129 div 32767;
endcode
runtime noerror

$overflow on
code auto:2546 int-divide[Integer] -129[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2547 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2548 int-divide[Integer] -128[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2549 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div -32768;
endcode
runtime noerror

$overflow on
code auto:2550 int-divide[Integer] -128[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2551 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2552 int-divide[Integer] -128[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2553 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div -32767;
endcode
runtime noerror

$overflow on
code auto:2554 int-divide[Integer] -128[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2555 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2556 int-divide[Integer] -128[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2557 int-divide[compile-time] -128[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div -129;
endcode
runtime noerror

$overflow on
code auto:2558 int-divide[Integer] -128[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2559 int-divide[compile-time] -128[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -129;
endcode
varvalue r 0

$overflow off
code auto:2560 int-divide[Integer] -128[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2561 int-divide[compile-time] -128[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:2562 int-divide[Integer] -128[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2563 int-divide[compile-time] -128[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:2564 int-divide[Integer] -128[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2565 int-divide[compile-time] -128[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div -1;
endcode
compile error

$overflow on
code auto:2566 int-divide[Integer] -128[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2567 int-divide[compile-time] -128[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div -1;
endcode
compile error

$overflow off
code auto:2568 int-divide[Integer] -128[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2569 int-divide[compile-time] -128[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:2570 int-divide[Integer] -128[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2571 int-divide[compile-time] -128[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:2572 int-divide[Integer] -128[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2573 int-divide[compile-time] -128[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div 1;
endcode
runtime noerror

$overflow on
code auto:2574 int-divide[Integer] -128[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -128

code auto:2575 int-divide[compile-time] -128[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 1;
endcode
varvalue r -128

$overflow off
code auto:2576 int-divide[Integer] -128[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2577 int-divide[compile-time] -128[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div 127;
endcode
runtime noerror

$overflow on
code auto:2578 int-divide[Integer] -128[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2579 int-divide[compile-time] -128[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 127;
endcode
varvalue r -1

$overflow off
code auto:2580 int-divide[Integer] -128[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2581 int-divide[compile-time] -128[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div 128;
endcode
runtime noerror

$overflow on
code auto:2582 int-divide[Integer] -128[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2583 int-divide[compile-time] -128[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 128;
endcode
varvalue r -1

$overflow off
code auto:2584 int-divide[Integer] -128[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2585 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -128 div 32767;
endcode
runtime noerror

$overflow on
code auto:2586 int-divide[Integer] -128[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2587 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2588 int-divide[Integer] -1[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2589 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div -32768;
endcode
runtime noerror

$overflow on
code auto:2590 int-divide[Integer] -1[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2591 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2592 int-divide[Integer] -1[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2593 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div -32767;
endcode
runtime noerror

$overflow on
code auto:2594 int-divide[Integer] -1[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2595 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2596 int-divide[Integer] -1[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2597 int-divide[compile-time] -1[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div -129;
endcode
runtime noerror

$overflow on
code auto:2598 int-divide[Integer] -1[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2599 int-divide[compile-time] -1[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -129;
endcode
varvalue r 0

$overflow off
code auto:2600 int-divide[Integer] -1[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2601 int-divide[compile-time] -1[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:2602 int-divide[Integer] -1[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2603 int-divide[compile-time] -1[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2604 int-divide[Integer] -1[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2605 int-divide[compile-time] -1[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:2606 int-divide[Integer] -1[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2607 int-divide[compile-time] -1[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:2608 int-divide[Integer] -1[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2609 int-divide[compile-time] -1[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:2610 int-divide[Integer] -1[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2611 int-divide[compile-time] -1[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:2612 int-divide[Integer] -1[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2613 int-divide[compile-time] -1[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div 1;
endcode
runtime noerror

$overflow on
code auto:2614 int-divide[Integer] -1[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2615 int-divide[compile-time] -1[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 1;
endcode
varvalue r -1

$overflow off
code auto:2616 int-divide[Integer] -1[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2617 int-divide[compile-time] -1[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:2618 int-divide[Integer] -1[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2619 int-divide[compile-time] -1[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2620 int-divide[Integer] -1[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2621 int-divide[compile-time] -1[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div 128;
endcode
runtime noerror

$overflow on
code auto:2622 int-divide[Integer] -1[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2623 int-divide[compile-time] -1[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 128;
endcode
varvalue r 0

$overflow off
code auto:2624 int-divide[Integer] -1[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2625 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := -1 div 32767;
endcode
runtime noerror

$overflow on
code auto:2626 int-divide[Integer] -1[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2627 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2628 int-divide[Integer] 0[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2629 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div -32768;
endcode
runtime noerror

$overflow on
code auto:2630 int-divide[Integer] 0[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2631 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2632 int-divide[Integer] 0[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2633 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div -32767;
endcode
runtime noerror

$overflow on
code auto:2634 int-divide[Integer] 0[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2635 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2636 int-divide[Integer] 0[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2637 int-divide[compile-time] 0[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div -129;
endcode
runtime noerror

$overflow on
code auto:2638 int-divide[Integer] 0[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2639 int-divide[compile-time] 0[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -129;
endcode
varvalue r 0

$overflow off
code auto:2640 int-divide[Integer] 0[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2641 int-divide[compile-time] 0[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:2642 int-divide[Integer] 0[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2643 int-divide[compile-time] 0[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:2644 int-divide[Integer] 0[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2645 int-divide[compile-time] 0[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:2646 int-divide[Integer] 0[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2647 int-divide[compile-time] 0[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:2648 int-divide[Integer] 0[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2649 int-divide[compile-time] 0[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:2650 int-divide[Integer] 0[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2651 int-divide[compile-time] 0[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:2652 int-divide[Integer] 0[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2653 int-divide[compile-time] 0[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:2654 int-divide[Integer] 0[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2655 int-divide[compile-time] 0[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:2656 int-divide[Integer] 0[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2657 int-divide[compile-time] 0[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:2658 int-divide[Integer] 0[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2659 int-divide[compile-time] 0[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:2660 int-divide[Integer] 0[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2661 int-divide[compile-time] 0[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:2662 int-divide[Integer] 0[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2663 int-divide[compile-time] 0[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:2664 int-divide[Integer] 0[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2665 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:2666 int-divide[Integer] 0[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2667 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2668 int-divide[Integer] 1[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2669 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div -32768;
endcode
runtime noerror

$overflow on
code auto:2670 int-divide[Integer] 1[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2671 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2672 int-divide[Integer] 1[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2673 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div -32767;
endcode
runtime noerror

$overflow on
code auto:2674 int-divide[Integer] 1[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2675 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2676 int-divide[Integer] 1[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2677 int-divide[compile-time] 1[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div -129;
endcode
runtime noerror

$overflow on
code auto:2678 int-divide[Integer] 1[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2679 int-divide[compile-time] 1[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -129;
endcode
varvalue r 0

$overflow off
code auto:2680 int-divide[Integer] 1[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2681 int-divide[compile-time] 1[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:2682 int-divide[Integer] 1[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2683 int-divide[compile-time] 1[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:2684 int-divide[Integer] 1[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2685 int-divide[compile-time] 1[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div -1;
endcode
runtime noerror

$overflow on
code auto:2686 int-divide[Integer] 1[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2687 int-divide[compile-time] 1[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div -1;
endcode
varvalue r -1

$overflow off
code auto:2688 int-divide[Integer] 1[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2689 int-divide[compile-time] 1[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:2690 int-divide[Integer] 1[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2691 int-divide[compile-time] 1[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:2692 int-divide[Integer] 1[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2693 int-divide[compile-time] 1[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:2694 int-divide[Integer] 1[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2695 int-divide[compile-time] 1[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:2696 int-divide[Integer] 1[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2697 int-divide[compile-time] 1[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:2698 int-divide[Integer] 1[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2699 int-divide[compile-time] 1[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:2700 int-divide[Integer] 1[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2701 int-divide[compile-time] 1[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:2702 int-divide[Integer] 1[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2703 int-divide[compile-time] 1[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:2704 int-divide[Integer] 1[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2705 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 32767;
endcode
runtime noerror

$overflow on
code auto:2706 int-divide[Integer] 1[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2707 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2708 int-divide[Integer] 127[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2709 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div -32768;
endcode
runtime noerror

$overflow on
code auto:2710 int-divide[Integer] 127[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2711 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2712 int-divide[Integer] 127[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2713 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div -32767;
endcode
runtime noerror

$overflow on
code auto:2714 int-divide[Integer] 127[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2715 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2716 int-divide[Integer] 127[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2717 int-divide[compile-time] 127[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div -129;
endcode
runtime noerror

$overflow on
code auto:2718 int-divide[Integer] 127[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2719 int-divide[compile-time] 127[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -129;
endcode
varvalue r 0

$overflow off
code auto:2720 int-divide[Integer] 127[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2721 int-divide[compile-time] 127[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:2722 int-divide[Integer] 127[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2723 int-divide[compile-time] 127[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:2724 int-divide[Integer] 127[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2725 int-divide[compile-time] 127[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div -1;
endcode
runtime noerror

$overflow on
code auto:2726 int-divide[Integer] 127[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -127

code auto:2727 int-divide[compile-time] 127[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div -1;
endcode
varvalue r -127

$overflow off
code auto:2728 int-divide[Integer] 127[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2729 int-divide[compile-time] 127[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:2730 int-divide[Integer] 127[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2731 int-divide[compile-time] 127[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:2732 int-divide[Integer] 127[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2733 int-divide[compile-time] 127[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:2734 int-divide[Integer] 127[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 127

code auto:2735 int-divide[compile-time] 127[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:2736 int-divide[Integer] 127[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2737 int-divide[compile-time] 127[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:2738 int-divide[Integer] 127[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2739 int-divide[compile-time] 127[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:2740 int-divide[Integer] 127[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2741 int-divide[compile-time] 127[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:2742 int-divide[Integer] 127[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2743 int-divide[compile-time] 127[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:2744 int-divide[Integer] 127[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2745 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 32767;
endcode
runtime noerror

$overflow on
code auto:2746 int-divide[Integer] 127[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2747 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2748 int-divide[Integer] 128[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2749 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div -32768;
endcode
runtime noerror

$overflow on
code auto:2750 int-divide[Integer] 128[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2751 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2752 int-divide[Integer] 128[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2753 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div -32767;
endcode
runtime noerror

$overflow on
code auto:2754 int-divide[Integer] 128[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2755 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:2756 int-divide[Integer] 128[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2757 int-divide[compile-time] 128[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div -129;
endcode
runtime noerror

$overflow on
code auto:2758 int-divide[Integer] 128[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2759 int-divide[compile-time] 128[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div -129;
endcode
varvalue r 0

$overflow off
code auto:2760 int-divide[Integer] 128[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2761 int-divide[compile-time] 128[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div -128;
endcode
runtime noerror

$overflow on
code auto:2762 int-divide[Integer] 128[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2763 int-divide[compile-time] 128[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div -128;
endcode
varvalue r -1

$overflow off
code auto:2764 int-divide[Integer] 128[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2765 int-divide[compile-time] 128[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div -1;
endcode
runtime noerror

$overflow on
code auto:2766 int-divide[Integer] 128[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -128

code auto:2767 int-divide[compile-time] 128[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div -1;
endcode
varvalue r -128

$overflow off
code auto:2768 int-divide[Integer] 128[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2769 int-divide[compile-time] 128[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:2770 int-divide[Integer] 128[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2771 int-divide[compile-time] 128[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:2772 int-divide[Integer] 128[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2773 int-divide[compile-time] 128[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 1;
endcode
compile error

$overflow on
code auto:2774 int-divide[Integer] 128[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2775 int-divide[compile-time] 128[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 1;
endcode
compile error

$overflow off
code auto:2776 int-divide[Integer] 128[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2777 int-divide[compile-time] 128[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:2778 int-divide[Integer] 128[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2779 int-divide[compile-time] 128[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:2780 int-divide[Integer] 128[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2781 int-divide[compile-time] 128[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:2782 int-divide[Integer] 128[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2783 int-divide[compile-time] 128[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:2784 int-divide[Integer] 128[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2785 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 32767;
endcode
runtime noerror

$overflow on
code auto:2786 int-divide[Integer] 128[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2787 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:2788 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2789 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:2790 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:2791 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:2792 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2793 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div -32767;
endcode
runtime noerror

$overflow on
code auto:2794 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r -1

code auto:2795 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div -32767;
endcode
varvalue r -1

$overflow off
code auto:2796 int-divide[Integer] 32767[Integer], -129[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2797 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div -129;
endcode
compile error

$overflow on
code auto:2798 int-divide[Integer] 32767[Integer], -129[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2799 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div -129;
endcode
compile error

$overflow off
code auto:2800 int-divide[Integer] 32767[Integer], -128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2801 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div -128;
endcode
compile error

$overflow on
code auto:2802 int-divide[Integer] 32767[Integer], -128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2803 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div -128;
endcode
compile error

$overflow off
code auto:2804 int-divide[Integer] 32767[Integer], -1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2805 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div -1;
endcode
compile error

$overflow on
code auto:2806 int-divide[Integer] 32767[Integer], -1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2807 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div -1;
endcode
compile error

$overflow off
code auto:2808 int-divide[Integer] 32767[Integer], 0[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2809 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:2810 int-divide[Integer] 32767[Integer], 0[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:2811 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:2812 int-divide[Integer] 32767[Integer], 1[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2813 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 1;
endcode
compile error

$overflow on
code auto:2814 int-divide[Integer] 32767[Integer], 1[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2815 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 1;
endcode
compile error

$overflow off
code auto:2816 int-divide[Integer] 32767[Integer], 127[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2817 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 127;
endcode
compile error

$overflow on
code auto:2818 int-divide[Integer] 32767[Integer], 127[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2819 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 127;
endcode
compile error

$overflow off
code auto:2820 int-divide[Integer] 32767[Integer], 128[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2821 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 128;
endcode
compile error

$overflow on
code auto:2822 int-divide[Integer] 32767[Integer], 128[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:2823 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 128;
endcode
compile error

$overflow off
code auto:2824 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Int8] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:2825 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:2826 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Int8] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:2827 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:2828 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2829 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -32768;
endcode
varvalue r 1

$overflow on
code auto:2830 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2831 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -32767;
endcode
varvalue r 1

$overflow on
code auto:2832 int-divide[Integer] -32768[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 254

code auto:2833 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -129;
endcode
varvalue r 254

$overflow on
code auto:2834 int-divide[Integer] -32768[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 256

code auto:2835 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -128;
endcode
varvalue r 256

$overflow on
code auto:2836 int-divide[Integer] -32768[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
runtime overflow

code auto:2837 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div -1;
endcode
compile error

$overflow on
code auto:2838 int-divide[Integer] -32768[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2839 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:2840 int-divide[Integer] -32768[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32768

code auto:2841 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 1;
endcode
varvalue r -32768

$overflow on
code auto:2842 int-divide[Integer] -32768[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:2843 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 127;
endcode
varvalue r -258

$overflow on
code auto:2844 int-divide[Integer] -32768[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -256

code auto:2845 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 128;
endcode
varvalue r -256

$overflow on
code auto:2846 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2847 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32768 div 32767;
endcode
varvalue r -1

$overflow on
code auto:2848 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2849 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2850 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2851 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -32767;
endcode
varvalue r 1

$overflow on
code auto:2852 int-divide[Integer] -32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 254

code auto:2853 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -129;
endcode
varvalue r 254

$overflow on
code auto:2854 int-divide[Integer] -32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:2855 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -128;
endcode
varvalue r 255

$overflow on
code auto:2856 int-divide[Integer] -32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:2857 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div -1;
endcode
varvalue r 32767

$overflow on
code auto:2858 int-divide[Integer] -32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2859 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:2860 int-divide[Integer] -32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:2861 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 1;
endcode
varvalue r -32767

$overflow on
code auto:2862 int-divide[Integer] -32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -258

code auto:2863 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 127;
endcode
varvalue r -258

$overflow on
code auto:2864 int-divide[Integer] -32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:2865 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 128;
endcode
varvalue r -255

$overflow on
code auto:2866 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2867 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -32767 div 32767;
endcode
varvalue r -1

$overflow on
code auto:2868 int-divide[Integer] -129[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2869 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2870 int-divide[Integer] -129[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2871 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2872 int-divide[Integer] -129[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2873 int-divide[compile-time] -129[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -129;
endcode
varvalue r 1

$overflow on
code auto:2874 int-divide[Integer] -129[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2875 int-divide[compile-time] -129[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -128;
endcode
varvalue r 1

$overflow on
code auto:2876 int-divide[Integer] -129[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 129

code auto:2877 int-divide[compile-time] -129[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div -1;
endcode
varvalue r 129

$overflow on
code auto:2878 int-divide[Integer] -129[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2879 int-divide[compile-time] -129[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:2880 int-divide[Integer] -129[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -129

code auto:2881 int-divide[compile-time] -129[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 1;
endcode
varvalue r -129

$overflow on
code auto:2882 int-divide[Integer] -129[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2883 int-divide[compile-time] -129[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 127;
endcode
varvalue r -1

$overflow on
code auto:2884 int-divide[Integer] -129[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2885 int-divide[compile-time] -129[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 128;
endcode
varvalue r -1

$overflow on
code auto:2886 int-divide[Integer] -129[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2887 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2888 int-divide[Integer] -128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2889 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2890 int-divide[Integer] -128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2891 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2892 int-divide[Integer] -128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2893 int-divide[compile-time] -128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -129;
endcode
varvalue r 0

$overflow on
code auto:2894 int-divide[Integer] -128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2895 int-divide[compile-time] -128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -128;
endcode
varvalue r 1

$overflow on
code auto:2896 int-divide[Integer] -128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:2897 int-divide[compile-time] -128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div -1;
endcode
varvalue r 128

$overflow on
code auto:2898 int-divide[Integer] -128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2899 int-divide[compile-time] -128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:2900 int-divide[Integer] -128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:2901 int-divide[compile-time] -128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 1;
endcode
varvalue r -128

$overflow on
code auto:2902 int-divide[Integer] -128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2903 int-divide[compile-time] -128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 127;
endcode
varvalue r -1

$overflow on
code auto:2904 int-divide[Integer] -128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2905 int-divide[compile-time] -128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 128;
endcode
varvalue r -1

$overflow on
code auto:2906 int-divide[Integer] -128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2907 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2908 int-divide[Integer] -1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2909 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2910 int-divide[Integer] -1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2911 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2912 int-divide[Integer] -1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2913 int-divide[compile-time] -1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -129;
endcode
varvalue r 0

$overflow on
code auto:2914 int-divide[Integer] -1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2915 int-divide[compile-time] -1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -128;
endcode
varvalue r 0

$overflow on
code auto:2916 int-divide[Integer] -1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2917 int-divide[compile-time] -1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div -1;
endcode
varvalue r 1

$overflow on
code auto:2918 int-divide[Integer] -1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2919 int-divide[compile-time] -1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:2920 int-divide[Integer] -1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2921 int-divide[compile-time] -1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 1;
endcode
varvalue r -1

$overflow on
code auto:2922 int-divide[Integer] -1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2923 int-divide[compile-time] -1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 127;
endcode
varvalue r 0

$overflow on
code auto:2924 int-divide[Integer] -1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2925 int-divide[compile-time] -1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 128;
endcode
varvalue r 0

$overflow on
code auto:2926 int-divide[Integer] -1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2927 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2928 int-divide[Integer] 0[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2929 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2930 int-divide[Integer] 0[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2931 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2932 int-divide[Integer] 0[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2933 int-divide[compile-time] 0[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -129;
endcode
varvalue r 0

$overflow on
code auto:2934 int-divide[Integer] 0[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2935 int-divide[compile-time] 0[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -128;
endcode
varvalue r 0

$overflow on
code auto:2936 int-divide[Integer] 0[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2937 int-divide[compile-time] 0[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div -1;
endcode
varvalue r 0

$overflow on
code auto:2938 int-divide[Integer] 0[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2939 int-divide[compile-time] 0[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:2940 int-divide[Integer] 0[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2941 int-divide[compile-time] 0[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:2942 int-divide[Integer] 0[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2943 int-divide[compile-time] 0[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:2944 int-divide[Integer] 0[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2945 int-divide[compile-time] 0[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:2946 int-divide[Integer] 0[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2947 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2948 int-divide[Integer] 1[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2949 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2950 int-divide[Integer] 1[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2951 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2952 int-divide[Integer] 1[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2953 int-divide[compile-time] 1[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -129;
endcode
varvalue r 0

$overflow on
code auto:2954 int-divide[Integer] 1[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2955 int-divide[compile-time] 1[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -128;
endcode
varvalue r 0

$overflow on
code auto:2956 int-divide[Integer] 1[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2957 int-divide[compile-time] 1[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div -1;
endcode
varvalue r -1

$overflow on
code auto:2958 int-divide[Integer] 1[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2959 int-divide[compile-time] 1[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:2960 int-divide[Integer] 1[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2961 int-divide[compile-time] 1[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:2962 int-divide[Integer] 1[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2963 int-divide[compile-time] 1[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:2964 int-divide[Integer] 1[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2965 int-divide[compile-time] 1[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:2966 int-divide[Integer] 1[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2967 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2968 int-divide[Integer] 127[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2969 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2970 int-divide[Integer] 127[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2971 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2972 int-divide[Integer] 127[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2973 int-divide[compile-time] 127[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -129;
endcode
varvalue r 0

$overflow on
code auto:2974 int-divide[Integer] 127[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2975 int-divide[compile-time] 127[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -128;
endcode
varvalue r 0

$overflow on
code auto:2976 int-divide[Integer] 127[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -127

code auto:2977 int-divide[compile-time] 127[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div -1;
endcode
varvalue r -127

$overflow on
code auto:2978 int-divide[Integer] 127[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2979 int-divide[compile-time] 127[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:2980 int-divide[Integer] 127[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:2981 int-divide[compile-time] 127[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:2982 int-divide[Integer] 127[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:2983 int-divide[compile-time] 127[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:2984 int-divide[Integer] 127[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2985 int-divide[compile-time] 127[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:2986 int-divide[Integer] 127[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2987 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow on
code auto:2988 int-divide[Integer] 128[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2989 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow on
code auto:2990 int-divide[Integer] 128[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2991 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow on
code auto:2992 int-divide[Integer] 128[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:2993 int-divide[compile-time] 128[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -129;
endcode
varvalue r 0

$overflow on
code auto:2994 int-divide[Integer] 128[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:2995 int-divide[compile-time] 128[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -128;
endcode
varvalue r -1

$overflow on
code auto:2996 int-divide[Integer] 128[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -128

code auto:2997 int-divide[compile-time] 128[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div -1;
endcode
varvalue r -128

$overflow on
code auto:2998 int-divide[Integer] 128[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:2999 int-divide[compile-time] 128[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:3000 int-divide[Integer] 128[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:3001 int-divide[compile-time] 128[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:3002 int-divide[Integer] 128[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3003 int-divide[compile-time] 128[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:3004 int-divide[Integer] 128[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3005 int-divide[compile-time] 128[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:3006 int-divide[Integer] 128[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3007 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow on
code auto:3008 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3009 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow on
code auto:3010 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -1

code auto:3011 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -32767;
endcode
varvalue r -1

$overflow on
code auto:3012 int-divide[Integer] 32767[Integer], -129[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -254

code auto:3013 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -129;
endcode
varvalue r -254

$overflow on
code auto:3014 int-divide[Integer] 32767[Integer], -128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -255

code auto:3015 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -128;
endcode
varvalue r -255

$overflow on
code auto:3016 int-divide[Integer] 32767[Integer], -1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r -32767

code auto:3017 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div -1;
endcode
varvalue r -32767

$overflow on
code auto:3018 int-divide[Integer] 32767[Integer], 0[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3019 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:3020 int-divide[Integer] 32767[Integer], 1[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 32767

code auto:3021 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow on
code auto:3022 int-divide[Integer] 32767[Integer], 127[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 258

code auto:3023 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow on
code auto:3024 int-divide[Integer] 32767[Integer], 128[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:3025 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow on
code auto:3026 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Integer] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3027 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:3028 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3029 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div -32768;
endcode
runtime noerror

$overflow on
code auto:3030 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3031 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div -32768;
endcode
varvalue r 1

$overflow off
code auto:3032 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3033 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div -32767;
endcode
runtime noerror

$overflow on
code auto:3034 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3035 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div -32767;
endcode
varvalue r 1

$overflow off
code auto:3036 int-divide[Integer] -32768[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3037 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div -129;
endcode
runtime noerror

$overflow on
code auto:3038 int-divide[Integer] -32768[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 254

code auto:3039 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div -129;
endcode
varvalue r 254

$overflow off
code auto:3040 int-divide[Integer] -32768[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3041 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div -128;
endcode
compile error

$overflow on
code auto:3042 int-divide[Integer] -32768[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3043 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div -128;
endcode
compile error

$overflow off
code auto:3044 int-divide[Integer] -32768[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3045 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div -1;
endcode
compile error

$overflow on
code auto:3046 int-divide[Integer] -32768[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3047 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div -1;
endcode
compile error

$overflow off
code auto:3048 int-divide[Integer] -32768[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3049 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:3050 int-divide[Integer] -32768[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3051 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div 0;
endcode
compile error

$overflow off
code auto:3052 int-divide[Integer] -32768[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3053 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div 1;
endcode
compile error

$overflow on
code auto:3054 int-divide[Integer] -32768[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3055 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div 1;
endcode
compile error

$overflow off
code auto:3056 int-divide[Integer] -32768[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3057 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div 127;
endcode
compile error

$overflow on
code auto:3058 int-divide[Integer] -32768[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3059 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div 127;
endcode
compile error

$overflow off
code auto:3060 int-divide[Integer] -32768[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3061 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div 128;
endcode
compile error

$overflow on
code auto:3062 int-divide[Integer] -32768[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3063 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div 128;
endcode
compile error

$overflow off
code auto:3064 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3065 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32768 div 32767;
endcode
compile error

$overflow on
code auto:3066 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3067 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32768 div 32767;
endcode
compile error

$overflow off
code auto:3068 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3069 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:3070 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3071 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3072 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3073 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div -32767;
endcode
runtime noerror

$overflow on
code auto:3074 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3075 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div -32767;
endcode
varvalue r 1

$overflow off
code auto:3076 int-divide[Integer] -32767[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3077 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div -129;
endcode
runtime noerror

$overflow on
code auto:3078 int-divide[Integer] -32767[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 254

code auto:3079 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div -129;
endcode
varvalue r 254

$overflow off
code auto:3080 int-divide[Integer] -32767[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3081 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div -128;
endcode
runtime noerror

$overflow on
code auto:3082 int-divide[Integer] -32767[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 255

code auto:3083 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div -128;
endcode
varvalue r 255

$overflow off
code auto:3084 int-divide[Integer] -32767[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3085 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div -1;
endcode
compile error

$overflow on
code auto:3086 int-divide[Integer] -32767[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3087 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div -1;
endcode
compile error

$overflow off
code auto:3088 int-divide[Integer] -32767[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3089 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:3090 int-divide[Integer] -32767[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3091 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div 0;
endcode
compile error

$overflow off
code auto:3092 int-divide[Integer] -32767[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3093 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div 1;
endcode
compile error

$overflow on
code auto:3094 int-divide[Integer] -32767[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3095 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div 1;
endcode
compile error

$overflow off
code auto:3096 int-divide[Integer] -32767[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3097 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div 127;
endcode
compile error

$overflow on
code auto:3098 int-divide[Integer] -32767[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3099 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div 127;
endcode
compile error

$overflow off
code auto:3100 int-divide[Integer] -32767[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3101 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div 128;
endcode
compile error

$overflow on
code auto:3102 int-divide[Integer] -32767[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3103 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div 128;
endcode
compile error

$overflow off
code auto:3104 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3105 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -32767 div 32767;
endcode
compile error

$overflow on
code auto:3106 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3107 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -32767 div 32767;
endcode
compile error

$overflow off
code auto:3108 int-divide[Integer] -129[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3109 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div -32768;
endcode
runtime noerror

$overflow on
code auto:3110 int-divide[Integer] -129[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3111 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3112 int-divide[Integer] -129[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3113 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div -32767;
endcode
runtime noerror

$overflow on
code auto:3114 int-divide[Integer] -129[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3115 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3116 int-divide[Integer] -129[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3117 int-divide[compile-time] -129[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div -129;
endcode
runtime noerror

$overflow on
code auto:3118 int-divide[Integer] -129[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3119 int-divide[compile-time] -129[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div -129;
endcode
varvalue r 1

$overflow off
code auto:3120 int-divide[Integer] -129[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3121 int-divide[compile-time] -129[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div -128;
endcode
runtime noerror

$overflow on
code auto:3122 int-divide[Integer] -129[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3123 int-divide[compile-time] -129[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div -128;
endcode
varvalue r 1

$overflow off
code auto:3124 int-divide[Integer] -129[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3125 int-divide[compile-time] -129[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div -1;
endcode
runtime noerror

$overflow on
code auto:3126 int-divide[Integer] -129[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 129

code auto:3127 int-divide[compile-time] -129[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div -1;
endcode
varvalue r 129

$overflow off
code auto:3128 int-divide[Integer] -129[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3129 int-divide[compile-time] -129[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:3130 int-divide[Integer] -129[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3131 int-divide[compile-time] -129[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div 0;
endcode
compile error

$overflow off
code auto:3132 int-divide[Integer] -129[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3133 int-divide[compile-time] -129[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div 1;
endcode
compile error

$overflow on
code auto:3134 int-divide[Integer] -129[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3135 int-divide[compile-time] -129[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div 1;
endcode
compile error

$overflow off
code auto:3136 int-divide[Integer] -129[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3137 int-divide[compile-time] -129[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div 127;
endcode
compile error

$overflow on
code auto:3138 int-divide[Integer] -129[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3139 int-divide[compile-time] -129[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div 127;
endcode
compile error

$overflow off
code auto:3140 int-divide[Integer] -129[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3141 int-divide[compile-time] -129[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div 128;
endcode
compile error

$overflow on
code auto:3142 int-divide[Integer] -129[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3143 int-divide[compile-time] -129[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div 128;
endcode
compile error

$overflow off
code auto:3144 int-divide[Integer] -129[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3145 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -129 div 32767;
endcode
runtime noerror

$overflow on
code auto:3146 int-divide[Integer] -129[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3147 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3148 int-divide[Integer] -128[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3149 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -32768;
endcode
runtime noerror

$overflow on
code auto:3150 int-divide[Integer] -128[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3151 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3152 int-divide[Integer] -128[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3153 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -32767;
endcode
runtime noerror

$overflow on
code auto:3154 int-divide[Integer] -128[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3155 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3156 int-divide[Integer] -128[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3157 int-divide[compile-time] -128[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -129;
endcode
runtime noerror

$overflow on
code auto:3158 int-divide[Integer] -128[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3159 int-divide[compile-time] -128[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -129;
endcode
varvalue r 0

$overflow off
code auto:3160 int-divide[Integer] -128[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3161 int-divide[compile-time] -128[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:3162 int-divide[Integer] -128[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3163 int-divide[compile-time] -128[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:3164 int-divide[Integer] -128[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3165 int-divide[compile-time] -128[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div -1;
endcode
runtime noerror

$overflow on
code auto:3166 int-divide[Integer] -128[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:3167 int-divide[compile-time] -128[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div -1;
endcode
varvalue r 128

$overflow off
code auto:3168 int-divide[Integer] -128[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3169 int-divide[compile-time] -128[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:3170 int-divide[Integer] -128[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3171 int-divide[compile-time] -128[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:3172 int-divide[Integer] -128[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3173 int-divide[compile-time] -128[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 1;
endcode
compile error

$overflow on
code auto:3174 int-divide[Integer] -128[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3175 int-divide[compile-time] -128[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 1;
endcode
compile error

$overflow off
code auto:3176 int-divide[Integer] -128[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3177 int-divide[compile-time] -128[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 127;
endcode
compile error

$overflow on
code auto:3178 int-divide[Integer] -128[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3179 int-divide[compile-time] -128[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 127;
endcode
compile error

$overflow off
code auto:3180 int-divide[Integer] -128[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3181 int-divide[compile-time] -128[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 128;
endcode
compile error

$overflow on
code auto:3182 int-divide[Integer] -128[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3183 int-divide[compile-time] -128[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 128;
endcode
compile error

$overflow off
code auto:3184 int-divide[Integer] -128[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3185 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -128 div 32767;
endcode
runtime noerror

$overflow on
code auto:3186 int-divide[Integer] -128[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3187 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3188 int-divide[Integer] -1[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3189 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -32768;
endcode
runtime noerror

$overflow on
code auto:3190 int-divide[Integer] -1[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3191 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3192 int-divide[Integer] -1[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3193 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -32767;
endcode
runtime noerror

$overflow on
code auto:3194 int-divide[Integer] -1[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3195 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3196 int-divide[Integer] -1[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3197 int-divide[compile-time] -1[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -129;
endcode
runtime noerror

$overflow on
code auto:3198 int-divide[Integer] -1[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3199 int-divide[compile-time] -1[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -129;
endcode
varvalue r 0

$overflow off
code auto:3200 int-divide[Integer] -1[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3201 int-divide[compile-time] -1[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:3202 int-divide[Integer] -1[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3203 int-divide[compile-time] -1[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:3204 int-divide[Integer] -1[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3205 int-divide[compile-time] -1[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:3206 int-divide[Integer] -1[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3207 int-divide[compile-time] -1[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:3208 int-divide[Integer] -1[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3209 int-divide[compile-time] -1[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:3210 int-divide[Integer] -1[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3211 int-divide[compile-time] -1[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:3212 int-divide[Integer] -1[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3213 int-divide[compile-time] -1[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 1;
endcode
compile error

$overflow on
code auto:3214 int-divide[Integer] -1[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3215 int-divide[compile-time] -1[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 1;
endcode
compile error

$overflow off
code auto:3216 int-divide[Integer] -1[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3217 int-divide[compile-time] -1[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:3218 int-divide[Integer] -1[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3219 int-divide[compile-time] -1[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3220 int-divide[Integer] -1[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3221 int-divide[compile-time] -1[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 128;
endcode
runtime noerror

$overflow on
code auto:3222 int-divide[Integer] -1[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3223 int-divide[compile-time] -1[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3224 int-divide[Integer] -1[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3225 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := -1 div 32767;
endcode
runtime noerror

$overflow on
code auto:3226 int-divide[Integer] -1[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3227 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3228 int-divide[Integer] 0[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3229 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -32768;
endcode
runtime noerror

$overflow on
code auto:3230 int-divide[Integer] 0[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3231 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3232 int-divide[Integer] 0[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3233 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -32767;
endcode
runtime noerror

$overflow on
code auto:3234 int-divide[Integer] 0[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3235 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3236 int-divide[Integer] 0[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3237 int-divide[compile-time] 0[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -129;
endcode
runtime noerror

$overflow on
code auto:3238 int-divide[Integer] 0[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3239 int-divide[compile-time] 0[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -129;
endcode
varvalue r 0

$overflow off
code auto:3240 int-divide[Integer] 0[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3241 int-divide[compile-time] 0[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:3242 int-divide[Integer] 0[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3243 int-divide[compile-time] 0[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:3244 int-divide[Integer] 0[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3245 int-divide[compile-time] 0[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:3246 int-divide[Integer] 0[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3247 int-divide[compile-time] 0[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:3248 int-divide[Integer] 0[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3249 int-divide[compile-time] 0[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:3250 int-divide[Integer] 0[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3251 int-divide[compile-time] 0[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:3252 int-divide[Integer] 0[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3253 int-divide[compile-time] 0[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:3254 int-divide[Integer] 0[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3255 int-divide[compile-time] 0[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:3256 int-divide[Integer] 0[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3257 int-divide[compile-time] 0[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:3258 int-divide[Integer] 0[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3259 int-divide[compile-time] 0[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:3260 int-divide[Integer] 0[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3261 int-divide[compile-time] 0[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:3262 int-divide[Integer] 0[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3263 int-divide[compile-time] 0[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:3264 int-divide[Integer] 0[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3265 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:3266 int-divide[Integer] 0[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3267 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3268 int-divide[Integer] 1[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3269 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -32768;
endcode
runtime noerror

$overflow on
code auto:3270 int-divide[Integer] 1[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3271 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3272 int-divide[Integer] 1[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3273 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -32767;
endcode
runtime noerror

$overflow on
code auto:3274 int-divide[Integer] 1[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3275 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3276 int-divide[Integer] 1[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3277 int-divide[compile-time] 1[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -129;
endcode
runtime noerror

$overflow on
code auto:3278 int-divide[Integer] 1[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3279 int-divide[compile-time] 1[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -129;
endcode
varvalue r 0

$overflow off
code auto:3280 int-divide[Integer] 1[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3281 int-divide[compile-time] 1[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:3282 int-divide[Integer] 1[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3283 int-divide[compile-time] 1[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:3284 int-divide[Integer] 1[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3285 int-divide[compile-time] 1[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div -1;
endcode
compile error

$overflow on
code auto:3286 int-divide[Integer] 1[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3287 int-divide[compile-time] 1[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div -1;
endcode
compile error

$overflow off
code auto:3288 int-divide[Integer] 1[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3289 int-divide[compile-time] 1[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:3290 int-divide[Integer] 1[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3291 int-divide[compile-time] 1[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:3292 int-divide[Integer] 1[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3293 int-divide[compile-time] 1[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:3294 int-divide[Integer] 1[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3295 int-divide[compile-time] 1[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:3296 int-divide[Integer] 1[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3297 int-divide[compile-time] 1[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:3298 int-divide[Integer] 1[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3299 int-divide[compile-time] 1[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3300 int-divide[Integer] 1[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3301 int-divide[compile-time] 1[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:3302 int-divide[Integer] 1[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3303 int-divide[compile-time] 1[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3304 int-divide[Integer] 1[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3305 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 1 div 32767;
endcode
runtime noerror

$overflow on
code auto:3306 int-divide[Integer] 1[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3307 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3308 int-divide[Integer] 127[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3309 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -32768;
endcode
runtime noerror

$overflow on
code auto:3310 int-divide[Integer] 127[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3311 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3312 int-divide[Integer] 127[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3313 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -32767;
endcode
runtime noerror

$overflow on
code auto:3314 int-divide[Integer] 127[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3315 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3316 int-divide[Integer] 127[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3317 int-divide[compile-time] 127[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -129;
endcode
runtime noerror

$overflow on
code auto:3318 int-divide[Integer] 127[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3319 int-divide[compile-time] 127[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -129;
endcode
varvalue r 0

$overflow off
code auto:3320 int-divide[Integer] 127[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3321 int-divide[compile-time] 127[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:3322 int-divide[Integer] 127[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3323 int-divide[compile-time] 127[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:3324 int-divide[Integer] 127[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3325 int-divide[compile-time] 127[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div -1;
endcode
compile error

$overflow on
code auto:3326 int-divide[Integer] 127[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3327 int-divide[compile-time] 127[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div -1;
endcode
compile error

$overflow off
code auto:3328 int-divide[Integer] 127[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3329 int-divide[compile-time] 127[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:3330 int-divide[Integer] 127[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3331 int-divide[compile-time] 127[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:3332 int-divide[Integer] 127[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3333 int-divide[compile-time] 127[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:3334 int-divide[Integer] 127[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 127

code auto:3335 int-divide[compile-time] 127[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:3336 int-divide[Integer] 127[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3337 int-divide[compile-time] 127[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:3338 int-divide[Integer] 127[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3339 int-divide[compile-time] 127[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:3340 int-divide[Integer] 127[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3341 int-divide[compile-time] 127[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:3342 int-divide[Integer] 127[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3343 int-divide[compile-time] 127[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:3344 int-divide[Integer] 127[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3345 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 127 div 32767;
endcode
runtime noerror

$overflow on
code auto:3346 int-divide[Integer] 127[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3347 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3348 int-divide[Integer] 128[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3349 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div -32768;
endcode
runtime noerror

$overflow on
code auto:3350 int-divide[Integer] 128[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3351 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3352 int-divide[Integer] 128[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3353 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div -32767;
endcode
runtime noerror

$overflow on
code auto:3354 int-divide[Integer] 128[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3355 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3356 int-divide[Integer] 128[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3357 int-divide[compile-time] 128[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div -129;
endcode
runtime noerror

$overflow on
code auto:3358 int-divide[Integer] 128[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3359 int-divide[compile-time] 128[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div -129;
endcode
varvalue r 0

$overflow off
code auto:3360 int-divide[Integer] 128[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3361 int-divide[compile-time] 128[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div -128;
endcode
compile error

$overflow on
code auto:3362 int-divide[Integer] 128[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3363 int-divide[compile-time] 128[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div -128;
endcode
compile error

$overflow off
code auto:3364 int-divide[Integer] 128[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3365 int-divide[compile-time] 128[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div -1;
endcode
compile error

$overflow on
code auto:3366 int-divide[Integer] 128[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3367 int-divide[compile-time] 128[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div -1;
endcode
compile error

$overflow off
code auto:3368 int-divide[Integer] 128[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3369 int-divide[compile-time] 128[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:3370 int-divide[Integer] 128[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3371 int-divide[compile-time] 128[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:3372 int-divide[Integer] 128[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3373 int-divide[compile-time] 128[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div 1;
endcode
runtime noerror

$overflow on
code auto:3374 int-divide[Integer] 128[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:3375 int-divide[compile-time] 128[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 1;
endcode
varvalue r 128

$overflow off
code auto:3376 int-divide[Integer] 128[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3377 int-divide[compile-time] 128[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:3378 int-divide[Integer] 128[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3379 int-divide[compile-time] 128[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:3380 int-divide[Integer] 128[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3381 int-divide[compile-time] 128[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:3382 int-divide[Integer] 128[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3383 int-divide[compile-time] 128[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:3384 int-divide[Integer] 128[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3385 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 128 div 32767;
endcode
runtime noerror

$overflow on
code auto:3386 int-divide[Integer] 128[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3387 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3388 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3389 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:3390 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:3391 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3392 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3393 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div -32767;
endcode
compile error

$overflow on
code auto:3394 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3395 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div -32767;
endcode
compile error

$overflow off
code auto:3396 int-divide[Integer] 32767[Integer], -129[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3397 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div -129;
endcode
compile error

$overflow on
code auto:3398 int-divide[Integer] 32767[Integer], -129[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3399 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div -129;
endcode
compile error

$overflow off
code auto:3400 int-divide[Integer] 32767[Integer], -128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3401 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div -128;
endcode
compile error

$overflow on
code auto:3402 int-divide[Integer] 32767[Integer], -128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3403 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div -128;
endcode
compile error

$overflow off
code auto:3404 int-divide[Integer] 32767[Integer], -1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3405 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div -1;
endcode
compile error

$overflow on
code auto:3406 int-divide[Integer] 32767[Integer], -1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3407 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div -1;
endcode
compile error

$overflow off
code auto:3408 int-divide[Integer] 32767[Integer], 0[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3409 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:3410 int-divide[Integer] 32767[Integer], 0[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:3411 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:3412 int-divide[Integer] 32767[Integer], 1[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3413 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 1;
endcode
compile error

$overflow on
code auto:3414 int-divide[Integer] 32767[Integer], 1[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3415 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 1;
endcode
compile error

$overflow off
code auto:3416 int-divide[Integer] 32767[Integer], 127[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3417 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 127;
endcode
compile error

$overflow on
code auto:3418 int-divide[Integer] 32767[Integer], 127[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:3419 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 127;
endcode
compile error

$overflow off
code auto:3420 int-divide[Integer] 32767[Integer], 128[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3421 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 128;
endcode
runtime noerror

$overflow on
code auto:3422 int-divide[Integer] 32767[Integer], 128[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 255

code auto:3423 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow off
code auto:3424 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Byte] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:3425 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:3426 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Byte] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:3427 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:3428 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3429 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div -32768;
endcode
runtime noerror

$overflow on
code auto:3430 int-divide[Integer] -32768[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3431 int-divide[compile-time] -32768[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div -32768;
endcode
varvalue r 1

$overflow off
code auto:3432 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3433 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div -32767;
endcode
runtime noerror

$overflow on
code auto:3434 int-divide[Integer] -32768[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3435 int-divide[compile-time] -32768[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div -32767;
endcode
varvalue r 1

$overflow off
code auto:3436 int-divide[Integer] -32768[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3437 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div -129;
endcode
runtime noerror

$overflow on
code auto:3438 int-divide[Integer] -32768[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 254

code auto:3439 int-divide[compile-time] -32768[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div -129;
endcode
varvalue r 254

$overflow off
code auto:3440 int-divide[Integer] -32768[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3441 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div -128;
endcode
runtime noerror

$overflow on
code auto:3442 int-divide[Integer] -32768[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 256

code auto:3443 int-divide[compile-time] -32768[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div -128;
endcode
varvalue r 256

$overflow off
code auto:3444 int-divide[Integer] -32768[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3445 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div -1;
endcode
runtime noerror

$overflow on
code auto:3446 int-divide[Integer] -32768[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3447 int-divide[compile-time] -32768[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div -1;
endcode
varvalue r 32768

$overflow off
code auto:3448 int-divide[Integer] -32768[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3449 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div 0;
endcode
compile error

$overflow on
code auto:3450 int-divide[Integer] -32768[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3451 int-divide[compile-time] -32768[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div 0;
endcode
compile error

$overflow off
code auto:3452 int-divide[Integer] -32768[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3453 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div 1;
endcode
compile error

$overflow on
code auto:3454 int-divide[Integer] -32768[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3455 int-divide[compile-time] -32768[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div 1;
endcode
compile error

$overflow off
code auto:3456 int-divide[Integer] -32768[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3457 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div 127;
endcode
compile error

$overflow on
code auto:3458 int-divide[Integer] -32768[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3459 int-divide[compile-time] -32768[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div 127;
endcode
compile error

$overflow off
code auto:3460 int-divide[Integer] -32768[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3461 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div 128;
endcode
compile error

$overflow on
code auto:3462 int-divide[Integer] -32768[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3463 int-divide[compile-time] -32768[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div 128;
endcode
compile error

$overflow off
code auto:3464 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3465 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32768 div 32767;
endcode
compile error

$overflow on
code auto:3466 int-divide[Integer] -32768[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32768;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3467 int-divide[compile-time] -32768[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32768 div 32767;
endcode
compile error

$overflow off
code auto:3468 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3469 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:3470 int-divide[Integer] -32767[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3471 int-divide[compile-time] -32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3472 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3473 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div -32767;
endcode
runtime noerror

$overflow on
code auto:3474 int-divide[Integer] -32767[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3475 int-divide[compile-time] -32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div -32767;
endcode
varvalue r 1

$overflow off
code auto:3476 int-divide[Integer] -32767[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3477 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div -129;
endcode
runtime noerror

$overflow on
code auto:3478 int-divide[Integer] -32767[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 254

code auto:3479 int-divide[compile-time] -32767[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div -129;
endcode
varvalue r 254

$overflow off
code auto:3480 int-divide[Integer] -32767[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3481 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div -128;
endcode
runtime noerror

$overflow on
code auto:3482 int-divide[Integer] -32767[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 255

code auto:3483 int-divide[compile-time] -32767[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div -128;
endcode
varvalue r 255

$overflow off
code auto:3484 int-divide[Integer] -32767[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3485 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div -1;
endcode
runtime noerror

$overflow on
code auto:3486 int-divide[Integer] -32767[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 32767

code auto:3487 int-divide[compile-time] -32767[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div -1;
endcode
varvalue r 32767

$overflow off
code auto:3488 int-divide[Integer] -32767[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3489 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div 0;
endcode
compile error

$overflow on
code auto:3490 int-divide[Integer] -32767[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3491 int-divide[compile-time] -32767[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div 0;
endcode
compile error

$overflow off
code auto:3492 int-divide[Integer] -32767[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3493 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div 1;
endcode
compile error

$overflow on
code auto:3494 int-divide[Integer] -32767[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3495 int-divide[compile-time] -32767[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div 1;
endcode
compile error

$overflow off
code auto:3496 int-divide[Integer] -32767[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3497 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div 127;
endcode
compile error

$overflow on
code auto:3498 int-divide[Integer] -32767[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3499 int-divide[compile-time] -32767[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div 127;
endcode
compile error

$overflow off
code auto:3500 int-divide[Integer] -32767[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3501 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div 128;
endcode
compile error

$overflow on
code auto:3502 int-divide[Integer] -32767[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3503 int-divide[compile-time] -32767[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div 128;
endcode
compile error

$overflow off
code auto:3504 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3505 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -32767 div 32767;
endcode
compile error

$overflow on
code auto:3506 int-divide[Integer] -32767[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3507 int-divide[compile-time] -32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -32767 div 32767;
endcode
compile error

$overflow off
code auto:3508 int-divide[Integer] -129[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3509 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div -32768;
endcode
runtime noerror

$overflow on
code auto:3510 int-divide[Integer] -129[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3511 int-divide[compile-time] -129[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3512 int-divide[Integer] -129[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3513 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div -32767;
endcode
runtime noerror

$overflow on
code auto:3514 int-divide[Integer] -129[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3515 int-divide[compile-time] -129[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3516 int-divide[Integer] -129[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3517 int-divide[compile-time] -129[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div -129;
endcode
runtime noerror

$overflow on
code auto:3518 int-divide[Integer] -129[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3519 int-divide[compile-time] -129[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div -129;
endcode
varvalue r 1

$overflow off
code auto:3520 int-divide[Integer] -129[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3521 int-divide[compile-time] -129[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div -128;
endcode
runtime noerror

$overflow on
code auto:3522 int-divide[Integer] -129[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3523 int-divide[compile-time] -129[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div -128;
endcode
varvalue r 1

$overflow off
code auto:3524 int-divide[Integer] -129[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3525 int-divide[compile-time] -129[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div -1;
endcode
runtime noerror

$overflow on
code auto:3526 int-divide[Integer] -129[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 129

code auto:3527 int-divide[compile-time] -129[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div -1;
endcode
varvalue r 129

$overflow off
code auto:3528 int-divide[Integer] -129[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3529 int-divide[compile-time] -129[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div 0;
endcode
compile error

$overflow on
code auto:3530 int-divide[Integer] -129[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3531 int-divide[compile-time] -129[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div 0;
endcode
compile error

$overflow off
code auto:3532 int-divide[Integer] -129[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3533 int-divide[compile-time] -129[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div 1;
endcode
compile error

$overflow on
code auto:3534 int-divide[Integer] -129[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3535 int-divide[compile-time] -129[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div 1;
endcode
compile error

$overflow off
code auto:3536 int-divide[Integer] -129[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3537 int-divide[compile-time] -129[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div 127;
endcode
compile error

$overflow on
code auto:3538 int-divide[Integer] -129[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3539 int-divide[compile-time] -129[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div 127;
endcode
compile error

$overflow off
code auto:3540 int-divide[Integer] -129[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3541 int-divide[compile-time] -129[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div 128;
endcode
compile error

$overflow on
code auto:3542 int-divide[Integer] -129[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3543 int-divide[compile-time] -129[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div 128;
endcode
compile error

$overflow off
code auto:3544 int-divide[Integer] -129[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3545 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -129 div 32767;
endcode
runtime noerror

$overflow on
code auto:3546 int-divide[Integer] -129[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -129;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3547 int-divide[compile-time] -129[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -129 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3548 int-divide[Integer] -128[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3549 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -32768;
endcode
runtime noerror

$overflow on
code auto:3550 int-divide[Integer] -128[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3551 int-divide[compile-time] -128[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3552 int-divide[Integer] -128[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3553 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -32767;
endcode
runtime noerror

$overflow on
code auto:3554 int-divide[Integer] -128[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3555 int-divide[compile-time] -128[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3556 int-divide[Integer] -128[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3557 int-divide[compile-time] -128[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -129;
endcode
runtime noerror

$overflow on
code auto:3558 int-divide[Integer] -128[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3559 int-divide[compile-time] -128[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -129;
endcode
varvalue r 0

$overflow off
code auto:3560 int-divide[Integer] -128[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3561 int-divide[compile-time] -128[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -128;
endcode
runtime noerror

$overflow on
code auto:3562 int-divide[Integer] -128[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3563 int-divide[compile-time] -128[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -128;
endcode
varvalue r 1

$overflow off
code auto:3564 int-divide[Integer] -128[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3565 int-divide[compile-time] -128[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div -1;
endcode
runtime noerror

$overflow on
code auto:3566 int-divide[Integer] -128[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:3567 int-divide[compile-time] -128[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div -1;
endcode
varvalue r 128

$overflow off
code auto:3568 int-divide[Integer] -128[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3569 int-divide[compile-time] -128[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 0;
endcode
compile error

$overflow on
code auto:3570 int-divide[Integer] -128[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3571 int-divide[compile-time] -128[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 0;
endcode
compile error

$overflow off
code auto:3572 int-divide[Integer] -128[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3573 int-divide[compile-time] -128[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 1;
endcode
compile error

$overflow on
code auto:3574 int-divide[Integer] -128[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3575 int-divide[compile-time] -128[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 1;
endcode
compile error

$overflow off
code auto:3576 int-divide[Integer] -128[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3577 int-divide[compile-time] -128[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 127;
endcode
compile error

$overflow on
code auto:3578 int-divide[Integer] -128[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3579 int-divide[compile-time] -128[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 127;
endcode
compile error

$overflow off
code auto:3580 int-divide[Integer] -128[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3581 int-divide[compile-time] -128[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 128;
endcode
compile error

$overflow on
code auto:3582 int-divide[Integer] -128[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3583 int-divide[compile-time] -128[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 128;
endcode
compile error

$overflow off
code auto:3584 int-divide[Integer] -128[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3585 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -128 div 32767;
endcode
runtime noerror

$overflow on
code auto:3586 int-divide[Integer] -128[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3587 int-divide[compile-time] -128[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3588 int-divide[Integer] -1[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3589 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -32768;
endcode
runtime noerror

$overflow on
code auto:3590 int-divide[Integer] -1[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3591 int-divide[compile-time] -1[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3592 int-divide[Integer] -1[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3593 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -32767;
endcode
runtime noerror

$overflow on
code auto:3594 int-divide[Integer] -1[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3595 int-divide[compile-time] -1[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3596 int-divide[Integer] -1[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3597 int-divide[compile-time] -1[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -129;
endcode
runtime noerror

$overflow on
code auto:3598 int-divide[Integer] -1[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3599 int-divide[compile-time] -1[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -129;
endcode
varvalue r 0

$overflow off
code auto:3600 int-divide[Integer] -1[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3601 int-divide[compile-time] -1[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -128;
endcode
runtime noerror

$overflow on
code auto:3602 int-divide[Integer] -1[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3603 int-divide[compile-time] -1[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -128;
endcode
varvalue r 0

$overflow off
code auto:3604 int-divide[Integer] -1[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3605 int-divide[compile-time] -1[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div -1;
endcode
runtime noerror

$overflow on
code auto:3606 int-divide[Integer] -1[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3607 int-divide[compile-time] -1[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div -1;
endcode
varvalue r 1

$overflow off
code auto:3608 int-divide[Integer] -1[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3609 int-divide[compile-time] -1[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 0;
endcode
compile error

$overflow on
code auto:3610 int-divide[Integer] -1[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3611 int-divide[compile-time] -1[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 0;
endcode
compile error

$overflow off
code auto:3612 int-divide[Integer] -1[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3613 int-divide[compile-time] -1[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 1;
endcode
compile error

$overflow on
code auto:3614 int-divide[Integer] -1[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3615 int-divide[compile-time] -1[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 1;
endcode
compile error

$overflow off
code auto:3616 int-divide[Integer] -1[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3617 int-divide[compile-time] -1[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 127;
endcode
runtime noerror

$overflow on
code auto:3618 int-divide[Integer] -1[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3619 int-divide[compile-time] -1[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3620 int-divide[Integer] -1[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3621 int-divide[compile-time] -1[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 128;
endcode
runtime noerror

$overflow on
code auto:3622 int-divide[Integer] -1[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3623 int-divide[compile-time] -1[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3624 int-divide[Integer] -1[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3625 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := -1 div 32767;
endcode
runtime noerror

$overflow on
code auto:3626 int-divide[Integer] -1[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = -1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3627 int-divide[compile-time] -1[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := -1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3628 int-divide[Integer] 0[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3629 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -32768;
endcode
runtime noerror

$overflow on
code auto:3630 int-divide[Integer] 0[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3631 int-divide[compile-time] 0[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3632 int-divide[Integer] 0[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3633 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -32767;
endcode
runtime noerror

$overflow on
code auto:3634 int-divide[Integer] 0[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3635 int-divide[compile-time] 0[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3636 int-divide[Integer] 0[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3637 int-divide[compile-time] 0[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -129;
endcode
runtime noerror

$overflow on
code auto:3638 int-divide[Integer] 0[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3639 int-divide[compile-time] 0[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -129;
endcode
varvalue r 0

$overflow off
code auto:3640 int-divide[Integer] 0[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3641 int-divide[compile-time] 0[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -128;
endcode
runtime noerror

$overflow on
code auto:3642 int-divide[Integer] 0[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3643 int-divide[compile-time] 0[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -128;
endcode
varvalue r 0

$overflow off
code auto:3644 int-divide[Integer] 0[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3645 int-divide[compile-time] 0[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div -1;
endcode
runtime noerror

$overflow on
code auto:3646 int-divide[Integer] 0[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3647 int-divide[compile-time] 0[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div -1;
endcode
varvalue r 0

$overflow off
code auto:3648 int-divide[Integer] 0[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3649 int-divide[compile-time] 0[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:3650 int-divide[Integer] 0[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3651 int-divide[compile-time] 0[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:3652 int-divide[Integer] 0[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3653 int-divide[compile-time] 0[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:3654 int-divide[Integer] 0[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3655 int-divide[compile-time] 0[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:3656 int-divide[Integer] 0[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3657 int-divide[compile-time] 0[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:3658 int-divide[Integer] 0[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3659 int-divide[compile-time] 0[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:3660 int-divide[Integer] 0[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3661 int-divide[compile-time] 0[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:3662 int-divide[Integer] 0[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3663 int-divide[compile-time] 0[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:3664 int-divide[Integer] 0[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3665 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:3666 int-divide[Integer] 0[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 0;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3667 int-divide[compile-time] 0[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3668 int-divide[Integer] 1[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3669 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -32768;
endcode
runtime noerror

$overflow on
code auto:3670 int-divide[Integer] 1[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3671 int-divide[compile-time] 1[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3672 int-divide[Integer] 1[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3673 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -32767;
endcode
runtime noerror

$overflow on
code auto:3674 int-divide[Integer] 1[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3675 int-divide[compile-time] 1[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3676 int-divide[Integer] 1[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3677 int-divide[compile-time] 1[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -129;
endcode
runtime noerror

$overflow on
code auto:3678 int-divide[Integer] 1[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3679 int-divide[compile-time] 1[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -129;
endcode
varvalue r 0

$overflow off
code auto:3680 int-divide[Integer] 1[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3681 int-divide[compile-time] 1[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -128;
endcode
runtime noerror

$overflow on
code auto:3682 int-divide[Integer] 1[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3683 int-divide[compile-time] 1[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -128;
endcode
varvalue r 0

$overflow off
code auto:3684 int-divide[Integer] 1[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3685 int-divide[compile-time] 1[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div -1;
endcode
compile error

$overflow on
code auto:3686 int-divide[Integer] 1[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3687 int-divide[compile-time] 1[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div -1;
endcode
compile error

$overflow off
code auto:3688 int-divide[Integer] 1[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3689 int-divide[compile-time] 1[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:3690 int-divide[Integer] 1[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3691 int-divide[compile-time] 1[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:3692 int-divide[Integer] 1[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3693 int-divide[compile-time] 1[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:3694 int-divide[Integer] 1[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3695 int-divide[compile-time] 1[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:3696 int-divide[Integer] 1[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3697 int-divide[compile-time] 1[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:3698 int-divide[Integer] 1[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3699 int-divide[compile-time] 1[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3700 int-divide[Integer] 1[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3701 int-divide[compile-time] 1[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:3702 int-divide[Integer] 1[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3703 int-divide[compile-time] 1[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3704 int-divide[Integer] 1[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3705 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 32767;
endcode
runtime noerror

$overflow on
code auto:3706 int-divide[Integer] 1[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 1;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3707 int-divide[compile-time] 1[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3708 int-divide[Integer] 127[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3709 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -32768;
endcode
runtime noerror

$overflow on
code auto:3710 int-divide[Integer] 127[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3711 int-divide[compile-time] 127[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3712 int-divide[Integer] 127[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3713 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -32767;
endcode
runtime noerror

$overflow on
code auto:3714 int-divide[Integer] 127[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3715 int-divide[compile-time] 127[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3716 int-divide[Integer] 127[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3717 int-divide[compile-time] 127[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -129;
endcode
runtime noerror

$overflow on
code auto:3718 int-divide[Integer] 127[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3719 int-divide[compile-time] 127[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -129;
endcode
varvalue r 0

$overflow off
code auto:3720 int-divide[Integer] 127[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3721 int-divide[compile-time] 127[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -128;
endcode
runtime noerror

$overflow on
code auto:3722 int-divide[Integer] 127[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3723 int-divide[compile-time] 127[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -128;
endcode
varvalue r 0

$overflow off
code auto:3724 int-divide[Integer] 127[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3725 int-divide[compile-time] 127[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div -1;
endcode
compile error

$overflow on
code auto:3726 int-divide[Integer] 127[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3727 int-divide[compile-time] 127[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div -1;
endcode
compile error

$overflow off
code auto:3728 int-divide[Integer] 127[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3729 int-divide[compile-time] 127[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:3730 int-divide[Integer] 127[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3731 int-divide[compile-time] 127[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:3732 int-divide[Integer] 127[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3733 int-divide[compile-time] 127[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:3734 int-divide[Integer] 127[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 127

code auto:3735 int-divide[compile-time] 127[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:3736 int-divide[Integer] 127[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3737 int-divide[compile-time] 127[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:3738 int-divide[Integer] 127[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3739 int-divide[compile-time] 127[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:3740 int-divide[Integer] 127[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3741 int-divide[compile-time] 127[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:3742 int-divide[Integer] 127[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3743 int-divide[compile-time] 127[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:3744 int-divide[Integer] 127[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3745 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 32767;
endcode
runtime noerror

$overflow on
code auto:3746 int-divide[Integer] 127[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 127;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3747 int-divide[compile-time] 127[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3748 int-divide[Integer] 128[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3749 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div -32768;
endcode
runtime noerror

$overflow on
code auto:3750 int-divide[Integer] 128[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3751 int-divide[compile-time] 128[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3752 int-divide[Integer] 128[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3753 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div -32767;
endcode
runtime noerror

$overflow on
code auto:3754 int-divide[Integer] 128[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3755 int-divide[compile-time] 128[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div -32767;
endcode
varvalue r 0

$overflow off
code auto:3756 int-divide[Integer] 128[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3757 int-divide[compile-time] 128[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div -129;
endcode
runtime noerror

$overflow on
code auto:3758 int-divide[Integer] 128[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3759 int-divide[compile-time] 128[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div -129;
endcode
varvalue r 0

$overflow off
code auto:3760 int-divide[Integer] 128[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3761 int-divide[compile-time] 128[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div -128;
endcode
compile error

$overflow on
code auto:3762 int-divide[Integer] 128[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3763 int-divide[compile-time] 128[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div -128;
endcode
compile error

$overflow off
code auto:3764 int-divide[Integer] 128[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3765 int-divide[compile-time] 128[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div -1;
endcode
compile error

$overflow on
code auto:3766 int-divide[Integer] 128[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3767 int-divide[compile-time] 128[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div -1;
endcode
compile error

$overflow off
code auto:3768 int-divide[Integer] 128[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3769 int-divide[compile-time] 128[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:3770 int-divide[Integer] 128[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3771 int-divide[compile-time] 128[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:3772 int-divide[Integer] 128[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3773 int-divide[compile-time] 128[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 1;
endcode
runtime noerror

$overflow on
code auto:3774 int-divide[Integer] 128[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:3775 int-divide[compile-time] 128[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 1;
endcode
varvalue r 128

$overflow off
code auto:3776 int-divide[Integer] 128[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3777 int-divide[compile-time] 128[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:3778 int-divide[Integer] 128[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3779 int-divide[compile-time] 128[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:3780 int-divide[Integer] 128[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3781 int-divide[compile-time] 128[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:3782 int-divide[Integer] 128[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3783 int-divide[compile-time] 128[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:3784 int-divide[Integer] 128[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3785 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 32767;
endcode
runtime noerror

$overflow on
code auto:3786 int-divide[Integer] 128[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 128;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3787 int-divide[compile-time] 128[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 32767;
endcode
varvalue r 0

$overflow off
code auto:3788 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3789 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div -32768;
endcode
runtime noerror

$overflow on
code auto:3790 int-divide[Integer] 32767[Integer], -32768[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:3791 int-divide[compile-time] 32767[Integer], -32768[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div -32768;
endcode
varvalue r 0

$overflow off
code auto:3792 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3793 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div -32767;
endcode
compile error

$overflow on
code auto:3794 int-divide[Integer] 32767[Integer], -32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -32767;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3795 int-divide[compile-time] 32767[Integer], -32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div -32767;
endcode
compile error

$overflow off
code auto:3796 int-divide[Integer] 32767[Integer], -129[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3797 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div -129;
endcode
compile error

$overflow on
code auto:3798 int-divide[Integer] 32767[Integer], -129[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -129;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3799 int-divide[compile-time] 32767[Integer], -129[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div -129;
endcode
compile error

$overflow off
code auto:3800 int-divide[Integer] 32767[Integer], -128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3801 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div -128;
endcode
compile error

$overflow on
code auto:3802 int-divide[Integer] 32767[Integer], -128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -128;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3803 int-divide[compile-time] 32767[Integer], -128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div -128;
endcode
compile error

$overflow off
code auto:3804 int-divide[Integer] 32767[Integer], -1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3805 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div -1;
endcode
compile error

$overflow on
code auto:3806 int-divide[Integer] 32767[Integer], -1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = -1;
  var  r: Word;
  r := a div b;
endcode
runtime overflow

code auto:3807 int-divide[compile-time] 32767[Integer], -1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div -1;
endcode
compile error

$overflow off
code auto:3808 int-divide[Integer] 32767[Integer], 0[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3809 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:3810 int-divide[Integer] 32767[Integer], 0[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:3811 int-divide[compile-time] 32767[Integer], 0[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:3812 int-divide[Integer] 32767[Integer], 1[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3813 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 1;
endcode
runtime noerror

$overflow on
code auto:3814 int-divide[Integer] 32767[Integer], 1[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 32767

code auto:3815 int-divide[compile-time] 32767[Integer], 1[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 1;
endcode
varvalue r 32767

$overflow off
code auto:3816 int-divide[Integer] 32767[Integer], 127[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3817 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 127;
endcode
runtime noerror

$overflow on
code auto:3818 int-divide[Integer] 32767[Integer], 127[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 258

code auto:3819 int-divide[compile-time] 32767[Integer], 127[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 127;
endcode
varvalue r 258

$overflow off
code auto:3820 int-divide[Integer] 32767[Integer], 128[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3821 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 128;
endcode
runtime noerror

$overflow on
code auto:3822 int-divide[Integer] 32767[Integer], 128[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 255

code auto:3823 int-divide[compile-time] 32767[Integer], 128[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 128;
endcode
varvalue r 255

$overflow off
code auto:3824 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Word] Var $overflow off
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:3825 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:3826 int-divide[Integer] 32767[Integer], 32767[Integer] -> [Word] Var $overflow on
  var  a: Integer = 32767;
  var  b: Integer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:3827 int-divide[compile-time] 32767[Integer], 32767[Integer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:3828 int-divide[Byte] 0[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3829 int-divide[compile-time] 0[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:3830 int-divide[Byte] 0[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3831 int-divide[compile-time] 0[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:3832 int-divide[Byte] 0[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3833 int-divide[compile-time] 0[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:3834 int-divide[Byte] 0[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3835 int-divide[compile-time] 0[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:3836 int-divide[Byte] 0[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3837 int-divide[compile-time] 0[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:3838 int-divide[Byte] 0[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3839 int-divide[compile-time] 0[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:3840 int-divide[Byte] 0[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3841 int-divide[compile-time] 0[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:3842 int-divide[Byte] 0[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3843 int-divide[compile-time] 0[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:3844 int-divide[Byte] 0[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3845 int-divide[compile-time] 0[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:3846 int-divide[Byte] 0[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3847 int-divide[compile-time] 0[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:3848 int-divide[Byte] 1[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3849 int-divide[compile-time] 1[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:3850 int-divide[Byte] 1[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3851 int-divide[compile-time] 1[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:3852 int-divide[Byte] 1[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3853 int-divide[compile-time] 1[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:3854 int-divide[Byte] 1[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3855 int-divide[compile-time] 1[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:3856 int-divide[Byte] 1[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3857 int-divide[compile-time] 1[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:3858 int-divide[Byte] 1[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3859 int-divide[compile-time] 1[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3860 int-divide[Byte] 1[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3861 int-divide[compile-time] 1[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:3862 int-divide[Byte] 1[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3863 int-divide[compile-time] 1[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3864 int-divide[Byte] 1[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3865 int-divide[compile-time] 1[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 1 div 255;
endcode
runtime noerror

$overflow on
code auto:3866 int-divide[Byte] 1[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3867 int-divide[compile-time] 1[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 1 div 255;
endcode
varvalue r 0

$overflow off
code auto:3868 int-divide[Byte] 127[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3869 int-divide[compile-time] 127[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:3870 int-divide[Byte] 127[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3871 int-divide[compile-time] 127[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:3872 int-divide[Byte] 127[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3873 int-divide[compile-time] 127[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:3874 int-divide[Byte] 127[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 127

code auto:3875 int-divide[compile-time] 127[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:3876 int-divide[Byte] 127[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3877 int-divide[compile-time] 127[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:3878 int-divide[Byte] 127[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3879 int-divide[compile-time] 127[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:3880 int-divide[Byte] 127[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3881 int-divide[compile-time] 127[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:3882 int-divide[Byte] 127[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3883 int-divide[compile-time] 127[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:3884 int-divide[Byte] 127[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3885 int-divide[compile-time] 127[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 127 div 255;
endcode
runtime noerror

$overflow on
code auto:3886 int-divide[Byte] 127[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3887 int-divide[compile-time] 127[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 127 div 255;
endcode
varvalue r 0

$overflow off
code auto:3888 int-divide[Byte] 128[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3889 int-divide[compile-time] 128[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:3890 int-divide[Byte] 128[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3891 int-divide[compile-time] 128[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:3892 int-divide[Byte] 128[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3893 int-divide[compile-time] 128[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 1;
endcode
compile error

$overflow on
code auto:3894 int-divide[Byte] 128[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:3895 int-divide[compile-time] 128[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 1;
endcode
compile error

$overflow off
code auto:3896 int-divide[Byte] 128[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3897 int-divide[compile-time] 128[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:3898 int-divide[Byte] 128[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3899 int-divide[compile-time] 128[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:3900 int-divide[Byte] 128[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3901 int-divide[compile-time] 128[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:3902 int-divide[Byte] 128[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3903 int-divide[compile-time] 128[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:3904 int-divide[Byte] 128[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3905 int-divide[compile-time] 128[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 128 div 255;
endcode
runtime noerror

$overflow on
code auto:3906 int-divide[Byte] 128[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:3907 int-divide[compile-time] 128[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 128 div 255;
endcode
varvalue r 0

$overflow off
code auto:3908 int-divide[Byte] 255[Byte], 0[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3909 int-divide[compile-time] 255[Byte], 0[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:3910 int-divide[Byte] 255[Byte], 0[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:3911 int-divide[compile-time] 255[Byte], 0[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:3912 int-divide[Byte] 255[Byte], 1[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3913 int-divide[compile-time] 255[Byte], 1[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 1;
endcode
compile error

$overflow on
code auto:3914 int-divide[Byte] 255[Byte], 1[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:3915 int-divide[compile-time] 255[Byte], 1[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 1;
endcode
compile error

$overflow off
code auto:3916 int-divide[Byte] 255[Byte], 127[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3917 int-divide[compile-time] 255[Byte], 127[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 127;
endcode
runtime noerror

$overflow on
code auto:3918 int-divide[Byte] 255[Byte], 127[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 2

code auto:3919 int-divide[compile-time] 255[Byte], 127[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 127;
endcode
varvalue r 2

$overflow off
code auto:3920 int-divide[Byte] 255[Byte], 128[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3921 int-divide[compile-time] 255[Byte], 128[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 128;
endcode
runtime noerror

$overflow on
code auto:3922 int-divide[Byte] 255[Byte], 128[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3923 int-divide[compile-time] 255[Byte], 128[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 128;
endcode
varvalue r 1

$overflow off
code auto:3924 int-divide[Byte] 255[Byte], 255[Byte] -> [Int8] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:3925 int-divide[compile-time] 255[Byte], 255[Byte] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:3926 int-divide[Byte] 255[Byte], 255[Byte] -> [Int8] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:3927 int-divide[compile-time] 255[Byte], 255[Byte] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:3928 int-divide[Byte] 0[Byte], 0[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3929 int-divide[compile-time] 0[Byte], 0[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:3930 int-divide[Byte] 0[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3931 int-divide[compile-time] 0[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:3932 int-divide[Byte] 0[Byte], 1[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3933 int-divide[compile-time] 0[Byte], 1[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:3934 int-divide[Byte] 0[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3935 int-divide[compile-time] 0[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:3936 int-divide[Byte] 0[Byte], 127[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3937 int-divide[compile-time] 0[Byte], 127[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:3938 int-divide[Byte] 0[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3939 int-divide[compile-time] 0[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:3940 int-divide[Byte] 0[Byte], 128[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3941 int-divide[compile-time] 0[Byte], 128[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:3942 int-divide[Byte] 0[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3943 int-divide[compile-time] 0[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:3944 int-divide[Byte] 0[Byte], 255[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3945 int-divide[compile-time] 0[Byte], 255[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:3946 int-divide[Byte] 0[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3947 int-divide[compile-time] 0[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:3948 int-divide[Byte] 1[Byte], 0[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3949 int-divide[compile-time] 1[Byte], 0[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:3950 int-divide[Byte] 1[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3951 int-divide[compile-time] 1[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:3952 int-divide[Byte] 1[Byte], 1[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3953 int-divide[compile-time] 1[Byte], 1[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:3954 int-divide[Byte] 1[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3955 int-divide[compile-time] 1[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:3956 int-divide[Byte] 1[Byte], 127[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3957 int-divide[compile-time] 1[Byte], 127[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:3958 int-divide[Byte] 1[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3959 int-divide[compile-time] 1[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:3960 int-divide[Byte] 1[Byte], 128[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3961 int-divide[compile-time] 1[Byte], 128[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:3962 int-divide[Byte] 1[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3963 int-divide[compile-time] 1[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:3964 int-divide[Byte] 1[Byte], 255[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3965 int-divide[compile-time] 1[Byte], 255[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 1 div 255;
endcode
runtime noerror

$overflow on
code auto:3966 int-divide[Byte] 1[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3967 int-divide[compile-time] 1[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 1 div 255;
endcode
varvalue r 0

$overflow off
code auto:3968 int-divide[Byte] 127[Byte], 0[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3969 int-divide[compile-time] 127[Byte], 0[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:3970 int-divide[Byte] 127[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3971 int-divide[compile-time] 127[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:3972 int-divide[Byte] 127[Byte], 1[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3973 int-divide[compile-time] 127[Byte], 1[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:3974 int-divide[Byte] 127[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 127

code auto:3975 int-divide[compile-time] 127[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:3976 int-divide[Byte] 127[Byte], 127[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3977 int-divide[compile-time] 127[Byte], 127[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:3978 int-divide[Byte] 127[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3979 int-divide[compile-time] 127[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:3980 int-divide[Byte] 127[Byte], 128[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3981 int-divide[compile-time] 127[Byte], 128[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:3982 int-divide[Byte] 127[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3983 int-divide[compile-time] 127[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:3984 int-divide[Byte] 127[Byte], 255[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3985 int-divide[compile-time] 127[Byte], 255[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 127 div 255;
endcode
runtime noerror

$overflow on
code auto:3986 int-divide[Byte] 127[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:3987 int-divide[compile-time] 127[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 127 div 255;
endcode
varvalue r 0

$overflow off
code auto:3988 int-divide[Byte] 128[Byte], 0[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3989 int-divide[compile-time] 128[Byte], 0[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:3990 int-divide[Byte] 128[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:3991 int-divide[compile-time] 128[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:3992 int-divide[Byte] 128[Byte], 1[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3993 int-divide[compile-time] 128[Byte], 1[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 128 div 1;
endcode
runtime noerror

$overflow on
code auto:3994 int-divide[Byte] 128[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:3995 int-divide[compile-time] 128[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 1;
endcode
varvalue r 128

$overflow off
code auto:3996 int-divide[Byte] 128[Byte], 127[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:3997 int-divide[compile-time] 128[Byte], 127[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:3998 int-divide[Byte] 128[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:3999 int-divide[compile-time] 128[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:4000 int-divide[Byte] 128[Byte], 128[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4001 int-divide[compile-time] 128[Byte], 128[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:4002 int-divide[Byte] 128[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4003 int-divide[compile-time] 128[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:4004 int-divide[Byte] 128[Byte], 255[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4005 int-divide[compile-time] 128[Byte], 255[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 128 div 255;
endcode
runtime noerror

$overflow on
code auto:4006 int-divide[Byte] 128[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4007 int-divide[compile-time] 128[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 128 div 255;
endcode
varvalue r 0

$overflow off
code auto:4008 int-divide[Byte] 255[Byte], 0[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4009 int-divide[compile-time] 255[Byte], 0[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4010 int-divide[Byte] 255[Byte], 0[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4011 int-divide[compile-time] 255[Byte], 0[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4012 int-divide[Byte] 255[Byte], 1[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4013 int-divide[compile-time] 255[Byte], 1[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 1;
endcode
runtime noerror

$overflow on
code auto:4014 int-divide[Byte] 255[Byte], 1[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 255

code auto:4015 int-divide[compile-time] 255[Byte], 1[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 1;
endcode
varvalue r 255

$overflow off
code auto:4016 int-divide[Byte] 255[Byte], 127[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4017 int-divide[compile-time] 255[Byte], 127[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 127;
endcode
runtime noerror

$overflow on
code auto:4018 int-divide[Byte] 255[Byte], 127[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:4019 int-divide[compile-time] 255[Byte], 127[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 127;
endcode
varvalue r 2

$overflow off
code auto:4020 int-divide[Byte] 255[Byte], 128[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4021 int-divide[compile-time] 255[Byte], 128[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 128;
endcode
runtime noerror

$overflow on
code auto:4022 int-divide[Byte] 255[Byte], 128[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4023 int-divide[compile-time] 255[Byte], 128[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 128;
endcode
varvalue r 1

$overflow off
code auto:4024 int-divide[Byte] 255[Byte], 255[Byte] -> [Integer] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4025 int-divide[compile-time] 255[Byte], 255[Byte] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4026 int-divide[Byte] 255[Byte], 255[Byte] -> [Integer] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4027 int-divide[compile-time] 255[Byte], 255[Byte] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:4028 int-divide[Byte] 0[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4029 int-divide[compile-time] 0[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4030 int-divide[Byte] 0[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4031 int-divide[compile-time] 0[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 1;
endcode
varvalue r 0

$overflow on
code auto:4032 int-divide[Byte] 0[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4033 int-divide[compile-time] 0[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 127;
endcode
varvalue r 0

$overflow on
code auto:4034 int-divide[Byte] 0[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4035 int-divide[compile-time] 0[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 128;
endcode
varvalue r 0

$overflow on
code auto:4036 int-divide[Byte] 0[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4037 int-divide[compile-time] 0[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:4038 int-divide[Byte] 1[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4039 int-divide[compile-time] 1[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:4040 int-divide[Byte] 1[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4041 int-divide[compile-time] 1[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 1;
endcode
varvalue r 1

$overflow on
code auto:4042 int-divide[Byte] 1[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4043 int-divide[compile-time] 1[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 127;
endcode
varvalue r 0

$overflow on
code auto:4044 int-divide[Byte] 1[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4045 int-divide[compile-time] 1[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 128;
endcode
varvalue r 0

$overflow on
code auto:4046 int-divide[Byte] 1[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4047 int-divide[compile-time] 1[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 1 div 255;
endcode
varvalue r 0

$overflow on
code auto:4048 int-divide[Byte] 127[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4049 int-divide[compile-time] 127[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:4050 int-divide[Byte] 127[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 127

code auto:4051 int-divide[compile-time] 127[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 1;
endcode
varvalue r 127

$overflow on
code auto:4052 int-divide[Byte] 127[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4053 int-divide[compile-time] 127[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 127;
endcode
varvalue r 1

$overflow on
code auto:4054 int-divide[Byte] 127[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4055 int-divide[compile-time] 127[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 128;
endcode
varvalue r 0

$overflow on
code auto:4056 int-divide[Byte] 127[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4057 int-divide[compile-time] 127[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 127 div 255;
endcode
varvalue r 0

$overflow on
code auto:4058 int-divide[Byte] 128[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4059 int-divide[compile-time] 128[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:4060 int-divide[Byte] 128[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:4061 int-divide[compile-time] 128[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 1;
endcode
varvalue r 128

$overflow on
code auto:4062 int-divide[Byte] 128[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4063 int-divide[compile-time] 128[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 127;
endcode
varvalue r 1

$overflow on
code auto:4064 int-divide[Byte] 128[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4065 int-divide[compile-time] 128[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 128;
endcode
varvalue r 1

$overflow on
code auto:4066 int-divide[Byte] 128[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4067 int-divide[compile-time] 128[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 128 div 255;
endcode
varvalue r 0

$overflow on
code auto:4068 int-divide[Byte] 255[Byte], 0[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4069 int-divide[compile-time] 255[Byte], 0[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4070 int-divide[Byte] 255[Byte], 1[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 255

code auto:4071 int-divide[compile-time] 255[Byte], 1[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 1;
endcode
varvalue r 255

$overflow on
code auto:4072 int-divide[Byte] 255[Byte], 127[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 2

code auto:4073 int-divide[compile-time] 255[Byte], 127[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 127;
endcode
varvalue r 2

$overflow on
code auto:4074 int-divide[Byte] 255[Byte], 128[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4075 int-divide[compile-time] 255[Byte], 128[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 128;
endcode
varvalue r 1

$overflow on
code auto:4076 int-divide[Byte] 255[Byte], 255[Byte] -> [Byte] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4077 int-divide[compile-time] 255[Byte], 255[Byte] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4078 int-divide[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4079 int-divide[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4080 int-divide[Byte] 0[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4081 int-divide[compile-time] 0[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4082 int-divide[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4083 int-divide[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 1;
endcode
runtime noerror

$overflow on
code auto:4084 int-divide[Byte] 0[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4085 int-divide[compile-time] 0[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 1;
endcode
varvalue r 0

$overflow off
code auto:4086 int-divide[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4087 int-divide[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 127;
endcode
runtime noerror

$overflow on
code auto:4088 int-divide[Byte] 0[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4089 int-divide[compile-time] 0[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 127;
endcode
varvalue r 0

$overflow off
code auto:4090 int-divide[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4091 int-divide[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 128;
endcode
runtime noerror

$overflow on
code auto:4092 int-divide[Byte] 0[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4093 int-divide[compile-time] 0[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 128;
endcode
varvalue r 0

$overflow off
code auto:4094 int-divide[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4095 int-divide[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4096 int-divide[Byte] 0[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 0;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4097 int-divide[compile-time] 0[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4098 int-divide[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4099 int-divide[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow on
code auto:4100 int-divide[Byte] 1[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4101 int-divide[compile-time] 1[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 0;
endcode
compile error

$overflow off
code auto:4102 int-divide[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4103 int-divide[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 1;
endcode
runtime noerror

$overflow on
code auto:4104 int-divide[Byte] 1[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4105 int-divide[compile-time] 1[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 1;
endcode
varvalue r 1

$overflow off
code auto:4106 int-divide[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4107 int-divide[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 127;
endcode
runtime noerror

$overflow on
code auto:4108 int-divide[Byte] 1[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4109 int-divide[compile-time] 1[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 127;
endcode
varvalue r 0

$overflow off
code auto:4110 int-divide[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4111 int-divide[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 128;
endcode
runtime noerror

$overflow on
code auto:4112 int-divide[Byte] 1[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4113 int-divide[compile-time] 1[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 128;
endcode
varvalue r 0

$overflow off
code auto:4114 int-divide[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4115 int-divide[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 1 div 255;
endcode
runtime noerror

$overflow on
code auto:4116 int-divide[Byte] 1[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 1;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4117 int-divide[compile-time] 1[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 1 div 255;
endcode
varvalue r 0

$overflow off
code auto:4118 int-divide[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4119 int-divide[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow on
code auto:4120 int-divide[Byte] 127[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4121 int-divide[compile-time] 127[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 0;
endcode
compile error

$overflow off
code auto:4122 int-divide[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4123 int-divide[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 1;
endcode
runtime noerror

$overflow on
code auto:4124 int-divide[Byte] 127[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 127

code auto:4125 int-divide[compile-time] 127[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 1;
endcode
varvalue r 127

$overflow off
code auto:4126 int-divide[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4127 int-divide[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 127;
endcode
runtime noerror

$overflow on
code auto:4128 int-divide[Byte] 127[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4129 int-divide[compile-time] 127[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 127;
endcode
varvalue r 1

$overflow off
code auto:4130 int-divide[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4131 int-divide[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 128;
endcode
runtime noerror

$overflow on
code auto:4132 int-divide[Byte] 127[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4133 int-divide[compile-time] 127[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 128;
endcode
varvalue r 0

$overflow off
code auto:4134 int-divide[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4135 int-divide[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 127 div 255;
endcode
runtime noerror

$overflow on
code auto:4136 int-divide[Byte] 127[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 127;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4137 int-divide[compile-time] 127[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 127 div 255;
endcode
varvalue r 0

$overflow off
code auto:4138 int-divide[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4139 int-divide[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 0;
endcode
compile error

$overflow on
code auto:4140 int-divide[Byte] 128[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4141 int-divide[compile-time] 128[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 0;
endcode
compile error

$overflow off
code auto:4142 int-divide[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4143 int-divide[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 1;
endcode
runtime noerror

$overflow on
code auto:4144 int-divide[Byte] 128[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:4145 int-divide[compile-time] 128[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 1;
endcode
varvalue r 128

$overflow off
code auto:4146 int-divide[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4147 int-divide[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 127;
endcode
runtime noerror

$overflow on
code auto:4148 int-divide[Byte] 128[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4149 int-divide[compile-time] 128[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 127;
endcode
varvalue r 1

$overflow off
code auto:4150 int-divide[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4151 int-divide[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 128;
endcode
runtime noerror

$overflow on
code auto:4152 int-divide[Byte] 128[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4153 int-divide[compile-time] 128[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 128;
endcode
varvalue r 1

$overflow off
code auto:4154 int-divide[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4155 int-divide[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 128 div 255;
endcode
runtime noerror

$overflow on
code auto:4156 int-divide[Byte] 128[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 128;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4157 int-divide[compile-time] 128[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 128 div 255;
endcode
varvalue r 0

$overflow off
code auto:4158 int-divide[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4159 int-divide[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4160 int-divide[Byte] 255[Byte], 0[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4161 int-divide[compile-time] 255[Byte], 0[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4162 int-divide[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4163 int-divide[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 1;
endcode
runtime noerror

$overflow on
code auto:4164 int-divide[Byte] 255[Byte], 1[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 1;
  var  r: Word;
  r := a div b;
endcode
varvalue r 255

code auto:4165 int-divide[compile-time] 255[Byte], 1[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 1;
endcode
varvalue r 255

$overflow off
code auto:4166 int-divide[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4167 int-divide[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 127;
endcode
runtime noerror

$overflow on
code auto:4168 int-divide[Byte] 255[Byte], 127[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 127;
  var  r: Word;
  r := a div b;
endcode
varvalue r 2

code auto:4169 int-divide[compile-time] 255[Byte], 127[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 127;
endcode
varvalue r 2

$overflow off
code auto:4170 int-divide[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4171 int-divide[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 128;
endcode
runtime noerror

$overflow on
code auto:4172 int-divide[Byte] 255[Byte], 128[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 128;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4173 int-divide[compile-time] 255[Byte], 128[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 128;
endcode
varvalue r 1

$overflow off
code auto:4174 int-divide[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow off
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4175 int-divide[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4176 int-divide[Byte] 255[Byte], 255[Byte] -> [Word] Var $overflow on
  var  a: Byte = 255;
  var  b: Byte = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4177 int-divide[compile-time] 255[Byte], 255[Byte] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4178 int-divide[Word] 0[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4179 int-divide[compile-time] 0[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4180 int-divide[Word] 0[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4181 int-divide[compile-time] 0[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4182 int-divide[Word] 0[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4183 int-divide[compile-time] 0[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4184 int-divide[Word] 0[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4185 int-divide[compile-time] 0[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4186 int-divide[Word] 0[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4187 int-divide[compile-time] 0[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4188 int-divide[Word] 0[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4189 int-divide[compile-time] 0[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4190 int-divide[Word] 0[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4191 int-divide[compile-time] 0[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4192 int-divide[Word] 0[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4193 int-divide[compile-time] 0[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4194 int-divide[Word] 0[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4195 int-divide[compile-time] 0[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4196 int-divide[Word] 0[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4197 int-divide[compile-time] 0[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4198 int-divide[Word] 255[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4199 int-divide[compile-time] 255[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4200 int-divide[Word] 255[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4201 int-divide[compile-time] 255[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4202 int-divide[Word] 255[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4203 int-divide[compile-time] 255[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4204 int-divide[Word] 255[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4205 int-divide[compile-time] 255[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4206 int-divide[Word] 255[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4207 int-divide[compile-time] 255[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4208 int-divide[Word] 255[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4209 int-divide[compile-time] 255[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4210 int-divide[Word] 255[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4211 int-divide[compile-time] 255[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4212 int-divide[Word] 255[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4213 int-divide[compile-time] 255[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4214 int-divide[Word] 255[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4215 int-divide[compile-time] 255[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4216 int-divide[Word] 255[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4217 int-divide[compile-time] 255[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4218 int-divide[Word] 32767[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4219 int-divide[compile-time] 32767[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4220 int-divide[Word] 32767[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4221 int-divide[compile-time] 32767[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4222 int-divide[Word] 32767[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4223 int-divide[compile-time] 32767[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 255;
endcode
compile error

$overflow on
code auto:4224 int-divide[Word] 32767[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4225 int-divide[compile-time] 32767[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 255;
endcode
compile error

$overflow off
code auto:4226 int-divide[Word] 32767[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4227 int-divide[compile-time] 32767[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4228 int-divide[Word] 32767[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4229 int-divide[compile-time] 32767[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4230 int-divide[Word] 32767[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4231 int-divide[compile-time] 32767[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4232 int-divide[Word] 32767[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4233 int-divide[compile-time] 32767[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4234 int-divide[Word] 32767[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4235 int-divide[compile-time] 32767[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4236 int-divide[Word] 32767[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4237 int-divide[compile-time] 32767[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4238 int-divide[Word] 32768[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4239 int-divide[compile-time] 32768[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4240 int-divide[Word] 32768[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4241 int-divide[compile-time] 32768[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4242 int-divide[Word] 32768[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4243 int-divide[compile-time] 32768[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 255;
endcode
compile error

$overflow on
code auto:4244 int-divide[Word] 32768[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4245 int-divide[compile-time] 32768[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 255;
endcode
compile error

$overflow off
code auto:4246 int-divide[Word] 32768[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4247 int-divide[compile-time] 32768[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4248 int-divide[Word] 32768[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4249 int-divide[compile-time] 32768[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4250 int-divide[Word] 32768[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4251 int-divide[compile-time] 32768[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4252 int-divide[Word] 32768[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4253 int-divide[compile-time] 32768[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4254 int-divide[Word] 32768[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4255 int-divide[compile-time] 32768[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4256 int-divide[Word] 32768[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4257 int-divide[compile-time] 32768[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4258 int-divide[Word] 65535[Word], 0[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4259 int-divide[compile-time] 65535[Word], 0[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4260 int-divide[Word] 65535[Word], 0[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4261 int-divide[compile-time] 65535[Word], 0[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4262 int-divide[Word] 65535[Word], 255[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4263 int-divide[compile-time] 65535[Word], 255[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 255;
endcode
compile error

$overflow on
code auto:4264 int-divide[Word] 65535[Word], 255[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4265 int-divide[compile-time] 65535[Word], 255[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 255;
endcode
compile error

$overflow off
code auto:4266 int-divide[Word] 65535[Word], 32767[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4267 int-divide[compile-time] 65535[Word], 32767[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4268 int-divide[Word] 65535[Word], 32767[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 2

code auto:4269 int-divide[compile-time] 65535[Word], 32767[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4270 int-divide[Word] 65535[Word], 32768[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4271 int-divide[compile-time] 65535[Word], 32768[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4272 int-divide[Word] 65535[Word], 32768[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4273 int-divide[compile-time] 65535[Word], 32768[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4274 int-divide[Word] 65535[Word], 65535[Word] -> [Int8] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4275 int-divide[compile-time] 65535[Word], 65535[Word] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4276 int-divide[Word] 65535[Word], 65535[Word] -> [Int8] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4277 int-divide[compile-time] 65535[Word], 65535[Word] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4278 int-divide[Word] 0[Word], 0[Word] -> [Integer] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4279 int-divide[compile-time] 0[Word], 0[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4280 int-divide[Word] 0[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4281 int-divide[compile-time] 0[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4282 int-divide[Word] 0[Word], 255[Word] -> [Integer] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4283 int-divide[compile-time] 0[Word], 255[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4284 int-divide[Word] 0[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4285 int-divide[compile-time] 0[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4286 int-divide[Word] 0[Word], 32767[Word] -> [Integer] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4287 int-divide[compile-time] 0[Word], 32767[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4288 int-divide[Word] 0[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4289 int-divide[compile-time] 0[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4290 int-divide[Word] 0[Word], 32768[Word] -> [Integer] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4291 int-divide[compile-time] 0[Word], 32768[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4292 int-divide[Word] 0[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4293 int-divide[compile-time] 0[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4294 int-divide[Word] 0[Word], 65535[Word] -> [Integer] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4295 int-divide[compile-time] 0[Word], 65535[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4296 int-divide[Word] 0[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4297 int-divide[compile-time] 0[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4298 int-divide[Word] 255[Word], 0[Word] -> [Integer] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4299 int-divide[compile-time] 255[Word], 0[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4300 int-divide[Word] 255[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4301 int-divide[compile-time] 255[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4302 int-divide[Word] 255[Word], 255[Word] -> [Integer] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4303 int-divide[compile-time] 255[Word], 255[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4304 int-divide[Word] 255[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4305 int-divide[compile-time] 255[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4306 int-divide[Word] 255[Word], 32767[Word] -> [Integer] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4307 int-divide[compile-time] 255[Word], 32767[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4308 int-divide[Word] 255[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4309 int-divide[compile-time] 255[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4310 int-divide[Word] 255[Word], 32768[Word] -> [Integer] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4311 int-divide[compile-time] 255[Word], 32768[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4312 int-divide[Word] 255[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4313 int-divide[compile-time] 255[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4314 int-divide[Word] 255[Word], 65535[Word] -> [Integer] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4315 int-divide[compile-time] 255[Word], 65535[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4316 int-divide[Word] 255[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4317 int-divide[compile-time] 255[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4318 int-divide[Word] 32767[Word], 0[Word] -> [Integer] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4319 int-divide[compile-time] 32767[Word], 0[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4320 int-divide[Word] 32767[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4321 int-divide[compile-time] 32767[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4322 int-divide[Word] 32767[Word], 255[Word] -> [Integer] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4323 int-divide[compile-time] 32767[Word], 255[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 255;
endcode
runtime noerror

$overflow on
code auto:4324 int-divide[Word] 32767[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:4325 int-divide[compile-time] 32767[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow off
code auto:4326 int-divide[Word] 32767[Word], 32767[Word] -> [Integer] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4327 int-divide[compile-time] 32767[Word], 32767[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4328 int-divide[Word] 32767[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4329 int-divide[compile-time] 32767[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4330 int-divide[Word] 32767[Word], 32768[Word] -> [Integer] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4331 int-divide[compile-time] 32767[Word], 32768[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4332 int-divide[Word] 32767[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4333 int-divide[compile-time] 32767[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4334 int-divide[Word] 32767[Word], 65535[Word] -> [Integer] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4335 int-divide[compile-time] 32767[Word], 65535[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4336 int-divide[Word] 32767[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4337 int-divide[compile-time] 32767[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4338 int-divide[Word] 32768[Word], 0[Word] -> [Integer] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4339 int-divide[compile-time] 32768[Word], 0[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4340 int-divide[Word] 32768[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4341 int-divide[compile-time] 32768[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4342 int-divide[Word] 32768[Word], 255[Word] -> [Integer] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4343 int-divide[compile-time] 32768[Word], 255[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 255;
endcode
runtime noerror

$overflow on
code auto:4344 int-divide[Word] 32768[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:4345 int-divide[compile-time] 32768[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow off
code auto:4346 int-divide[Word] 32768[Word], 32767[Word] -> [Integer] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4347 int-divide[compile-time] 32768[Word], 32767[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4348 int-divide[Word] 32768[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4349 int-divide[compile-time] 32768[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4350 int-divide[Word] 32768[Word], 32768[Word] -> [Integer] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4351 int-divide[compile-time] 32768[Word], 32768[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4352 int-divide[Word] 32768[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4353 int-divide[compile-time] 32768[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4354 int-divide[Word] 32768[Word], 65535[Word] -> [Integer] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4355 int-divide[compile-time] 32768[Word], 65535[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4356 int-divide[Word] 32768[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4357 int-divide[compile-time] 32768[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4358 int-divide[Word] 65535[Word], 0[Word] -> [Integer] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4359 int-divide[compile-time] 65535[Word], 0[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4360 int-divide[Word] 65535[Word], 0[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4361 int-divide[compile-time] 65535[Word], 0[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4362 int-divide[Word] 65535[Word], 255[Word] -> [Integer] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4363 int-divide[compile-time] 65535[Word], 255[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 255;
endcode
runtime noerror

$overflow on
code auto:4364 int-divide[Word] 65535[Word], 255[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 257

code auto:4365 int-divide[compile-time] 65535[Word], 255[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow off
code auto:4366 int-divide[Word] 65535[Word], 32767[Word] -> [Integer] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4367 int-divide[compile-time] 65535[Word], 32767[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4368 int-divide[Word] 65535[Word], 32767[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:4369 int-divide[compile-time] 65535[Word], 32767[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4370 int-divide[Word] 65535[Word], 32768[Word] -> [Integer] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4371 int-divide[compile-time] 65535[Word], 32768[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4372 int-divide[Word] 65535[Word], 32768[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4373 int-divide[compile-time] 65535[Word], 32768[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4374 int-divide[Word] 65535[Word], 65535[Word] -> [Integer] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4375 int-divide[compile-time] 65535[Word], 65535[Word] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4376 int-divide[Word] 65535[Word], 65535[Word] -> [Integer] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4377 int-divide[compile-time] 65535[Word], 65535[Word] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4378 int-divide[Word] 0[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4379 int-divide[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4380 int-divide[Word] 0[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4381 int-divide[compile-time] 0[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4382 int-divide[Word] 0[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4383 int-divide[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4384 int-divide[Word] 0[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4385 int-divide[compile-time] 0[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4386 int-divide[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4387 int-divide[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4388 int-divide[Word] 0[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4389 int-divide[compile-time] 0[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4390 int-divide[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4391 int-divide[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4392 int-divide[Word] 0[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4393 int-divide[compile-time] 0[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4394 int-divide[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4395 int-divide[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4396 int-divide[Word] 0[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4397 int-divide[compile-time] 0[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4398 int-divide[Word] 255[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4399 int-divide[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4400 int-divide[Word] 255[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4401 int-divide[compile-time] 255[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4402 int-divide[Word] 255[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4403 int-divide[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4404 int-divide[Word] 255[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4405 int-divide[compile-time] 255[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4406 int-divide[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4407 int-divide[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4408 int-divide[Word] 255[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4409 int-divide[compile-time] 255[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4410 int-divide[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4411 int-divide[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4412 int-divide[Word] 255[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4413 int-divide[compile-time] 255[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4414 int-divide[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4415 int-divide[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4416 int-divide[Word] 255[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4417 int-divide[compile-time] 255[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4418 int-divide[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4419 int-divide[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4420 int-divide[Word] 32767[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4421 int-divide[compile-time] 32767[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4422 int-divide[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4423 int-divide[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 255;
endcode
runtime noerror

$overflow on
code auto:4424 int-divide[Word] 32767[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:4425 int-divide[compile-time] 32767[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow off
code auto:4426 int-divide[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4427 int-divide[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4428 int-divide[Word] 32767[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4429 int-divide[compile-time] 32767[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4430 int-divide[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4431 int-divide[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4432 int-divide[Word] 32767[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4433 int-divide[compile-time] 32767[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4434 int-divide[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4435 int-divide[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4436 int-divide[Word] 32767[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4437 int-divide[compile-time] 32767[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4438 int-divide[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4439 int-divide[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4440 int-divide[Word] 32768[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4441 int-divide[compile-time] 32768[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4442 int-divide[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4443 int-divide[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 255;
endcode
runtime noerror

$overflow on
code auto:4444 int-divide[Word] 32768[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:4445 int-divide[compile-time] 32768[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow off
code auto:4446 int-divide[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4447 int-divide[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4448 int-divide[Word] 32768[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4449 int-divide[compile-time] 32768[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4450 int-divide[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4451 int-divide[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4452 int-divide[Word] 32768[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4453 int-divide[compile-time] 32768[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4454 int-divide[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4455 int-divide[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4456 int-divide[Word] 32768[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4457 int-divide[compile-time] 32768[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4458 int-divide[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4459 int-divide[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4460 int-divide[Word] 65535[Word], 0[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4461 int-divide[compile-time] 65535[Word], 0[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4462 int-divide[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4463 int-divide[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 255;
endcode
compile error

$overflow on
code auto:4464 int-divide[Word] 65535[Word], 255[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:4465 int-divide[compile-time] 65535[Word], 255[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 255;
endcode
compile error

$overflow off
code auto:4466 int-divide[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4467 int-divide[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4468 int-divide[Word] 65535[Word], 32767[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 2

code auto:4469 int-divide[compile-time] 65535[Word], 32767[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4470 int-divide[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4471 int-divide[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4472 int-divide[Word] 65535[Word], 32768[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4473 int-divide[compile-time] 65535[Word], 32768[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4474 int-divide[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow off
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4475 int-divide[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4476 int-divide[Word] 65535[Word], 65535[Word] -> [Byte] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4477 int-divide[compile-time] 65535[Word], 65535[Word] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow on
code auto:4478 int-divide[Word] 0[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4479 int-divide[compile-time] 0[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4480 int-divide[Word] 0[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4481 int-divide[compile-time] 0[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow on
code auto:4482 int-divide[Word] 0[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4483 int-divide[compile-time] 0[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow on
code auto:4484 int-divide[Word] 0[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4485 int-divide[compile-time] 0[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow on
code auto:4486 int-divide[Word] 0[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 0;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4487 int-divide[compile-time] 0[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow on
code auto:4488 int-divide[Word] 255[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4489 int-divide[compile-time] 255[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4490 int-divide[Word] 255[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4491 int-divide[compile-time] 255[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow on
code auto:4492 int-divide[Word] 255[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4493 int-divide[compile-time] 255[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow on
code auto:4494 int-divide[Word] 255[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4495 int-divide[compile-time] 255[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow on
code auto:4496 int-divide[Word] 255[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 255;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4497 int-divide[compile-time] 255[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow on
code auto:4498 int-divide[Word] 32767[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4499 int-divide[compile-time] 32767[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4500 int-divide[Word] 32767[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:4501 int-divide[compile-time] 32767[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow on
code auto:4502 int-divide[Word] 32767[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4503 int-divide[compile-time] 32767[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow on
code auto:4504 int-divide[Word] 32767[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4505 int-divide[compile-time] 32767[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow on
code auto:4506 int-divide[Word] 32767[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32767;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4507 int-divide[compile-time] 32767[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow on
code auto:4508 int-divide[Word] 32768[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4509 int-divide[compile-time] 32768[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4510 int-divide[Word] 32768[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:4511 int-divide[compile-time] 32768[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow on
code auto:4512 int-divide[Word] 32768[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4513 int-divide[compile-time] 32768[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow on
code auto:4514 int-divide[Word] 32768[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4515 int-divide[compile-time] 32768[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow on
code auto:4516 int-divide[Word] 32768[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 32768;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4517 int-divide[compile-time] 32768[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow on
code auto:4518 int-divide[Word] 65535[Word], 0[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4519 int-divide[compile-time] 65535[Word], 0[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4520 int-divide[Word] 65535[Word], 255[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 257

code auto:4521 int-divide[compile-time] 65535[Word], 255[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow on
code auto:4522 int-divide[Word] 65535[Word], 32767[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 2

code auto:4523 int-divide[compile-time] 65535[Word], 32767[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow on
code auto:4524 int-divide[Word] 65535[Word], 32768[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4525 int-divide[compile-time] 65535[Word], 32768[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow on
code auto:4526 int-divide[Word] 65535[Word], 65535[Word] -> [Word] Var $overflow on
  var  a: Word = 65535;
  var  b: Word = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4527 int-divide[compile-time] 65535[Word], 65535[Word] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4528 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4529 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4530 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4531 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4532 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4533 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4534 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4535 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4536 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4537 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4538 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4539 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4540 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4541 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4542 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4543 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4544 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4545 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4546 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4547 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4548 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4549 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4550 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4551 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4552 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4553 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4554 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4555 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4556 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4557 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4558 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4559 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4560 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4561 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4562 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4563 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4564 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4565 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4566 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4567 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4568 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4569 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4570 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4571 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4572 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4573 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 255;
endcode
compile error

$overflow on
code auto:4574 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4575 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 255;
endcode
compile error

$overflow off
code auto:4576 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4577 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4578 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4579 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4580 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4581 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4582 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4583 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4584 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4585 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4586 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4587 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4588 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4589 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4590 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4591 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4592 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4593 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 255;
endcode
compile error

$overflow on
code auto:4594 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4595 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 255;
endcode
compile error

$overflow off
code auto:4596 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4597 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4598 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4599 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4600 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4601 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4602 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4603 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4604 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4605 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4606 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 0

code auto:4607 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4608 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4609 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4610 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Int8;
  r := a div b;
endcode
runtime dividebyzero

code auto:4611 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4612 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4613 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 255;
endcode
compile error

$overflow on
code auto:4614 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Int8;
  r := a div b;
endcode
runtime overflow

code auto:4615 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 255;
endcode
compile error

$overflow off
code auto:4616 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4617 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4618 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 2

code auto:4619 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4620 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4621 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4622 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4623 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4624 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Int8] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
runtime noerror

code auto:4625 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow off
  var  r: Int8;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4626 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Int8] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Int8;
  r := a div b;
endcode
varvalue r 1

code auto:4627 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Int8] Both immediate $overflow on
  var  r: Int8;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4628 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4629 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4630 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4631 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4632 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4633 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4634 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4635 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4636 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4637 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4638 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4639 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4640 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4641 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4642 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4643 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4644 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4645 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4646 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4647 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4648 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4649 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4650 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4651 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4652 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4653 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4654 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4655 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4656 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4657 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4658 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4659 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4660 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4661 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4662 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4663 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4664 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4665 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4666 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4667 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4668 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4669 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4670 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4671 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4672 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4673 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 255;
endcode
runtime noerror

$overflow on
code auto:4674 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:4675 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow off
code auto:4676 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4677 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4678 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4679 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4680 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4681 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4682 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4683 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4684 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4685 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4686 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4687 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4688 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4689 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4690 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4691 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4692 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4693 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 255;
endcode
runtime noerror

$overflow on
code auto:4694 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 128

code auto:4695 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow off
code auto:4696 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4697 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4698 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4699 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4700 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4701 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4702 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4703 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4704 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4705 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4706 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 0

code auto:4707 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4708 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4709 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4710 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Integer;
  r := a div b;
endcode
runtime dividebyzero

code auto:4711 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4712 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4713 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 255;
endcode
runtime noerror

$overflow on
code auto:4714 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 257

code auto:4715 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow off
code auto:4716 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4717 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4718 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 2

code auto:4719 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4720 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4721 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4722 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4723 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4724 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Integer] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
runtime noerror

code auto:4725 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow off
  var  r: Integer;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4726 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Integer] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Integer;
  r := a div b;
endcode
varvalue r 1

code auto:4727 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Integer] Both immediate $overflow on
  var  r: Integer;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4728 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4729 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4730 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4731 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4732 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4733 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4734 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4735 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4736 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4737 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4738 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4739 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4740 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4741 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4742 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4743 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4744 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4745 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4746 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4747 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4748 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4749 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4750 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4751 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4752 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4753 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4754 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4755 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4756 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4757 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4758 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4759 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4760 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4761 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4762 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4763 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4764 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4765 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4766 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4767 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4768 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4769 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4770 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4771 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4772 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4773 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 255;
endcode
runtime noerror

$overflow on
code auto:4774 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:4775 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow off
code auto:4776 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4777 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4778 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4779 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4780 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4781 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4782 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4783 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4784 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4785 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4786 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4787 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4788 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4789 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4790 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4791 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4792 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4793 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 255;
endcode
runtime noerror

$overflow on
code auto:4794 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 128

code auto:4795 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow off
code auto:4796 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4797 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4798 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4799 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4800 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4801 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4802 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4803 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4804 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4805 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4806 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 0

code auto:4807 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4808 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4809 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4810 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Byte;
  r := a div b;
endcode
runtime dividebyzero

code auto:4811 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4812 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4813 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 255;
endcode
compile error

$overflow on
code auto:4814 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Byte;
  r := a div b;
endcode
runtime overflow

code auto:4815 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 255;
endcode
compile error

$overflow off
code auto:4816 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4817 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4818 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 2

code auto:4819 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4820 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4821 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4822 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4823 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4824 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Byte] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
runtime noerror

code auto:4825 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow off
  var  r: Byte;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4826 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Byte] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Byte;
  r := a div b;
endcode
varvalue r 1

code auto:4827 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Byte] Both immediate $overflow on
  var  r: Byte;
  r := 65535 div 65535;
endcode
varvalue r 1

$overflow off
code auto:4828 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4829 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow on
code auto:4830 int-divide[Pointer] 0[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4831 int-divide[compile-time] 0[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 0;
endcode
compile error

$overflow off
code auto:4832 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4833 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 255;
endcode
runtime noerror

$overflow on
code auto:4834 int-divide[Pointer] 0[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4835 int-divide[compile-time] 0[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 255;
endcode
varvalue r 0

$overflow off
code auto:4836 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4837 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 32767;
endcode
runtime noerror

$overflow on
code auto:4838 int-divide[Pointer] 0[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4839 int-divide[compile-time] 0[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4840 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4841 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 32768;
endcode
runtime noerror

$overflow on
code auto:4842 int-divide[Pointer] 0[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4843 int-divide[compile-time] 0[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4844 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4845 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 0 div 65535;
endcode
runtime noerror

$overflow on
code auto:4846 int-divide[Pointer] 0[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 0;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4847 int-divide[compile-time] 0[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 0 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4848 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4849 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow on
code auto:4850 int-divide[Pointer] 255[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4851 int-divide[compile-time] 255[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 0;
endcode
compile error

$overflow off
code auto:4852 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4853 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 255;
endcode
runtime noerror

$overflow on
code auto:4854 int-divide[Pointer] 255[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4855 int-divide[compile-time] 255[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 255;
endcode
varvalue r 1

$overflow off
code auto:4856 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4857 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 32767;
endcode
runtime noerror

$overflow on
code auto:4858 int-divide[Pointer] 255[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4859 int-divide[compile-time] 255[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32767;
endcode
varvalue r 0

$overflow off
code auto:4860 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4861 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 32768;
endcode
runtime noerror

$overflow on
code auto:4862 int-divide[Pointer] 255[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4863 int-divide[compile-time] 255[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4864 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4865 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 255 div 65535;
endcode
runtime noerror

$overflow on
code auto:4866 int-divide[Pointer] 255[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 255;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4867 int-divide[compile-time] 255[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 255 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4868 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4869 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow on
code auto:4870 int-divide[Pointer] 32767[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4871 int-divide[compile-time] 32767[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 0;
endcode
compile error

$overflow off
code auto:4872 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4873 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 255;
endcode
runtime noerror

$overflow on
code auto:4874 int-divide[Pointer] 32767[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:4875 int-divide[compile-time] 32767[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 255;
endcode
varvalue r 128

$overflow off
code auto:4876 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4877 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 32767;
endcode
runtime noerror

$overflow on
code auto:4878 int-divide[Pointer] 32767[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4879 int-divide[compile-time] 32767[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4880 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4881 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 32768;
endcode
runtime noerror

$overflow on
code auto:4882 int-divide[Pointer] 32767[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4883 int-divide[compile-time] 32767[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 32768;
endcode
varvalue r 0

$overflow off
code auto:4884 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4885 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32767 div 65535;
endcode
runtime noerror

$overflow on
code auto:4886 int-divide[Pointer] 32767[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32767;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4887 int-divide[compile-time] 32767[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32767 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4888 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4889 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 div 0;
endcode
compile error

$overflow on
code auto:4890 int-divide[Pointer] 32768[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4891 int-divide[compile-time] 32768[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 0;
endcode
compile error

$overflow off
code auto:4892 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4893 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 div 255;
endcode
runtime noerror

$overflow on
code auto:4894 int-divide[Pointer] 32768[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 128

code auto:4895 int-divide[compile-time] 32768[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 255;
endcode
varvalue r 128

$overflow off
code auto:4896 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4897 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 div 32767;
endcode
runtime noerror

$overflow on
code auto:4898 int-divide[Pointer] 32768[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4899 int-divide[compile-time] 32768[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32767;
endcode
varvalue r 1

$overflow off
code auto:4900 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4901 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 div 32768;
endcode
runtime noerror

$overflow on
code auto:4902 int-divide[Pointer] 32768[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4903 int-divide[compile-time] 32768[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4904 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4905 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 32768 div 65535;
endcode
runtime noerror

$overflow on
code auto:4906 int-divide[Pointer] 32768[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 32768;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 0

code auto:4907 int-divide[compile-time] 32768[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 32768 div 65535;
endcode
varvalue r 0

$overflow off
code auto:4908 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4909 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 div 0;
endcode
compile error

$overflow on
code auto:4910 int-divide[Pointer] 65535[Pointer], 0[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 0;
  var  r: Word;
  r := a div b;
endcode
runtime dividebyzero

code auto:4911 int-divide[compile-time] 65535[Pointer], 0[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 0;
endcode
compile error

$overflow off
code auto:4912 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4913 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 div 255;
endcode
runtime noerror

$overflow on
code auto:4914 int-divide[Pointer] 65535[Pointer], 255[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 255;
  var  r: Word;
  r := a div b;
endcode
varvalue r 257

code auto:4915 int-divide[compile-time] 65535[Pointer], 255[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 255;
endcode
varvalue r 257

$overflow off
code auto:4916 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4917 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 div 32767;
endcode
runtime noerror

$overflow on
code auto:4918 int-divide[Pointer] 65535[Pointer], 32767[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32767;
  var  r: Word;
  r := a div b;
endcode
varvalue r 2

code auto:4919 int-divide[compile-time] 65535[Pointer], 32767[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32767;
endcode
varvalue r 2

$overflow off
code auto:4920 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4921 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 div 32768;
endcode
runtime noerror

$overflow on
code auto:4922 int-divide[Pointer] 65535[Pointer], 32768[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 32768;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4923 int-divide[compile-time] 65535[Pointer], 32768[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 32768;
endcode
varvalue r 1

$overflow off
code auto:4924 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Word] Var $overflow off
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
runtime noerror

code auto:4925 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow off
  var  r: Word;
  r := 65535 div 65535;
endcode
runtime noerror

$overflow on
code auto:4926 int-divide[Pointer] 65535[Pointer], 65535[Pointer] -> [Word] Var $overflow on
  var  a: Pointer = 65535;
  var  b: Pointer = 65535;
  var  r: Word;
  r := a div b;
endcode
varvalue r 1

code auto:4927 int-divide[compile-time] 65535[Pointer], 65535[Pointer] -> [Word] Both immediate $overflow on
  var  r: Word;
  r := 65535 div 65535;
endcode
varvalue r 1

